%focus changes
%SE regained on the first turn of battle is greatly reduced to prevent ez SE farming in the pit

%Max SE address (byte) = 8010F290 + 28E
%SE address (short) = 8010F290 + 290

%Remove super deep focus also

@ $Function_802A1518 %checks deep focus and super deep focus
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S2, 18 (SP)
    8:  DADDU     S2, A0, R0
    C:  LIA       V0, 8010F290
   14:  SW        S1, 14 (SP)
   18:  DADDU     S1, V0, R0
   1C:  SW        RA, 1C (SP)
   20:  SW        S0, 10 (SP)
   24:  SW        R0, 84 (S2)
   28:  LB        V0, 28E (S1) %get max se
   2C:  LH        V1, 290 (S1) %get current se
   30:  SLL       V0, V0, 8    %max se *= 0x100
   34:  SLT       V1, V1, V0   
   38:  BEQ       V1, R0, .o78 %we have max se, skip everything
   3C:  ADDIU     V0, R0, 1
   40:  JAL       ~Func:is_ability_active %gets if you have a badge equipped, it can detect copies of badges like deep focus
   44:  ADDIU     A0, R0, 30 %ability 0x30 = deep focus
   50:  SLL       S0, V0, 6 %if you have deep focus, S0 = n * 2^6 (0x40), otherwise it becomes 0
		ORI		  V0, R0, 0	 %Reset super deep focus value to 0
   58:  ADDU      S0, S0, V0 %and then those bonuses are added together
   60:  ADDIU     A0, S0, 80 %focus base bonus? (0x80)
		LAB		  S0, 800DBD7B %get turn count
		SLTI	  S0, S0, 1
		BEQ		  S0, R0, .afterturn1
		NOP
		SRL		  A0, A0, 2 %nerf: focusing turn 1 is 25% as effective
		.afterturn1
   5C:  JAL       800EA1F4	%???? (add se?)
		NOP
   64:  LB        V0, 28E (S1) %get max se again
   68:  LH        V1, 290 (S1) %get current se again
   6C:  SLL       V0, V0, 8    %max se *= 0x100 (current se is 2 bytes while max se is 1 byte)
   70:  BNE       V1, V0, .o80 %not at max se
   74:  ADDIU     V0, R0, 2    %return 2
        .o78
   78:  SW        V0, 84 (S2)  
   7C:  ADDIU     V0, R0, 2    %return 2
        .o80
   80:  LW        RA, 1C (SP)
   84:  LW        S2, 18 (SP)
   88:  LW        S1, 14 (SP)
   8C:  LW        S0, 10 (SP)
   90:  JR        RA
   94:  ADDIU     SP, SP, 20
}

%Function before removing SD focus
/%
@ $Function_802A1518 %checks deep focus and super deep focus
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S2, 18 (SP)
    8:  DADDU     S2, A0, R0
    C:  LIA       V0, 8010F290
   14:  SW        S1, 14 (SP)
   18:  DADDU     S1, V0, R0
   1C:  SW        RA, 1C (SP)
   20:  SW        S0, 10 (SP)
   24:  SW        R0, 84 (S2)
   28:  LB        V0, 28E (S1) %get max se
   2C:  LH        V1, 290 (S1) %get current se
   30:  SLL       V0, V0, 8    %max se *= 0x100
   34:  SLT       V1, V1, V0   
   38:  BEQ       V1, R0, .o78 %we have max se, skip everything
   3C:  ADDIU     V0, R0, 1
   40:  JAL       ~Func:is_ability_active %gets if you have a badge equipped, it can detect copies of badges like deep focus
   44:  ADDIU     A0, R0, 30 %ability 0x30 = deep focus
   48:  ADDIU     A0, R0, 31 %ability 0x31 = super deep focus
   4C:  JAL       ~Func:is_ability_active
   50:  SLL       S0, V0, 6 %if you have deep focus, S0 = n * 2^6 (0x40), otherwise it becomes 0
   54:  SLL       V0, V0, 7 %if you have super deep focus, V0 = n * 2^7 (0x80), otherwise it becomes 0
   58:  ADDU      S0, S0, V0 %and then those bonuses are added together
   60:  ADDIU     A0, S0, 80 %focus base bonus? (0x80)
		LAB		  S0, 800DBD7B %get turn count
		SLTI	  S0, S0, 1
		BEQ		  S0, R0, .afterturn1
		NOP
		SRL		  A0, A0, 2 %nerf: focusing turn 1 is 25% as effective
		.afterturn1
   5C:  JAL       800EA1F4	%???? (add se?)
		NOP
   64:  LB        V0, 28E (S1) %get max se again
   68:  LH        V1, 290 (S1) %get current se again
   6C:  SLL       V0, V0, 8    %max se *= 0x100 (current se is 2 bytes while max se is 1 byte)
   70:  BNE       V1, V0, .o80 %not at max se
   74:  ADDIU     V0, R0, 2    %return 2
        .o78
   78:  SW        V0, 84 (S2)  
   7C:  ADDIU     V0, R0, 2    %return 2
        .o80
   80:  LW        RA, 1C (SP)
   84:  LW        S2, 18 (SP)
   88:  LW        S1, 14 (SP)
   8C:  LW        S0, 10 (SP)
   90:  JR        RA
   94:  ADDIU     SP, SP, 20
}
%/

@ $Function_802A15B0
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  LIA       V0, 8010F290
   14:  SW        S0, 10 (SP)
   18:  DADDU     S0, V0, R0
   1C:  SW        RA, 18 (SP)
   20:  SW        R0, 84 (S1)
   24:  LB        V0, 28E (S0)
   28:  LH        V1, 290 (S0)
   2C:  SLL       V0, V0, 8
   30:  SLT       V1, V1, V0
   34:  BEQ       V1, R0, .o58
   38:  ADDIU     V0, R0, 1
		ADDIU     A0, R0, 80
		LAB		  S0, 800DBD7B %get turn count
		SLTI	  S0, S0, 1
		BEQ		  S0, R0, .afterturn1
		NOP
		SRL		  A0, A0, 2 %nerf: focusing turn 1 is 25% as effective
		.afterturn1
   3C:  JAL       800EA1F4  %???? (add se?)
		NOP
		LIA       S0, 8010F290
   44:  LB        V0, 28E (S0)
   48:  LH        V1, 290 (S0)
   4C:  SLL       V0, V0, 8
   50:  BNE       V1, V0, .o60
   54:  ADDIU     V0, R0, 2
        .o58
   58:  SW        V0, 84 (S1)
   5C:  ADDIU     V0, R0, 2
        .o60
   60:  LW        RA, 18 (SP)
   64:  LW        S1, 14 (SP)
   68:  LW        S0, 10 (SP)
   6C:  JR        RA
   70:  ADDIU     SP, SP, 20
}

%Rebuild this table
@ $Function_802A1494
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  LW        V0, C (A0)
    C:  JAL       ~Func:get_variable
   10:  LW        A1, 0 (V0)
   14:  LAB       A1, 8010F2A2
   1C:  LI        A0, 100
   20:  SLL       V1, A1, 2
   24:  ADDU      V1, V1, A1
   28:  ADDU      V1, V1, V0
   2C:  SLL       V1, V1, 2
   30:  LTW       A2, V1 ($FocusAnimTable)
   3C:  JAL       ~Func:set_animation
   40:  CLEAR     A1
   44:  LW        RA, 10 (SP)
   48:  LI        V0, 2
   4C:  JR        RA
   50:  ADDIU     SP, SP, 18
}

#new:IntTable $FocusAnimTable
{
	0001001F 0001002C 0001002A 00010005 00000000 	%looks like mario's focus anims? (Not sure if focus actually references these)
	00090003 00090013 00090013 00090003 00090001 
	000A0006 000A001B 000A001B 000A0006 000A0004 
	000B0008 000B001D 000B001D 000B0008 000B0004 
	000C0003 000C0018 000C0018 000C0003 000C0001 
	00000000 00000000 00000000 00000000 00000000 	%should be goompas anims, but he doesn't even have the right stuff to create the focus option
	000E0003 000E000A 000E000A 000E0003 000C0001 
	000F0003 000F0013 000F0013 000F0003 000F0001
	00100003 00100009 00100009 00100003 00100001 
	000D0003 000D0013 000D0013 000D0003 000D0001 
	00FC0003 00FC000F 00FC000F 00FC0003 00FC0001
}

%Call $Function_CheckBadge ( .Item:MegaRush *Var[1] )

@ $Script_UsePower
{
    0:  ExecWait  $Script_802A1630
    C:  Call  802535B4      ( 00000001 )
   1C:  Call  GetOwnerID    ( *VarA )
   2C:  If  *VarA  ==  .Actor:Player % 0
   3C:  	Call  PlaySound ( 00002053 )
			ExecWait $Script_DoBonusEffects
   4C:  	Call  $Function_802A1518 ( )
   58:  	Wait  30`
   64:  	Call  $Function_802A1414 ( )
   70:  	Call  UseBattleCamPreset    ( 00000002 )
   80:  	Switch  *Var0
   8C:  		Case  ==  00000000
   98:  			Call  ShowMessageBox    ( 0000001A 0000003C )
   AC:  		Case  ==  00000001
   B8:  			Call  ShowMessageBox    ( 0000001B 0000003C )
   CC:  		Case  ==  00000002
   D8:  			Call  ShowMessageBox    ( 0000001C 0000003C )
   EC:  	EndSwitch
   F4:  	Call  WaitForMessageBoxDone ( )
  100:  	Call  80276EFC ( )
  10C:  	Call  SetGoalToHome ( .Actor:Player )
  11C:  	Call  SetActorSpeed ( .Actor:Player *Fixed[8.0] )
  130:  	Call  SetAnimation  ( .Actor:Player 00000000 00010005 )
  148:  	Call  PlayerRunToGoal   ( 00000000 )
  158:  	Call  SetAnimation  ( .Actor:Player 00000000 00010002 )
  170:  Else
  178:  	Call  PlaySound ( 00002053 )
			ExecWait $Script_DoBonusEffects
  188:  	Call  $Function_802A15B0 ( )
  194:  	Wait  30`
  1A0:  	Call  $Function_802A1414 ( )
  1AC:  	Call  UseBattleCamPreset    ( 00000002 )
  1BC:  	Switch  *Var0
  1C8:  		Case  ==  00000000
  1D4:  			Call  ShowMessageBox    ( 0000001A 0000003C )
  1E8:  		Case  ==  00000001
  1F4:  			Call  ShowMessageBox    ( 0000001B 0000003C )
  208:  		Case  ==  00000002
  214:  			Call  ShowMessageBox    ( 0000001C 0000003C )
  228:  	EndSwitch
  230:  	Call  WaitForMessageBoxDone ( )
  23C:  	Call  80280818 ( )
  248:  	Call  SetGoalToHome ( .Actor:Partner )
  258:  	Call  SetActorSpeed ( .Actor:Partner *Fixed[8.0] )
  26C:  	Call  $Function_802A1494    ( 00000003 )
  27C:  	Call  RunToGoal ( .Actor:Partner 00000000 )
  290:  	Call  $Function_802A1494    ( 00000004 )
  2A0:  EndIf
  2A8:  Return
  2B0:  End
}

#new:Script $Script_DoBonusEffects
{
	Call $Function_CheckAbility ( 00000030 *Var4 )	
	Call $Function_CheckBadge ( .Item:PowerFocus *Var[1] )
	If *Var[1] == 1
		Call     GetActorPos 	( .Actor:Player *Var5 *Var6 *Var7 )
		Add *Var6 10`
		Call	 $Function_DebuffEffectLightRed ( )
		Switch *Var4
			Case == 1`
				Call	$Function_SetPower1 ( )				
			Case == 2`
				Call	$Function_SetPower2 ( )				
			Case == 3`
				Call	$Function_SetPower3 ( )				
			Default
				Call	$Function_SetPower ( )				
		EndSwitch
	EndIf
	Call $Function_CheckBadge ( .Item:DefenseFocusImpostor *Var[1] )
	If *Var1 == 0`
		Call $Function_CheckBadge ( .Item:DefenseFocus *Var[1] )
	EndIf
	If *Var[1] == 1
		Call     GetActorPos 	( .Actor:Player *Var5 *Var6 *Var7 )
		Add *Var6 10`
		Call	 $Function_DebuffEffectLightBlue ( )
		Switch *Var4
			Case == 1`
				Call	$Function_SetDefense1 ( )		
			Case == 2`
				Call	$Function_SetDefense2 ( )		
			Case == 3`
				Call	$Function_SetDefense3 ( )		
			Default
				Call	$Function_SetDefense ( )		
		EndSwitch
	EndIf
	%ban hp focus and flower focus on first turn (anticheese)
	%but just change the effect to 0
	Call $Function_CheckAbility ( 00000030 *Var4 )	
	Call $Function_CheckBadge ( .Item:HealthFocus *Var[1] )
	If *Var[1] == 1
		Set *Var5 2
		Add *Var5 *Var4
		Set *Var6 *GlobalTurnCount
		Mod *Var6 2`
		If *Var6 == 0`
			Add *Var5 1`
		EndIf
		Div *Var5 2`
		If *GlobalTurnCount < 1
			Set *Var5 0
		EndIf
		Call $Function_HPHeal ( *Var5 )
		Call	GetActorPos ( .Actor:Player *Var[0] *Var[1] *Var[2] )
		Add	*Var[1] 25
		Set *Var[E] *Var5
		Call	PlayEffect ( 00000040 00000000 *Var[0] *Var[1] *Var[2] *Var[E] 00000000 00000000 00000000 00000000 00000000 00000000 )			
	EndIf
	Call $Function_CheckAbility ( 00000030 *Var4 )	
	Call $Function_CheckBadge ( .Item:FlowerFocus *Var[1] )
	If *Var[1] == 1
		Set *Var5 2
		Add *Var5 *Var4
		Set *Var6 *GlobalTurnCount
		Mod *Var6 2`
		If *Var6 == 0`
			Add *Var5 1`
		EndIf
		Div *Var5 2`
		If *GlobalTurnCount < 1		
			Set *Var5 0
		EndIf
		Call	$Function_FPHeal ( *Var5 )
		Call	GetActorPos ( .Actor:Player *Var[0] *Var[1] *Var[2] )
		Add	*Var[0] 10
		Add	*Var[1] 12
		Set *Var[E] *Var5
		Call	PlayEffect ( 00000040 00000001 *Var[0] *Var[1] *Var[2] *Var[E] 00000000 00000000 00000000 00000000 00000000 00000000 )		
	EndIf	
	Return
	End
}



%set var5, var6, var7 to correct position
%FF, DD, 2E
#new:Function $Function_DebuffEffectLightRed
{
    0:  ADDIU     SP, SP, FFE8
    4:  COPY      V0, A0
    8:  SW        RA, 10 (SP)
    C:  LWC1      F0, 98 (V0)				%84 (var0) -> 98 (var5)
   10:  CVT.S.W   F0, F0
   14:  MFC1      A1, F0
   18:  LWC1      F0, 9C (V0)
   1C:  CVT.S.W   F0, F0
   20:  MFC1      A2, F0
   24:  LWC1      F0, A0 (V0)
   28:  CVT.S.W   F0, F0
   2C:  MFC1      A3, F0
   30:  JAL       80070AF0
   34:  ADDIU     A0, R0, 2   
   38:  LW        A0, C (V0)
		ADDIU     V1, R0, FF 
   40:  SB        V1, 38 (A0)						%color byte 1?
   44:  LW        A0, C (V0)
		ADDIU     V1, R0, B1
   4C:  SB        V1, 39 (A0)						%color byte 2?
   50:  LW        V1, C (V0)
		ADDIU     A0, R0, B1
   54:  SB        A0, 3A (V1)						%color byte 3?
   58:  LW        A0, C (V0)
		ADDIU     V1, R0, 70
   60:  SB        V1, 3B (A0)						%color byte 4? (unused?)
   64:  LW        A0, C (V0)
		ADDIU     V1, R0, FF 
   6C:  SB        V1, 3C (A0)						%color byte 5?
   70:  LW        V1, C (V0)
		ADDIU     V0, R0, FF 
   74:  SB        V0, 3D (V1)						%color byte 6?
   78:  LW        RA, 10 (SP)
   7C:  ADDIU     V0, R0, 2   						%return 2
   80:  JR        RA
   84:  ADDIU     SP, SP, 18
}

%set var5, var6, var7 to correct position
%FF, DD, 2E
#new:Function $Function_DebuffEffectLightBlue
{
    0:  ADDIU     SP, SP, FFE8
    4:  COPY      V0, A0
    8:  SW        RA, 10 (SP)
    C:  LWC1      F0, 98 (V0)				%84 (var0) -> 98 (var5)
   10:  CVT.S.W   F0, F0
   14:  MFC1      A1, F0
   18:  LWC1      F0, 9C (V0)
   1C:  CVT.S.W   F0, F0
   20:  MFC1      A2, F0
   24:  LWC1      F0, A0 (V0)
   28:  CVT.S.W   F0, F0
   2C:  MFC1      A3, F0
   30:  JAL       80070AF0
   34:  ADDIU     A0, R0, 2   
   38:  LW        A0, C (V0)
		ADDIU     V1, R0, B1 
   40:  SB        V1, 38 (A0)						%color byte 1?
   44:  LW        A0, C (V0)
		ADDIU     V1, R0, B1
   4C:  SB        V1, 39 (A0)						%color byte 2?
   50:  LW        V1, C (V0)
		ADDIU     A0, R0, FF
   54:  SB        A0, 3A (V1)						%color byte 3?
   58:  LW        A0, C (V0)
		ADDIU     V1, R0, 70
   60:  SB        V1, 3B (A0)						%color byte 4? (unused?)
   64:  LW        A0, C (V0)
		ADDIU     V1, R0, FF 
   6C:  SB        V1, 3C (A0)						%color byte 5?
   70:  LW        V1, C (V0)
		ADDIU     V0, R0, FF 
   74:  SB        V0, 3D (V1)						%color byte 6?
   78:  LW        RA, 10 (SP)
   7C:  ADDIU     V0, R0, 2   						%return 2
   80:  JR        RA
   84:  ADDIU     SP, SP, 18
}

#new:Function $Function_SetPower
{
	PUSH	RA, A0, A1
	LIO		A0, 800DC070
	LW		A0, D8 (A0) %where player actor struct is
	ADDI	A1, R0, FFFF
	SB		A1, 223 (A0) %str
	ADDIU	A1, R0, 3
	SB		A1, 224 (A0) %dur
	POP		RA, A0, A1
	JR		RA
	ORI 	V0, R0, 2
}

#new:Function $Function_SetDefense
{
	PUSH	RA, A0, A1
	LIO		A0, 800DC070
	LW		A0, D8 (A0) %where player actor struct is
	ADDI	A1, R0, FFFF
	SB		A1, 225 (A0) %str
	ADDIU	A1, R0, 3
	SB		A1, 226 (A0) %dur
	POP		RA, A0, A1
	JR		RA
	ORI 	V0, R0, 2
}


#new:Function $Function_SetPower1
{
	PUSH	RA, A0, A1
	LIO		A0, 800DC070
	LW		A0, D8 (A0) %where player actor struct is
	ADDI	A1, R0, FFFF
	SB		A1, 223 (A0) %str
	ADDIU	A1, R0, 4
	SB		A1, 224 (A0) %dur
	POP		RA, A0, A1
	JR		RA
	ORI 	V0, R0, 2
}

#new:Function $Function_SetDefense1
{
	PUSH	RA, A0, A1
	LIO		A0, 800DC070
	LW		A0, D8 (A0) %where player actor struct is
	ADDI	A1, R0, FFFF
	SB		A1, 225 (A0) %str
	ADDIU	A1, R0, 4
	SB		A1, 226 (A0) %dur
	POP		RA, A0, A1
	JR		RA
	ORI 	V0, R0, 2
}

#new:Function $Function_SetPower2
{
	PUSH	RA, A0, A1
	LIO		A0, 800DC070
	LW		A0, D8 (A0) %where player actor struct is
	ADDI	A1, R0, FFFF
	SB		A1, 223 (A0) %str
	ADDIU	A1, R0, 5
	SB		A1, 224 (A0) %dur
	POP		RA, A0, A1
	JR		RA
	ORI 	V0, R0, 2
}

#new:Function $Function_SetDefense2
{
	PUSH	RA, A0, A1
	LIO		A0, 800DC070
	LW		A0, D8 (A0) %where player actor struct is
	ADDI	A1, R0, FFFF
	SB		A1, 225 (A0) %str
	ADDIU	A1, R0, 5
	SB		A1, 226 (A0) %dur
	POP		RA, A0, A1
	JR		RA
	ORI 	V0, R0, 2
}

#new:Function $Function_SetPower3
{
	PUSH	RA, A0, A1
	LIO		A0, 800DC070
	LW		A0, D8 (A0) %where player actor struct is
	ADDI	A1, R0, FFFF
	SB		A1, 223 (A0) %str
	ADDIU	A1, R0, 6
	SB		A1, 224 (A0) %dur
	POP		RA, A0, A1
	JR		RA
	ORI 	V0, R0, 2
}

#new:Function $Function_SetDefense3
{
	PUSH	RA, A0, A1
	LIO		A0, 800DC070
	LW		A0, D8 (A0) %where player actor struct is
	ADDI	A1, R0, FFFF
	SB		A1, 225 (A0) %str
	ADDIU	A1, R0, 6
	SB		A1, 226 (A0) %dur
	POP		RA, A0, A1
	JR		RA
	ORI 	V0, R0, 2
}