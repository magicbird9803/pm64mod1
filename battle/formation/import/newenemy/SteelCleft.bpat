% Automatically dumped from section 0E
%they can attack consecutively

#new:Actor $SteelCleft
{
% stats
[Index]        FDb 
[Level]        31`b 
[MaxHP]        10`b 
[Coins]         2`b 
[Flags]       00000000 
[StatusTable] $StatusTable_SteelCleft
% ai
[PartsCount]   1`s 
[PartsTable] $PartsTable_SteelCleft
[Script]      $Script_Init_SteelCleft 
% move effectiveness
[Escape]       10`b 
[Item]         20`b 
[AirLift]      10`b 
[Hurricane]    20`b % Bow's "Spook" as well
[UpAndAway]    60`b 
[PowerBounce]  95`b 
[SpinSmash]     4`b % weight (0-4)
% ui positions
[Size]         44`b  36`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:Function $Function_802185C0_SCleft
{
    0:  ADDIU		SP, SP, FFE0
    4:  SW			S1, 14 (SP)
    8:  COPY		S1, A0
    C:  SW			RA, 18 (SP)
   10:  SW			S0, 10 (SP)
   14:  LW			S0, C (S1)
   18:  LW			A1, 0 (S0)
   1C:  JAL			~Func:get_variable
   20:  ADDIU		S0, S0, 4
   24:  COPY		A0, S1
   28:  LW			A1, 0 (S0)
   2C:  JAL			~Func:get_variable
   30:  COPY		S0, V0
   34:  COPY		A0, S0
   38:  JAL			80028F08
   3C:  COPY		A1, V0
   40:  LW			RA, 18 (SP)
   44:  LW			S1, 14 (SP)
   48:  LW			S0, 10 (SP)
   4C:  ADDIU		V0, R0, 2
   50:  JR			RA
   54:  ADDIU		SP, SP, 20
}

#new:Function $Function_80218618_SCleft
{
    0:  ADDIU		SP, SP, FFE8
    4:  SW			S0, 10 (SP)
    8:  COPY		S0, A0
    C:  SW			RA, 14 (SP)
   10:  LW			V0, C (S0)
   14:  JAL			~Func:get_variable
   18:  LW			A1, 0 (V0)
   1C:  LW			A0, 148 (S0)
   20:  JAL			~Func:get_actor
   24:  COPY		S0, V0
   28:  BNE			S0, R0, .o40
   2C:  NOP
   30:  LW			V1, 8 (V0)
   34:  ADDIU		V0, R0, 4
   38:  BEQ			R0, R0, .o48
   3C:  SB			V0, 1D (V1)
        .o40
   40:  LW			V0, 8 (V0)
   44:  SB			R0, 1D (V0)
        .o48
   48:  LW			RA, 14 (SP)
   4C:  LW			S0, 10 (SP)
   50:  ADDIU		V0, R0, 2
   54:  JR			RA
   58:  ADDIU		SP, SP, 18
}

#new:DefenseTable $DefenseTable_SteelCleft
{
.Element:Normal 00000009
.Element:Fire   00000063
.Element:Quake  00000063
.Element:Shock	FFFFFFFF
.Element:Water	FFFFFFFF
.Element:End
}

#new:DefenseTable $DefenseTable_SteelCleft_Flipped
{
.Element:Normal 00000003
.Element:Fire   00000063
.Element:Quake  00000063
.Element:Shock	FFFFFFFF
.Element:Water	FFFFFFFF
.Element:End
}

#new:StatusTable $StatusTable_SteelCleft %85%/-1 to paralyze
{
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy       0`
.Status:Fear        0`
.Status:Static     85`
.Status:Paralyze   85`
.Status:Shrink     25`
.Status:Stop       40`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1` %dizzy attack bad
.Status:FearTurnMod       0`
.Status:StaticTurnMod    -1`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -2`
.Status:End
}

#new:PartsTable $PartsTable_SteelCleft
{
00800000 01000000 001600FF $IdleAnimations_SteelCleft $DefenseTable_SteelCleft 00000010 00000000 00F60000 00000000 
}

#new:IdleAnimations $IdleAnimations_SteelCleft_Charged
{
.Status:Normal    00300204
.Status:Stone     00300200
.Status:Sleep     0030020C
.Status:Poison    00300204
.Status:Stop      00300200
.Status:Static    00300204
.Status:Paralyze  00300200
.Status:Dizzy     0030020E
.Status:Fear      0030020E
.Status:End
}

#new:Script $Script_Init_SteelCleft
{
    0:  Call     BindIdle    	( .Actor:Self $Script_Idle_SteelCleft )
   14:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_SteelCleft )
   28:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_SteelCleft )
   3C:  Call     BindNextTurn 	( .Actor:Self $Script_NextTurn_SteelCleft )
   50:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   68:  Call     SetActorVar 	( .Actor:Self 00000002 00000000 )
		Call     SetActorVar 	( .Actor:Self 0000000A 00000000 ) %aux hit variable
   80:  Return
   88:  End
}

#new:Script $Script_NextTurn_SteelCleft
{
    0:  Call     GetBattlePhase ( *Var[0] )
   10:  Switch  *Var[0] 
   1C:  	Case  ==  .Phase:PlayerBegin % A
   28:  	Case  ==  .Phase:EnemyBegin % C
   34:  	Case  ==  .Phase:EnemyEnd % B
   54:  		Call     SetActorVar 	( .Actor:Self 00000002 00000001 )
   6C:  EndSwitch
   74:  Return
   7C:  End
}

#new:Script $Script_ChargeOrAttack_SCleft
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   54:  If  *Var[0]  ==  00000000 
   64:  	Call     UseBattleCamPreset 	( 0000000E )
   74:  	Call     BattleCamTargetActor ( .Actor:Self )
   84:  	Call     MoveBattleCamOver 	( 00000014 )
   94:  	Wait     00000014 
   A0:  	Call     PlaySoundAtActor 	( .Actor:Self .Sound:PowerUp )
   B4:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   D0:  	Add  *Var[1]  0000000A 
   E0:  	Call     PlayEffect  	( ~FX:EnergyIn:LongStreaks1 *Var[0] *Var[1] *Var[2] *Fixed[1.0] 0000002D 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  124:  	Call     SetAnimation 	( .Actor:Self 00000001 00300204 )
  13C:  	Wait     0000001E 
  148:  	Call     UseBattleCamPreset 	( 00000002 )
  158:  	Call     MoveBattleCamOver 	( 00000014 )
  168:  	Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.0] )
  17C:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  198:  	Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1B4:  	Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  1D4:  	Call     $Function_802185C0_SCleft ( 000000C8 0000000A )
  1E8:  	Thread
  1F0:  		Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[1.5] )
  20C:  	EndThread
  214:  	Call     PlaySoundAtActor 	( .Actor:Self 000002D9 )
  228:  	Call     PlayEffect  	( ~FX:Steam:LargeOutward *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  26C:  	Thread
  274:  		Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[1.0] )
  290:  	EndThread
  298:  	Call     SetActorVar 	( .Actor:Self 00000000 00000002 )
  2B0:  	Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_SteelCleft_Charged )
  2C8:  	Call     EnableActorGlow 	( .Actor:Self .True )
  2DC:  	Call     SetPartEventBits 	( .Actor:Self 00000001 00400000 .True )
  2F8:  	Call     EnableIdleScript 	( .Actor:Self 00000001 )
  30C:  	Call     UseIdleAnimation 	( .Actor:Self .True )
  320:  	Return
  328:  EndIf
  330:  Call     UseBattleCamPreset 	( 0000003F )
  340:  Call     BattleCamTargetActor ( .Actor:Self )
  350:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
  368:  Call     MoveBattleCamOver 	( 0000001E )
  378:  Loop     00000014 
  384:  	Call     SetActorDispOffset ( FFFFFF81 00000001 00000000 00000000 )
  3A0:  	Wait     00000001 
  3AC:  	Call     SetActorDispOffset ( FFFFFF81 FFFFFFFF 00000000 00000000 )
  3C8:  	Wait     00000001 
  3D4:  EndLoop
  3DC:  Call     SetActorDispOffset ( FFFFFF81 00000000 00000000 00000000 )
  3F8:  Call     PlaySoundAtActor 	( .Actor:Self 000002DA )
  40C:  Call     SetActorSounds ( FFFFFF81 00000000 00000000 00000000 )
  428:  Call     EnemyTestTarget ( .Actor:Self *Var[0] 00000000 00000000 00000003 00000010 )
  44C:  Switch  *Var[0] 
  458:  	CaseOR  ==  .HitResult:Miss % 6
  464:  	CaseOR  ==  .HitResult:Lucky % 5
  470:  		Set  *Var[A]  *Var[0] 
  480:  		Thread
  488:  			Loop     
  494:  				Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  4B0:  				Add  *Var[0]  0000001E 
  4C0:  				Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  4DC:  				If  *Var[0]  >  *Var[3] 
  4EC:  					BreakLoop
  4F4:  				EndIf
  4FC:  				Wait     00000001 
  508:  			EndLoop
  510:  			Call     UseBattleCamPreset 	( 00000001 )
  520:  			If  *Var[A]  ==  00000005 
  530:  				Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  554:  			EndIf
  55C:  			Wait     0000000F 
  568:  			Call     UseBattleCamPreset 	( 00000002 )
  578:  		EndThread
  580:  		Thread
  588:  			Loop     0000001E 
  594:  				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  5B0:  				Call     PlayEffect  	( ~FX:Steam:Ring *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  5F4:  				Wait     00000001 
  600:  			EndLoop
  608:  		EndThread
  610:  		Call     SetAnimation 	( .Actor:Self 00000001 00300211 )
  628:  		Call     SetGoalToTarget 	( .Actor:Self )
  638:  		Call     AddGoalPos 	( .Actor:Self FFFFFF38 00000000 00000000 )
  654:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[24.0] ) %12 -> 24
  668:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  680:  		Wait     0000000F 
  68C:  		Call     EnableActorGlow 	( .Actor:Self .False )
  6A0:  		Call     SetPartEventBits 	( .Actor:Self 00000001 00400000 .False )
  6BC:  		Call     YieldTurn   	( )
  6C8:  		Call     8026F6EC ( FFFFFF81 )
  6D8:  		Call     SetActorPos 	( .Actor:Self 0000012C 00000000 00000000 )
  6F4:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  710:  		Call     SetAnimation 	( .Actor:Self 00000001 00300207 )
  728:  		Call     SetGoalToHome 	( .Actor:Self )
  738:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  74C:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  764:  		Call     SetAnimation 	( .Actor:Self 00000001 00300202 )
  77C:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  794:  		Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
  7AC:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_SteelCleft )
  7C4:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  7D8:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  7EC:  		Return
  7F4:  	EndCaseGroup
  7FC:  EndSwitch
  804:  Thread
  80C:  	Loop     00000019 
  818:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  834:  		Call     PlayEffect  	( ~FX:Steam:Ring *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  878:  		Wait     00000001 
  884:  	EndLoop
  88C:  EndThread
  894:  Call     SetAnimation 	( .Actor:Self 00000001 00300211 )
  8AC:  Call     SetGoalToTarget 	( .Actor:Self )
  8BC:  Call     SetActorSpeed 	( .Actor:Self *Fixed[24.0] ) %12 -> 24
  8D0:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  8E8:  Call     8026F6EC ( FFFFFF81 )
  8F8:  Wait     00000002 
  904:  Call     SetGoalToTarget 	( .Actor:Self )
  914:  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000012 00000020 ) %18 damage, twice their normal attack power
  93C:  Switch  *Var[0] 
  948:  	CaseOR  ==  00000000 
  954:  	CaseOR  ==  00000002 
  960:  		Call     UseBattleCamPreset 	( 00000002 )
  970:  		Thread
  978:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000010 00000000 )
  994:  			Set  *Var[0]  00000000 
  9A4:  			Loop     0000003C 
  9B0:  				Add  *Var[0]  00000012 
  9C0:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  9DC:  				Wait     00000001 
  9E8:  			EndLoop
  9F0:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  A0C:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  A28:  		EndThread
  A30:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.0] )
  A44:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  A60:  		Sub  *Var[0]  00000032 
  A70:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  A8C:  		Call     JumpToGoal  	( .Actor:Self 0000001E 00000000 00000001 00000000 )
  AAC:  		Sub  *Var[0]  00000028 
  ABC:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  AD8:  		Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
  AF8:  		Sub  *Var[0]  0000001E 
  B08:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  B24:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  B44:  		Wait     00000014 
  B50:  		Call     YieldTurn   	( )
  B5C:  		Call     EnableActorGlow 	( .Actor:Self .False )
  B70:  		Call     SetPartEventBits 	( .Actor:Self 00000001 00400000 .False )
  B8C:  		Call     SetActorYaw 	( .Actor:Self 000000B4 )
  BA0:  		Call     SetAnimation 	( .Actor:Self 00000001 00300207 )
  BB8:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  BCC:  		Call     SetGoalToHome 	( .Actor:Self )
  BDC:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  BF4:  		Call     SetAnimation 	( .Actor:Self 00000001 00300202 )
  C0C:  		Call     SetActorYaw 	( .Actor:Self 00000000 )
  C20:  		Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
  C38:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_SteelCleft )
  C50:  	EndCaseGroup
  C58:  EndSwitch
  C60:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  C74:  Call     UseIdleAnimation 	( .Actor:Self .True )
  C88:  Return
  C90:  End
}

%Charging occurs at low HP (below 40%)
#new:Script $Script_TakeTurn_SteelCleft
{
    0:  Call     GetBattlePhase ( *Var[0] )
   10:  If  *Var[0]  ==  .Phase:FirstStrike % 1
   34:  	ExecWait $Script_Attack_SCleft 
   40:  	Return
   48:  EndIf
   50:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   68:  If  *Var[0]  ==  00000001 
   78:  	ExecWait $Script_HandleGetUp_SCleft 
   84:  	Return
   8C:  EndIf
   94:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   AC:  If  *Var[0]  ==  00000002 
   BC:  	ExecWait $Script_ChargeOrAttack_SCleft 
   C8:  	Return
   D0:  EndIf
		%Get rid of the battlevar stuff
  104:  Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
  11C:  If  *Var[0]  ==  00000000 
			Call	 GetActorHP  	( .Actor:Self *Var[E] )
			Call	 GetEnemyMaxHP  ( .Actor:Self *Var[F] )
			Mul *Var[E] 100`
			Div *Var[E] *Var[F] %health percentage					
  140:  	If  *Var[E]  <  40`
  164:  		ExecWait $Script_ChargeOrAttack_SCleft 
  170:  	Else
  18C:  		ExecWait $Script_Attack_SCleft 
  198:  	EndIf
  1A0:  Else
			Call	 GetActorHP  	( .Actor:Self *Var[E] )
			Call	 GetEnemyMaxHP  ( .Actor:Self *Var[F] )
			Mul *Var[E] 100`
			Div *Var[E] *Var[F] %health percentage
  1BC:  	If  *Var[E]  <  40` 
  1E0:  		ExecWait $Script_ChargeOrAttack_SCleft 
  1EC:  	Else
  208:  		ExecWait $Script_Attack_SCleft 
  214:  	EndIf
  21C:  EndIf
  26C:  Return
  274:  End
}

#new:IdleAnimations $IdleAnimations_SteelCleft
{
.Status:Normal    00300202
.Status:Stone     00300200
.Status:Sleep     0030020C
.Status:Poison    00300202
.Status:Stop      00300200
.Status:Static    00300202
.Status:Paralyze  00300200
.Status:Dizzy     0030020E
.Status:Fear      0030020E
.Status:End
}

#new:IdleAnimations $IdleAnimations_SteelCleft_Flipped
{
.Status:Normal    00300205
.Status:Stone     00300201
.Status:Sleep     0030020D
.Status:Poison    00300205
.Status:Stop      00300201
.Status:Static    00300205
.Status:Paralyze  00300201
.Status:Dizzy     0030020F
.Status:Fear      0030020F
.Status:End
}

#new:Script $Script_Idle_SteelCleft
{
    0:  Return
    8:  End
}

#new:Script $Script_Flip_SCleft
{
    0:  Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
   18:  Call     SetActorVar 	( .Actor:Self 00000001 00000002 )
   30:  Call     SetAnimation 	( .Actor:Self 00000001 00300207 )
   48:  Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000010 00000000 )
   64:  Thread
   6C:  	Set  *Var[0]  00000000 
   7C:  	Loop     00000005 
   88:  		Add  *Var[0]  FFFFFFDC 
   98:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
   B4:  		Wait     00000001 
   C0:  	EndLoop
   C8:  EndThread
   D0:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   EC:  Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.3007812] )
  100:  Sub  *Var[1]  00000006 
  110:  Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  12C:  Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
  14C:  Call     $Function_802185C0_SCleft ( 000000C8 0000000A )
  160:  Thread
  168:  	Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[1.0] )
  184:  EndThread
  18C:  Call     PlayEffect  	( ~FX:SmokeImpact:Large *Var[0] *Var[1] *Var[2] 00000028 00000008 *Fixed[0.0] 00000014 00000000 00000000 00000000 00000000 00000000 )
  1D0:  Call     SetActorPos 	( .Actor:Self *Var[0] 00000000 *Var[2] )
  1EC:  Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  208:  Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  224:  Call     SetAnimation 	( .Actor:Self 00000001 00300203 )
  23C:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_SteelCleft_Flipped )
  254:  Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_SteelCleft_Flipped )
  26C:  Call     SetTargetOffset 	( .Actor:Self 00000001 00000000 0000000F )
  288:  Call     8027D4C8 ( FFFFFF81 00000001 00000000 FFFFFFF9 )
  2A4:  Call     SetPartEventBits 	( .Actor:Self 00000001 00000010 .False )
  2C0:  Call     $Function_80218618_SCleft ( 00000000 )
  2D0:  Call     SetActorFlagBits 	( .Actor:Self 00000400 .True )
  2E8:  Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  304:  Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  320:  Call     EnableActorGlow 	( .Actor:Self .False )
  334:  Call     SetPartEventBits 	( .Actor:Self 00000001 00400000 .False )
  350:  Return
  358:  End
}

#new:Script $Script_HandleEvent_SteelCleft
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetLastEvent 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		Call     GetLastElement ( *Var[0] )
   70:  		Switch  *Var[0] 
   7C:  			Case  &  00000200 
   88:  				ExecWait $Script_Flip_SCleft 
   94:  			Default
   9C:  				Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   B4:  				If  *Var[0]  ==  00000001 
   C4:  					SetConst  *Var[1]  00300209 
   D4:  				Else
   DC:  					SetConst  *Var[1]  00300208 
   EC:  				EndIf
   F4:  				SetConst  *Var[0]  00000001 
  104:  				ExecWait DoNormalHit 
  110:  		EndSwitch
  118:  	EndCaseGroup
  120:  	Case  ==  .Event:BurnHit % E
  12C:  		Call     GetLastElement ( *Var[0] )
  13C:  		Switch  *Var[0] 
  148:  			Case  &  00000200 
  154:  				ExecWait $Script_Flip_SCleft 
  160:  			Default
  168:  				Call     SetPartEventBits 	( .Actor:Self 00000001 00000200 .True )
  184:  				Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  19C:  				If  *Var[0]  ==  00000001 
  1AC:  					SetConst  *Var[0]  00000001 
  1BC:  					SetConst  *Var[1]  00300209 
  1CC:  					SetConst  *Var[2]  FFFFFFFF 
  1DC:  					ExecWait DoBurnHit 
  1E8:  				Else
  1F0:  					SetConst  *Var[0]  00000001 
  200:  					SetConst  *Var[1]  00300208 
  210:  					SetConst  *Var[2]  FFFFFFFF 
  220:  					ExecWait DoBurnHit 
  22C:  				EndIf
  234:  				Call     SetPartEventBits 	( .Actor:Self 00000001 00000200 .False )
  250:  		EndSwitch
  258:  	Case  ==  .Event:BurnDeath % 24
  264:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  27C:  		If  *Var[0]  ==  00000001 
  28C:  			SetConst  *Var[0]  00000001 
  29C:  			SetConst  *Var[1]  00300209 
  2AC:  			SetConst  *Var[2]  FFFFFFFF 
  2BC:  			ExecWait DoBurnHit 
  2C8:  			SetConst  *Var[0]  00000001 
  2D8:  			SetConst  *Var[1]  00300209 
  2E8:  			ExecWait DoDeath 
  2F4:  		Else
  2FC:  			SetConst  *Var[0]  00000001 
  30C:  			SetConst  *Var[1]  00300208 
  31C:  			SetConst  *Var[2]  FFFFFFFF 
  32C:  			ExecWait DoBurnHit 
  338:  			SetConst  *Var[0]  00000001 
  348:  			SetConst  *Var[1]  00300208 
  358:  			ExecWait DoDeath 
  364:  		EndIf
  36C:  		Return
  374:  	Case  ==  .Event:SpinSmashHit % B
  380:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  398:  		If  *Var[0]  ==  00000001 
  3A8:  			SetConst  *Var[1]  00300209 
  3B8:  		Else
  3C0:  			SetConst  *Var[1]  00300208 
  3D0:  		EndIf
  3D8:  		SetConst  *Var[0]  00000001 
  3E8:  		ExecWait DoSpinSmashHit 
  3F4:  	Case  ==  .Event:SpinSmashDeath % 21
  400:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  418:  		If  *Var[0]  ==  00000001 
  428:  			SetConst  *Var[0]  00000001 
  438:  			SetConst  *Var[1]  00300209 
  448:  			ExecWait DoSpinSmashHit 
  454:  			SetConst  *Var[0]  00000001 
  464:  			SetConst  *Var[1]  00300209 
  474:  			ExecWait DoDeath 
  480:  		Else
  488:  			SetConst  *Var[0]  00000001 
  498:  			SetConst  *Var[1]  00300208 
  4A8:  			ExecWait DoSpinSmashHit 
  4B4:  			SetConst  *Var[0]  00000001 
  4C4:  			SetConst  *Var[1]  00300208 
  4D4:  			ExecWait DoDeath 
  4E0:  		EndIf
  4E8:  		Return
  4F0:  	Case  ==  .Event:ShockHit % 2F
  4FC:  		Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  518:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  534:  		Call     EnableActorGlow 	( .Actor:Self .False )
  548:  		Call     SetPartEventBits 	( .Actor:Self 00000001 00400000 .False )
  564:  		Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
  57C:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_SteelCleft )
  594:  		SetConst  *Var[0]  00000001 
  5A4:  		SetConst  *Var[1]  00300208 
  5B4:  		ExecWait DoShockHit 
  5C0:  		SetConst  *Var[0]  00000001 
  5D0:  		SetConst  *Var[1]  00300208 
  5E0:  		ExecWait DoJumpBack 
  5EC:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  60C:  		SetConst  *Var[0]  00000001 
  61C:  		SetConst  *Var[1]  00300207 
  62C:  		ExecWait DoReturnHome 
  638:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.6005859] )
  64C:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  66C:  	Case  ==  .Event:ShockDeath % 26
  678:  		Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  694:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  6B0:  		Call     EnableActorGlow 	( .Actor:Self .False )
  6C4:  		Call     SetPartEventBits 	( .Actor:Self 00000001 00400000 .False )
  6E0:  		Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
  6F8:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_SteelCleft )
  710:  		SetConst  *Var[0]  00000001 
  720:  		SetConst  *Var[1]  00300208 
  730:  		ExecWait DoShockHit 
  73C:  		SetConst  *Var[0]  00000001 
  74C:  		SetConst  *Var[1]  00300208 
  75C:  		ExecWait DoDeath 
  768:  		Return
  770:  	Case  ==  .Event:StarBeam % 13
  77C:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  794:  		If  *Var[0]  ==  00000002 
  7A4:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  7C0:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  7DC:  			Call     EnableActorGlow 	( .Actor:Self .False )
  7F0:  			Call     SetPartEventBits 	( .Actor:Self 00000001 00400000 .False )
  80C:  			Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
  824:  			Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_SteelCleft )
  83C:  		EndIf
  844:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  85C:  		If  *Var[0]  ==  00000001 
  86C:  			SetConst  *Var[1]  00300203 
  87C:  		Else
  884:  			SetConst  *Var[1]  00300202 
  894:  		EndIf
  89C:  		SetConst  *Var[0]  00000001 
  8AC:  		ExecWait DoImmune 
  8B8:  	Case  ==  .Event:SpikeTaunt % 1B
  8C4:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  8D8:  		If  *Var[0]  !&  0035D000 
  8E8:  			Call     SetAnimation 	( .Actor:Self 00000001 00300218 )
  900:  		EndIf
  908:  		Wait     0000000A 
  914:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  930:  		Call     GetStatusFlags ( .Actor:Self *Var[3] )
  944:  		If  *Var[3]  &  00080000 
  954:  			Add  *Var[0]  FFFFFFFD 
  964:  			Add  *Var[1]  0000000A 
  974:  		Else
  97C:  			Add  *Var[0]  FFFFFFF8 
  98C:  			Add  *Var[1]  0000001B 
  99C:  		EndIf
  9A4:  		Call     PlayEffect  	( ~FX:LensFlare:Rotating *Var[0] *Var[1] *Var[2] 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  9E8:  		Wait     00000014 
  9F4:  	CaseOR  ==  00000017 % 17
  A00:  	CaseOR  ==  .Event:Immune % 19
  A0C:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  A18:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  A30:  		If  *Var[0]  ==  00000001 
  A40:  			SetConst  *Var[1]  00300203 
  A50:  		Else
  A58:  			SetConst  *Var[1]  00300202 
  A68:  		EndIf
  A70:  		SetConst  *Var[0]  00000001 
  A80:  		ExecWait DoImmune 
  A8C:  	EndCaseGroup
  A94:  	Case  ==  .Event:Death % 20
  AA0:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  AB8:  		If  *Var[0]  ==  00000001 
  AC8:  			SetConst  *Var[0]  00000001 
  AD8:  			SetConst  *Var[1]  00300209 
  AE8:  			ExecWait DoNormalHit 
  AF4:  			Wait     0000000A 
  B00:  			SetConst  *Var[0]  00000001 
  B10:  			SetConst  *Var[1]  00300209 
  B20:  			ExecWait DoDeath 
  B2C:  		Else
  B34:  			SetConst  *Var[0]  00000001 
  B44:  			SetConst  *Var[1]  00300208 
  B54:  			ExecWait DoNormalHit 
  B60:  			Wait     0000000A 
  B6C:  			SetConst  *Var[0]  00000001 
  B7C:  			SetConst  *Var[1]  00300208 
  B8C:  			ExecWait DoDeath 
  B98:  		EndIf
  BA0:  		Return
  BA8:  	Case  ==  .Event:RecoverStatus % 31
  BB4:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  BCC:  		If  *Var[0]  ==  00000000 
  BDC:  			SetConst  *Var[0]  00000001 
  BEC:  			SetConst  *Var[1]  00300202 
  BFC:  			ExecWait DoRecover 
  C08:  		EndIf
  C10:  	Case  ==  .Event:ScareAway % 39
  C1C:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  C34:  		If  *Var[0]  ==  00000001 
  C44:  			SetConst  *Var[0]  00000001 
  C54:  			SetConst  *Var[1]  00300203 
  C64:  			ExecWait DoImmune 
  C70:  		Else
  C78:  			SetConst  *Var[0]  00000001 
  C88:  			SetConst  *Var[1]  00300207 
  C98:  			SetConst  *Var[2]  00300208 
  CA8:  			ExecWait DoScareAway 
  CB4:  			Return
  CBC:  		EndIf
  CC4:  	Case  ==  .Event:BeginAirLift % 3A
  CD0:  		SetConst  *Var[0]  00000001 
  CE0:  		SetConst  *Var[1]  0030020F 
  CF0:  		ExecWait DoAirLift 
  CFC:  	Case  ==  .Event:BlowAway % 16
  D08:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  D20:  		If  *Var[0]  ==  00000001 
  D30:  			SetConst  *Var[0]  00000001 
  D40:  			SetConst  *Var[1]  0030020F 
  D50:  		Else
  D58:  			SetConst  *Var[0]  00000001 
  D68:  			SetConst  *Var[1]  00300208 
  D78:  		EndIf
  D80:  		ExecWait DoBlowAway 
  D8C:  		Return
  D94:  	Default
  D9C:  EndSwitch
  DA4:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  DB8:  Call     UseIdleAnimation 	( .Actor:Self .True )
  DCC:  Return
  DD4:  End
}

#new:Script $Script_HandleGetUp_SCleft
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
   44:  Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[3.0] )
   5C:  Call     SetAnimation 	( .Actor:Self 00000001 00300203 )
   74:  Wait     00000014 
   80:  Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[1.0] )
   98:  Call     SetAnimation 	( .Actor:Self 00000001 00300205 )
   B0:  Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
   C8:  Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
   E0:  If  *Var[0]  >  00000000 
   F0:  	Sub  *Var[0]  00000001 
  100:  	Call     SetActorVar 	( .Actor:Self 00000001 *Var[0] )
  118:  Else
  120:  	Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000010 00000000 )
  13C:  	Call     SetAnimation 	( .Actor:Self 00000001 00300203 )
  154:  	Thread
  15C:  		Wait     00000003 
  168:  		Loop     00000005 
  174:  			Add  *Var[0]  00000024 
  184:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  1A0:  			Wait     00000001 
  1AC:  		EndLoop
  1B4:  	EndThread
  1BC:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1D8:  	Sub  *Var[1]  00000006 
  1E8:  	Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.3007812] )
  1FC:  	Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  218:  	Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  238:  	Call     $Function_802185C0_SCleft ( 000000C8 0000000A )
  24C:  	Thread
  254:  		Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[1.0] )
  270:  	EndThread
  278:  	Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  294:  	Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  2B0:  	Call     SetActorPos 	( .Actor:Self *Var[0] 00000000 *Var[2] )
  2CC:  	Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
  2E4:  	Call     SetAnimation 	( .Actor:Self 00000001 00300202 )
  2FC:  	Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_SteelCleft )
  314:  	Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_SteelCleft )
  32C:  	Call     SetTargetOffset 	( .Actor:Self 00000001 00000000 00000016 )
  348:  	Call     8027D4C8 ( FFFFFF81 00000001 00000000 FFFFFFF6 )
  364:  	Call     SetPartEventBits 	( .Actor:Self 00000001 00000010 .True )
  380:  	Wait     00000001 
  38C:  	Call     $Function_80218618_SCleft ( 00000001 )
  39C:  	Call     SetActorFlagBits 	( .Actor:Self 00000400 .False )
  3B4:  EndIf
  3BC:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  3D0:  Call     UseIdleAnimation 	( .Actor:Self .True )
  3E4:  Return
  3EC:  End
}

#new:Script $Script_Attack_SCleft
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
		Call  SetActorVar	( .Actor:Self 0000000A 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     SetGoalToTarget 	( .Actor:Self )
   4C:  Call     UseBattleCamPreset 	( 0000003F )
   5C:  Call     BattleCamTargetActor ( .Actor:Self )
   6C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   84:  Call     MoveBattleCamOver 	( 0000001E )
   94:  Thread
   9C:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   B8:  	Call     PlayEffect  	( ~FX:SmokeImpact:Small *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
   FC:  	Wait     0000000A 
  108:  	Call     PlayEffect  	( ~FX:SmokeImpact:Small *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  14C:  	Wait     00000005 
  158:  	Call     PlayEffect  	( ~FX:SmokeImpact:Small *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  19C:  EndThread
  1A4:  Call     SetAnimation 	( .Actor:Self 00000001 00300210 )
  1BC:  Wait     0000000A 
		Label 	 0
  1C8:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
  1DC:  Call     SetAnimation 	( .Actor:Self 00000001 00300211 )
  1F4:  Call     SetGoalToTarget 	( .Actor:Self )
  204:  Call     AddGoalPos 	( .Actor:Self 00000032 00000000 FFFFFFFB )
  220:  Call     SetActorSpeed 	( .Actor:Self *Fixed[7.0] ) %4 -> 7
  234:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  24C:  Call     SetAnimation 	( .Actor:Self 00000001 00300200 )
  264:  Wait     00000008 
  270:  Call     PlaySoundAtActor 	( .Actor:Self 000020D1 )
  284:  Call     SetActorSounds ( FFFFFF81 00000000 00000000 00000000 )
  2A0:  Call     EnemyTestTarget ( .Actor:Self *Var[0] 00000000 00000000 00000003 00000010 )
  2C4:  Switch  *Var[0] 
  2D0:  	CaseOR  ==  .HitResult:Miss % 6
  2DC:  	CaseOR  ==  .HitResult:Lucky % 5
  2E8:  		Set  *Var[A]  *Var[0] 
  2F8:  		If  *Var[A]  ==  00000005 
  308:  			Thread
  310:  				Wait     0000000A 
  31C:  				Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  340:  			EndThread
  348:  		EndIf
  350:  		Call     SetAnimation 	( .Actor:Self 00000001 00300211 )
  368:  		Call     SetGoalToTarget 	( .Actor:Self )
  378:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  394:  		Sub  *Var[0]  00000064 
  3A4:  		Set  *Var[1]  00000000 
  3B4:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3D0:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[16.0] ) %8 -> 16
  3E4:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  3FC:  		Call     SetPartRotation 	( .Actor:Self 00000001 00000000 00000000 0000002D )
  41C:  		Call     SetAnimation 	( .Actor:Self 00000001 00300208 )
  434:  		Wait     0000000F 
  440:  		Wait     00000008 
  44C:  		Call     8026F6EC ( FFFFFF81 )
  45C:  		Call     UseBattleCamPreset 	( 00000002 )
  46C:  		Call     YieldTurn   	( )
  478:  		Call     SetPartRotation 	( .Actor:Self 00000001 00000000 00000000 00000000 )
  498:  		Call     SetActorYaw 	( .Actor:Self 000000B4 )
  4AC:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  4C8:  		Call     SetAnimation 	( .Actor:Self 00000001 00300207 )
  4E0:  		Call     SetGoalToHome 	( .Actor:Self )
  4F0:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  504:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  51C:  		Call     SetAnimation 	( .Actor:Self 00000001 00300202 )
  534:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  54C:  		Call     SetActorYaw 	( .Actor:Self 00000000 )
  560:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  574:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  588:  		Return
  590:  	EndCaseGroup
  598:  EndSwitch
  5A0:  Call     SetAnimation 	( .Actor:Self 00000001 00300211 )
  5B8:  Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  5D4:  Add  *Var[0]  00000014 
  5E4:  Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  600:  Call     SetActorSpeed 	( .Actor:Self *Fixed[16.0] ) %8 -> 16
  614:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  62C:  Call     8026F6EC ( FFFFFF81 )
  63C:  Wait     00000002 
  648:  Call     SetGoalToTarget 	( .Actor:Self )
  658:  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000009 00000020 ) %very strong
  680:  Call     SetAnimation 	( .Actor:Self 00000001 00300202 )
  698:  Call     UseBattleCamPreset 	( 00000002 )
  %6A8:  Switch  *Var[0] 
  %6B4:  	CaseOR  ==  00000000 
  %6C0:  	CaseOR  ==  00000002 
				If *Var[B] == .HitResult:Immune
					Goto 	1
				EndIf
				Call	 GetActorHP ( .Actor:Player *Var[C] )
				If *Var[C] == 0 %attacking while you're dead doesn't accomplish anything
					Goto 	1
				EndIf
				Call     GetStatusFlags ( .Actor:Player *Var[0] ) 
				If *Var[0] & 0035D000 %is stunned
					Goto 1
				EndIf
				Call     GetBattleFlags ( *Var[E] )
				If  *Var[E]  &  80000000 
					Goto     1 
				EndIf
				Call     GetActorVar 	( .Actor:Self 0000000A *Var[C] )
				Add *Var[C] 1
				Call	 SetActorVar	( .Actor:Self 0000000A *Var[C] )
				%If *Var[C] > 7` %theres a bug where the ninth hit crashes the game
				%	Goto 1
				%EndIf
				Call     GetLastDamage 	( .Actor:Player *Var[E] )
				If  *Var[E]  ==  00000000 %if it isn't working, don't keep going
					Goto     1 
				EndIf
				%go back to keep going
				Call     SetAnimation 	( .Actor:Self 00000001 00300207 )
				Call     SetGoalToTarget 	( .Actor:Self )
				Call     AddGoalPos 	( .Actor:Self 00000032 00000000 FFFFFFFB )		
				Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
				Call     RunToGoal   	( .Actor:Self 00000000 .False )
				Goto  0 %if none of the above conditions are met, keep going!
				Label 1
  6CC:  		Call     UseBattleCamPreset 	( 00000002 )
  6DC:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  6F8:  		Add  *Var[0]  0000000F 
  708:  		Set  *Var[1]  00000000 
  718:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[2.4003906] )
  72C:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  748:  		Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
  768:  		Call     SetAnimation 	( .Actor:Self 00000001 00300202 )
  780:  		Wait     00000005 
  78C:  		Call     YieldTurn   	( )
  798:  		Call     SetAnimation 	( .Actor:Self 00000001 00300207 )
  7B0:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  7C4:  		Call     SetGoalToHome 	( .Actor:Self )
  7D4:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  7EC:  		Call     SetAnimation 	( .Actor:Self 00000001 00300202 )
  %804:  	EndCaseGroup
  %80C:  EndSwitch
  814:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  828:  Call     UseIdleAnimation 	( .Actor:Self .True )
  83C:  Return
  844:  End
}
