#define .AnimIdle 00F30001
#define .AnimRun 00F30003
#define .AnimFlopBuildup 00F30004
#define .AnimFlopAscend 00F30006
#define .AnimFlopDescend 00F30007
#define .AnimSquirtBuildup 00F30008
#define .AnimSquirtA 00F30009 %fast (for rapidfire and small fireballs)
#define .AnimSquirtB 00F3000A %slow (for big lava blob)

#define .AnimStop 00F30000
#define .AnimDizzy 00F3000B 
#define .AnimSleep 00F3000C

#define .AnimHurt 00F3000D
#define .AnimDead 00F3000E %still frame of hurt animation

%lava cheep is completely immune to fire so this stuff isn't really needed
#define .AnimBurn   00F3000D
#define .AnimBurn2  00F3000E

#new:Actor $LavaCheep
{
% stats
[Index]        F5b % index from ActorTable.xml
[Level]        42`b %kinda high but lava cheep isn't that hard with endgame resources
[MaxHP]        50`b 
[Coins]         0`b 
[Flags]       00000000 
[StatusTable] $StatusTable_LavaCheep 
% ai
[PartsCount]   1`s 
[PartsTable] $PartsTable_LavaCheep 
[Script]      $Script_Init_LavaCheep 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]   3`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         24`b  24`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:DefenseTable $DefenseTable_LavaCheepBurning %higher def but more water/ice vulnerability
{
.Element:Normal 00000003
.Element:Fire	00000063
.Element:Water  FFFFFFFF %-1
.Element:Ice	FFFFFFFF %-1
.Element:End
}

#new:DefenseTable $DefenseTable_LavaCheep %lower def but no water/ice vulnerability*
{
.Element:Normal 00000001
.Element:Fire	00000063
.Element:Water  00000000
.Element:Ice	00000000
.Element:End
}

#new:StatusTable $StatusTable_LavaCheep
{
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      60` %i have a sleep animation and I'm not going to let it go to waste
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      35` %with dizzy shell you might get this higher than 35%
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink      0`
.Status:Stop       80`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1` 
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -2`
.Status:End
}

#new:PartsTable $PartsTable_LavaCheep
{
00800000 01000000 001400FF $IdleAnimations_LavaCheep $DefenseTable_LavaCheep 00000000 00000000 00F60000 00000000 
00120001 02000000 001800FF $IdleAnimations_Fireball $DefenseTable_LavaCheep 00000000 00000000 FFF60000 00000000 
00120001 03000000 001800FF $IdleAnimations_Fireball $DefenseTable_LavaCheep 00000000 00000000 FFF60000 00000000 
00120001 04000000 001800FF $IdleAnimations_Fireball $DefenseTable_LavaCheep 00000000 00000000 FFF60000 00000000 
00120001 05000000 001800FF $IdleAnimations_Fireball $DefenseTable_LavaCheep 00000000 00000000 FFF60000 00000000 
}

#new:IdleAnimations $IdleAnimations_LavaCheep
{
.Status:Normal    .AnimIdle
.Status:Stone     .AnimStop
.Status:Sleep     .AnimSleep
.Status:Poison    .AnimIdle
.Status:Stop      .AnimStop
.Status:Static    .AnimIdle
.Status:Paralyze  .AnimStop
.Status:Dizzy     .AnimDizzy
.Status:Fear      .AnimDizzy
.Status:End
}

#new:IdleAnimations $IdleAnimations_Fireball
{
.Status:Normal    00460001
.Status:End
}

#new:Script $Script_Init_LavaCheep
{
	Call     BindTakeTurn 		( .Actor:Self $Script_TakeTurn_LavaCheep )
	Call     BindIdle    		( .Actor:Self $Script_Idle_LavaCheep )
    Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_LavaCheep )
	Call	 SetActorVar		( .Actor:Self 00000001 00000000 ) %(bool) is fiery
	Call	 SetActorVar		( .Actor:Self 00000002 00000000 ) %turns since extinguished
	Call	 SetActorVar		( .Actor:Self 00000003 00000000 ) %AI state
	ExecWait $Script_Ignite
    Return
    End
}

#new:Script $Script_Ignite %become fiery
{
	Call	 SetAnimation		( .Actor:Self 00000001 .AnimFlopBuildup ) %angry animation
	Wait	 10`
	Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:RedFlames )
	Call     SetPartEventBits 	( .Actor:Self 00000001 00000002 .True )
	Wait     00000001 
	Call     ModifyActorDecoration 	( .Actor:Self 00000001 00000000 55` 55` 00000000 00000000 )
	Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_LavaCheepBurning )
	Call	 SetActorVar			( .Actor:Self 00000001 00000001 ) 
	Return
	End
}
	
#new:Script $Script_Extinguish %become normal
{
	Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
	Call     SetPartEventBits 	( .Actor:Self 00000001 00000002 .False )
	Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_LavaCheep )
	Call	 SetActorVar			( .Actor:Self 00000001 00000000 ) 
	Call	 SetActorVar			( .Actor:Self 00000002 00000000 )
	Return
	End
}
	
#new:Script $Script_Idle_LavaCheep
{
  Return
  End
}

#new:Script $Script_HandleEvent_LavaCheep
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   44:  Call     GetLastEvent 	( .Actor:Self *Var[0] )
   58:  Switch  *Var[0] 
   64:  	CaseOR  ==  .Event:HitCombo
   70:  	CaseOR  ==  .Event:Hit
				Call     GetLastElement ( *Var[E] )
				If  *Var[E] & 00000004
					Call GetActorVar ( .Actor:Self 00000001 *Var[F] )
					If *Var[F] == 1`
						ExecWait $Script_Extinguish
					EndIf
				EndIf
   7C:  		SetConst  *Var[0]  00000001 
   8C:  		SetConst  *Var[1]  .AnimHurt 
   9C:  		ExecWait DoNormalHit 
   A8:  	EndCaseGroup
   B0:  	Case  ==  .Event:BurnHit
   BC:  		SetConst  *Var[0]  00000001 
   CC:  		SetConst  *Var[1]  .AnimBurn 
   DC:  		SetConst  *Var[2]  .AnimBurn2 
   EC:  		ExecWait DoBurnHit 
   F8:  	Case  ==  .Event:BurnDeath
  104:  		SetConst  *Var[0]  00000001 
  114:  		SetConst  *Var[1]  .AnimBurn 
  124:  		SetConst  *Var[2]  .AnimBurn2 
  134:  		ExecWait DoBurnHit 
  140:  		SetConst  *Var[0]  00000001 
  150:  		SetConst  *Var[1]  .AnimBurn2 
  160:  		ExecWait DoDeath 
  16C:  		Return
  174:  	Case  ==  .Event:SpinSmashHit
  180:  		SetConst  *Var[0]  00000001 
  190:  		SetConst  *Var[1]  .AnimHurt 
  1A0:  		ExecWait 8029B998 
  1AC:  	Case  ==  .Event:SpinSmashDeath
  1B8:  		SetConst  *Var[0]  00000001 
  1C8:  		SetConst  *Var[1]  .AnimHurt 
  1D8:  		ExecWait 8029B998 
  1E4:  		SetConst  *Var[0]  00000001 
  1F4:  		SetConst  *Var[1]  .AnimDead 
  204:  		ExecWait DoDeath 
  210:  		Return
  218:  	Case  ==  .Event:ShockHit
  224:  		SetConst  *Var[0]  00000001 
  234:  		SetConst  *Var[1]  .AnimHurt 
  244:  		ExecWait DoShockHit 
  250:  		SetConst  *Var[0]  00000001 
  260:  		SetConst  *Var[1]  .AnimHurt 
  270:  		ExecWait 8029BD70 
  27C:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  29C:  		Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[2.0] )
  2B4:  		Call     SetAnimation 	( .Actor:Self 00000001 .AnimRun )
  2CC:  		Call     SetGoalToHome 	( .Actor:Self )
  2DC:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  2F0:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  308:  		Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[1.0] )
  320:  		Wait     00000005 
  32C:  		Call     SetAnimation 	( .Actor:Self 00000001 .AnimIdle )
  344:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.6005859] )
  358:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  378:  	Case  ==  .Event:ShockDeath
  384:  		SetConst  *Var[0]  00000001 
  394:  		SetConst  *Var[1]  .AnimHurt 
  3A4:  		ExecWait DoShockHit 
  3B0:  		SetConst  *Var[0]  00000001 
  3C0:  		SetConst  *Var[1]  .AnimDead 
  3D0:  		ExecWait DoDeath 
  3DC:  		Return
  3E4:  	Case  ==  .Event:StarBeam
  3F0:  	CaseOR  ==  00000017
  3FC:  	CaseOR  ==  .Event:Immune
  408:  	CaseOR  ==  .Event:AirLiftFailed
  414:  		SetConst  *Var[0]  00000001 
  424:  		SetConst  *Var[1]  .AnimIdle 
  434:  		ExecWait DoImmune 
  440:  	EndCaseGroup
  448:  	Case  ==  .Event:Death
  454:  		SetConst  *Var[0]  00000001 
  464:  		SetConst  *Var[1]  .AnimHurt 
  474:  		ExecWait DoNormalHit 
  480:  		Wait     0000000A 
  48C:  		SetConst  *Var[0]  00000001 
  49C:  		SetConst  *Var[1]  .AnimDead 
  4AC:  		ExecWait DoDeath 
  4B8:  		Return
  4C0:  	Case  ==  .Event:EndFirstStrike
  4CC:  		Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[2.0] )
  4E4:  		Call     SetAnimation 	( .Actor:Self 00000001 .AnimRun )
  4FC:  		Call     SetGoalToHome 	( .Actor:Self )
  50C:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  520:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  538:  		Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[1.0] )
  550:  		Call     HPBarToHome 	( .Actor:Self )
  560:  	Case  ==  .Event:RecoverStatus
  56C:  		SetConst  *Var[0]  00000001 
  57C:  		SetConst  *Var[1]  .AnimIdle 
  58C:  		ExecWait DoRecover 
  598:  	Case  ==  .Event:ScareAway
  5A4:  		SetConst  *Var[0]  00000001 
  5B4:  		SetConst  *Var[1]  .AnimRun 
  5C4:  		SetConst  *Var[2]  .AnimHurt 
  5D4:  		ExecWait DoScareAway 
  5E0:  		Return
  5E8:  	Case  ==  .Event:BeginAirLift
  5F4:  		SetConst  *Var[0]  00000001 
  604:  		SetConst  *Var[1]  .AnimRun 
  614:  		ExecWait DoAirLift 
  620:  	Case  ==  .Event:BlowAway
  62C:  		SetConst  *Var[0]  00000001 
  63C:  		SetConst  *Var[1]  .AnimHurt 
  64C:  		ExecWait DoBlowAway 
  658:  		Return
  660:  	Default
  668:  EndSwitch
  670:  Call     SetAnimation 	( .Actor:Self 00000001 .AnimIdle )
  688:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  69C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  6B0:  Return
  6B8:  End
}
%AI
%if extinguished and extinguished turncount > 2, ignite at turn end
%	2 -> 1 at half health
%belly flop
%	(hp > 2/3) only target mario 					(6 or 8 depending on if he's fiery)
%	(hp > 1/2) target partner with 20% probability 	(2 or 3)
%	(hp > 0) target mario and partner 				(6/2 or 8/3)
%squirt
%	(extinguished) triple hit (6x3)
%	(not extinguished) lava bubble (14/3)

#new:Script $Script_TakeTurn_LavaCheep
{
	Call	 AddActorVar			( .Actor:Self 00000002 00000001 ) 
	Call	 GetActorVar			( .Actor:Self 00000003 *Var[9] )
	Switch *Var[9]
		Case == 0`
			Call	 SetActorVar	( .Actor:Self 00000003 00000001 ) 			
			Call	 GetActorHP ( .Actor:Self *Var[E] )
			Call	 GetEnemyMaxHP ( .Actor:Self *Var[D] )
			Div *Var[D] 3
			Mul *Var[D] 2
			If *Var[E] > *Var[D]
				ExecWait $Script_Bellyflop1
			Else
				Div *Var[D] 2
				If *Var[E] > *Var[D]
					Call	RandInt ( 4` *Var[5] )
					If *Var[5] == 0
						Call     GetStatusFlags ( .Actor:Partner *Var[0] )
						If  *Var[0]  !&  01000000 
							ExecWait $Script_Bellyflop2
						Else
							ExecWait $Script_Bellyflop1
						EndIf
					Else
						ExecWait $Script_Bellyflop1
					EndIf
				Else
					Call     GetStatusFlags ( .Actor:Partner *Var[0] )
					If  *Var[0]  !&  01000000 
						ExecWait $Script_Bellyflop3
					Else
						ExecWait $Script_Bellyflop1
					EndIf
				EndIf
			EndIf
		Case == 1`
			Call	 GetActorVar	( .Actor:Self 00000001 *Var[A] )
			If *Var[A] == 0`
				ExecWait $Script_Fireballs
			Else
				ExecWait $Script_Lavaball
			EndIf
			Call	 SetActorVar	( .Actor:Self 00000003 00000000 ) 			
	EndSwitch
	Call	 GetActorVar			( .Actor:Self 00000001 *Var[0] )
	If *Var[0] == 0
		Call	 GetActorVar			( .Actor:Self 00000002 *Var[1] )
		Call	 GetActorHP ( .Actor:Self *Var[E] )
		Call	 GetEnemyMaxHP ( .Actor:Self *Var[D] )
		Div *Var[D] 2
		If *Var[E] > *Var[D]
			If *Var[1] > 2`
				ExecWait $Script_Ignite
			EndIf
		Else
			If *Var[1] > 1`
				ExecWait $Script_Ignite
			EndIf
		EndIf
	EndIf
    Return
    End
}

#new:Script $Script_Lavaball
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
		Call     UseBattleCamPreset 	( 0000003F )
		Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
		Add  *Var[0]  0000006C
		Call     SetGoalPos 	( .Actor:Self *Var[0] 00000000 *Var[2] )
		Call     SetAnimation 	( .Actor:Self 00000001 .AnimRun ) %idle
		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
		Call     RunToGoal   	( .Actor:Self 00000000 .False )
		Call     SetAnimation 	( .Actor:Self 00000001 .AnimIdle ) %idle
		Wait     00000008
		Call     SetAnimation 	( .Actor:Self 00000001 .AnimSquirtBuildup ) %buildup
		Wait     0000001E 
		Call     SetAnimation 	( .Actor:Self 00000001 .AnimSquirtB )
		Call     PlaySoundAtActor 	( .Actor:Self 000003C1 )
		Wait     0000000A %2D (45) -> A (10)
		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
		Sub  *Var[0]  0000000A 
		Add  *Var[1]  00000008
		Call     SetGoalToTarget 	( .Actor:Self )
		Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
		Call     PlayEffect  	( 00000063 00000000 *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.0] 00000010 00000008 00000000 00000000 00000000 ) %28 (40) -> 8 (8)
		Call     PlaySoundAtActor 	( .Actor:Self 000003C4 )
		Wait 			5`
		Call     SetAnimation 	( .Actor:Self 00000001 .AnimIdle )
		Wait     0000000A
		Thread
			Wait     00000018 
			Call     PlayEffect  	( ~FX:EmitterVolume:Embers *Var[3] 00000000 *Var[5] 00000032 00000032 *Fixed[1.0] 00000028 00000037 *Fixed[1.0] *Fixed[1.0] 00000000 00000000 )
		EndThread
  1D0:  Call     EnemyTestTarget ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  1F4:  Switch  *Var[0] 
  200:  	CaseOR  ==  .HitResult:Miss % 6
  20C:  	CaseOR  ==  .HitResult:Lucky % 5
  218:  		Set  *Var[A]  *Var[0] 
  228:  		Call     SetAnimation 	( .Actor:Self 00000001 .AnimSquirtB )
  2E4:  		If  *Var[A]  ==  00000005 
  2F4:  			Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  318:  		EndIf
  320:  		Wait     00000014 
  32C:  		Call     UseBattleCamPreset 	( 00000002 )
  33C:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  358:  		Call     SetActorYaw 	( .Actor:Self 000000B4 )
				Call     SetAnimation 	( .Actor:Self 00000001 .AnimRun )
				Call     SetGoalToHome 	( .Actor:Self )
				Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
				Call     RunToGoal   	( .Actor:Self 00000000 .False )
  378:  		Wait     00000014 
  384:  		Call     SetActorYaw 	( .Actor:Self 00000000 )
  398:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  3B0:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  3C4:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  3D8:  		Return
  3E0:  	EndCaseGroup
  3E8:  EndSwitch
  %3F0:  Call     SetAnimation 	( .Actor:Self 00000001 .AnimSquirtB )
  4AC:  Wait     00000002 
		Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000002 0000FFFF 00000000 0000000E 00000020 ) 
    	Wait     0000000B 
  		Call     SetTargetActor ( .Actor:Self .Actor:Partner )
   		Call     SetGoalToTarget 	( .Actor:Self )
		Call     GetStatusFlags ( .Actor:Partner *Var[0] )
		If  *Var[0]  !&  01000000 
			Call 	 EnemyDamageTarget ( .Actor:Self *Var[0] 20000110 0000FFFF 00000000 00000003 00000020 ) 
		EndIf
  4E0:  Wait     00000014 
  4EC:  Switch  *Var[0] 
  4F8:  	CaseOR  ==  00000000 
  504:  	CaseOR  ==  00000002 
  510:  		Call     UseBattleCamPreset 	( 00000002 )
				Call     SetAnimation 	( .Actor:Self 00000001 .AnimRun )
				Call     SetGoalToHome 	( .Actor:Self )
				Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
				Call     RunToGoal   	( .Actor:Self 00000000 .False ) 
  52C:  	EndCaseGroup
  534:  EndSwitch
  53C:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  550:  Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End
}

#new:Script $Script_Fireballs
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
		Call     UseBattleCamPreset 	( 0000003F )
		Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
		Add  *Var[0]  00000064 
		Call     SetGoalPos 	( .Actor:Self *Var[0] 00000000 *Var[2] )
		Call     SetAnimation 	( .Actor:Self 00000001 .AnimRun ) %idle
		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  188:  Call     SetAnimation 	( .Actor:Self 00000001 .AnimIdle ) %idle
  1A0:  Wait     00000008
  1AC:  Call     SetAnimation 	( .Actor:Self 00000001 .AnimSquirtBuildup ) %buildup
  1C4:  Wait     0000001E 
  1D0:  Call     EnemyTestTarget ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  1F4:  Switch  *Var[0] 
  200:  	CaseOR  ==  .HitResult:Miss % 6
  20C:  	CaseOR  ==  .HitResult:Lucky % 5
  218:  		Set  *Var[A]  *Var[0] 
  228:  		Call     SetAnimation 	( .Actor:Self 00000001 .AnimSquirtA )
  240:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  25C:  		Sub  *Var[0]  0000000A
  26C:  		Add  *Var[1]  00000008 
  27C:  		Add  *Var[2]  00000002 
  28C:  		Call     SetGoalToTarget 	( .Actor:Self )
  29C:  		Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  2B8:  		Sub  *Var[3]  00000064 
  2C8:  		Add  *Var[5]  00000002 
				Thread
					Loop 3
						Call     SetAnimation 	( .Actor:Self 00000001 .AnimIdle )
						Wait	 00000001
						Call     SetAnimation 	( .Actor:Self 00000001 .AnimSquirtA )
						Wait 	 00000005
					EndLoop
				EndThread
  2D8:  		ExecWait $Script_FireballShoot 
  2E4:  		If  *Var[A]  ==  00000005 
  2F4:  			Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  318:  		EndIf
  320:  		Wait     00000014 
  32C:  		Call     UseBattleCamPreset 	( 00000002 )
  33C:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  358:  		Call     SetActorYaw 	( .Actor:Self 000000B4 )
				Call     SetAnimation 	( .Actor:Self 00000001 .AnimRun )
				Call     SetGoalToHome 	( .Actor:Self )
				Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
				Call     RunToGoal   	( .Actor:Self 00000000 .False )
  378:  		Wait     00000014 
  384:  		Call     SetActorYaw 	( .Actor:Self 00000000 )
  398:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  3B0:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  3C4:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  3D8:  		Return
  3E0:  	EndCaseGroup
  3E8:  EndSwitch
  3F0:  Call     SetAnimation 	( .Actor:Self 00000001 .AnimSquirtA )
  408:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  424:  Sub  *Var[0]  0000000A
  434:  Add  *Var[1]  00000008 
  444:  Add  *Var[2]  00000002 
  454:  Call     SetGoalToTarget 	( .Actor:Self )
  464:  Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  480:  Sub  *Var[4]  00000006 
  490:  Add  *Var[5]  00000002 
		Thread
			Loop 2
			  	Call     SetAnimation 	( .Actor:Self 00000001 .AnimIdle )
				Wait	 00000001
				Call     SetAnimation 	( .Actor:Self 00000001 .AnimSquirtA )
				Wait 	 00000005
			EndLoop
			Call     SetAnimation 	( .Actor:Self 00000001 .AnimIdle )
		EndThread
  4A0:  ExecWait $Script_FireballShoot 
  4AC:  Wait     00000002 
		%Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000002 00000000 00000000 00000006 00000020 ) %triple hit for 6 each, but with enough defense it's not so bad
		Wait 00000006
		%Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000002 00000000 00000000 00000006 00000020 )
		Wait 00000006
		%Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000002 00000000 00000000 00000006 00000020 )  
		Call     SetAnimation 	( .Actor:Self 00000001 .AnimIdle )
  4E0:  Wait     00000014 
   		Call     UseBattleCamPreset 	( 00000002 )
		Call     SetAnimation 	( .Actor:Self 00000001 .AnimRun )
		Call     SetGoalToHome 	( .Actor:Self )
		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
		Call     RunToGoal   	( .Actor:Self 00000000 .False ) 
  53C:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  550:  Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End
}

#new:Script $Script_FireballShoot %calculate stuff
{
    0:  Exec     $Script_FireballShoot_B 
    C:  Call     GetDistanceToGoal 	( .Actor:Self *Var[0] )
   20:  DivF  *Var[0]  *Fixed[8.0] 
   30:  Add  *Var[0]  00000001 
   40:  Wait     *Var[0] 
   4C:  Return
   54:  End
}

%the old script is glitching out so replace it with something that will probably work better
#new:Script $Script_FireballShoot_B
{
Loop 3
	Thread
		Call     SummonEnemy		( $ProjectileFormation 00000000 ) %spawn a projectile
		Set 	*Var[F] *Var[0]
		Call     SetPartScale ( *Var[F] 00000001 *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
		Call	 GetActorPos		( .Actor:Self *Var[0] *Var[1] *Var[2] )
		Sub *Var[0] 10`
		Add *Var[1] 8`
		Call	 SetActorPos		( *Var[F] *Var[0] *Var[1] *Var[2] )
		Call     UseIdleAnimation 	( *Var[F] .False )
		Call     EnableIdleScript 	( *Var[F] 00000000 )
		Call 	 SetAnimation 		( *Var[F] 00000001 00460001 )
		Call     SetTargetActor 	( *Var[F] .Actor:Player )
		Call     SetGoalToTarget 	( *Var[F] )
		Call 	 SetActorSpeed 		( *Var[F] *Fixed[10.0] )
		Call	 SetActorJumpGravity	( *Var[F] *Fixed[1.8] )
		Call     PlaySoundAtActor 	( *Var[F] 000003CB )
		Call     EnemyTestTarget 	( *Var[F] *Var[9] 10000000 00000000 00000001 00000010 )
		Switch  *Var[9] 
			CaseOR  ==  .HitResult:Miss % 6
			CaseOR  ==  .HitResult:Lucky % 5
				Call     SetGoalToTarget 	( *Var[F] )
				Call     GetGoalPos  	( *Var[F] *Var[0] *Var[1] *Var[2] )
				Set  *Var[0]  FFFFFF4C 
				Call     SetGoalPos 	( *Var[F] *Var[0] *Var[1] *Var[2] )
				Call     SetActorSpeed 	( *Var[F] *Fixed[17.0] )
				Call     SetActorJumpGravity 	( *Var[F] *Fixed[1.8007812] )
				Call     FlyToGoal  	( *Var[F] 00000000 00000000 .Easing:Linear )
				If  *Var[9]  ==  00000005 
					Call     EnemyTestTarget ( *Var[F] *Var[0] 80000000 00000000 00000000 00000000 )
				EndIf
				Call     UseBattleCamPreset 	( 00000002 )
				Call     RemoveActor 	( *Var[F] )
				Return
			EndCaseGroup
		EndSwitch
		Call     SetTargetActor ( *Var[F] .Actor:Player )
		Call     SetGoalToTarget 	( *Var[F] )
		Call     SetActorSpeed 	( *Var[F] *Fixed[16.0] )
		Call     SetActorJumpGravity 	( *Var[F] *Fixed[1.8007812] )
		Call     FlyToGoal  	( *Var[F] 00000000 00000000 .Easing:Linear )
		Wait     00000002 
		Call     SetGoalToTarget 	( *Var[F] )
		Call     SetTargetActor ( .Actor:Self .Actor:Player )
		Call     SetGoalToTarget 	( .Actor:Self )
		Call     EnemyDamageTarget 	( .Actor:Self *Var[9] 10000002 0000FFFF 00000000 00000006 00000020 ) %apparently the 0000FFFF causes zaptap to not activate?
		Call     RemoveActor 	( *Var[F] )
	EndThread
	Wait 6
EndLoop
Return
End
}

#new:Vector3D $VoidPos
{
0` -1000` 0` %we'll set its position later
}

#new:SpecialFormation $ProjectileFormation
{
$Projectile $VoidPos 00000009 00000000 00000000 00000000 00000000 
}
	
#new:PartsTable $PartsTable_Projectile
{
00020000 02000000 F13200FF $IdleAnimations_Fireball  $DefenseTable_LavaCheepBurning 00000002 00000000 03F20000 00000000 
}
	
#new:Actor $Projectile
{
% stats
[Index]        FBb 
[Level]         0`b 
[MaxHP]         1`b 
[Coins]         0`b 
[Flags]       00000000 
[StatusTable] $StatusTable_LavaCheep
% ai
[PartsCount]   1`s
[PartsTable] $PartsTable_Projectile
[Script]      $Script_Init_Projectile
% move effectiveness
[Escape]      100`b 
[Item]        100`b 
[AirLift]     100`b 
[Hurricane]   100`b % Bow's "Spook" as well
[UpAndAway]   100`b 
[PowerBounce] 100`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         60`b  52`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -22`b  32`b % dx dy
[StatusIcon]    1`b  44`b % dx dy
}

#new:Script $Script_Init_Projectile
{
	Call	BindTakeTurn	( .Actor:Self $Script_Idle_Projectile )
	Call	BindIdle		( .Actor:Self $Script_Idle_Projectile )
	Call	BindHandleEvent	( .Actor:Self $Script_Idle_Projectile )
	Return
	End
}
	
#new:Script $Script_Idle_Projectile
{
Return
End
}
	
#new:Script $Script_Bellyflop1 %mario only
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     UseBattleCamPreset 	( 0000003F )
   38:  Call     BattleCamTargetActor ( .Actor:Self )
   48:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   60:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   74:  Call     SetGoalToTarget 	( .Actor:Self )
   84:  Call     AddGoalPos 	( .Actor:Self 00000046 00000000 00000000 )
   A0:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   BC:  Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
   D8:  Sub  *Var[3]  *Var[0] 
   E8:  Div  *Var[3]  *Fixed[3.0] 
   F8:  Set  *Var[A]  *Var[3] 
  108:  If  *Var[A]  <  00000000 
  118:  	Mul  *Var[A]  FFFFFFFF 
  128:  EndIf
  130:  Call     MoveBattleCamOver 	( *Var[A] )
  140:  Call     SetAnimation 	( .Actor:Self 00000001 .AnimRun )
  158:  Call     RunToGoal   	( .Actor:Self *Var[A] .False )
  170:  Call     SetAnimation 	( .Actor:Self 00000001 .AnimIdle )
  188:  Wait     0000000A 
  194:  Call     UseBattleCamPreset 	( 00000008 )
  1A4:  Call     BattleCamTargetActor ( .Actor:Self )
  1B4:  Call     AddBattleCamZoom  	( FFFFFFCE )
  1C4:  Call     MoveBattleCamOver 	( 0000001E )
  1D4:  Call     8024ECF8 ( 00000001 00000001 00000001 )
  1EC:  Call     SetAnimation 	( .Actor:Self 00000001 .AnimFlopBuildup )
  204:  Wait     0000000A
  %210:  Call     SetAnimation 	( .Actor:Self 00000001 .AnimFlopBuildup )
  %228:  Wait     0000000F 
  234:  Call     EnemyTestTarget ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  258:  Switch  *Var[0] 
  264:  	CaseOR  ==  .HitResult:Miss % 6
  270:  	CaseOR  ==  .HitResult:Lucky % 5
  27C:  		Set  *Var[A]  *Var[0] 
  28C:  		Call     UseBattleCamPreset 	( 00000002 )
  29C:  		Call     MoveBattleCamOver 	( 00000014 )
  2AC:  		Call     SetAnimation 	( .Actor:Self 00000001 .AnimFlopAscend )
  2C4:  		Thread
  2CC:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000C 00000000 )
  2E8:  			Set  *Var[0]  00000000 
  2F8:  			Loop     0000000A 
  304:  				Add  *Var[0]  00000024 
  314:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  330:  				Wait     00000001 
  33C:  			EndLoop
  344:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000014 )
  360:  		EndThread
  368:  		Thread
  370:  			Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  388:  			Switch  *Var[0] 
  394:  				Case  ==  00000000 
  3A0:  					Wait     0000000D 
  3AC:  					Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  3CC:  					Wait     00000001 
  3D8:  					Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  3F8:  					Wait     00000001 
  404:  					Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  424:  					Wait     00000001 
  430:  					Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  450:  					Wait     00000001 
  45C:  					Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  47C:  				Case  ==  00000001 
  488:  					Wait     0000000D 
  494:  					Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.0507812] *Fixed[1.0507812] *Fixed[1.0507812] )
  4B4:  					Wait     00000001 
  4C0:  					Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.1005859] *Fixed[1.1005859] *Fixed[1.1005859] )
  4E0:  					Wait     00000001 
  4EC:  					Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.1503906] *Fixed[1.1503906] *Fixed[1.1503906] )
  50C:  					Wait     00000001 
  518:  					Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.2001953] *Fixed[1.2001953] *Fixed[1.2001953] )
  538:  					Wait     00000001 
  544:  					Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.25] *Fixed[1.25] *Fixed[1.25] )
  64C:  			EndSwitch
  654:  		EndThread
  65C:  		Call     SetActorSounds ( FFFFFF81 00000002 00000000 00000000 )
  678:  		Call     PlaySoundAtActor 	( .Actor:Self 00002034 )
  68C:  		Call     SetGoalToTarget 	( .Actor:Self )
  69C:  		Thread
  6A4:  			Call     SetAnimation 	( .Actor:Self 00000001 .AnimFlopAscend )
  6BC:  			Wait     0000000A 
  6C8:  			Call     SetAnimation 	( .Actor:Self 00000001 .AnimFlopDescend )
  6E0:  		EndThread
  6E8:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.0] )
  6FC:  		Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
  71C:  		Call     SetAnimation 	( .Actor:Self 00000001 .AnimDizzy )
  734:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  750:  		Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  76C:  		Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  78C:  		Call     LandJump ( FFFFFF81 )
  79C:  		Call     PlaySoundAtActor 	( .Actor:Self 0000029A )
  7B0:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  7CC:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  7E8:  		Call     AddGoalPos 	( .Actor:Self FFFFFFF1 00000000 00000000 )
  804:  		Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
  824:  		Call     PlaySoundAtActor 	( .Actor:Self 0000029A )
  838:  		Call     AddGoalPos 	( .Actor:Self FFFFFFF6 00000000 00000000 )
  854:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  874:  		Call     PlaySoundAtActor 	( .Actor:Self 0000029A )
  888:  		If  *Var[A]  ==  00000005 
  898:  			Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  8BC:  		EndIf
  8C4:  		Wait     0000000A 
  8D0:  		Call     UseBattleCamPreset 	( 00000002 )
  8E0:  		Call     YieldTurn   	( )
  8EC:  		Call     SetAnimation 	( .Actor:Self 00000001 .AnimRun )
  904:  		Call     SetGoalToHome 	( .Actor:Self )
  914:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  928:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  940:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  954:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  968:  		Return
  970:  	EndCaseGroup
  978:  EndSwitch
  980:  Call     UseBattleCamPreset 	( 00000002 )
  990:  Call     MoveBattleCamOver 	( 0000000A )
  9A0:  Call     SetAnimation 	( .Actor:Self 00000001 .AnimFlopAscend )
  9B8:  Thread
  9C0:  	Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000C 00000000 )
  9DC:  	Set  *Var[0]  00000000 
  9EC:  	Loop     0000000A 
  9F8:  		Add  *Var[0]  00000024 
  A08:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  A24:  		Wait     00000001 
  A30:  	EndLoop
  A38:  	Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000014 )
  A54:  EndThread
  A5C:  Thread
  A64:  	Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  A7C:  	Switch  *Var[0] 
  A88:  		Case  ==  00000000 
  A94:  			Wait     0000000D 
  AA0:  			Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.1005859] *Fixed[1.1005859] *Fixed[1.1005859] )
  AC0:  			Wait     00000001 
  ACC:  			Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.1005859] *Fixed[1.1005859] *Fixed[1.1005859] )
  AEC:  			Wait     00000001 
  AF8:  			Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.2001953] *Fixed[1.2001953] *Fixed[1.2001953] )
  B18:  			Wait     00000001 
  B24:  			Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.2001953] *Fixed[1.2001953] *Fixed[1.2001953] )
  B44:  			Wait     00000001 
  B50:  			Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.3007812] *Fixed[1.3007812] *Fixed[1.3007812] )
  B70:  		Case  ==  00000001 
  B7C:  			Wait     0000000D 
  B88:  			Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.1503906] *Fixed[1.1503906] *Fixed[1.1503906] )
  BA8:  			Wait     00000001 
  BB4:  			Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.2001953] *Fixed[1.2001953] *Fixed[1.2001953] )
  BD4:  			Wait     00000001 
  BE0:  			Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.3505859] *Fixed[1.3505859] *Fixed[1.3505859] )
  C00:  			Wait     00000001 
  C0C:  			Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.4003906] *Fixed[1.4003906] *Fixed[1.4003906] )
  C2C:  			Wait     00000001 
  C38:  			Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.5507812] *Fixed[1.5507812] *Fixed[1.5507812] )
  D40:  	EndSwitch
  D48:  EndThread
  D50:  Call     SetActorSounds ( FFFFFF81 00000002 00000000 00000000 )
  D6C:  Call     PlaySoundAtActor 	( .Actor:Self 00002034 )
  D80:  Call     SetGoalToTarget 	( .Actor:Self )
  D90:  Thread
  D98:  	Call     SetAnimation 	( .Actor:Self 00000001 .AnimFlopAscend )
  DB0:  	Wait     0000000A 
  DBC:  	Call     SetAnimation 	( .Actor:Self 00000001 .AnimFlopDescend )
  DD4:  EndThread
  DDC:  Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.6005859] )
  DF0:  Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
  E10:  Call     SetAnimation 	( .Actor:Self 00000001 .AnimFlopDescend )
  E28:  Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  E44:  Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  E60:  Thread
  E68:  	Wait     00000003 
  E74:  	Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  E94:  EndThread
  E9C:  Call     GetActorVar 	( .Actor:Self 00000001 *Var[A] )
  EB4:  Switch  *Var[A] 
  EC0:  	Case  ==  00000000 
  ECC:  		Wait     00000002 
  ED8:  		Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000006 00000020 )
  F00:  	Case  ==  00000001 
  F0C:  		Wait     00000002 
  F18:  		Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000002 00000000 00000000 00000008 00000020 ) %fire damage
  F80:  EndSwitch
  F88:  Switch  *Var[0] 
  F94:  	CaseOR  ==  00000000 
  FA0:  	CaseOR  ==  00000002 
  FAC:  		Call     SetAnimation 	( .Actor:Self 00000001 .AnimFlopDescend )
  FC4:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  FE0:  		Add  *Var[0]  0000003C 
  FF0:  		Set  *Var[1]  00000000 
 1000:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.4003906] )
 1014:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 1030:  		Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
 1050:  		Call     PlaySoundAtActor 	( .Actor:Self 0000029A )
 1064:  		Add  *Var[0]  0000001E 
 1074:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 1090:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
 10B0:  		Call     PlaySoundAtActor 	( .Actor:Self 0000029A )
 10C4:  		Add  *Var[0]  00000014 
 10D4:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 10F0:  		Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
 1110:  		Call     PlaySoundAtActor 	( .Actor:Self 0000029A )
 1124:  		Add  *Var[0]  0000000A 
 1134:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 1150:  		Call     JumpToGoal  	( .Actor:Self 00000004 00000000 00000001 00000000 )
 1170:  		Call     PlaySoundAtActor 	( .Actor:Self 0000029A )
 1184:  		Call     SetAnimation 	( .Actor:Self 00000001 .AnimIdle )
 119C:  		Wait     0000000F 
 11A8:  		Call     UseBattleCamPreset 	( 00000002 )
 11B8:  		Call     YieldTurn   	( )
 11C4:  		Call     SetAnimation 	( .Actor:Self 00000001 .AnimRun )
 11DC:  		Call     SetGoalToHome 	( .Actor:Self )
 11EC:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
 1200:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
 1218:  	EndCaseGroup
 1220:  EndSwitch
 1228:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
 123C:  Call     UseIdleAnimation 	( .Actor:Self .True )
 1250:  Return
 1258:  End
}

#new:Script $Script_Bellyflop2 %target partner
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     UseBattleCamPreset 	( 0000003F )
   38:  Call     BattleCamTargetActor ( .Actor:Self )
   48:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   60:  Call     SetTargetActor ( .Actor:Self .Actor:Player ) %we'll fix this later
   74:  Call     SetGoalToTarget 	( .Actor:Self )
   84:  Call     AddGoalPos 	( .Actor:Self 00000046 00000000 00000000 )
   A0:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   BC:  Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
   D8:  Sub  *Var[3]  *Var[0] 
   E8:  Div  *Var[3]  *Fixed[3.0] 
   F8:  Set  *Var[A]  *Var[3] 
  108:  If  *Var[A]  <  00000000 
  118:  	Mul  *Var[A]  FFFFFFFF 
  128:  EndIf
  130:  Call     MoveBattleCamOver 	( *Var[A] )
  140:  Call     SetAnimation 	( .Actor:Self 00000001 .AnimRun )
  158:  Call     RunToGoal   	( .Actor:Self *Var[A] .False )
  170:  Call     SetAnimation 	( .Actor:Self 00000001 .AnimIdle )
  188:  Wait     0000000A 
  194:  Call     UseBattleCamPreset 	( 00000008 )
  1A4:  Call     BattleCamTargetActor ( .Actor:Self )
  1B4:  Call     AddBattleCamZoom  	( FFFFFFCE )
  1C4:  Call     MoveBattleCamOver 	( 0000001E )
  1D4:  Call     8024ECF8 ( 00000001 00000001 00000001 )
  1EC:  Call     SetAnimation 	( .Actor:Self 00000001 .AnimFlopBuildup )
  204:  Wait     0000000A
		Call     SetTargetActor ( .Actor:Self .Actor:Partner )
  234:  Call     EnemyTestTarget ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  258:  Switch  *Var[0] 
  264:  	CaseOR  ==  .HitResult:Miss % 6
  270:  	CaseOR  ==  .HitResult:Lucky % 5
  27C:  		Set  *Var[A]  *Var[0] 
  28C:  		Call     UseBattleCamPreset 	( 00000002 )
  29C:  		Call     MoveBattleCamOver 	( 00000014 )
  2AC:  		Call     SetAnimation 	( .Actor:Self 00000001 .AnimFlopAscend )
  2C4:  		Thread
  2CC:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000C 00000000 )
  2E8:  			Set  *Var[0]  00000000 
  2F8:  			Loop     0000000A 
  304:  				Add  *Var[0]  00000024 
  314:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  330:  				Wait     00000001 
  33C:  			EndLoop
  344:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000014 )
  360:  		EndThread
  368:  		Thread
  370:  			Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  388:  			Switch  *Var[0] 
  394:  				Case  ==  00000000 
  3A0:  					Wait     0000000D 
  3AC:  					Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  3CC:  					Wait     00000001 
  3D8:  					Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  3F8:  					Wait     00000001 
  404:  					Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  424:  					Wait     00000001 
  430:  					Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  450:  					Wait     00000001 
  45C:  					Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  47C:  				Case  ==  00000001 
  488:  					Wait     0000000D 
  494:  					Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.0507812] *Fixed[1.0507812] *Fixed[1.0507812] )
  4B4:  					Wait     00000001 
  4C0:  					Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.1005859] *Fixed[1.1005859] *Fixed[1.1005859] )
  4E0:  					Wait     00000001 
  4EC:  					Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.1503906] *Fixed[1.1503906] *Fixed[1.1503906] )
  50C:  					Wait     00000001 
  518:  					Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.2001953] *Fixed[1.2001953] *Fixed[1.2001953] )
  538:  					Wait     00000001 
  544:  					Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.25] *Fixed[1.25] *Fixed[1.25] )
  64C:  			EndSwitch
  654:  		EndThread
  65C:  		Call     SetActorSounds ( FFFFFF81 00000002 00000000 00000000 )
  678:  		Call     PlaySoundAtActor 	( .Actor:Self 00002034 )
  68C:  		Call     SetGoalToTarget 	( .Actor:Self )
  69C:  		Thread
  6A4:  			Call     SetAnimation 	( .Actor:Self 00000001 .AnimFlopAscend )
  6BC:  			Wait     0000000A 
  6C8:  			Call     SetAnimation 	( .Actor:Self 00000001 .AnimFlopDescend )
  6E0:  		EndThread
  6E8:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.0] )
  6FC:  		Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
  71C:  		Call     SetAnimation 	( .Actor:Self 00000001 .AnimDizzy )
  734:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  750:  		Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  76C:  		Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  78C:  		Call     LandJump ( FFFFFF81 )
  79C:  		Call     PlaySoundAtActor 	( .Actor:Self 0000029A )
  7B0:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  7CC:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  7E8:  		Call     AddGoalPos 	( .Actor:Self FFFFFFF1 00000000 00000000 )
  804:  		Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
  824:  		Call     PlaySoundAtActor 	( .Actor:Self 0000029A )
  838:  		Call     AddGoalPos 	( .Actor:Self FFFFFFF6 00000000 00000000 )
  854:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  874:  		Call     PlaySoundAtActor 	( .Actor:Self 0000029A )
  888:  		If  *Var[A]  ==  00000005 
  898:  			Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  8BC:  		EndIf
  8C4:  		Wait     0000000A 
  8D0:  		Call     UseBattleCamPreset 	( 00000002 )
  8E0:  		Call     YieldTurn   	( )
  8EC:  		Call     SetAnimation 	( .Actor:Self 00000001 .AnimRun )
  904:  		Call     SetGoalToHome 	( .Actor:Self )
  914:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  928:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  940:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  954:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  968:  		Return
  970:  	EndCaseGroup
  978:  EndSwitch
		%we didn't miss, what now?
  980:  Call     UseBattleCamPreset 	( 00000002 )
  990:  Call     MoveBattleCamOver 	( 0000000A )
  9A0:  Call     SetAnimation 	( .Actor:Self 00000001 .AnimFlopAscend )
  9B8:  Thread
  9C0:  	Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000C 00000000 )
  9DC:  	Set  *Var[0]  00000000 
  9EC:  	Loop     0000000A 
  9F8:  		Add  *Var[0]  00000024 
  A08:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  A24:  		Wait     00000001 
  A30:  	EndLoop
  A38:  	Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000014 )
  A54:  EndThread
		%resizing is gone
  D50:  Call     SetActorSounds ( FFFFFF81 00000002 00000000 00000000 )
  D6C:  Call     PlaySoundAtActor 	( .Actor:Self 00002034 )
		Call     SetTargetActor ( .Actor:Self .Actor:Player )
  D80:  Call     SetGoalToTarget 	( .Actor:Self )
		Call     AddGoalPos 	( .Actor:Self 0000000E 00000000 00000000 )
		Call     SetTargetActor ( .Actor:Self .Actor:Partner )
  D90:  Thread
  D98:  	Call     SetAnimation 	( .Actor:Self 00000001 .AnimFlopAscend )
  DB0:  	Wait     0000000A 
  DBC:  	Call     SetAnimation 	( .Actor:Self 00000001 .AnimFlopDescend )
  DD4:  EndThread
  DDC:  Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.6005859] )
		Call	 GetGoalPos ( .Actor:Self *Var[5] *Var[6] *Var[7] )
		Call	 SetGoalPos ( .Actor:Self *Var[5] 0` *Var[7] ) %correctly land on the ground
  DF0:  Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
  E10:  Call     SetAnimation 	( .Actor:Self 00000001 .AnimFlopDescend )
  E28:  Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  E44:  Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  E60:  Thread
  E68:  	Wait     00000003 
  E74:  	Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  E94:  EndThread
		Call     SetGoalToTarget 	( .Actor:Self )
  D50:  Call     SetActorSounds ( FFFFFF81 00000002 00000000 00000000 )
  D6C:  Call     PlaySoundAtActor 	( .Actor:Self 00002034 )
		Call     SetTargetActor ( .Actor:Self .Actor:Partner )
		Call     SetGoalToTarget 	( .Actor:Self )
		Thread
			Call     SetAnimation 	( .Actor:Self 00000001 .AnimFlopAscend )
			Wait     0000000A 
			Call     SetAnimation 	( .Actor:Self 00000001 .AnimFlopDescend )
		EndThread
		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.6005859] )
		Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
		Call     SetAnimation 	( .Actor:Self 00000001 .AnimFlopDescend )
		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
		Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
		Thread
			Wait     00000003 
			Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
		EndThread
  E9C:  Call     GetActorVar 	( .Actor:Self 00000001 *Var[A] )
  EB4:  Switch  *Var[A] 
  EC0:  	Case  ==  00000000 
  ECC:  		Wait     00000002 
  ED8:  		Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000002 00000020 )
  F00:  	Case  ==  00000001 
  F0C:  		Wait     00000002 
  F18:  		Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000002 00000000 00000000 00000003 00000020 ) %fire damage
  F80:  EndSwitch
  F88:  Switch  *Var[0] 
  F94:  	CaseOR  ==  00000000 
  FA0:  	CaseOR  ==  00000002 
  FAC:  		Call     SetAnimation 	( .Actor:Self 00000001 .AnimFlopDescend )
  FC4:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  FE0:  		Add  *Var[0]  0000003C 
  FF0:  		Set  *Var[1]  00000000 
 1000:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.4003906] )
 1014:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 1030:  		Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
 1050:  		Call     PlaySoundAtActor 	( .Actor:Self 0000029A )
 1064:  		Add  *Var[0]  0000001E 
 1074:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 1090:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
 10B0:  		Call     PlaySoundAtActor 	( .Actor:Self 0000029A )
 10C4:  		Add  *Var[0]  00000014 
 10D4:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 10F0:  		Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
 1110:  		Call     PlaySoundAtActor 	( .Actor:Self 0000029A )
 1124:  		Add  *Var[0]  0000000A 
 1134:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 1150:  		Call     JumpToGoal  	( .Actor:Self 00000004 00000000 00000001 00000000 )
 1170:  		Call     PlaySoundAtActor 	( .Actor:Self 0000029A )
 1184:  		Call     SetAnimation 	( .Actor:Self 00000001 .AnimIdle )
 119C:  		Wait     0000000F 
 11A8:  		Call     UseBattleCamPreset 	( 00000002 )
 11B8:  		Call     YieldTurn   	( )
 11C4:  		Call     SetAnimation 	( .Actor:Self 00000001 .AnimRun )
 11DC:  		Call     SetGoalToHome 	( .Actor:Self )
 11EC:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
 1200:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
 1218:  	EndCaseGroup
 1220:  EndSwitch
 1228:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
 123C:  Call     UseIdleAnimation 	( .Actor:Self .True )
 1250:  Return
 1258:  End
}

#new:Script $Script_Bellyflop3 %target both
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     UseBattleCamPreset 	( 0000003F )
   38:  Call     BattleCamTargetActor ( .Actor:Self )
   48:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   60:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   74:  Call     SetGoalToTarget 	( .Actor:Self )
   84:  Call     AddGoalPos 	( .Actor:Self 00000046 00000000 00000000 )
   A0:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   BC:  Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
   D8:  Sub  *Var[3]  *Var[0] 
   E8:  Div  *Var[3]  *Fixed[3.0] 
   F8:  Set  *Var[A]  *Var[3] 
  108:  If  *Var[A]  <  00000000 
  118:  	Mul  *Var[A]  FFFFFFFF 
  128:  EndIf
  130:  Call     MoveBattleCamOver 	( *Var[A] )
  140:  Call     SetAnimation 	( .Actor:Self 00000001 .AnimRun )
  158:  Call     RunToGoal   	( .Actor:Self *Var[A] .False )
  170:  Call     SetAnimation 	( .Actor:Self 00000001 .AnimIdle )
  188:  Wait     0000000A 
  194:  Call     UseBattleCamPreset 	( 00000008 )
  1A4:  Call     BattleCamTargetActor ( .Actor:Self )
  1B4:  Call     AddBattleCamZoom  	( FFFFFFCE )
  1C4:  Call     MoveBattleCamOver 	( 0000001E )
  1D4:  Call     8024ECF8 ( 00000001 00000001 00000001 )
  1EC:  Call     SetAnimation 	( .Actor:Self 00000001 .AnimFlopBuildup )
  204:  Wait     0000000A
		Call     SetTargetActor ( .Actor:Self .Actor:Player )
  234:  Call     EnemyTestTarget ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  258:  Switch  *Var[0] 
  264:  	CaseOR  ==  .HitResult:Miss % 6
  270:  	CaseOR  ==  .HitResult:Lucky % 5
  27C:  		Set  *Var[A]  *Var[0] 
  28C:  		Call     UseBattleCamPreset 	( 00000002 )
  29C:  		Call     MoveBattleCamOver 	( 00000014 )
  2AC:  		Call     SetAnimation 	( .Actor:Self 00000001 .AnimFlopAscend )
  2C4:  		Thread
  2CC:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000C 00000000 )
  2E8:  			Set  *Var[0]  00000000 
  2F8:  			Loop     0000000A 
  304:  				Add  *Var[0]  00000024 
  314:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  330:  				Wait     00000001 
  33C:  			EndLoop
  344:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000014 )
  360:  		EndThread
  368:  		Thread
  370:  			Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  388:  			Switch  *Var[0] 
  394:  				Case  ==  00000000 
  3A0:  					Wait     0000000D 
  3AC:  					Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  3CC:  					Wait     00000001 
  3D8:  					Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  3F8:  					Wait     00000001 
  404:  					Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  424:  					Wait     00000001 
  430:  					Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  450:  					Wait     00000001 
  45C:  					Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  47C:  				Case  ==  00000001 
  488:  					Wait     0000000D 
  494:  					Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.0507812] *Fixed[1.0507812] *Fixed[1.0507812] )
  4B4:  					Wait     00000001 
  4C0:  					Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.1005859] *Fixed[1.1005859] *Fixed[1.1005859] )
  4E0:  					Wait     00000001 
  4EC:  					Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.1503906] *Fixed[1.1503906] *Fixed[1.1503906] )
  50C:  					Wait     00000001 
  518:  					Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.2001953] *Fixed[1.2001953] *Fixed[1.2001953] )
  538:  					Wait     00000001 
  544:  					Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.25] *Fixed[1.25] *Fixed[1.25] )
  64C:  			EndSwitch
  654:  		EndThread
  65C:  		Call     SetActorSounds ( FFFFFF81 00000002 00000000 00000000 )
  678:  		Call     PlaySoundAtActor 	( .Actor:Self 00002034 )
  68C:  		Call     SetGoalToTarget 	( .Actor:Self )
  69C:  		Thread
  6A4:  			Call     SetAnimation 	( .Actor:Self 00000001 .AnimFlopAscend )
  6BC:  			Wait     0000000A 
  6C8:  			Call     SetAnimation 	( .Actor:Self 00000001 .AnimFlopDescend )
  6E0:  		EndThread
  6E8:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.0] )
  6FC:  		Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
  71C:  		Call     SetAnimation 	( .Actor:Self 00000001 .AnimDizzy )
  734:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  750:  		Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  76C:  		Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  78C:  		Call     LandJump ( FFFFFF81 )
  79C:  		Call     PlaySoundAtActor 	( .Actor:Self 0000029A )
  7B0:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  7CC:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  7E8:  		Call     AddGoalPos 	( .Actor:Self FFFFFFF1 00000000 00000000 )
  804:  		Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
  824:  		Call     PlaySoundAtActor 	( .Actor:Self 0000029A )
  838:  		Call     AddGoalPos 	( .Actor:Self FFFFFFF6 00000000 00000000 )
  854:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  874:  		Call     PlaySoundAtActor 	( .Actor:Self 0000029A )
  888:  		If  *Var[A]  ==  00000005 
  898:  			Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  8BC:  		EndIf
  8C4:  		Wait     0000000A 
  8D0:  		Call     UseBattleCamPreset 	( 00000002 )
  8E0:  		Call     YieldTurn   	( )
  8EC:  		Call     SetAnimation 	( .Actor:Self 00000001 .AnimRun )
  904:  		Call     SetGoalToHome 	( .Actor:Self )
  914:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  928:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  940:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  954:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  968:  		Return
  970:  	EndCaseGroup
  978:  EndSwitch
		%we didn't miss, what now?
  980:  Call     UseBattleCamPreset 	( 00000002 )
  990:  Call     MoveBattleCamOver 	( 0000000A )
  9A0:  Call     SetAnimation 	( .Actor:Self 00000001 .AnimFlopAscend )
  9B8:  Thread
  9C0:  	Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000C 00000000 )
  9DC:  	Set  *Var[0]  00000000 
  9EC:  	Loop     0000000A 
  9F8:  		Add  *Var[0]  00000024 
  A08:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  A24:  		Wait     00000001 
  A30:  	EndLoop
  A38:  	Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000014 )
  A54:  EndThread
		%resizing is gone
  D50:  Call     SetActorSounds ( FFFFFF81 00000002 00000000 00000000 )
  D6C:  Call     PlaySoundAtActor 	( .Actor:Self 00002034 )
		Call     SetTargetActor ( .Actor:Self .Actor:Player )
  D80:  Call     SetGoalToTarget 	( .Actor:Self )
  D90:  Thread
  D98:  	Call     SetAnimation 	( .Actor:Self 00000001 .AnimFlopAscend )
  DB0:  	Wait     0000000A 
  DBC:  	Call     SetAnimation 	( .Actor:Self 00000001 .AnimFlopDescend )
  DD4:  EndThread
  DDC:  Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.6005859] )
  DF0:  Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
  E10:  Call     SetAnimation 	( .Actor:Self 00000001 .AnimFlopDescend )
  E28:  Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  E44:  Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  E60:  Thread
  E68:  	Wait     00000003 
  E74:  	Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  E94:  EndThread
		Call     GetActorVar 	( .Actor:Self 00000001 *Var[A] )
		Switch  *Var[A] 
			Case  ==  00000000 
				Wait     00000002 
				Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000006 00000020 )
			Case  ==  00000001 
				Wait     00000002 
				Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000002 00000000 00000000 00000008 00000020 ) %fire damage
		EndSwitch
		Call     SetTargetActor ( .Actor:Self .Actor:Partner )
		Call     SetGoalToTarget 	( .Actor:Self )
		Call     SetActorSounds ( FFFFFF81 00000002 00000000 00000000 )
		Call     PlaySoundAtActor 	( .Actor:Self 00002034 )
		Call     SetTargetActor ( .Actor:Self .Actor:Partner )
		Call     SetGoalToTarget 	( .Actor:Self )
		Thread
			Call     SetAnimation 	( .Actor:Self 00000001 .AnimFlopAscend )
			Wait     0000000A 
			Call     SetAnimation 	( .Actor:Self 00000001 .AnimFlopDescend )
		EndThread
		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.6005859] )
		Call     EnemyTestTarget ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
		Switch *Var[0]
			CaseOR == 00000005
			CaseOR == 00000006
				Call	 GetGoalPos ( .Actor:Self *Var[5] *Var[6] *Var[7] )
				Call	 SetGoalPos ( .Actor:Self *Var[5] 0` *Var[7] ) %correctly land on the ground
				Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
				Call     SetAnimation 	( .Actor:Self 00000001 .AnimDizzy )
				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
				Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
				Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
				Call     LandJump ( FFFFFF81 )
				Call     PlaySoundAtActor 	( .Actor:Self 0000029A )
				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
				Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
				Call     AddGoalPos 	( .Actor:Self FFFFFFF1 00000000 00000000 )
				Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
				Call     PlaySoundAtActor 	( .Actor:Self 0000029A )
				Call     AddGoalPos 	( .Actor:Self FFFFFFF6 00000000 00000000 )
				Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
				Call     PlaySoundAtActor 	( .Actor:Self 0000029A )
				If  *Var[A]  ==  00000005 
					Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
				EndIf
				Wait     0000000A 
				Call     UseBattleCamPreset 	( 00000002 )
				Call     YieldTurn   	( )
				Call     SetAnimation 	( .Actor:Self 00000001 .AnimRun )
				Call     SetGoalToHome 	( .Actor:Self )
				Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
				Call     RunToGoal   	( .Actor:Self 00000000 .False )
				Call     EnableIdleScript 	( .Actor:Self 00000001 )
				Call     UseIdleAnimation 	( .Actor:Self .True )
				Return
			EndCaseGroup
		EndSwitch
		Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
		Call     SetAnimation 	( .Actor:Self 00000001 .AnimFlopDescend )
		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
		Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  E9C:  Call     GetActorVar 	( .Actor:Self 00000001 *Var[A] )
  EB4:  Switch  *Var[A] 
  EC0:  	Case  ==  00000000 
  ECC:  		Wait     00000002 
  ED8:  		Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000002 00000020 )
  F00:  	Case  ==  00000001 
  F0C:  		Wait     00000002 
  F18:  		Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000002 00000000 00000000 00000003 00000020 ) %fire damage
  F80:  EndSwitch
  F88:  Switch  *Var[0] 
  F94:  	CaseOR  ==  00000000 
  FA0:  	CaseOR  ==  00000002 
  FAC:  		Call     SetAnimation 	( .Actor:Self 00000001 .AnimFlopDescend )
  FC4:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  FE0:  		Add  *Var[0]  0000003C 
  FF0:  		Set  *Var[1]  00000000 
 1000:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.4003906] )
 1014:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 1030:  		Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
 1050:  		Call     PlaySoundAtActor 	( .Actor:Self 0000029A )
 1064:  		Add  *Var[0]  0000001E 
 1074:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 1090:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
 10B0:  		Call     PlaySoundAtActor 	( .Actor:Self 0000029A )
 10C4:  		Add  *Var[0]  00000014 
 10D4:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 10F0:  		Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
 1110:  		Call     PlaySoundAtActor 	( .Actor:Self 0000029A )
 1124:  		Add  *Var[0]  0000000A 
 1134:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 1150:  		Call     JumpToGoal  	( .Actor:Self 00000004 00000000 00000001 00000000 )
 1170:  		Call     PlaySoundAtActor 	( .Actor:Self 0000029A )
 1184:  		Call     SetAnimation 	( .Actor:Self 00000001 .AnimIdle )
 119C:  		Wait     0000000F 
 11A8:  		Call     UseBattleCamPreset 	( 00000002 )
 11B8:  		Call     YieldTurn   	( )
 11C4:  		Call     SetAnimation 	( .Actor:Self 00000001 .AnimRun )
 11DC:  		Call     SetGoalToHome 	( .Actor:Self )
 11EC:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
 1200:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
 1218:  	EndCaseGroup
 1220:  EndSwitch
 1228:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
 123C:  Call     UseIdleAnimation 	( .Actor:Self .True )
 1250:  Return
 1258:  End
}