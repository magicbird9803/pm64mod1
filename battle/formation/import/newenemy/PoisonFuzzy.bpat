#new:Function $Function_80218000_PF
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  DADDU     A0, S1, R0
   38:  JAL       ~Func:get_variable
   3C:  DADDU     S3, V0, R0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  DADDU     A0, S1, R0
   4C:  JAL       ~Func:get_variable
   50:  DADDU     S2, V0, R0
   54:  DADDU     A0, S1, R0
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  DADDU     S0, V0, R0
   64:  MTC1      S3, F12
   68:  NOP
   6C:  CVT.S.W   F12, F12
   70:  MTC1      S2, F14
   74:  NOP
   78:  CVT.S.W   F14, F14
   7C:  MTC1      S0, F0
   80:  NOP
   84:  CVT.S.W   F0, F0
   88:  MFC1      A2, F0
   8C:  JAL       802D7460
   90:  DADDU     A3, V0, R0
   94:  LW        RA, 20 (SP)
   98:  LW        S3, 1C (SP)
   9C:  LW        S2, 18 (SP)
   A0:  LW        S1, 14 (SP)
   A4:  LW        S0, 10 (SP)
   A8:  ADDIU     V0, R0, 2
   AC:  JR        RA
   B0:  ADDIU     SP, SP, 28
}

#new:Function $Function_802180B4_PF
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  DADDU     A0, S1, R0
   38:  JAL       ~Func:get_variable
   3C:  DADDU     S3, V0, R0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  DADDU     A0, S1, R0
   4C:  JAL       ~Func:get_variable
   50:  DADDU     S2, V0, R0
   54:  DADDU     A0, S1, R0
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  DADDU     S0, V0, R0
   64:  MTC1      S3, F12
   68:  NOP
   6C:  CVT.S.W   F12, F12
   70:  MTC1      S2, F14
   74:  NOP
   78:  CVT.S.W   F14, F14
   7C:  MTC1      S0, F0
   80:  NOP
   84:  CVT.S.W   F0, F0
   88:  MFC1      A2, F0
   8C:  JAL       802D74C0
   90:  DADDU     A3, V0, R0
   94:  LW        RA, 20 (SP)
   98:  LW        S3, 1C (SP)
   9C:  LW        S2, 18 (SP)
   A0:  LW        S1, 14 (SP)
   A4:  LW        S0, 10 (SP)
   A8:  ADDIU     V0, R0, 2
   AC:  JR        RA
   B0:  ADDIU     SP, SP, 28
}

#new:DefenseTable $DefenseTable_PFuzzy %$DefenseTable_802183C0
{
.Element:Normal 00000000
.Element:End
}

#new:StatusTable $StatusTable_PFuzzy %$StatusTable_802183CC
{
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      95`
.Status:Poison     90`
.Status:Frozen      0`
.Status:Dizzy      90`
.Status:Fear        0`
.Status:Static     70`
.Status:Paralyze   75`
.Status:Shrink     75`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End
}

#new:PartsTable $PartsTable_PFuzzy %$PartsTable_80218478
{
00800000 01000000 001400FF $IdleAnimations_PFuzzy $DefenseTable_PFuzzy 00000000 00000000 00F60000 00000000 
}

#new:Actor $PoisonFuzzy
{
% stats
[Index]        28b %was aqua fuzzy 
[Level]        11`b 
[MaxHP]         6`b 
[Coins]         1`b 
[Flags]       00000000 
[StatusTable] $StatusTable_PFuzzy 
% ai
[PartsCount]   1`s 
[PartsTable] $PartsTable_PFuzzy 
[Script]      $Script_Init_PFuzzy 
% move effectiveness
[Escape]       40`b 
[Item]         85`b 
[AirLift]      90`b 
[Hurricane]    90`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce] 100`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         33`b  28`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_PFuzzy %$IdleAnimations_802184C4
{
.Status:Normal    002B0201
.Status:Stone     002B0200
.Status:Sleep     002B020E
.Status:Poison    002B0201
.Status:Stop      002B0200
.Status:Static    002B0201
.Status:Paralyze  002B0200
.Status:Dizzy     002B020F
.Status:Fear      002B020F
.Status:End
}

#new:Script $Script_Init_PFuzzy %$Script_Init_80218510
{
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_PFuzzy )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_PFuzzy )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_PFuzzy )
   3C:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   54:  Return
   5C:  End
}

#new:Script $Script_Idle_PFuzzy %$Script_Idle_80218574
{
    0:  Return
    8:  End
}

#new:Script $Script_HandleEvent_PFuzzy %$Script_HandleEvent_80218584
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   44:  Call     SetActorDispOffset ( FFFFFF81 00000000 00000000 00000000 )
   60:  Call     GetLastEvent 	( .Actor:Self *Var[0] )
   74:  Switch  *Var[0] 
   80:  	CaseOR  ==  .Event:HitCombo
   8C:  	CaseOR  ==  .Event:Hit
   98:  		Call     GetLastElement ( *Var[0] )
   A8:  		If  *Var[0]  &  00000020 
   B8:  			SetConst  *Var[0]  00000001 
   C8:  			SetConst  *Var[1]  002B0213 
   D8:  		Else
   E0:  			SetConst  *Var[0]  00000001 
   F0:  			SetConst  *Var[1]  002B0208 
  100:  		EndIf
  108:  		ExecWait DoNormalHit 
  114:  	EndCaseGroup
  11C:  	Case  ==  .Event:BurnHit
  128:  		SetConst  *Var[0]  00000001 
  138:  		SetConst  *Var[1]  002B0210 
  148:  		SetConst  *Var[2]  002B0212 
  158:  		ExecWait DoBurnHit 
  164:  	Case  ==  .Event:BurnDeath
  170:  		SetConst  *Var[0]  00000001 
  180:  		SetConst  *Var[1]  002B0210 
  190:  		SetConst  *Var[2]  002B0212 
  1A0:  		ExecWait DoBurnHit 
  1AC:  		SetConst  *Var[0]  00000001 
  1BC:  		SetConst  *Var[1]  002B0212 
  1CC:  		ExecWait DoDeath 
  1D8:  		Return
  1E0:  	Case  ==  .Event:SpinSmashHit
  1EC:  		SetConst  *Var[0]  00000001 
  1FC:  		SetConst  *Var[1]  002B0208 
  20C:  		ExecWait 8029B998 
  218:  	Case  ==  .Event:SpinSmashDeath
  224:  		SetConst  *Var[0]  00000001 
  234:  		SetConst  *Var[1]  002B0208 
  244:  		ExecWait 8029B998 
  250:  		SetConst  *Var[0]  00000001 
  260:  		SetConst  *Var[1]  002B0208 
  270:  		ExecWait DoDeath 
  27C:  		Return
  284:  	Case  ==  .Event:ShockHit
  290:  		Call     80269470 ( )
  29C:  		SetConst  *Var[0]  00000001 
  2AC:  		SetConst  *Var[1]  002B0213 
  2BC:  		ExecWait DoShockHit 
  2C8:  		SetConst  *Var[0]  00000001 
  2D8:  		SetConst  *Var[1]  002B0213 
  2E8:  		ExecWait DoJumpBack 
  2F4:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  314:  		SetConst  *Var[0]  00000001 
  324:  		SetConst  *Var[1]  002B0203 
  334:  		ExecWait 8029C0A4 
  340:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.6005859] )
  354:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  374:  	Case  ==  .Event:ShockDeath
  380:  		Call     80269470 ( )
  38C:  		SetConst  *Var[0]  00000001 
  39C:  		SetConst  *Var[1]  002B0213 
  3AC:  		ExecWait DoShockHit 
  3B8:  		SetConst  *Var[0]  00000001 
  3C8:  		SetConst  *Var[1]  002B0213 
  3D8:  		ExecWait DoDeath 
  3E4:  		Return
  3EC:  	CaseOR  ==  00000017
  3F8:  	CaseOR  ==  .Event:Immune
  404:  		SetConst  *Var[0]  00000001 
  414:  		SetConst  *Var[1]  002B0201 
  424:  		ExecWait DoImmune 
  430:  	EndCaseGroup
  438:  	Case  ==  .Event:Death
  444:  		Call     GetLastElement ( *Var[0] )
  454:  		If  *Var[0]  &  00000020 
  464:  			SetConst  *Var[0]  00000001 
  474:  			SetConst  *Var[1]  002B0213 
  484:  			ExecWait DoNormalHit 
  490:  			Wait     0000000A 
  49C:  			SetConst  *Var[0]  00000001 
  4AC:  			SetConst  *Var[1]  002B0213 
  4BC:  			ExecWait DoDeath 
  4C8:  		Else
  4D0:  			SetConst  *Var[0]  00000001 
  4E0:  			SetConst  *Var[1]  002B0208 
  4F0:  			ExecWait DoNormalHit 
  4FC:  			Wait     0000000A 
  508:  			SetConst  *Var[0]  00000001 
  518:  			SetConst  *Var[1]  002B0208 
  528:  			ExecWait DoDeath 
  534:  		EndIf
  53C:  		Return
  544:  	Case  ==  .Event:RecoverStatus
  550:  		SetConst  *Var[0]  00000001 
  560:  		SetConst  *Var[1]  002B0201 
  570:  		ExecWait DoRecover 
  57C:  	Case  ==  .Event:ScareAway
  588:  		SetConst  *Var[0]  00000001 
  598:  		SetConst  *Var[1]  002B0203 
  5A8:  		SetConst  *Var[2]  002B0209 
  5B8:  		ExecWait DoScareAway 
  5C4:  		Return
  5CC:  	Case  ==  .Event:BeginAirLift
  5D8:  		SetConst  *Var[0]  00000001 
  5E8:  		SetConst  *Var[1]  002B0203 
  5F8:  		ExecWait DoAirLift 
  604:  	Case  ==  .Event:BlowAway
  610:  		SetConst  *Var[0]  00000001 
  620:  		SetConst  *Var[1]  002B0203 
  630:  		ExecWait DoBlowAway 
  63C:  		Return
  644:  	Case  ==  .Event:AirLiftFailed
  650:  		SetConst  *Var[0]  00000001 
  660:  		SetConst  *Var[1]  002B0201 
  670:  		ExecWait DoImmune 
  67C:  	Default
  684:  EndSwitch
  68C:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  6A0:  Call     UseIdleAnimation 	( .Actor:Self .True )
  6B4:  Return
  6BC:  End
}

#new:Script $Script_PF_Summon %$Script_80218C48
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     UseBattleCamPreset 	( 00000013 )
   38:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   54:  Call     SetBattleCamTarget 	( *Var[0] *Var[1] *Var[2] )
   6C:  Call     SetBattleCamZoom  	( 0000014A )
   7C:  Call     SetBattleCamOffsetZ 	( 0000001E )
   8C:  Call     MoveBattleCamOver 	( 00000014 )
   9C:  Wait     00000014 
   A8:  Call     SetActorDispOffset ( FFFFFF81 00000000 00000000 00000000 )
   C4:  Call     UseBattleCamPreset 	( 00000001 )
   D4:  Thread
   DC:  	Wait     0000001E 
   E8:  	Call     PlaySoundAtActor 	( .Actor:Self 0000206E )
   FC:  	Wait     0000001E 
  108:  	Loop     00000004 
  114:  		Call     PlaySoundAtActor 	( .Actor:Self 0000206F )
  128:  		Wait     0000000B 
  134:  	EndLoop
  13C:  	Call     PlaySoundAtActor 	( .Actor:Self 00002070 )
  150:  EndThread
  158:  Call     SetAnimation 	( .Actor:Self 00000001 002B020D )
  170:  Wait     00000082 
  17C:  Call     SetAnimation 	( .Actor:Self 00000001 002B0202 )
  194:  Call     SummonEnemy 	( $SpecialFormation_PFuzzy 00000000 )
  1A8:  Call     GetActorPos 	( .Actor:Self *Var[1] *Var[2] *Var[3] )
  1C4:  Call     SetActorPos 	( *Var[0] *Var[1] *Var[2] *Var[3] )
  1E0:  Call     SetGoalToIndex ( *Var[0] *Var[A] )
  1F4:  Call     UseBattleCamPreset 	( 00000002 )
  204:  Call     MoveBattleCamOver 	( 00000014 )
  214:  Thread
  21C:  	Call     SetAnimation 	( .Actor:Self 00000001 002B0202 )
  234:  	Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.4003906] )
  248:  	Call     GetActorPos 	( .Actor:Self *Var[1] *Var[2] *Var[3] )
  264:  	Call     SetGoalPos 	( .Actor:Self *Var[1] *Var[2] *Var[3] )
  280:  	Call     JumpToGoal  	( .Actor:Self 0000000E 00000000 00000001 00000000 )
  2A0:  EndThread
  2A8:  Wait     00000001 
  2B4:  Call     SetAnimation 	( *Var[0] 00000001 002B0202 )
  2CC:  Call     SetActorJumpGravity 	( *Var[0] *Fixed[1.4003906] )
  2E0:  Call     JumpToGoal  	( *Var[0] 0000000E 00000000 00000001 00000000 )
  300:  Call     GetActorPos 	( *Var[0] *Var[1] *Var[2] *Var[3] )
  31C:  Call     ForceHomePos 	( *Var[0] *Var[1] *Var[2] *Var[3] )
  338:  Call     HPBarToHome 	( *Var[0] )
  348:  Call     SetAnimation 	( *Var[0] 00000001 002B0201 )
  360:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[1] )
  378:  Switch  *Var[1] 
  384:  	Case  ==  00000000 
  390:  		Call     SetActorVar 	( *Var[0] 00000000 00000001 )
  3A8:  	Case  ==  00000001 
  3B4:  		Call     SetActorVar 	( *Var[0] 00000000 00000002 )
  3CC:  EndSwitch
  3D4:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  3E8:  Call     UseIdleAnimation 	( .Actor:Self .True )
  3FC:  Return
  404:  End
}

#new:Script $Script_PF_Siphon %$Script_80219054
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     UseBattleCamPreset 	( 0000003F )
   38:  Call     BattleCamTargetActor ( .Actor:Self )
   48:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   60:  Call     GetBattlePhase ( *Var[0] )
   70:  If  *Var[0]  ==  .Phase:FirstStrike
   80:  	Call     SetGoalToTarget 	( .Actor:Self )
   90:  	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   AC:  	Add  *Var[0]  00000032 
   BC:  	Set  *Var[1]  00000000 
   CC:  	Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   E8:  	Goto     00000064 
   F4:  EndIf
   FC:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
  110:  Call     SetAnimation 	( .Actor:Self 00000001 002B0203 )
  128:  Call     SetGoalToTarget 	( .Actor:Self )
  138:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  154:  Add  *Var[0]  00000032 
  164:  Set  *Var[1]  00000000 
  174:  Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  188:  Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.8007812] )
  19C:  ExecWait 8029C12C 
  1A8:  Call     SetAnimation 	( .Actor:Self 00000001 002B0201 )
  1C0:  Label    00000064 
  1CC:  Call     SetActorDispOffset ( FFFFFF81 00000000 0000000A 00000000 )
  1E8:  Call     SetAnimation 	( .Actor:Self 00000001 002B0204 )
  200:  Call     SetActorDispOffset ( FFFFFF81 00000000 00000009 00000000 )
  21C:  Wait     00000001 
  228:  Call     SetActorDispOffset ( FFFFFF81 00000000 00000008 00000000 )
  244:  Wait     00000005 
  250:  Call     EnemyTestTarget ( .Actor:Self *Var[0] 08000000 00000000 00000001 00000010 )
  274:  Switch  *Var[0] 
  280:  	CaseOR  ==  00000006 
  28C:  	CaseOR  ==  00000005 
  298:  		Set  *Var[A]  *Var[0] 
  2A8:  		Call     SetGoalToTarget 	( .Actor:Self )
  2B8:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2D4:  		Sub  *Var[0]  00000005 
  2E4:  		Set  *Var[1]  00000000 
  2F4:  		Sub  *Var[2]  00000005 
  304:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[3.0] )
  318:  		Call     SetAnimation 	( .Actor:Self 00000001 002B0205 )
  330:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  34C:  		Call     JumpToGoal  	( .Actor:Self 0000000B 00000000 00000001 00000000 )
  36C:  		Call     SetActorDispOffset ( FFFFFF81 00000000 00000000 00000000 )
  388:  		Call     SetAnimation 	( .Actor:Self 00000001 002B0209 )
  3A0:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3BC:  		Sub  *Var[0]  00000014 
  3CC:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[3.0] )
  3E0:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3FC:  		Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
  41C:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  438:  		Sub  *Var[0]  0000000F 
  448:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[3.0] )
  45C:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  478:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  498:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4B4:  		Wait     00000004 
  4C0:  		Wait     00000005 
  4CC:  		If  *Var[A]  ==  00000005 
  4DC:  			Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  500:  		EndIf
  508:  		Wait     00000005 
  514:  		Call     UseBattleCamPreset 	( 00000002 )
  524:  		Call     YieldTurn   	( )
  530:  		Call     SetActorYaw 	( .Actor:Self 000000B4 )
  544:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  560:  		Call     SetAnimation 	( .Actor:Self 00000001 002B0203 )
  578:  		Call     SetGoalToHome 	( .Actor:Self )
  588:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  5A4:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  5B8:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.8007812] )
  5CC:  		ExecWait 8029C12C 
  5D8:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  5F0:  		Call     SetActorYaw 	( .Actor:Self 00000000 )
  604:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  618:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  62C:  		Return
  634:  	EndCaseGroup
  63C:  	Case  ==  00000007 
  648:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  65C:  		If  *Var[0]  &  00002000 
  66C:  			Set  *Flag[00]  00000000 
  67C:  		Else
  684:  			Set  *Flag[00]  00000001 
  694:  		EndIf
  69C:  EndSwitch
  6A4:  Call     SetGoalToTarget 	( .Actor:Self )
  6B4:  Call     AddGoalPos 	( .Actor:Self FFFFFFFD FFFFFFF4 FFFFFFF1 )
  6D0:  Call     SetActorJumpGravity 	( .Actor:Self *Fixed[3.0] )
  6E4:  Call     SetAnimation 	( .Actor:Self 00000001 002B0205 )
  6FC:  Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  71C:  If  *Flag[00]  ==  00000001 
  72C:  	Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 08000000 00000000 80020364 00000000 00000020 ) %zaptap hit gives you 3 poison turns
  754:  	Return
  75C:  EndIf
  764:  Wait     0000000A 
  770:  Call     UseIdleAnimation 	( .Actor:Player .False )
  784:  Call     SetAnimation 	( .Actor:Player 00000000 0003000C )
  79C:  Call     PlaySoundAtActor 	( .Actor:Self 000003E0 )
  7B0:  Call     SetAnimation 	( .Actor:Self 00000001 002B0207 )
  7C8:  Wait     00000015 
  7D4:  Call     SetAnimation 	( .Actor:Self 00000001 002B0200 )
  7EC:  Call     SetActorRotation 	( .Actor:Self 00000000 00000000 0000014A )
  808:  Call     PlaySoundAtActor 	( .Actor:Self 000003E0 )
  81C:  Call     SetActorDispOffset ( FFFFFF81 FFFFFFFD FFFFFFFE 00000000 )
  838:  Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  854:  Wait     00000001 
  860:  Call     SetActorScale 	( .Actor:Self *Fixed[0.9003906] *Fixed[1.2001953] *Fixed[1.0] )
  87C:  Wait     00000001 
  888:  Call     SetActorScale 	( .Actor:Self *Fixed[0.80078125] *Fixed[1.3007812] *Fixed[1.0] )
  8A4:  Wait     00000001 
  8B0:  Call     SetActorScale 	( .Actor:Self *Fixed[0.7001953] *Fixed[1.4003906] *Fixed[1.0] )
  8CC:  Wait     00000001 
  8D8:  Call     SetActorScale 	( .Actor:Self *Fixed[0.7001953] *Fixed[1.5] *Fixed[1.0] )
  8F4:  Wait     00000002 
  900:  Call     SetActorScale 	( .Actor:Self *Fixed[0.60058594] *Fixed[1.6005859] *Fixed[1.0] )
  91C:  Wait     0000000A 
  928:  Wait     00000002 
  934:  Call     UseIdleAnimation 	( .Actor:Player .True )
  948:  Call     EnemyDamageTarget 	( .Actor:Self *Var[A] 08000000 00000000 80020264 00000003 00000020 ) %3 + 2 poison turns
  970:  Call     SetActorDispOffset ( FFFFFF81 00000000 00000000 00000000 )
  98C:  Call     SetAnimation 	( .Actor:Self 00000001 002B0201 )
  9A4:  Call     UseBattleCamPreset 	( 00000002 )
  9B4:  Call     GetLastDamage 	( .Actor:Player *Var[3] )
		Mul *Var[3] 6 %so if damage = 1, then it's a full heal
  9C8:  If  *Var[3]  !=  00000000 
  9D8:  	Call     PlaySoundAtActor 	( .Actor:Self 0000206D )
  9EC:  	Call     PlaySoundAtActor 	( .Actor:Self 00000214 )
  A00:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  A1C:  	Add  *Var[1]  0000000A 
  A2C:  	Call     $Function_80218000_PF ( *Var[0] *Var[1] *Var[2] *Var[3] )
  A48:  	Thread
  A50:  		Wait     0000000F 
  A5C:  		Call     PlaySoundAtActor 	( .Actor:Self 0000025C )
  A70:  		Call     $Function_802180B4_PF ( *Var[0] *Var[1] *Var[2] *Var[3] )
  A8C:  	EndThread
  A94:  	Add  *Var[0]  00000014 
  AA4:  	Add  *Var[1]  00000014 
  AB4:  	Call     PlayEffect  	( ~FX:Recover:HP *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  AF8:  	Call     GetActorHP  	( .Actor:Self *Var[0] )
  B0C:  	Add  *Var[0]  *Var[3] 
  B1C:  	Call     SetEnemyHP  	( .Actor:Self *Var[0] )
  B30:  EndIf
  B38:  Thread
  B40:  	Call     SetActorScale 	( .Actor:Self *Fixed[1.6005859] *Fixed[0.60058594] *Fixed[1.0] )
  B5C:  	Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000A 00000000 )
  B78:  	Wait     00000001 
  B84:  	Call     SetActorRotation 	( .Actor:Self 00000000 00000000 0000014A )
  BA0:  	Wait     00000001 
  BAC:  	Call     SetActorScale 	( .Actor:Self *Fixed[0.7001953] *Fixed[1.5] *Fixed[1.0] )
  BC8:  	Call     SetActorRotation 	( .Actor:Self 00000000 00000000 0000012C )
  BE4:  	Wait     00000001 
  BF0:  	Call     SetActorRotation 	( .Actor:Self 00000000 00000000 0000010E )
  C0C:  	Wait     00000001 
  C18:  	Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[0.7001953] *Fixed[1.0] )
  C34:  	Call     SetActorRotation 	( .Actor:Self 00000000 00000000 000000F0 )
  C50:  	Wait     00000001 
  C5C:  	Call     SetActorRotation 	( .Actor:Self 00000000 00000000 000000D2 )
  C78:  	Wait     00000001 
  C84:  	Call     SetActorScale 	( .Actor:Self *Fixed[0.7001953] *Fixed[1.4003906] *Fixed[1.0] )
  CA0:  	Call     SetActorRotation 	( .Actor:Self 00000000 00000000 000000B4 )
  CBC:  	Wait     00000002 
  CC8:  	Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[0.7001953] *Fixed[1.0] )
  CE4:  	Wait     00000002 
  CF0:  	Call     SetActorScale 	( .Actor:Self *Fixed[1.2001953] *Fixed[0.5] *Fixed[1.0] )
  D0C:  EndThread
  D14:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  D30:  Add  *Var[0]  00000028 
  D40:  Set  *Var[1]  00000000 
  D50:  Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.8007812] )
  D64:  Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  D80:  Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  DA0:  Call     SetActorScale 	( .Actor:Self *Fixed[1.4003906] *Fixed[0.20019531] *Fixed[1.0] )
  DBC:  Wait     00000001 
  DC8:  Thread
  DD0:  	Wait     00000001 
  DDC:  	Call     SetActorScale 	( .Actor:Self *Fixed[1.2001953] *Fixed[0.5] *Fixed[1.0] )
  DF8:  	Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000096 )
  E14:  	Wait     00000001 
  E20:  	Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  E3C:  	Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000078 )
  E58:  	Wait     00000001 
  E64:  	Call     SetActorRotation 	( .Actor:Self 00000000 00000000 0000005A )
  E80:  	Wait     00000001 
  E8C:  	Call     SetActorRotation 	( .Actor:Self 00000000 00000000 0000003C )
  EA8:  	Wait     00000001 
  EB4:  	Call     SetActorRotation 	( .Actor:Self 00000000 00000000 0000001E )
  ED0:  	Wait     00000001 
  EDC:  	Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  EF8:  	Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  F14:  EndThread
  F1C:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  F38:  Add  *Var[0]  0000001E 
  F48:  Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  F64:  Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  F84:  Wait     00000005 
  F90:  Call     YieldTurn   	( )
  F9C:  Call     SetActorDispOffset ( FFFFFF81 00000000 00000000 00000000 )
  FB8:  Call     SetAnimation 	( .Actor:Self 00000001 002B0203 )
  FD0:  Call     SetGoalToHome 	( .Actor:Self )
  FE0:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  FFC:  Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
 1010:  Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.8007812] )
 1024:  ExecWait 8029C12C 
 1030:  Call     SetAnimation 	( .Actor:Self 00000001 002B0201 )
 1048:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
 105C:  Call     UseIdleAnimation 	( .Actor:Self .True )
 1070:  Return
 1078:  End
}

#new:Script $Script_8021A0D4_PF %$Script_8021A0D4
{
    0:  Set  *Flag[01]  00000000 
   10:  Set  *Flag[02]  00000000 
   20:  Set  *Flag[03]  00000000 
   30:  Set  *Flag[04]  00000000 
   40:  Call     EnemyCreateTargetList 	( 00008002 )
   50:  Call     InitTargetIterator 	( )
   5C:  Label    00000000 
   68:  Call     GetOwnerTarget ( *Var[0] *Var[5] )
   7C:  Call     GetIndexFromHome 	( *Var[0] *Var[5] )
   90:  Mod  *Var[5]  00000004 
   A0:  Switch  *Var[5] 
   AC:  	Case  ==  00000000 
   B8:  		Set  *Flag[01]  00000001 
   C8:  	Case  ==  00000001 
   D4:  		Set  *Flag[02]  00000001 
   E4:  	Case  ==  00000002 
   F0:  		Set  *Flag[03]  00000001 
  100:  	Case  ==  00000003 
  10C:  		Set  *Flag[04]  00000001 
  11C:  EndSwitch
  124:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  138:  If  *Var[0]  !=  FFFFFFFF 
  148:  	Goto     00000000 
  154:  EndIf
  15C:  Set  *Var[A]  FFFFFFFF 
  16C:  Set  *Var[B]  FFFFFFFF 
  17C:  Call     GetIndexFromHome 	( .Actor:Self *Var[0] )
  190:  Switch  *Var[0] 
  19C:  	Case  ==  00000000 
  1A8:  		If  *Flag[02]  ==  00000000 
  1B8:  			Set  *Var[A]  00000001 
  1C8:  		EndIf
  1D0:  	Case  ==  00000001 
  1DC:  		If  *Flag[01]  ==  00000000 
  1EC:  			Set  *Var[A]  00000000 
  1FC:  		EndIf
  204:  		If  *Flag[03]  ==  00000000 
  214:  			If  *Var[A]  ==  FFFFFFFF 
  224:  				Set  *Var[A]  00000002 
  234:  			Else
  23C:  				Set  *Var[B]  00000002 
  24C:  			EndIf
  254:  		EndIf
  25C:  	Case  ==  00000002 
  268:  		If  *Flag[02]  ==  00000000 
  278:  			Set  *Var[A]  00000001 
  288:  		EndIf
  290:  		If  *Flag[04]  ==  00000000 
  2A0:  			If  *Var[A]  ==  FFFFFFFF 
  2B0:  				Set  *Var[A]  00000003 
  2C0:  			Else
  2C8:  				Set  *Var[B]  00000003 
  2D8:  			EndIf
  2E0:  		EndIf
  2E8:  	Case  ==  00000003 
  2F4:  		If  *Flag[03]  ==  00000000 
  304:  			Set  *Var[A]  00000002 
  314:  		EndIf
  31C:  EndSwitch
  324:  If  *Var[B]  !=  FFFFFFFF 
  334:  	Call     RandInt     	( 000003E8 *Var[0] )
  348:  	If  *Var[0]  <  000001F4 
  358:  		Set  *Var[A]  *Var[B] 
  368:  	EndIf
  370:  EndIf
  378:  Return
  380:  End
}

#new:Script $Script_8021A45C_PF %$Script_8021A45C
{
    0:  Set  *Var[9]  00000000 
   10:  Call     EnemyCreateTargetList 	( 00008002 )
   20:  Call     InitTargetIterator 	( )
   2C:  Label    00000000 
   38:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
   4C:  Call     GetOriginalActorType 	( *Var[0] *Var[2] )
   60:  Switch  *Var[2] 
   6C:  	CaseOR  ==  0000001A 
			CaseOR  ==  00000028
   78:  	CaseOR  ==  00000029 
   84:  		Call     GetStatusFlags ( *Var[0] *Var[3] )
   98:  		If  *Var[3]  !&  0035D000 
   A8:  			Call     GetActorVar 	( *Var[0] 00000000 *Var[3] )
   C0:  			If  *Var[3]  !=  00000002 
   D0:  				Add  *Var[9]  00000001 
   E0:  			EndIf
   E8:  		EndIf
   F0:  	EndCaseGroup
   F8:  	Case  ==  0000002A 
  104:  		Call     GetStatusFlags ( *Var[0] *Var[3] )
  118:  		If  *Var[3]  !&  0035D000 
  128:  			Call     GetActorVar 	( *Var[0] 00000001 *Var[3] )
  140:  			If  *Var[3]  <  00000002 
  150:  				Add  *Var[9]  00000001 
  160:  			EndIf
  168:  		EndIf
  170:  EndSwitch
  178:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  18C:  If  *Var[0]  !=  FFFFFFFF 
  19C:  	Goto     00000000 
  1A8:  EndIf
  1B0:  Return
  1B8:  End
}

#new:Script $Script_TakeTurn_PFuzzy %$Script_TakeTurn_8021A61C
{
    0:  Call     GetBattlePhase ( *Var[0] )
   10:  If  *Var[0]  ==  .Phase:FirstStrike
   20:  	ExecWait $Script_PF_Siphon 
   2C:  	Return
   34:  EndIf
   3C:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   54:  If  *Var[0]  ==  00000002 
   64:  	ExecWait $Script_PF_Siphon 
   70:  	Return
   78:  EndIf
   80:  ExecWait $Script_8021A0D4_PF 
   8C:  If  *Var[A]  ==  FFFFFFFF 
   9C:  	ExecWait $Script_PF_Siphon 
   A8:  	Return
   B0:  EndIf
   B8:  ExecWait $Script_8021A45C_PF 
   C4:  Switch  *Var[9] %summoning chances (they are greatly increased)
   D0:  	Case  ==  00000001 
   DC:  		Call     RandInt     	( 000003E8 *Var[0] ) %out of 1000
   F0:  		If  *Var[0]  <  000002EE %75% (was 30%)
  100:  			ExecWait $Script_PF_Summon 
  10C:  			Return
  114:  		EndIf
  11C:  	Case  ==  00000002 
  128:  		Call     RandInt     	( 000003E8 *Var[0] )
  13C:  		If  *Var[0]  <  000001F4 %50% (was 15%)
  14C:  			ExecWait $Script_PF_Summon 
  158:  			Return
  160:  		EndIf
  168:  	Case  ==  00000003 
  174:  		Call     RandInt     	( 000003E8 *Var[0] )
  188:  		If  *Var[0]  <  00000064 %10% -> 10% (no change)
  198:  			ExecWait $Script_PF_Summon 
  1A4:  			Return
  1AC:  		EndIf
  1B4:  EndSwitch
  1BC:  ExecWait $Script_PF_Siphon 
  1C8:  Return
  1D0:  End
}

#new:Vector3D $Vector3D_Down %$Vector3D_8021A7F4
{
0` -1000` 0`
}

#new:SpecialFormation $SpecialFormation_PFuzzy
{
$PoisonFuzzy $Vector3D_Down 00000000 00000000 00000000 00000000 00000000 
}