%lets see how many dark partners I can fit in one file
%If things go well I can put them in the same formation as Dark Mario without having to use shenanigans
%Well I was able to put them all in the same file and also with Dark Mario :D

/%
goombario	10/20/30
	true Hp = 60
kooper		10/20/25
	true Hp = 50
bombette	15/25/35
	true Hp = 70
parakarry	10/15/25
	true Hp = 50
bow			15/20/30
	true Hp = 60
watt		10/15/20
	true Hp = 40
sushie		20/30/40
	true Hp = 80
lakilester	15/25/35
	true Hp = 70
	
buzzatrice  10/15/25
	true HP = 50
%/

%To do: potentially fix the sleep anims and stuff
%	Im using some of the focus anims which are close enough

%Statuses ver 1
%	Each status should hit 3-4 of them (stop should work more often)
%	Avoid status overlap (so that you can use different statuses to stun most of them)
%	shrink
%		goombario
%		watt
%		lakilester
%	sleep
%		parakarry
%		bow
%		sushie
%	dizzy
%		parakarry
%		bombette
%		lakilester
%	paralyze
%		kooper
%		bombette
%		bow		
%	stop
%		goombario
%		kooper
%		watt
%		sushie

%Attempt 2
%	Try to keep status overlap to a minimum
%	Each status should hit 4-5 of them 
%	each one should be vulnerable to 3 statuses
/%
	shrink
		goombario (0)
		kooper (1)
		bow (1)
		watt (0)
		lakilester (1)
	sleep
		kooper (0)
		bombette (1)
		parakarry (0)
		watt (0)
		sushie (1)
	dizzy
		parakarry (0)
		bow (2)
		watt (1) 
		sushie (2)
		lakilester (0)
	paralyze
		goombario (1)
		bombette (1)
		bow (0)
		sushie (0)
	stop (not much logic I can apply here)
		goombario (0)
		kooper (1)
		bombette (0)
		parakarry (1)
		lakilester (1)
%/


%Trying to rank how effective each status "should" be against different partners
%	these probably have bad justifications so they might be subject to change
/%
	list
		goombario
		kooper
		bombette
		parakarry
		bow
		watt
		sushie
		lakilester
	shrink
		watt (0)
		goombario (0)
		lakilester (1)
		bow (1)
		kooper (1)
		parakarry (1)
		sushie (3)
		bombette (3)
	sleep
		watt (0)
		sushie (1)
		parakarry (0)
		kooper (0)
		goombario (2)
		bombette (1)
		lakilester (3)
		bow (3)
	dizzy
		lakilester (0)
		watt (1) 
		parakarry (0)
		sushie (2)
		bow (2)
		bombette (1)
		goombario (3)
		kooper (2)
	paralyze
		sushie (0)
		bow (0)
		goombario (1)
		lakilester (2)
		kooper (1)
		parakarry (1)
		bombette (2)
		watt (2)
	stop (not much logic I can apply here)
		watt (0)
		goombario (0)
		lakilester (1)
		bombette (0)
		kooper (1)
		parakarry (1)
		sushie (3)
		bow (3)
%/


%Dark goombario: 60 hp, 4x2 atk, 0 def
%	Will not use tattle (no free turn for you)
%	Can use charge to permanently raise attack power by 3
%	Can also use megabonk for 12 damage
%AI:
%	headbonk (megabonk if mario HP < 50%)	(4x4 damage)
%	charge (headbonk if attack power >= 6)	(+3 atk)
%	megabonk 								(12 damage)

%Dark kooper: 50 hp, 6 atk, 1 def
%	Gets up and attacks on same turn
%	Has fire shell
%	Can use dizzy shell :) 
%AI:
%	shell toss										(6 damage)
%	fire shell (dizzy shell if partner is stunned)	(8/3 damage)
%	dizzy shell (shell toss if mario is dizzy)		(5 damage but 100%/2 turn dizzy)

%Dark bombette: 70 hp, 6 atk, 1 def
%	Body slam rarely used
%	Can use bomb for 8 damage
%		shrink bomb does 5/1 and 100% shrink
%		mega bomb does 9/3
%AI:
%	mega bomb (regular bomb if partner is stunned)	%(8/3 damage) (body slam: 6)
%	body slam										%(6 damage)
%	shrink bomb										%(5 + shrink/1 damage)

%Dark parakarry: 50 hp, 7 atk, 1 def
%	Sky dive does 7
%	Shell shot does 9
%		Will do shell shot if he is zapped with zap tap
%	Air lift does 12 unblockable
%		*does shell shot if it fails
%AI:
%	sky dive										%(7 damage)
%	shell shot										%(10 damage)
%	air lift										%(9 or 0 damage)

%Dark bow: 60 hp, 2x6 atk, 0 def
%	If smack does less than 6 damage, she will avoid using it for the rest of battle
%	Fan smack does 3x5 and each hit has dizzy proc (100% 1)
%	Spook does 6 damage and 2 turn stop
%AI:
%	Smack (skip this if conditions are met, see above)	%(2x6 damage!)
%	Fan smack											%(3x5 damage + dizzy)
%	Spook												%(10 + stop)

%Dark watt: 40 hp, 5 atk, 0 def
%	Can do charge wave and charge bolt
%AI:
%	Electro dash										%(5 damage)
%	Charge bolt (skip if mario is stunned)				%(12 damage + 2 turn paralyze)
%	Charge wave (skip if partner is stunned)			%(8/3 damage + 1 turn paralyze)

%Dark sushie: 80 hp, 5 atk, 0 def
%	Belly flop removes battle commands
%	squirt does 9 damage (with 1 turn poison)
%	water block -> poison block (poisons for 3 turns)
%AI:
%	Poison block										%(7 damage + 3 turn poison)
%	Squirt												%(7 damage + 1 turn poison)
%	Belly flop											%(5 damage + remove options)

%Dark lakilester: 70 hp, 6 atk, 0 def
%	Spiny surge does 7/2
%	Hurricane does 6/3 and has 2 turn ice proc
%AI:
%	Hurricane											%(6+2 turn freeze / 3 damage)
%	Spiny surge											%(7/2 damage)
%	Spiny toss											%(6 damage)

%Dark buzzatrice: 50 hp, 5 atk, 3 def
%	Power beam does 7 base (+1 per charge level)
%		^	Charging has consequences but you can still do it if you want
%	Can use Hustle spell to give dark mario a bonus turn (actually any target other than herself)
%AI
%	Magic blast											%(5 damage)
%	Power beam											%(7 damage + stop)
%	Hustle spell										%??? (~10 damage?)


%I won't use all of the stuff from here but I still need some of it
#import tools/ActionSteal.bpat 

#new:Vector3D $Vector3D_Down
{
0` -1000` 0`
}

#new:SpecialFormation $SpecialFormation_Goombario
{
$DarkGoombario $Vector3D_Down 00000000 00000000 00000000 00000000
}

#new:SpecialFormation $SpecialFormation_Kooper
{
$DarkKooper $Vector3D_Down 00000000 00000000 00000000 00000000
}

#new:SpecialFormation $SpecialFormation_Bombette
{
$DarkBombette $Vector3D_Down 00000000 00000000 00000000 00000000
}

#new:SpecialFormation $SpecialFormation_Parakarry
{
$DarkParakarry $Vector3D_Down 00000000 00000000 00000000 00000000
}

#new:ConstDouble $ConstDouble_80228400
{
47.000000d
}

#new:ConstDouble $ConstDouble_80228408
{
1.120000d
}

#new:ConstDouble $ConstDouble_80228410
{
0.530000d
}

#new:ConstDouble $ConstDouble_80228418
{
47.000000d
}

#new:ConstDouble $ConstDouble_80228420
{
0.800000d
}

#new:ConstDouble $ConstDouble_80228428
{
0.530000d
}

#new:ConstDouble $ConstDouble_80228430
{
0.800000d
}

#new:ConstDouble $ConstDouble_80228438
{
16.500000d
}

#new:ConstDouble $ConstDouble_80228440
{
33.000000d
}

#new:ConstDouble $ConstDouble_80228448
{
4.800000d
}

#new:Function $Function_802180D0
{
    0:  ADDIU		SP, SP, FFB8
    4:  SW			S4, 20 (SP)
    8:  COPY		S4, A0
    C:  SW			S0, 10 (SP)
   10:  SW			RA, 24 (SP)
   14:  SW			S3, 1C (SP)
   18:  SW			S2, 18 (SP)
   1C:  SW			S1, 14 (SP)
   20:  SDC1		F26, 40 (SP)
   24:  SDC1		F24, 38 (SP)
   28:  SDC1		F22, 30 (SP)
   2C:  SDC1		F20, 28 (SP)
   30:  LW			A0, 148 (S4)
   34:  LW			S2, C (S4)
   38:  JAL			~Func:get_actor
   3C:  COPY		S0, A1
   40:  COPY		S3, V0
   44:  BEQ			S0, R0, .o8C
   48:  ADDIU		S1, S3, C
   4C:  LW			A1, 0 (S2)
   50:  ADDIU		S2, S2, 4
   54:  JAL			~Func:get_variable
   58:  COPY		A0, S4
   5C:  SH			V0, 70 (S3)
   60:  LW			A1, 0 (S2)
   64:  JAL			~Func:get_variable
   68:  COPY		A0, S4
   6C:  SH			V0, 72 (S3)
   70:  SW			R0, 74 (S4)
   74:  SW			R0, 70 (S4)
   78:  LH			V1, 72 (S3)
   7C:  ADDIU		V0, R0, 1
   80:  BNE			V1, V0, .o8C
   84:  ADDIU		V0, R0, 2
   88:  SW			V0, 70 (S4)
        .o8C
   8C:  LW			V0, 70 (S4)
   90:  BNE			V0, R0, .o470
   94:  NOP
   98:  LWC1		F0, 144 (S3)
   9C:  LWC1		F24, C (S1)
   A0:  LWC1		F26, 14 (S1)
   A4:  SWC1		F0, 0 (S1)
   A8:  LWC1		F0, 148 (S3)
   AC:  MFC1		A2, F24
   B0:  MFC1		A3, F26
   B4:  LWC1		F22, 0 (S1)
   B8:  SWC1		F0, 4 (S1)
   BC:  LWC1		F20, 14C (S3)
   C0:  MOV.S		F12, F22
   C4:  MOV.S		F14, F20
   C8:  JAL			80029C80
   CC:  SWC1		F20, 8 (S1)
   D0:  MOV.S		F12, F22
   D4:  MFC1		A2, F24
   D8:  MFC1		A3, F26
   DC:  MOV.S		F14, F20
   E0:  JAL			~Func:dist2D
   E4:  SWC1		F0, 48 (S1)
   E8:  LH			V0, 64 (S1)
   EC:  MOV.S		F4, F0
   F0:  BNE			V0, R0, .o13C
   F4:  SWC1		F4, 4C (S1)
   F8:  LWC1		F0, 40 (S1)
   FC:  LWC1		F2, 40 (S1)
  100:  DIV.S		F0, F4, F0
  104:  TRUNC.W.S	F10, F0
  108:  MFC1		V1, F10
  10C:  NOP
  110:  SLL			V0, V1, 10
  114:  SRA			V0, V0, 10
  118:  MTC1		V0, F0
  11C:  NOP
  120:  CVT.S.W		F0, F0
  124:  MUL.S		F0, F0, F2
  128:  NOP
  12C:  MOV.S		F2, F4
  130:  SH			V1, 64 (S1)
  134:  BEQ			R0, R0, .o170
  138:  SUB.S		F8, F2, F0
        .o13C
  13C:  MTC1		V0, F2
  140:  NOP
  144:  CVT.S.W		F2, F2
  148:  LH			V0, 64 (S1)
  14C:  DIV.S		F2, F4, F2
  150:  MTC1		V0, F0
  154:  NOP
  158:  CVT.S.W		F0, F0
  15C:  MUL.S		F0, F0, F2
  160:  NOP
  164:  LWC1		F4, 4C (S1)
  168:  SWC1		F2, 40 (S1)
  16C:  SUB.S		F8, F4, F0
        .o170
  170:  LH			V1, 64 (S1)
  174:  BEQ			V1, R0, .o860
  178:  ADDIU		V0, R0, 2
  17C:  LH			V0, 64 (S1)
  180:  LWC1		F2, C (S1)
  184:  LIO			AT, 40490FD0
  18C:  MTC1		AT, F0
  190:  LWC1		F4, 0 (S1)
  194:  MTC1		V0, F6
  198:  NOP
  19C:  CVT.S.W		F6, F6
  1A0:  DIV.S		F0, F0, F6
  1A4:  SUB.S		F2, F2, F4
  1A8:  SWC1		F0, 3C (S1)
  1AC:  MTC1		V1, F0
  1B0:  NOP
  1B4:  CVT.S.W		F0, F0
  1B8:  DIV.S		F2, F2, F0
  1BC:  LWC1		F0, 10 (S1)
  1C0:  SWC1		F2, 30 (S1)
  1C4:  LWC1		F2, 4 (S1)
  1C8:  SW			R0, 44 (S1)
  1CC:  SUB.S		F0, F0, F2
  1D0:  LWC1		F4, 14 (S1)
  1D4:  MOV.S		F2, F6
  1D8:  DIV.S		F0, F0, F2
  1DC:  SWC1		F0, 34 (S1)
  1E0:  MOV.S		F0, F6
  1E4:  DIV.S		F0, F8, F0
  1E8:  LWC1		F2, 8 (S1)
  1EC:  LH			V0, 66 (S1)
  1F0:  SUB.S		F4, F4, F2
  1F4:  LWC1		F2, 40 (S1)
  1F8:  SLTI		V0, V0, 3
  1FC:  ADD.S		F2, F2, F0
  200:  DIV.S		F4, F4, F6
  204:  SWC1		F4, 38 (S1)
  208:  BEQ			V0, R0, .o320
  20C:  SWC1		F2, 40 (S1)
  210:  LH			V0, 64 (S1)
  214:  ADDIU		V1, R0, 168
  218:  BNE			V0, R0, .o224
  21C:  DIV			V1, V0
  220:  BREAK		1C00
        .o224
  224:  ADDIU		AT, R0, FFFF
  228:  BNE			V0, AT, .o23C
  22C:  LUI			AT, 8000
  230:  BNE			V1, AT, .o23C
  234:  NOP
  238:  BREAK		1800
        .o23C
  23C:  MFLO		V1
  240:  LWC1		F8, 4C (S1)
  244:  LIF			F3, 2.8125
  24C:  MTC1		R0, F2
  250:  CVT.D.S		F0, F8
  254:  SUB.D		F0, F0, F2
  258:  LIF			F3, 2.375
  260:  MTC1		R0, F2
  264:  CVT.S.D		F8, F0
  268:  CVT.D.S		F0, F8
  26C:  DIV.D		F0, F0, F2
  270:  CVT.S.D		F8, F0
  274:  LAD			F2, $ConstDouble_80228400
  27C:  CVT.D.S		F0, F8
  280:  ADD.D		F0, F0, F2
  284:  LIF			F2, 90.0
  28C:  CVT.S.D		F8, F0
  290:  MTC1		V1, F0
  294:  NOP
  298:  CVT.S.W		F0, F0
  29C:  LH			V1, 66 (S1)
  2A0:  ADDIU		V0, R0, 2
  2A4:  SWC1		F2, 24 (S1)
  2A8:  SWC1		F8, 50 (S1)
  2AC:  BNE			V1, V0, .o2D0
  2B0:  SWC1		F0, 28 (S1)
  2B4:  LAD			F2, $ConstDouble_80228408
  2BC:  CVT.D.S		F0, F8
  2C0:  MUL.D		F0, F0, F2
  2C4:  NOP
  2C8:  CVT.S.D		F0, F0
  2CC:  SWC1		F0, 50 (S1)
        .o2D0
  2D0:  LWC1		F12, 24 (S1)
  2D4:  LIO			AT, 40C90FD0
  2DC:  MTC1		AT, F0
  2E0:  LWC1		F20, 44 (S1)
  2E4:  LWC1		F22, 3C (S1)
  2E8:  SW			R0, 18 (S1)
  2EC:  MUL.S		F12, F12, F0
  2F0:  NOP
  2F4:  SW			R0, 1C (S1)
  2F8:  CVT.D.S		F20, F20
  2FC:  LIF			F0, 360.0
  304:  CVT.D.S		F22, F22
  308:  JAL			~Func:sin_rad
  30C:  DIV.S		F12, F12, F0
  310:  LAD			F2, $ConstDouble_80228410
  318:  BEQ			R0, R0, .o430
  31C:  CVT.D.S		F0, F0
        .o320
  320:  LH			V0, 64 (S1)
  324:  ADDIU		V1, R0, 168
  328:  BNE			V0, R0, .o334
  32C:  DIV			V1, V0
  330:  BREAK		1C00
        .o334
  334:  ADDIU		AT, R0, FFFF
  338:  BNE			V0, AT, .o34C
  33C:  LUI			AT, 8000
  340:  BNE			V1, AT, .o34C
  344:  NOP
  348:  BREAK		1800
        .o34C
  34C:  MFLO		V1
  350:  LWC1		F8, 4C (S1)
  354:  LIF			F3, 2.8125
  35C:  MTC1		R0, F2
  360:  CVT.D.S		F0, F8
  364:  SUB.D		F0, F0, F2
  368:  LIF			F3, 2.375
  370:  MTC1		R0, F2
  374:  CVT.S.D		F8, F0
  378:  CVT.D.S		F0, F8
  37C:  DIV.D		F0, F0, F2
  380:  CVT.S.D		F8, F0
  384:  LAD			F2, $ConstDouble_80228418
  38C:  CVT.D.S		F0, F8
  390:  ADD.D		F0, F0, F2
  394:  LIF			F2, 90.0
  39C:  CVT.S.D		F8, F0
  3A0:  MTC1		V1, F0
  3A4:  NOP
  3A8:  CVT.S.W		F0, F0
  3AC:  LH			V1, 66 (S1)
  3B0:  ADDIU		V0, R0, 4
  3B4:  SWC1		F2, 24 (S1)
  3B8:  SWC1		F8, 50 (S1)
  3BC:  BNE			V1, V0, .o3E4
  3C0:  SWC1		F0, 28 (S1)
  3C4:  LIF			F3, 1.90625
  3CC:  MTC1		R0, F2
  3D0:  CVT.D.S		F0, F8
  3D4:  MUL.D		F0, F0, F2
  3D8:  NOP
  3DC:  CVT.S.D		F0, F0
  3E0:  SWC1		F0, 50 (S1)
        .o3E4
  3E4:  LWC1		F12, 24 (S1)
  3E8:  LIO			AT, 40C90FD0
  3F0:  MTC1		AT, F0
  3F4:  LWC1		F20, 44 (S1)
  3F8:  LWC1		F22, 3C (S1)
  3FC:  SW			R0, 18 (S1)
  400:  MUL.S		F12, F12, F0
  404:  NOP
  408:  SW			R0, 1C (S1)
  40C:  CVT.D.S		F20, F20
  410:  LIF			F0, 360.0
  418:  CVT.D.S		F22, F22
  41C:  JAL			~Func:sin_rad
  420:  DIV.S		F12, F12, F0
  424:  LAD			F2, $ConstDouble_80228420
  42C:  CVT.D.S		F0, F0
        .o430
  430:  MUL.D		F0, F0, F2
  434:  NOP
  438:  MUL.D		F0, F0, F22
  43C:  NOP
  440:  ADD.D		F0, F0, F22
  444:  ADD.D		F20, F20, F0
  448:  CVT.S.D		F20, F20
  44C:  SWC1		F20, 44 (S1)
  450:  ADDIU		A0, R0, FF81
  454:  LW			A2, 58 (S1)
  458:  JAL			~Func:set_animation
  45C:  ADDIU		A1, R0, 1
  460:  JAL			 ~Func:sfx_play_sound
  464:  ADDIU		A0, R0, 2081
  468:  ADDIU		V0, R0, 1
  46C:  SW			V0, 70 (S4)
        .o470
  470:  LW			V1, 70 (S4)
  474:  ADDIU		V0, R0, 2
  478:  BEQ			V1, V0, .o6D0
  47C:  ADDIU		V0, R0, 1
  480:  SLTI		V0, V1, 3
  484:  BEQ			V0, R0, .o49C
  488:  ADDIU		V0, R0, 1
  48C:  BEQ			V1, V0, .o4B0
  490:  CLEAR		V0
  494:  BEQ			R0, R0, .o860
  498:  NOP
        .o49C
  49C:  ADDIU		V0, R0, 3
  4A0:  BEQ			V1, V0, .o78C
  4A4:  CLEAR		V0
  4A8:  BEQ			R0, R0, .o860
  4AC:  NOP
        .o4B0
  4B0:  LWC1		F2, 44 (S1)
  4B4:  LIO			AT, 3FC90FD0
  4BC:  MTC1		AT, F0
  4C0:  NOP
  4C4:  C.LT.S		F0, F2
  4C8:  NOP
  4CC:  BC1F		.o4E0
  4D0:  ADDIU		A0, R0, FF81
  4D4:  LW			A2, 5C (S1)
  4D8:  JAL			~Func:set_animation
  4DC:  ADDIU		A1, R0, 1
        .o4E0
  4E0:  LWC1		F6, 0 (S1)
  4E4:  LWC1		F0, 30 (S1)
  4E8:  LWC1		F4, 4 (S1)
  4EC:  LWC1		F22, 144 (S3)
  4F0:  ADD.S		F6, F6, F0
  4F4:  LWC1		F0, 34 (S1)
  4F8:  LWC1		F2, 38 (S1)
  4FC:  ADD.S		F4, F4, F0
  500:  LWC1		F0, 8 (S1)
  504:  LWC1		F20, 148 (S3)
  508:  ADD.S		F0, F0, F2
  50C:  SWC1		F6, 0 (S1)
  510:  SWC1		F4, 4 (S1)
  514:  SWC1		F0, 8 (S1)
  518:  LWC1		F0, 148 (S3)
  51C:  MOV.S		F2, F6
  520:  SWC1		F0, 18 (S1)
  524:  SWC1		F2, 144 (S3)
  528:  JAL			~Func:sin_rad
  52C:  LWC1		F12, 44 (S1)
  530:  LWC1		F2, 50 (S1)
  534:  MUL.S		F2, F2, F0
  538:  NOP
  53C:  LWC1		F0, 4 (S1)
  540:  ADD.S		F0, F0, F2
  544:  SWC1		F0, 148 (S3)
  548:  LWC1		F0, 8 (S1)
  54C:  SWC1		F0, 14C (S3)
  550:  LWC1		F2, 10 (S1)
  554:  LWC1		F0, 148 (S3)
  558:  C.LT.S		F0, F2
  55C:  NOP
  560:  BC1F		.o580
  564:  MOV.S		F12, F22
  568:  LH			V0, 64 (S1)
  56C:  SLTI		V0, V0, 3
  570:  BNEL		V0, R0, .o57C
  574:  SWC1		F2, 148 (S3)
  578:  MOV.S		F12, F22
        .o57C
  57C:  LWC1		F0, 148 (S3)
        .o580
  580:  LW			A2, 144 (S3)
  584:  NEG.S		F0, F0
  588:  MFC1		A3, F0
  58C:  JAL			80029C80
  590:  NEG.S		F14, F20
  594:  NEG.S		F0, F0
  598:  SWC1		F0, 164 (S3)
  59C:  LH			V0, 66 (S1)
  5A0:  LWC1		F0, 148 (S3)
  5A4:  SLTI		V0, V0, 3
  5A8:  BEQ			V0, R0, .o5F8
  5AC:  SWC1		F0, 1C (S1)
  5B0:  LWC1		F12, 24 (S1)
  5B4:  LIO			AT, 40C90FD0
  5BC:  MTC1		AT, F0
  5C0:  LWC1		F20, 44 (S1)
  5C4:  MUL.S		F12, F12, F0
  5C8:  NOP
  5CC:  LWC1		F22, 3C (S1)
  5D0:  CVT.D.S		F20, F20
  5D4:  LIF			F0, 360.0
  5DC:  CVT.D.S		F22, F22
  5E0:  JAL			~Func:sin_rad
  5E4:  DIV.S		F12, F12, F0
  5E8:  LAD			F2, $ConstDouble_80228428
  5F0:  BEQ			R0, R0, .o63C
  5F4:  CVT.D.S		F0, F0
        .o5F8
  5F8:  LWC1		F12, 24 (S1)
  5FC:  LIO			AT, 40C90FD0
  604:  MTC1		AT, F0
  608:  LWC1		F20, 44 (S1)
  60C:  MUL.S		F12, F12, F0
  610:  NOP
  614:  LWC1		F22, 3C (S1)
  618:  CVT.D.S		F20, F20
  61C:  LIF			F0, 360.0
  624:  CVT.D.S		F22, F22
  628:  JAL			~Func:sin_rad
  62C:  DIV.S		F12, F12, F0
  630:  LAD			F2, $ConstDouble_80228430
  638:  CVT.D.S		F0, F0
        .o63C
  63C:  MUL.D		F0, F0, F2
  640:  NOP
  644:  MUL.D		F0, F0, F22
  648:  NOP
  64C:  ADD.D		F0, F0, F22
  650:  ADD.D		F20, F20, F0
  654:  CVT.S.D		F20, F20
  658:  SWC1		F20, 44 (S1)
  65C:  LWC1		F12, 24 (S1)
  660:  LWC1		F0, 28 (S1)
  664:  ADD.S		F12, F12, F0
  668:  JAL			~Func:clamp_angle
  66C:  SWC1		F12, 24 (S1)
  670:  LHU			V0, 64 (S1)
  674:  SWC1		F0, 24 (S1)
  678:  ADDIU		V0, V0, FFFF
  67C:  SH			V0, 64 (S1)
  680:  SLL			V0, V0, 10
  684:  BNE			V0, R0, .o860
  688:  CLEAR		V0
  68C:  LWC1		F0, 10 (S1)
  690:  ADDIU		A0, R0, FF81
  694:  SWC1		F0, 148 (S3)
  698:  LWC1		F0, 18 (S1)
  69C:  LWC1		F2, 1C (S1)
  6A0:  LW			A2, 60 (S1)
  6A4:  SUB.S		F0, F0, F2
  6A8:  LIO			AT, 3FE66666
  6B0:  MTC1		AT, F2
  6B4:  ADDIU		A1, R0, 1
  6B8:  SWC1		F2, 3C (S1)
  6BC:  NEG.S		F0, F0
  6C0:  JAL			~Func:set_animation
  6C4:  SWC1		F0, 44 (S1)
  6C8:  BEQ			R0, R0, .o860
  6CC:  ADDIU		V0, R0, 1
        .o6D0
  6D0:  SH			V0, 64 (S1)
  6D4:  LH			V0, 64 (S1)
  6D8:  ADDIU		V1, R0, 168
  6DC:  BNE			V0, R0, .o6E8
  6E0:  DIV			V1, V0
  6E4:  BREAK		1C00
        .o6E8
  6E8:  ADDIU		AT, R0, FFFF
  6EC:  BNE			V0, AT, .o700
  6F0:  LUI			AT, 8000
  6F4:  BNE			V1, AT, .o700
  6F8:  NOP
  6FC:  BREAK		1800
        .o700
  700:  MFLO		V1
  704:  LWC1		F2, 18 (S1)
  708:  LWC1		F0, 1C (S1)
  70C:  LIO			AT, 3FE66666
  714:  MTC1		AT, F8
  718:  LWC1		F4, 1C (S1)
  71C:  SUB.S		F2, F2, F0
  720:  LWC1		F0, 18 (S1)
  724:  LIF			F6, 90.0
  72C:  SUB.S		F0, F0, F4
  730:  SWC1		F8, 3C (S1)
  734:  SWC1		F6, 24 (S1)
  738:  NEG.S		F2, F2
  73C:  SWC1		F2, 44 (S1)
  740:  LAD			F2, $ConstDouble_80228438
  748:  ABS.S		F0, F0
  74C:  CVT.D.S		F0, F0
  750:  DIV.D		F0, F0, F2
  754:  CVT.S.D		F0, F0
  758:  SWC1		F0, 50 (S1)
  75C:  MTC1		V1, F0
  760:  NOP
  764:  CVT.S.W		F0, F0
  768:  SWC1		F0, 28 (S1)
  76C:  LWC1		F0, 144 (S3)
  770:  SWC1		F0, 0 (S1)
  774:  LWC1		F0, 148 (S3)
  778:  SWC1		F0, 4 (S1)
  77C:  LWC1		F0, 14C (S3)
  780:  ADDIU		V0, R0, 3
  784:  SWC1		F0, 8 (S1)
  788:  SW			V0, 70 (S4)
        .o78C
  78C:  LWC1		F12, 24 (S1)
  790:  LIO			AT, 40C90FD0
  798:  MTC1		AT, F22
  79C:  NOP
  7A0:  MUL.S		F12, F12, F22
  7A4:  NOP
  7A8:  LWC1		F20, 0 (S1)
  7AC:  LIF			F24, 360.0
  7B4:  CVT.D.S		F20, F20
  7B8:  JAL			~Func:sin_rad
  7BC:  DIV.S		F12, F12, F24
  7C0:  LWC1		F2, 50 (S1)
  7C4:  MUL.S		F2, F2, F0
  7C8:  NOP
  7CC:  LWC1		F12, 24 (S1)
  7D0:  MUL.S		F12, F12, F22
  7D4:  NOP
  7D8:  LAD			F0, $ConstDouble_80228440
  7E0:  CVT.D.S		F2, F2
  7E4:  DIV.D		F2, F2, F0
  7E8:  ADD.D		F20, F20, F2
  7EC:  DIV.S		F12, F12, F24
  7F0:  CVT.S.D		F20, F20
  7F4:  JAL			~Func:sin_rad
  7F8:  SWC1		F20, 0 (S1)
  7FC:  LWC1		F2, 50 (S1)
  800:  MUL.S		F2, F2, F0
  804:  NOP
  808:  LWC1		F12, 24 (S1)
  80C:  LWC1		F0, 28 (S1)
  810:  ADD.S		F12, F12, F0
  814:  LWC1		F0, 4 (S1)
  818:  SUB.S		F0, F0, F2
  81C:  SWC1		F12, 24 (S1)
  820:  JAL			~Func:clamp_angle
  824:  SWC1		F0, 4 (S1)
  828:  LWC1		F2, 0 (S1)
  82C:  SWC1		F0, 24 (S1)
  830:  SWC1		F2, 144 (S3)
  834:  LWC1		F0, 4 (S1)
  838:  SWC1		F0, 148 (S3)
  83C:  LWC1		F0, 8 (S1)
  840:  SWC1		F0, 14C (S3)
  844:  LHU			V1, 64 (S1)
  848:  ADDIU		V1, V1, FFFF
  84C:  SH			V1, 64 (S1)
  850:  SLL			V1, V1, 10
  854:  BEQ			V1, R0, .o860
  858:  ADDIU		V0, R0, 1
  85C:  CLEAR		V0
        .o860
  860:  LW			RA, 24 (SP)
  864:  LW			S4, 20 (SP)
  868:  LW			S3, 1C (SP)
  86C:  LW			S2, 18 (SP)
  870:  LW			S1, 14 (SP)
  874:  LW			S0, 10 (SP)
  878:  LDC1		F26, 40 (SP)
  87C:  LDC1		F24, 38 (SP)
  880:  LDC1		F22, 30 (SP)
  884:  LDC1		F20, 28 (SP)
  888:  JR			RA
  88C:  ADDIU		SP, SP, 48
}

#new:Function $Function_80218960
{
    0:  ADDIU		SP, SP, FFC8
    4:  SW			S2, 20 (SP)
    8:  COPY		S2, A0
    C:  SW			RA, 28 (SP)
   10:  SW			S3, 24 (SP)
   14:  SW			S1, 1C (SP)
   18:  SW			S0, 18 (SP)
   1C:  SDC1		F20, 30 (SP)
   20:  LW			A0, 148 (S2)
   24:  JAL			~Func:get_actor
   28:  COPY		S0, A1
   2C:  COPY		S1, V0
   30:  BEQ			S0, R0, .o3C
   34:  ADDIU		S3, S1, C
   38:  SW			R0, 70 (S2)
        .o3C
   3C:  LW			V0, 70 (S2)
   40:  BNE			V0, R0, .o64
   44:  ADDIU		V0, R0, 1
   48:  LWC1		F0, 144 (S1)
   4C:  LWC1		F2, 148 (S1)
   50:  LWC1		F4, 14C (S1)
   54:  SWC1		F0, C (S1)
   58:  SWC1		F2, 10 (S1)
   5C:  SWC1		F4, 14 (S1)
   60:  SW			V0, 70 (S2)
        .o64
   64:  LWC1		F0, 50 (S1)
   68:  MTC1		R0, F20
   6C:  NOP
   70:  C.LT.S		F20, F0
   74:  NOP
   78:  BC1F		.o90
   7C:  ADDIU		A0, R0, FF81
   80:  LW			A2, 64 (S1)
   84:  JAL			~Func:set_animation
   88:  ADDIU		A1, R0, 1
   8C:  LWC1		F0, 50 (S1)
        .o90
   90:  C.LT.S		F0, F20
   94:  NOP
   98:  BC1F		.oAC
   9C:  ADDIU		A0, R0, FF81
   A0:  LW			A2, 68 (S1)
   A4:  JAL			~Func:set_animation
   A8:  ADDIU		A1, R0, 1
        .oAC
   AC:  LWC1		F4, 10 (S1)
   B0:  LWC1		F0, 50 (S1)
   B4:  LW			A1, 4C (S1)
   B8:  ADD.S		F4, F4, F0
   BC:  LWC1		F2, 48 (S1)
   C0:  LW			A2, 54 (S1)
   C4:  SUB.S		F0, F0, F2
   C8:  COPY		A0, S3
   CC:  SWC1		F4, 10 (S1)
   D0:  JAL			80264128
   D4:  SWC1		F0, 50 (S1)
   D8:  LWC1		F0, 10 (S1)
   DC:  LWC1		F2, 14 (S1)
   E0:  SWC1		F0, 148 (S1)
   E4:  LWC1		F0, C (S1)
   E8:  LWC1		F4, 148 (S1)
   EC:  SWC1		F2, 14C (S1)
   F0:  C.LT.S		F4, F20
   F4:  NOP
   F8:  BC1T		.o108
   FC:  SWC1		F0, 144 (S1)
  100:  BEQ			R0, R0, .o134
  104:  CLEAR		V0
        .o108
  108:  LWC1		F0, 18C (S1)
  10C:  SWC1		F20, 148 (S1)
  110:  SWC1		F0, 10 (SP)
  114:  LW			A1, 144 (S1)
  118:  LW			A2, 148 (S1)
  11C:  LW			A3, 14C (S1)
  120:  JAL			~Func:play_movement_dust_effects	%~Func:create_dust_effect
  124:  ADDIU		A0, R0, 2
  128:  JAL			 ~Func:sfx_play_sound
  12C:  ADDIU		A0, R0, 148
  130:  ADDIU		V0, R0, 1
        .o134
  134:  LW			RA, 28 (SP)
  138:  LW			S3, 24 (SP)
  13C:  LW			S2, 20 (SP)
  140:  LW			S1, 1C (SP)
  144:  LW			S0, 18 (SP)
  148:  LDC1		F20, 30 (SP)
  14C:  JR			RA
  150:  ADDIU		SP, SP, 38
}

#new:Function $Function_80218C44
{
    0:  ADDIU		SP, SP, FFD8
    4:  SW			S1, 14 (SP)
    8:  COPY		S1, A0
    C:  SW			RA, 20 (SP)
   10:  SW			S3, 1C (SP)
   14:  SW			S2, 18 (SP)
   18:  SW			S0, 10 (SP)
   1C:  LW			S0, C (S1)
   20:  LW			A1, 0 (S0)
   24:  JAL			~Func:get_variable
   28:  ADDIU		S0, S0, 4
   2C:  LW			A1, 0 (S0)
   30:  ADDIU		S0, S0, 4
   34:  COPY		A0, S1
   38:  JAL			~Func:get_variable
   3C:  COPY		S3, V0
   40:  LW			A1, 0 (S0)
   44:  ADDIU		S0, S0, 4
   48:  COPY		A0, S1
   4C:  JAL			~Func:get_variable
   50:  COPY		S2, V0
   54:  COPY		A0, S1
   58:  LW			A1, 0 (S0)
   5C:  JAL			~Func:get_variable
   60:  COPY		S0, V0
   64:  LW			A0, 148 (S1)
   68:  JAL			~Func:get_actor
   6C:  COPY		S1, V0
   70:  COPY		V1, V0
   74:  LW			V0, 8 (V1)
   78:  LBU			V0, 24 (V0)
   7C:  LW			A0, 8 (V1)
   80:  SUBU		S3, S3, V0
   84:  SB			S3, 194 (V1)
   88:  LBU			V0, 25 (A0)
   8C:  SUBU		S2, S2, V0
   90:  SB			S2, 195 (V1)
   94:  LBU			V0, 26 (A0)
   98:  SUBU		S0, S0, V0
   9C:  SB			S0, 196 (V1)
   A0:  LBU			A0, 27 (A0)
   A4:  SUBU		S1, S1, A0
   A8:  SB			S1, 197 (V1)
   AC:  LW			RA, 20 (SP)
   B0:  LW			S3, 1C (SP)
   B4:  LW			S2, 18 (SP)
   B8:  LW			S1, 14 (SP)
   BC:  LW			S0, 10 (SP)
   C0:  ADDIU		V0, R0, 2
   C4:  JR			RA
   C8:  ADDIU		SP, SP, 28
}

#new:Function $Function_80218D10
{
    0:  ADDIU		SP, SP, FFD8
    4:  SW			RA, 24 (SP)
    8:  SW			S2, 20 (SP)
    C:  SW			S1, 1C (SP)
   10:  SW			S0, 18 (SP)
   14:  LW			A0, 148 (A0)
   18:  JAL			~Func:get_actor
   1C:  COPY		S0, A1
   20:  COPY		S1, V0
   24:  BEQ			S0, R0, .o44
   28:  ADDIU		S2, S1, C
   2C:  LWC1		F0, 144 (S1)
   30:  LWC1		F2, 148 (S1)
   34:  LWC1		F4, 14C (S1)
   38:  SWC1		F0, C (S1)
   3C:  SWC1		F2, 10 (S1)
   40:  SWC1		F4, 14 (S1)
        .o44
   44:  LW			A1, 4C (S1)
   48:  LW			A2, 54 (S1)
   4C:  JAL			80264128
   50:  COPY		A0, S2
   54:  LWC1		F2, 4C (S1)
   58:  LIF			F0, 4.0
   60:  NOP
   64:  C.LT.S		F2, F0
   68:  NOP
   6C:  BC1F		.o8C
   70:  CLEAR		A0
   74:  LWC1		F0, 54 (S1)
   78:  SWC1		F0, 10 (SP)
   7C:  LW			A1, C (S1)
   80:  LW			A2, 10 (S1)
   84:  BEQ			R0, R0, .oA4
   88:  LW			A3, 14 (S1)
        .o8C
   8C:  LWC1		F0, 54 (S1)
   90:  SWC1		F0, 10 (SP)
   94:  LW			A1, C (S1)
   98:  LW			A2, 10 (S1)
   9C:  LW			A3, 14 (S1)
   A0:  ADDIU		A0, R0, 1
        .oA4
   A4:  JAL			~Func:play_movement_dust_effects    %~Func:create_dust_effect
   A8:  NOP
   AC:  LWC1		F0, 40 (S2)
   B0:  LIF			F3, 1.9375
   B8:  MTC1		R0, F2
   BC:  CVT.D.S		F0, F0
   C0:  DIV.D		F0, F0, F2
   C4:  LWC1		F2, 0 (S2)
   C8:  CVT.S.D		F0, F0
   CC:  SWC1		F0, 40 (S2)
   D0:  SWC1		F2, 144 (S1)
   D4:  LWC1		F0, 4 (S2)
   D8:  SWC1		F0, 148 (S1)
   DC:  LWC1		F0, 8 (S2)
   E0:  SWC1		F0, 14C (S1)
   E4:  LWC1		F0, 40 (S2)
   E8:  LIF			F3, 1.875
   F0:  MTC1		R0, F2
   F4:  CVT.D.S		F0, F0
   F8:  C.LT.D		F0, F2
   FC:  NOP
  100:  BC1T		.o10C
  104:  ADDIU		V0, R0, 2
  108:  CLEAR		V0
        .o10C
  10C:  LW			RA, 24 (SP)
  110:  LW			S2, 20 (SP)
  114:  LW			S1, 1C (SP)
  118:  LW			S0, 18 (SP)
  11C:  JR			RA
  120:  ADDIU		SP, SP, 28
}

#new:Function $Function_80218E34
{
    0:  ADDIU		SP, SP, FFD8
    4:  SW			RA, 24 (SP)
    8:  SW			S2, 20 (SP)
    C:  SW			S1, 1C (SP)
   10:  SW			S0, 18 (SP)
   14:  LW			A0, 148 (A0)
   18:  JAL			~Func:get_actor
   1C:  COPY		S0, A1
   20:  COPY		S1, V0
   24:  BEQ			S0, R0, .o44
   28:  ADDIU		S2, S1, C
   2C:  LWC1		F0, 144 (S1)
   30:  LWC1		F2, 148 (S1)
   34:  LWC1		F4, 14C (S1)
   38:  SWC1		F0, C (S1)
   3C:  SWC1		F2, 10 (S1)
   40:  SWC1		F4, 14 (S1)
        .o44
   44:  LW			A1, 4C (S1)
   48:  LW			A2, 54 (S1)
   4C:  JAL			80264128
   50:  COPY		A0, S2
   54:  LWC1		F2, 4C (S1)
   58:  LIF			F0, 4.0
   60:  NOP
   64:  C.LT.S		F2, F0
   68:  NOP
   6C:  BC1F		.o8C
   70:  CLEAR		A0
   74:  LWC1		F0, 54 (S1)
   78:  SWC1		F0, 10 (SP)
   7C:  LW			A1, C (S1)
   80:  LW			A2, 10 (S1)
   84:  BEQ			R0, R0, .oA4
   88:  LW			A3, 14 (S1)
        .o8C
   8C:  LWC1		F0, 54 (S1)
   90:  SWC1		F0, 10 (SP)
   94:  LW			A1, C (S1)
   98:  LW			A2, 10 (S1)
   9C:  LW			A3, 14 (S1)
   A0:  ADDIU		A0, R0, 1
        .oA4
   A4:  JAL			~Func:play_movement_dust_effects    %~Func:create_dust_effect
   A8:  NOP
   AC:  LWC1		F0, 40 (S2)
   B0:  LIF			F3, 1.9375
   B8:  MTC1		R0, F2
   BC:  CVT.D.S		F0, F0
   C0:  DIV.D		F0, F0, F2
   C4:  LWC1		F2, 0 (S2)
   C8:  CVT.S.D		F0, F0
   CC:  SWC1		F0, 40 (S2)
   D0:  SWC1		F2, 144 (S1)
   D4:  LWC1		F0, 4 (S2)
   D8:  SWC1		F0, 148 (S1)
   DC:  LWC1		F0, 8 (S2)
   E0:  SWC1		F0, 14C (S1)
   E4:  LWC1		F0, 40 (S2)
   E8:  LIF			F3, 1.875
   F0:  MTC1		R0, F2
   F4:  CVT.D.S		F0, F0
   F8:  C.LT.D		F0, F2
   FC:  NOP
  100:  BC1T		.o10C
  104:  ADDIU		V0, R0, 2
  108:  CLEAR		V0
        .o10C
  10C:  LW			RA, 24 (SP)
  110:  LW			S2, 20 (SP)
  114:  LW			S1, 1C (SP)
  118:  LW			S0, 18 (SP)
  11C:  JR			RA
  120:  ADDIU		SP, SP, 28
}

#new:Function $Function_80238000
{
    0:  ADDIU     SP, SP, FFC8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  SDC1      F22, 30 (SP)
   20:  SDC1      F20, 28 (SP)
   24:  LW        S0, C (S1)
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  ADDIU     S0, S0, 4
   34:  LW        A1, 0 (S0)
   38:  ADDIU     S0, S0, 4
   3C:  COPY      A0, S1
   40:  JAL       ~Func:get_variable
   44:  COPY      S3, V0
   48:  COPY      A0, S1
   4C:  LW        A1, 0 (S0)
   50:  JAL       ~Func:get_variable
   54:  COPY      S0, V0
   58:  MTC1      S3, F20
   5C:  NOP
   60:  CVT.S.W   F20, F20
   64:  COPY      S2, V0
   68:  MTC1      S2, F22
   6C:  NOP
   70:  CVT.S.W   F22, F22
   74:  MTC1      S0, F0
   78:  NOP
   7C:  CVT.S.W   F0, F0
   80:  MFC1      A1, F20
   84:  MFC1      A3, F22
   88:  MFC1      A2, F0
   8C:  JAL       80070130
   90:  CLEAR     A0
   94:  LAH       V1, 800DC1EC
   9C:  LI        V0, 93
   A0:  BEQ       V1, V0, .o120
   A4:  SLTI      V0, V1, 94
   A8:  BEQ       V0, R0, .oC0
   AC:  LI        V0, 92
   B0:  BEQ       V1, V0, .oD4
   B4:  NOP
   B8:  BEQ       R0, R0, .o1D0
   BC:  NOP
        .oC0
   C0:  LI        V0, 94
   C4:  BEQ       V1, V0, .o178
   C8:  NOP
   CC:  BEQ       R0, R0, .o1D0
   D0:  NOP
        .oD4
   D4:  LW        V0, AC (S1)
   D8:  BLEZ      V0, .o100
   DC:  ADDIU     V0, S0, 14
   E0:  MTC1      V0, F0
   E4:  NOP
   E8:  CVT.S.W   F0, F0
   EC:  MFC1      A1, F20
   F0:  MFC1      A3, F22
   F4:  MFC1      A2, F0
   F8:  BEQ       R0, R0, .o208
   FC:  LI        A0, 1
        .o100
  100:  MTC1      V0, F0
  104:  NOP
  108:  CVT.S.W   F0, F0
  10C:  MFC1      A1, F20
  110:  MFC1      A3, F22
  114:  MFC1      A2, F0
  118:  BEQ       R0, R0, .o208
  11C:  CLEAR     A0
        .o120
  120:  LW        V0, AC (S1)
  124:  BLEZ      V0, .o14C
  128:  ADDIU     V0, S0, 14
  12C:  MTC1      V0, F0
  130:  NOP
  134:  CVT.S.W   F0, F0
  138:  MFC1      A1, F20
  13C:  MFC1      A3, F22
  140:  MFC1      A2, F0
  144:  BEQ       R0, R0, .o168
  148:  LI        A0, 1
        .o14C
  14C:  MTC1      V0, F0
  150:  NOP
  154:  CVT.S.W   F0, F0
  158:  MFC1      A1, F20
  15C:  MFC1      A3, F22
  160:  MFC1      A2, F0
  164:  CLEAR     A0
        .o168
  168:  JAL       800701F0
  16C:  NOP
  170:  BEQ       R0, R0, .o214
  174:  LI        A0, 2017
        .o178
  178:  LW        V0, AC (S1)
  17C:  BLEZ      V0, .o1A4
  180:  ADDIU     V0, S0, 14
  184:  MTC1      V0, F0
  188:  NOP
  18C:  CVT.S.W   F0, F0
  190:  MFC1      A1, F20
  194:  MFC1      A3, F22
  198:  MFC1      A2, F0
  19C:  BEQ       R0, R0, .o1C0
  1A0:  LI        A0, 2
        .o1A4
  1A4:  MTC1      V0, F0
  1A8:  NOP
  1AC:  CVT.S.W   F0, F0
  1B0:  MFC1      A1, F20
  1B4:  MFC1      A3, F22
  1B8:  MFC1      A2, F0
  1BC:  LI        A0, 1
        .o1C0
  1C0:  JAL       800701F0
  1C4:  NOP
  1C8:  BEQ       R0, R0, .o214
  1CC:  LI        A0, 2017
        .o1D0
  1D0:  MTC1      S3, F0
  1D4:  NOP
  1D8:  CVT.S.W   F0, F0
  1DC:  ADDIU     V0, S0, 14
  1E0:  MFC1      A1, F0
  1E4:  MTC1      V0, F0
  1E8:  NOP
  1EC:  CVT.S.W   F0, F0
  1F0:  MFC1      A2, F0
  1F4:  MTC1      S2, F0
  1F8:  NOP
  1FC:  CVT.S.W   F0, F0
  200:  MFC1      A3, F0
  204:  CLEAR     A0
        .o208
  208:  JAL       800701F0
  20C:  NOP
  210:  LI        A0, 2016
        .o214
  214:  JAL       ~Func:sfx_play_sound
  218:  NOP
  21C:  LW        RA, 20 (SP)
  220:  LW        S3, 1C (SP)
  224:  LW        S2, 18 (SP)
  228:  LW        S1, 14 (SP)
  22C:  LW        S0, 10 (SP)
  230:  LDC1      F22, 30 (SP)
  234:  LDC1      F20, 28 (SP)
  238:  LI        V0, 2
  23C:  JR        RA
  240:  ADDIU     SP, SP, 38
}

#new:Function $Function_802180C0
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, S1
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  COPY      S0, V0
   34:  COPY      A0, S0
   38:  JAL       ~Func:start_rumble
   3C:  COPY      A1, V0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  LI        V0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20
}

#new:Function $Function_80238014
{
    0:  LAW       V0, 800DC14C
    8:  ADDIU     SP, SP, FFE8
    C:  SW        S0, 10 (SP)
   10:  COPY      S0, A0
   14:  SW        RA, 14 (SP)
   18:  JAL       ~Func:get_actor
   1C:  LH        A0, 428 (V0)
   20:  LBU       V1, 191 (V0)
   24:  LBU       V0, 190 (V0)
   28:  LIF       F0, 150.0
   30:  ADDU      V1, V1, V0
   34:  SRA       V1, V1, 1
   38:  MTC1      V1, F2
   3C:  NOP
   40:  CVT.S.W   F2, F2
   44:  MUL.S     F0, F2, F0
   48:  NOP
   4C:  LIF       F2, 100.0
   54:  NOP
   58:  DIV.S     F2, F0, F2
   5C:  TRUNC.W.S F4, F2
   60:  SWC1      F4, 84 (S0)
   64:  LW        RA, 14 (SP)
   68:  LW        S0, 10 (SP)
   6C:  LI        V0, 2
   70:  JR        RA
   74:  ADDIU     SP, SP, 18
}



#new:IdleAnimations $IdleAnimations_Goombario
{
.Status:Normal    00090601
.Status:Stone     00090600
.Status:Sleep     00090613
.Status:Poison    00090601
.Status:Stop      00090600
.Status:Static    00090601
.Status:Paralyze  00090600
.Status:Dizzy     00090614
.Status:Fear      00090614
.Status:End
}

#new:DefenseTable $DefenseTable_Goombario
{
.Element:Normal 00000000
.Element:End
}

#new:StatusTable $StatusTable_Goombario
{
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy       0`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   50`
.Status:Shrink     50`
.Status:Stop       50`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End
}

#new:PartsTable $PartsTable_Goombario
{
00800000 01000000 001400FF $IdleAnimations_Goombario $DefenseTable_Goombario 00000000 00000000 FFF70000 00000000 
}

#new:Actor $DarkGoombario
{
% stats
[Index]        53b 
[Level]        23`b 
[MaxHP]        60`b 
[Coins]         2`b 
[Flags]       00000000 
[StatusTable] $StatusTable_Goombario
% ai
[PartsCount]   1`s 
[PartsTable] $PartsTable_Goombario
[Script]      $Script_Init_Goombario
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]   3`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         29`b  26`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_Goombario
{
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_Goombario )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_Goombario )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_Goombario )
		Call	 SetActorVar 	( .Actor:Self 00000001 00000002 )
		Call	 SetActorVar 	( .Actor:Self 00000009 00000000 ) %AI state
		%am lazy so put it all here
		Call	$Function_SetName_C ( 53 002900E4 )
		Call	$Function_SetTattle_C ( 53 001C0151 )		
		Call	$Function_SetName_C ( 54 002900E5 )
		Call	$Function_SetTattle_C ( 54 001C0152 )		
		Call	$Function_SetName_C ( 55 002900E6 )
		Call	$Function_SetTattle_C ( 55 001C0153 )		
		Call	$Function_SetName_C ( 56 002900E7 )
		Call	$Function_SetTattle_C ( 56 001C0154 )		
		Call	$Function_SetName_C ( 57 002900E8 )
		Call	$Function_SetTattle_C ( 57 001C0155 )		
		Call	$Function_SetName_C ( 58 002900E9 )
		Call	$Function_SetTattle_C ( 58 001C0156 )		
		Call	$Function_SetName_C ( 59 002900EA )
		Call	$Function_SetTattle_C ( 59 001C0157 )		
		Call	$Function_SetName_C ( 5A 002900EB )
		Call	$Function_SetTattle_C ( 5A 001C0158 )		
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_Goombario
{
    0:  Return
    8:  End
}

#new:Script $Script_HandleEvent_Goombario
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetLastEvent 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		Call     GetLastElement ( *Var[1] )
   70:  		If  *Var[1]  &  00000020 
   80:  			SetConst  *Var[0]  00000001 
   90:  			SetConst  *Var[1]  0009060A 
   %A0:  			ExecWait $Script_8021BF64 
   AC:  			Return
   B4:  		Else
   BC:  			SetConst  *Var[0]  00000001 
   CC:  			SetConst  *Var[1]  0009060A 
   DC:  			ExecWait DoNormalHit 
   E8:  		EndIf
   F0:  	EndCaseGroup
   F8:  	Case  ==  .Event:BurnHit % E
  104:  		SetConst  *Var[0]  00000001 
  114:  		SetConst  *Var[1]  0009060B 
  124:  		SetConst  *Var[2]  0009060C 
  134:  		ExecWait DoBurnHit 
  140:  	Case  ==  .Event:BurnDeath % 24
  14C:  		SetConst  *Var[0]  00000001 
  15C:  		SetConst  *Var[1]  0009060B 
  16C:  		SetConst  *Var[2]  0009060C 
  17C:  		ExecWait DoBurnHit 
  194:  		Wait     0000000A 
  1A0:  		SetConst  *Var[0]  00000001 
  1B0:  		SetConst  *Var[1]  0009060C 
  1C0:  		ExecWait DoDeath 
  1CC:  		Return
  1D4:  	Case  ==  .Event:SpinSmashHit % B
  1E0:  		SetConst  *Var[0]  00000001 
  1F0:  		SetConst  *Var[1]  0009060A 
  200:  		ExecWait DoSpinSmashHit 
  20C:  	Case  ==  .Event:SpinSmashDeath % 21
  224:  		SetConst  *Var[0]  00000001 
  234:  		SetConst  *Var[1]  0009060A 
  244:  		ExecWait DoSpinSmashHit 
  250:  		SetConst  *Var[0]  00000001 
  260:  		SetConst  *Var[1]  0009060A 
  270:  		ExecWait DoDeath 
  27C:  		Return
  284:  	Case  ==  .Event:ShockHit % 2F
  290:  		SetConst  *Var[0]  00000001 
  2A0:  		SetConst  *Var[1]  0009060A 
  %2B0:  		ExecWait $Script_8021C428 
				ExecWait DoShockHit
				ExecWait $Script_8021D540 %Go home
  2BC:  		Return
  2C4:  	Case  ==  .Event:ShockDeath % 26
  2DC:  		SetConst  *Var[0]  00000001 
  2EC:  		SetConst  *Var[1]  0009060A 
  2FC:  		Set  *Var[2]  0000000C 
  %30C:  		ExecWait $Script_8021CAB4 
  318:  		SetConst  *Var[0]  00000001 
  328:  		SetConst  *Var[1]  0009060A 
  338:  		ExecWait DoDeath 
  344:  		Return
  34C:  	CaseOR  ==  00000017 % 17
  358:  	CaseOR  ==  .Event:Immune % 19
  364:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  370:  		SetConst  *Var[0]  00000001 
  380:  		SetConst  *Var[1]  00090601 
  390:  		ExecWait DoImmune 
  39C:  	EndCaseGroup
  3A4:  	Case  ==  .Event:Death % 20
  3BC:  		SetConst  *Var[0]  00000001 
  3CC:  		SetConst  *Var[1]  0009060A 
  3DC:  		ExecWait DoNormalHit 
  3E8:  		Wait     0000000A 
  3F4:  		SetConst  *Var[0]  00000001 
  404:  		SetConst  *Var[1]  0009060A 
  414:  		ExecWait DoDeath 
  420:  		Return
  428:  	Case  ==  .Event:RecoverStatus % 31
  434:  		SetConst  *Var[0]  00000001 
  444:  		SetConst  *Var[1]  00090601 
  454:  		ExecWait DoRecover 
  460:  	Case  ==  .Event:ScareAway % 39
  46C:  		SetConst  *Var[0]  00000001 
  47C:  		SetConst  *Var[1]  00090603 
  48C:  		SetConst  *Var[2]  0009060A 
  49C:  		ExecWait DoScareAway 
  4A8:  		Return
  4B0:  	Case  ==  .Event:BeginAirLift % 3A
  4BC:  		SetConst  *Var[0]  00000001 
  4CC:  		SetConst  *Var[1]  00090603 
  4DC:  		ExecWait DoAirLift 
  4E8:  	Case  ==  .Event:BlowAway % 16
  4F4:  		SetConst  *Var[0]  00000001 
  504:  		SetConst  *Var[1]  0009060A 
  514:  		ExecWait DoBlowAway 
  520:  		Return
  528:  	Default
  530:  EndSwitch
  538:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  54C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  560:  Return
  568:  End
}

#new:Script $Script_8021D540
{
    0:  Call     UseBattleCamPreset 	( 00000002 )
   10:  Call     SetAnimation 	( .Actor:Self 00000001 00090601 )
   28:  Thread
   30:  	Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000C 00000000 )
   4C:  	Set  *Var[0]  000000B4 
   5C:  	Loop     0000000F 
   68:  		Sub  *Var[0]  0000003C 
   78:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
   94:  		Wait     00000001 
   A0:  	EndLoop
   A8:  	Call     SetAnimation 	( .Actor:Self 00000001 00090605 )
   C0:  	Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
   DC:  	Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
   F8:  EndThread
  100:  Call     SetGoalToTarget 	( .Actor:Self )
  110:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  12C:  Add  *Var[0]  0000003C 
  13C:  Set  *Var[1]  00000000 
  14C:  Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.0] )
  160:  Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  17C:  Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  19C:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
  1B0:  If  *Var[A]  &  00080000 
  1C0:  	SetF  *Var[5]  *Fixed[7.2001953] 
  1D0:  Else
  1D8:  	Set  *Var[5]  00000012 
  1E8:  EndIf
  1F0:  Call     SetAnimation 	( .Actor:Self 00000001 00090607 )
  208:  Call     SetActorDispOffset ( FFFFFF81 00000000 *Var[5] 00000000 )
  224:  Wait     00000001 
  230:  Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  24C:  Call     SetActorDispOffset ( FFFFFF81 00000000 00000000 00000000 )
  268:  Call     SetAnimation 	( .Actor:Self 00000001 00090601 )
  280:  Add  *Var[0]  00000014 
  290:  Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2AC:  Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
  2CC:  Call     SetAnimation 	( .Actor:Self 00000001 00090607 )
  2E4:  Call     SetActorDispOffset ( FFFFFF81 00000000 *Var[5] 00000000 )
  300:  Wait     00000001 
  30C:  Add  *Var[0]  0000000A 
  31C:  Call     SetAnimation 	( .Actor:Self 00000001 00090601 )
  334:  Call     SetActorDispOffset ( FFFFFF81 00000000 00000000 00000000 )
  350:  Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  36C:  Call     JumpToGoal  	( .Actor:Self 00000004 00000000 00000001 00000000 )
  38C:  Call     SetAnimation 	( .Actor:Self 00000001 00090607 )
  3A4:  Call     SetActorDispOffset ( FFFFFF81 00000000 *Var[5] 00000000 )
  3C0:  Wait     00000001 
  3CC:  Call     SetActorDispOffset ( FFFFFF81 00000000 00000000 00000000 )
  3E8:  Call     SetAnimation 	( .Actor:Self 00000001 00090601 )
  400:  Wait     00000002 
  40C:  Call     SetGoalToHome 	( .Actor:Self )
  41C:  Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  430:  Call     SetAnimation 	( .Actor:Self 00000001 00090603 )
  448:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  460:  Call     SetAnimation 	( .Actor:Self 00000001 00090601 )
  478:  Return
  480:  End
}

#new:Script $Script_8021D9C8
{
    0:  Call     UseBattleCamPreset 	( 0000003F )
   10:  Call     BattleCamTargetActor ( .Actor:Self )
   20:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   38:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   4C:  Call     SetGoalToTarget 	( .Actor:Self )
   5C:  Call     AddGoalPos 	( .Actor:Self 00000046 00000000 00000000 )
   78:  Call     SetAnimation 	( .Actor:Self 00000001 00090603 )
   90:  Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
   A4:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
   BC:  Call     SetAnimation 	( .Actor:Self 00000001 00090601 )
   D4:  Return
   DC:  End
}

#new:Script $Script_8021DAAC
{
    0:  Call     SetGoalToTarget 	( .Actor:Self )
   10:  Call     GetGoalPos  	( .Actor:Self *Var[B] *Var[C] *Var[D] )
   2C:  Call     GetActorPos 	( .Actor:Self *Var[C] *Var[D] *Var[E] )
   48:  If  *Var[B]  >  *Var[C] 
   58:  	Sub  *Var[B]  *Var[C] 
   68:  Else
   70:  	Sub  *Var[C]  *Var[B] 
   80:  	Set  *Var[B]  *Var[C] 
   90:  EndIf
   98:  Sub  *Var[B]  00000014 
   A8:  DivF  *Var[B]  *Fixed[10.588867] 
   B8:  AddF  *Var[B]  0000000F 
   C8:  Set  *Var[A]  *Var[B] 
   D8:  Return
   E0:  End
}

#new:Script $Script_Goombario_Headbonk
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  ExecWait $Script_8021D9C8 
   34:  ExecWait $Script_8021DAAC 
   40:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
   54:  If  *Var[A]  &  00080000 
   64:  	SetF  *Var[0]  *Fixed[7.2001953] 
   74:  	SetF  *Var[1]  *Fixed[7.600586] 
   84:  	SetF  *Var[1]  *Fixed[3.600586] 
   94:  Else
   9C:  	Set  *Var[0]  00000012 
   AC:  	Set  *Var[1]  00000013 
   BC:  	Set  *Var[2]  00000009 
   CC:  EndIf
   D4:  Call     SetAnimation 	( .Actor:Self 00000001 00090607 )
   EC:  Call     SetActorDispOffset ( FFFFFF81 00000000 *Var[0] 00000000 )
  108:  Wait     00000005 
  114:  Call     SetActorDispOffset ( FFFFFF81 00000000 *Var[1] 00000000 )
  130:  Wait     00000001 
  13C:  Call     SetAnimation 	( .Actor:Self 00000001 00090606 )
  154:  Call     SetActorDispOffset ( FFFFFF81 00000000 *Var[2] 00000000 )
  170:  Call     SetGoalToTarget 	( .Actor:Self )
  180:  Call     AddGoalPos 	( .Actor:Self 00000000 00000000 00000005 )
  19C:  Call     SetJumpAnimations 	( .Actor:Self 00000001 00090606 00090606 00090606 )
  1BC:  Call     SetActorSounds ( FFFFFF81 00000002 00000000 00000000 )
  1D8:  Call     PlaySoundAtActor 	( .Actor:Self 0000200D )
  1EC:  Call     $Function_802180D0 ( *Var[A] 00000000 )
  200:  Call     EnemyTestTarget ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  224:  Switch  *Var[0] 
  230:  	CaseOR  ==  .HitResult:Miss % 6
  23C:  	CaseOR  ==  .HitResult:Lucky % 5
  248:  		Set  *Var[A]  *Var[0] 
  258:  		Call     SetJumpAnimations 	( .Actor:Self 00000001 00090606 00090606 00090606 )
  278:  		Call     $Function_80218960 ( )
  284:  		Thread
  28C:  			Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[1.0] )
  2A8:  		EndThread
  2B0:  		If  *Var[A]  ==  00000005 
  2C0:  			Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  2E4:  		EndIf
  2EC:  		Wait     00000014 
  2F8:  		Call     YieldTurn   	( )
  304:  		ExecWait $Script_8021D540 
  310:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  324:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  338:  		Return
  340:  	EndCaseGroup
  348:  EndSwitch
  350:  ChildThread
  358:  	Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.1005859] *Fixed[0.80078125] *Fixed[1.0] )
  378:  	Wait     00000001 
  384:  	Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.3007812] *Fixed[0.5] *Fixed[1.0] )
  3A4:  	Wait     00000001 
  3B0:  	Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  3D0:  EndChildThread
  3D8:  Wait     00000001 
  3E4:  Wait     00000002 
  488:  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000004 00000010 )
  4B8:  Call     GetActorHP  	( .Actor:Player *Var[0] )
  4CC:  If  *Var[0]  ==  00000000 
  4DC:  	Goto     00000064 
  4E8:  EndIf
  4F0:  Set  *Var[A]  00000018 
  710:  Thread
  718:  	Wait     00000004 
  724:  	Set  *Var[0]  00000000 
  734:  	Loop     00000006 
  740:  		Add  *Var[0]  0000001E 
  750:  		Call     SetActorRotation 	( .Actor:Self 00000000 F1194D80 *Var[0] )
  76C:  		Wait     00000001 
  778:  	EndLoop
  780:  	Call     SetAnimation 	( .Actor:Self 00000001 00090606 )
  798: 	EndThread
  7A0: 	Thread
  7A8:  	Set  *Var[0]  00000000 
  7B8:  	Loop     *Var[A] 
  7C4:  		Add  *Var[0]  00000085 
  7D4:  		Call     SetActorRotation 	( .Actor:Self F1194D80 *Var[0] F1194D80 )
  7F0:  		Wait     00000001 
  7FC:  	EndLoop
  804:  EndThread
  80C:  Call     SetGoalToTarget 	( .Actor:Self )
  81C:  Call     EnableActorBlur 	( .Actor:Self 00000001 )
  830:  Call     SetJumpAnimations 	( .Actor:Self 00000001 00090606 00090606 00090606 )
  850:  Call     PlaySoundAtActor 	( .Actor:Self 00000281 )
  864:  Call     $Function_802180D0 ( *Var[A] 00000003 )
  878:  Call     EnableActorBlur 	( .Actor:Self 00000000 )
  894:  ChildThread
  89C:  	Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.1005859] *Fixed[0.80078125] *Fixed[1.0] )
  8BC:  	Wait     00000001 
  8C8:  	Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.3007812] *Fixed[0.5] *Fixed[1.0] )
  8E8:  	Wait     00000001 
  8F4:  	Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  914:  EndChildThread
  91C:  Wait     00000001 
  928:  Wait     00000002 
  9CC:  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000004 00000020 )
  9FC:  Label    00000064 
  A08:  Switch  *Var[0] 
  A14:  	CaseOR  ==  00000000 
  A20:  	CaseOR  ==  00000002 
  A2C:  		Call     YieldTurn   	( )
  A38:  		ExecWait $Script_8021D540 
  A44:  	EndCaseGroup
  A4C:  EndSwitch
  A54:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  A68:  Call     UseIdleAnimation 	( .Actor:Self .True )
  A7C:  Return
  A84:  End
}
  
#new:Script $ShakyCam
{
    0:  Call     80254218 ( 0000000B )
   10:  Thread
   18:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[1.0] )
   34:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[3.0] )
   50:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[6.0] )
   6C:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[5.0] )
   88:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[4.0] )
   A4:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[3.0] )
   C0:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[2.0] )
   DC:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[1.0] )
   F8:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.5] )
  114:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.20019531] )
  130:  EndThread
  138:  Return
  140:  End
}

#new:Script $Script_Goombario_Megabonk
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  ExecWait $Script_8021D9C8 
   34:  ExecWait $Script_8021DAAC 
   40:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
   54:  If  *Var[A]  &  00080000 
   64:  	SetF  *Var[0]  *Fixed[7.2001953] 
   74:  	SetF  *Var[1]  *Fixed[7.600586] 
   84:  	SetF  *Var[1]  *Fixed[3.600586] 
   94:  Else
   9C:  	Set  *Var[0]  00000012 
   AC:  	Set  *Var[1]  00000013 
   BC:  	Set  *Var[2]  00000009 
   CC:  EndIf
   D4:  Call     SetAnimation 	( .Actor:Self 00000001 00090607 )
   EC:  Call     SetActorDispOffset ( FFFFFF81 00000000 *Var[0] 00000000 )
  108:  Wait     00000005 
  114:  Call     SetActorDispOffset ( FFFFFF81 00000000 *Var[1] 00000000 )
  130:  Wait     00000001 
  13C:  Call     SetAnimation 	( .Actor:Self 00000001 00090606 )
  154:  Call     SetActorDispOffset ( FFFFFF81 00000000 *Var[2] 00000000 )
  170:  Call     SetGoalToTarget 	( .Actor:Self )
  180:  Call     AddGoalPos 	( .Actor:Self 00000000 00000000 00000005 )
  19C:  Call     SetJumpAnimations 	( .Actor:Self 00000001 00090606 00090606 00090606 )
  1BC:  Call     SetActorSounds ( FFFFFF81 00000002 00000000 00000000 )
  1D8:  Call     PlaySoundAtActor 	( .Actor:Self 0000200D )
  1EC:  Call     $Function_802180D0 ( *Var[A] 00000000 )
  200:  Call     EnemyTestTarget ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  224:  Switch  *Var[0] 
  230:  	CaseOR  ==  .HitResult:Miss % 6
  23C:  	CaseOR  ==  .HitResult:Lucky % 5
  248:  		Set  *Var[A]  *Var[0] 
  258:  		Call     SetJumpAnimations 	( .Actor:Self 00000001 00090606 00090606 00090606 )
  278:  		Call     $Function_80218960 ( )
  284:  		Thread
  28C:  			Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[1.0] )
  2A8:  		EndThread
  2B0:  		If  *Var[A]  ==  00000005 
  2C0:  			Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  2E4:  		EndIf
  2EC:  		Wait     00000014 
  2F8:  		Call     YieldTurn   	( )
  304:  		ExecWait $Script_8021D540 
  310:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  324:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  338:  		Return
  340:  	EndCaseGroup
  348:  EndSwitch
  350:  ChildThread
  358:  	Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.1005859] *Fixed[0.80078125] *Fixed[1.0] )
  378:  	Wait     00000001 
  384:  	Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.3007812] *Fixed[0.5] *Fixed[1.0] )
  3A4:  	Wait     00000001 
  3B0:  	Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  3D0:  EndChildThread
  3D8:  Wait     00000001 
  3E4:  Wait     00000002 
  		ExecWait $ShakyCam
  488:  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 0000000C 00000010 )
  A08:  Switch  *Var[0] 
  A14:  	CaseOR  ==  00000000 
  A20:  	CaseOR  ==  00000002 
  A2C:  		Call     YieldTurn   	( )
  A38:  		ExecWait $Script_8021D540 
  A44:  	EndCaseGroup
  A4C:  EndSwitch
  A54:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  A68:  Call     UseIdleAnimation 	( .Actor:Self .True )
  A7C:  Return
  A84:  End
} 
 
#new:Script $Script_Goombario_Charge
{
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     UseBattleCamPreset 	( 0000000E )
	Wait     0000000A 
	Call  SetActorDispOffset    ( .Actor:Self 00000000 00000013 00000000 )
	Call     SetAnimation 	( .Actor:Self 00000001 00090607 )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[1]  0000000F 
	Call     PlaySoundAtActor 	( .Actor:Self 0000208F )
	Wait     00000003 
	Thread
		Wait     0000000F 
		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
		Add  *Var[1]  0000000F 
		Add  *Var[2]  FFFFFFFB 
		Call     PlaySoundAtActor 	( .Actor:Self 00002003 )
		Call     PlayEffect  	( 00000052 00000009 *Var[0] *Var[1] *Var[2] *Fixed[2.0] 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	EndThread
	Wait     0000001E 
	Call     SetAnimation 	( .Actor:Self 00000001 00090601 )
	Call     SetActorDispOffset ( .Actor:Self 00000000 00000000 00000000 )
	Call     UseBattleCamPreset 	( 00000002 )
	Call     MoveBattleCamOver 	( 0000000A )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[0]  0000000A 
	Add  *Var[1]  00000019 
	Add  *Var[2]  00000005 
	Call     PlaySoundAtActor 	( .Actor:Self 0000208E )
	Wait     00000004 
	Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.4003906] )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     SetJumpAnimations 	( .Actor:Self 00090604 00000001 00090604 00090604 )
	Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     JumpToGoal  	( .Actor:Self 00000014 00000001 00000001 00000000 )
	Thread
		Call 	 8026BF48 ( 00000001 )
		Call	BoostAttack ( .Actor:Self 00000003 )
		Call 	 8026BF48 ( 00000000 )
	EndThread
	Call     SetAnimation 	( .Actor:Self 00000001 00090601 )
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End
}

#new:Function $GetPlayerMaxHp
{
PUSH	A1, A2, T0, RA
LIO		T0, 8010F293 %max hp
LB		A2, 0 (T0)
JAL		~Func:set_variable
LW		A1, 0 (S0) %get argument
NOP
POP		A1, A2, T0, RA
JR		RA
ADDIU	V0, R0, 2 %apparently this fixes everything?
}

#new:Script $Script_TakeTurn_Goombario
{
	Call	GetActorVar ( .Actor:Self 00000009 *Var[9] )
	Switch *Var[9]
		Case == 00000000
			Call	SetActorVar ( .Actor:Self 00000009 00000001 )
			Call	GetPlayerHP ( *Var[8] )
			Call	$GetPlayerMaxHp ( *Var[7] )
			Div *Var[7] 2
			If *Var[8] > *Var[7]
				ExecWait $Script_Goombario_Headbonk 
			Else
				ExecWait $Script_Goombario_Megabonk 
			EndIf
		Case == 00000001
			Call	SetActorVar ( .Actor:Self 00000009 00000002 )
			Call	GetActorAttackBoost ( .Actor:Self *Var[8] )
			If *Var[8] < 6
				ExecWait $Script_Goombario_Charge
			Else
				ExecWait $Script_Goombario_Headbonk 
			EndIf
		Case == 00000002
			Call	SetActorVar ( .Actor:Self 00000009 00000000 )
			ExecWait $Script_Goombario_Megabonk 
	EndSwitch
	Return
	End
}



#new:IdleAnimations $IdleAnimations_8021E9AC
{
.Status:Normal    000A0A04
.Status:Stone     000A0A00
.Status:Sleep     000A0A1B
.Status:Poison    000A0A04
.Status:Stop      000A0A00
.Status:Static    000A0A04
.Status:Paralyze  000A0A00
.Status:Dizzy     000A0A1C
.Status:Fear      000A0A1C
.Status:End
}

#new:IdleAnimations $IdleAnimations_8021E9F8
{
.Status:Normal    000A0A19
.Status:Stone     000A0A03
.Status:Sleep     000A0A03
.Status:Poison    000A0A19
.Status:Stop      000A0A03
.Status:Static    000A0A19
.Status:Paralyze  000A0A03
.Status:Dizzy     000A0A19
.Status:Fear      000A0A19
.Status:End
}

#new:DefenseTable $DefenseTable_8021EA44
{
.Element:Normal 00000002
.Element:End
}

#new:DefenseTable $DefenseTable_8021EA50
{
.Element:Normal 00000000
.Element:End
}

#new:StatusTable $StatusTable_8021EA5C 
{
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      50`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy       0`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink     50`
.Status:Stop       50`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End
}

#new:PartsTable $PartsTable_8021EB08
{
00800000 01000000 FE2000FF $IdleAnimations_8021E9AC $DefenseTable_8021EA44 00001008 00000000 00F00000 00000000 
}
%Used to have both the 1 and 4 flags which means that they are actually used for something??

#new:Actor $DarkKooper
{
% stats
[Index]        54b 
[Level]        23`b 
[MaxHP]        50`b 
[Coins]         2`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8021EA5C 
% ai
[PartsCount]   1`s 
[PartsTable] $PartsTable_8021EB08 
[Script]      $Script_Init_8021EB54 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]   3`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         32`b  38`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_8021EB54
{
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_Kooper )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_8021EBD0 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021ED48 )
   3C:  Call     SetActorVar 	( .Actor:Self 00000003 00000000 )
   54:  Call     SetActorVar 	( .Actor:Self 00000004 00000000 )
		Call	 SetActorVar 	( .Actor:Self 00000009 00000000 ) %AI state
   6C:  Return
   74:  End
}

#new:Script $Script_Idle_8021EBD0
{
    0:  Label    00000000 
    C:  Call     GetActorVar 	( .Actor:Self 00000003 *Var[0] )
   24:  Switch  *Var[0] 
   30:  	Case  ==  00000000 
   3C:  		Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFE 00000026 )
   58:  		Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFD FFFFFFF7 )
   74:  		Call     $Function_80218C44 ( FFFFFFF6 00000019 0000000A 00000019 )
   90:  	Case  ==  00000001 
   9C:  		Call     SetTargetOffset 	( .Actor:Self 00000001 00000005 0000000F )
   B8:  		Call     8027D4C8 ( FFFFFF81 00000001 00000000 FFFFFFFA )
   D4:  		Call     $Function_80218C44 ( FFFFFFF6 00000014 0000000A 00000014 )
   F0:  EndSwitch
   F8:  Wait     00000001 
  104:  Goto     00000000 
  110:  Return
  118:  End
}

#new:IntTable $IntTable_8021ECF0
{
00000009 00000010 00000016 0000001A 0000001E 00000020 00000021 00000020 
0000001E 0000001A 00000016 00000010 00000009 00000000 00000004 00000006 
00000007 00000006 00000004 00000000 00000002 00000000 
}

#new:Script $Script_HandleEvent_8021ED48
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetLastEvent 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		Call     GetLastElement ( *Var[1] )
   70:  		If  *Var[1]  &  00000020 
   80:  			SetConst  *Var[0]  00000001 
   90:  			SetConst  *Var[1]  000A0A11 
   %A0:  			ExecWait $Script_8021BF64 
   AC:  			Return
   B4:  		Else
   BC:  			SetConst  *Var[0]  00000001 
   CC:  			SetConst  *Var[1]  000A0A11 
   DC:  			ExecWait DoNormalHit 
   E8:  		EndIf
   F0:  	EndCaseGroup
   F8:  	Case  ==  .Event:BurnHit % E
  104:  		SetConst  *Var[0]  00000001 
  114:  		SetConst  *Var[1]  000A0A12 
  124:  		SetConst  *Var[2]  000A0A13 
  134:  		ExecWait DoBurnHit 
  140:  	Case  ==  .Event:BurnDeath % 24
  14C:  		SetConst  *Var[0]  00000001 
  15C:  		SetConst  *Var[1]  000A0A12 
  16C:  		SetConst  *Var[2]  000A0A13 
  17C:  		ExecWait DoBurnHit 
  194:  		SetConst  *Var[0]  00000001 
  1A4:  		SetConst  *Var[1]  000A0A13 
  1B4:  		ExecWait DoDeath 
  1C0:  		Return
  1C8:  	Case  ==  .Event:SpinSmashHit % B
  1D4:  		SetConst  *Var[0]  00000001 
  1E4:  		SetConst  *Var[1]  000A0A11 
  1F4:  		ExecWait DoSpinSmashHit 
  200:  	Case  ==  .Event:SpinSmashDeath % 21
  218:  		SetConst  *Var[0]  00000001 
  228:  		SetConst  *Var[1]  000A0A11 
  238:  		ExecWait DoSpinSmashHit 
  244:  		SetConst  *Var[0]  00000001 
  254:  		SetConst  *Var[1]  000A0A11 
  264:  		ExecWait DoDeath 
  270:  		Return
  278:  	Case  ==  .Event:FlipTrigger % D
  284:  		Call     SetActorVar 	( .Actor:Self 00000003 00000001 )
  29C:  		Call     SetActorVar 	( .Actor:Self 00000004 00000001 )
  2B4:  		Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_8021EA50 )
  2CC:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021E9F8 )
  2E4:  		Call     SetTargetOffset 	( .Actor:Self 00000001 00000005 0000000F )
  300:  		Call     8027D4C8 ( FFFFFF81 00000001 00000000 FFFFFFFA )
  31C:  		Call     SetAnimation 	( .Actor:Self 00000001 000A0A11 )
  334:  		Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000C 00000000 )
  350:  		Thread
  358:  			Wait     00000004 
  364:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 0000001E )
  380:  			Wait     00000001 
  38C:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  3A8:  			Wait     00000001 
  3B4:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 FFFFFFE2 )
  3D0:  			Wait     00000001 
  3DC:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 FFFFFFC4 )
  3F8:  			Wait     00000001 
  404:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 FFFFFFB5 )
  420:  			Wait     00000001 
  42C:  		EndThread
  434:  		UseIntBuffer $IntTable_8021ECF0 
  440:  		Loop     00000016 
  44C:  			Get1Int  *Var[0] 
  458:  			Call     SetActorDispOffset ( FFFFFF81 00000000 *Var[0] 00000000 )
  474:  			Wait     00000001 
  480:  		EndLoop
  488:  		Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  4A4:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  4C0:  		Call     SetActorDispOffset ( FFFFFF81 00000000 00000000 00000000 )
  4DC:  		Call     SetAnimation 	( .Actor:Self 00000001 000A0A19 )
  4F4:  	CaseOR  ==  00000017 % 17
  500:  	CaseOR  ==  .Event:Immune % 19
  50C:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  518:  		Call     GetActorVar 	( .Actor:Self 00000003 *Var[0] )
  530:  		Switch  *Var[0] 
  53C:  			Case  ==  00000000 
  548:  				SetConst  *Var[0]  00000001 
  558:  				SetConst  *Var[1]  000A0A04 
  568:  			Case  ==  00000001 
  574:  				Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[1.0] )
  58C:  				SetConst  *Var[0]  00000001 
  59C:  				SetConst  *Var[1]  000A0A19 
  5AC:  		EndSwitch
  5B4:  		ExecWait DoImmune 
  5C0:  	EndCaseGroup
  5C8:  	Case  ==  .Event:Death % 20
  5E0:  		SetConst  *Var[0]  00000001 
  5F0:  		SetConst  *Var[1]  000A0A11 
  600:  		ExecWait DoNormalHit 
  60C:  		Wait     0000000A 
  618:  		SetConst  *Var[0]  00000001 
  628:  		SetConst  *Var[1]  000A0A11 
  638:  		ExecWait DoDeath 
  644:  		Return
  64C:  	Case  ==  .Event:RecoverStatus % 31
  658:  		Call     GetActorVar 	( .Actor:Self 00000003 *Var[0] )
  670:  		If  *Var[0]  ==  00000001 
  680:  			SetConst  *Var[0]  00000001 
  690:  			SetConst  *Var[1]  000A0A19 
  6A0:  			ExecWait DoImmune 
  6AC:  		Else
  6B4:  			SetConst  *Var[0]  00000001 
  6C4:  			SetConst  *Var[1]  000A0A04 
  6D4:  			ExecWait DoRecover 
  6E0:  		EndIf
  6E8:  	Case  ==  .Event:ScareAway % 39
  6F4:  		SetConst  *Var[0]  00000001 
  704:  		SetConst  *Var[1]  000A0A06 
  714:  		SetConst  *Var[2]  000A0A11 
  724:  		ExecWait DoScareAway 
  730:  		Return
  738:  	Case  ==  .Event:BeginAirLift % 3A
  744:  		Call     GetActorVar 	( .Actor:Self 00000003 *Var[0] )
  75C:  		Switch  *Var[0] 
  768:  			Case  ==  00000000 
  774:  				SetConst  *Var[0]  00000001 
  784:  				SetConst  *Var[1]  000A0A06 
  794:  			Case  ==  00000001 
  7A0:  				Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[3.0] )
  7B8:  				SetConst  *Var[0]  00000001 
  7C8:  				SetConst  *Var[1]  000A0A19 
  7D8:  		EndSwitch
  7E0:  		ExecWait DoAirLift 
  7EC:  	Case  ==  .Event:BlowAway % 16
  7F8:  		Call     GetActorVar 	( .Actor:Self 00000003 *Var[0] )
  810:  		Switch  *Var[0] 
  81C:  			Case  ==  00000000 
  828:  				Call     GetStatusFlags ( .Actor:Self *Var[0] )
  83C:  				If  *Var[0]  !&  0035D000 
  84C:  					If  *Var[0]  &  00080000 
  85C:  						Call     SetActorDispOffset ( FFFFFF81 00000000 00000001 00000000 )
  878:  					Else
  880:  						Call     SetActorDispOffset ( FFFFFF81 00000000 00000003 00000000 )
  89C:  					EndIf
  8A4:  				EndIf
  8AC:  				SetConst  *Var[0]  00000001 
  8BC:  				SetConst  *Var[1]  000A0A11 
  8CC:  			Case  ==  00000001 
  8D8:  				SetConst  *Var[0]  00000001 
  8E8:  				SetConst  *Var[1]  000A0A19 
  8F8:  		EndSwitch
  900:  		ExecWait DoBlowAway 
  90C:  		Return
  914:  	Default
  91C:  EndSwitch
  924:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  938:  Call     UseIdleAnimation 	( .Actor:Self .True )
  94C:  Return
  954:  End
}

#new:Script $Script_Kooper_GetUp
{
   	Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
   	Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[3.0] )
   	Wait     00000014 
   	Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[1.0] )
   	Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
   	Call     SetAnimation 	( .Actor:Self 00000001 000A0A19 )
   	Set  *Var[0]  00000000 
   	Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000C 00000000 )
   	Thread
   		Loop     00000005 
   			Add  *Var[0]  0000000F 
   			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
   			Wait     00000001 
   		EndLoop
   	EndThread
   	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   	Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   	Call     SetActorJumpGravity 	( .Actor:Self *Fixed[3.0] )
   	Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
   	Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
   	Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
   	Call     SetActorDispOffset ( FFFFFF81 00000000 00000000 00000000 )
   	Call     SetAnimation 	( .Actor:Self 00000001 000A0A04 )
   	Call     SetActorVar 	( .Actor:Self 00000003 00000000 )
   	Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_8021EA44 )
   	Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021E9AC )
   	Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFE 00000026 )
   	Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFD FFFFFFF7 )
   	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End
}

%AI:
%	shell toss
%	fire shell (dizzy shell if partner is stunned)
%	dizzy shell (shell toss if mario is dizzy)

#new:Script $Script_TakeTurn_Kooper
{
	Call     GetActorVar 	( .Actor:Self 00000003 *Var[8] )
	If *Var[8] != 0
		Call     SetActorVar 	( .Actor:Self 00000003 00000000 )
		ExecWait $Script_Kooper_GetUp
	EndIf
	Label 0 %starting point
	Call	GetActorVar ( .Actor:Self 00000009 *Var[9] )
	Switch *Var[9]
		Case == 00000000
			Call	SetActorVar ( .Actor:Self 00000009 00000001 )
			ExecWait $Script_Kooper_ShellToss
		Case == 00000001
			Call GetStatusFlags ( .Actor:Partner *Var[B] )
			Call	SetActorVar ( .Actor:Self 00000009 00000002 )
			If  *Var[B]  &  01000000 
				Goto 00000000 %don't fire shell
			EndIf
			ExecWait $Script_Kooper_FireShell
		Case == 00000002
			Call	SetActorVar ( .Actor:Self 00000009 00000000 )
			If  *Var[1] & 0035D000 %is statused
				Goto 00000000
			EndIf
			ExecWait $Script_Kooper_DizzyShell
	EndSwitch
	Return
	End
}

#new:Script $Script_Kooper_ShellToss
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
  3D4:  Call     SetAnimation 	( .Actor:Self 00000001 000A0A0E )
  3EC:  Call     PlaySoundAtActor 	( .Actor:Self 00000000 )
  400:  Wait     0000000F 
  40C:  Call     SetAnimation 	( .Actor:Self 00000001 000A0A0A )
  424:  Call     PlaySoundAtActor 	( .Actor:Self 0000200C )
  438:  Call     UseBattleCamPreset 	( 0000000E )
  448:  Call     BattleCamTargetActor ( .Actor:Self )
  458:  Call     MoveBattleCamOver 	( 0000004B )
  468:  Call     8024ECF8 ( 00000001 00000001 00000001 )
  4E8:  Set  *Var[0]  0000001E 
  500:  Set  *Var[9]  00000000 
  510:  Loop     *Var[0] 
  51C:  	Add  *Var[9]  00000001 
  52C:  	Switch  *Var[9] 
  538:  		Case  <  00000014 
  544:  			Call     SetAnimation 	( .Actor:Self 00000001 000A0A0A )
  55C:  			Call     SetActorSpeed 	( .Actor:Self *Fixed[10.0] )
  570:  		Case  ==  00000014 
  57C:  			Call     GetActorPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
  598:  			Call     PlayEffect  	( ~FX:SmokeImpact:Small *Var[4] *Var[5] *Var[6] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  5DC:  		Case  <  00000028 
  5E8:  			Call     SetAnimation 	( .Actor:Self 00000001 000A0A0B )
  600:  			Call     SetActorSpeed 	( .Actor:Self *Fixed[12.0] )
  614:  		Case  ==  00000028 
  620:  			Call     GetActorPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
  63C:  			Call     PlayEffect  	( ~FX:SmokeImpact:Small *Var[4] *Var[5] *Var[6] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  680:  		Case  <  00000032 
  68C:  			Call     SetAnimation 	( .Actor:Self 00000001 000A0A0C )
  6A4:  			Call     SetActorSpeed 	( .Actor:Self *Fixed[14.0] )
  6B8:  		Case  ==  00000032 
  6C4:  			Call     GetActorPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
  6E0:  			Call     PlayEffect  	( ~FX:SmokeImpact:Small *Var[4] *Var[5] *Var[6] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  724:  		Case  <  0000003C 
  730:  			Call     SetAnimation 	( .Actor:Self 00000001 000A0A0D )
  748:  			Call     SetActorSpeed 	( .Actor:Self *Fixed[16.0] )
  75C:  		Case  ==  0000003C 
  768:  			Call     GetActorPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
  784:  			Call     PlayEffect  	( ~FX:SmokeImpact:Small *Var[4] *Var[5] *Var[6] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  7C8:  	EndSwitch
  7D0:  	Wait     00000001 
  7DC:  EndLoop
  7E4:  Call     PlaySoundAtActor 	( .Actor:Self 0000200A )
  7F8:  Call     SetActorSounds ( FFFFFF81 00000000 00000000 00000000 )
  814:  Call     UseBattleCamPreset 	( 00000002 )
  824:  Call     MoveBattleCamOver 	( 0000000F )
  834:  Call     AddActorDecoration 	( .Actor:Self 00000000 00000000 .Decoration:GreySmokeTrail )
  850:  Call     SetGoalToTarget 	( .Actor:Self )
  860:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  878:  Call     EnemyTestTarget ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  89C:  Switch  *Var[0] 
  8A8:  	CaseOR  ==  .HitResult:Miss % 6
  8B4:  	CaseOR  ==  .HitResult:Lucky % 5
  8C0:  		Set  *Var[A]  *Var[0] 
  8D0:  		Thread
  8D8:  			Call     $Function_80218D10 ( )
  8E4:  			Call     RemoveActorDecoration 	( .Actor:Self 00000000 00000000 )
  8FC:  		EndThread
  904:  		Wait     00000004 
  910:  		Call     SetAnimation 	( .Actor:Self 00000001 000A0A09 )
  928:  		Call     SetActorRotationOffset 	( .Actor:Self FFFFFFF8 00000000 00000000 )
  944:  		Set  *Var[0]  00000000 
  954:  		Loop     00000002 
  960:  			Add  *Var[0]  0000001E 
  970:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  98C:  			Wait     00000001 
  998:  		EndLoop
  9A0:  		Wait     00000005 
  9AC:  		Call     GetActorPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
  9C8:  		Call     PlayEffect  	( ~FX:SmokeImpact:Small *Var[4] *Var[5] *Var[6] 00000010 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  A0C:  		Loop     00000005 
  A18:  			Add  *Var[0]  FFFFFFF4 
  A28:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  A44:  			Wait     00000001 
  A50:  		EndLoop
  A58:  		Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  A74:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000002 )
  A90:  		Wait     00000002 
  A9C:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 FFFFFFFE )
  AB8:  		Wait     00000002 
  AC4:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  AE0:  		If  *Var[A]  ==  00000005 
  AF0:  			Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  B14:  		EndIf
  B1C:  		Wait     0000000A 
  B28:  		Call     SetAnimation 	( .Actor:Self 00000001 000A0A0F )
  B40:  		Wait     0000000A 
  B4C:  		Call     UseBattleCamPreset 	( 00000002 )
  B5C:  		Call     YieldTurn   	( )
  B68:  		Call     8026F6EC ( FFFFFF81 )
  B78:  		Call     SetAnimation 	( .Actor:Self 00000001 000A0A06 )
  B90:  		Call     SetGoalToHome 	( .Actor:Self )
  BA0:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.5] )
  BB4:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  BCC:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  BE0:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  BF4:  		Return
  BFC:  	EndCaseGroup
  C04:  EndSwitch
  C0C:  Call     RemoveActorDecoration 	( .Actor:Self 00000000 00000000 )
  CD4:  Wait     00000002 
  CE0:  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 0000FFFF 00000000 00000006 00000020 )
  D10:  Switch  *Var[0] 
  D1C:  	CaseOR  ==  00000000 
  D28:  	CaseOR  ==  00000002 
  D34:  		Call     UseBattleCamPreset 	( 00000002 )
  D44:  		Call     MoveBattleCamOver 	( 00000008 )
  D54:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  D70:  		Add  *Var[0]  0000003C 
  D80:  		Set  *Var[1]  00000000 
  D90:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.4003906] )
  DA4:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  DC0:  		Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
  DE0:  		Add  *Var[0]  0000001E 
  DF0:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  E0C:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  E2C:  		Add  *Var[0]  00000014 
  E3C:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  E58:  		Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
  E78:  		Add  *Var[0]  0000000A 
  E88:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  EA4:  		Call     JumpToGoal  	( .Actor:Self 00000004 00000000 00000001 00000000 )
  EC4:  		Call     SetAnimation 	( .Actor:Self 00000001 000A0A0F )
  EDC:  		Wait     0000000F 
  EE8:  		Call     YieldTurn   	( )
  EF4:  		Call     8026F6EC ( FFFFFF81 )
  F04:  		Call     SetAnimation 	( .Actor:Self 00000001 000A0A06 )
  F1C:  		Call     SetGoalToHome 	( .Actor:Self )
  F2C:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.5] )
  F40:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  F58:  	EndCaseGroup
  F60:  EndSwitch
  F68:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  F7C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  F90:  Return
  F98:  End
}

#new:Script $Script_Kooper_FireShell
{
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self .False )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     UseBattleCamPreset 	( 0000003F )
	Call     BattleCamTargetActor ( .Actor:Self )
	Wait     0000000A 
	Call     SetAnimation 	( .Actor:Self 00000001 000A0A0E )
	Wait     0000000A 
	ChildThread
		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
		Add      *Var[1] 00000004 
		Call     PlayEffect  	( 0000001D 00000001 *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
		Wait     00000003 
		Call     PlayEffect  	( 0000001D 00000001 *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
		Wait     00000002 
		Call     PlayEffect  	( 0000001D 00000001 *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
	EndChildThread
	Call     PlaySoundAtActor 	( .Actor:Self 00002021 )
	Call     SetAnimation 	( .Actor:Self 00000001 000A0A0C )
	Wait     0000000A 
	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
	Call     PlaySoundAtActor 	( .Actor:Self 000020D3 )
	Call     SetActorSounds ( FFFFFF81 00000000 00000000 00000000 )
	Call     EnemyTestTarget ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
	Switch   *Var[0] 
		CaseOR   ==  00000006 
		CaseOR   ==  00000005 
			Set      *Var[A] *Var[0] 
			Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
			Call     SetGoalPos 	( .Actor:Self FFFFFF60 *Var[1] *Var[2] )
			Call     SetActorSpeed 	( .Actor:Self *Fixed[16.0] )
			Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:RedFlames )
			Wait     00000001 
			Call     ModifyActorDecoration 	( .Actor:Self 00000001 00000000 85` 85` 00000000 00000000 )
			Call     AddActorDecoration 	( .Actor:Self 00000001 00000001 .Decoration:FireSmokeTrail )
			Call     ModifyActorDecoration 	( .Actor:Self 00000001 00000001 100` 00000000 00000000 00000000 )
			Call     RunToGoal   	( .Actor:Self 00000000 .False )
			Call     GetBattlePhase ( *Var[0] )
			If       *Var[0] ==  .Phase:FirstStrike
				Call     UseBattleCamPreset 	( 00000005 )
				Call     SetBattleCamZoom  	( 0000012C )
				Call     SetBattleCamOffsetZ 	( 00000014 )
				Call     MoveBattleCamOver 	( 0000000A )
				Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
			EndIf
			Call     SetAnimation 	( .Actor:Self 00000001 000A0A09 )
			Wait     00000008 
			Call     8026F6EC ( FFFFFF81 )
			Call     SetActorYaw 	( .Actor:Self 000000B4 )
			Wait     00000004 
			If       *Var[A] ==  00000005 
				Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
			EndIf
    		Wait     0000000A 
    		Call     SetAnimation 	( .Actor:Self 00000001 000A0A0F )
    		Wait     0000000A 
    		Call     UseBattleCamPreset 	( 00000002 )
    		Call     YieldTurn   	( )
    		Call     8026F6EC ( FFFFFF81 )
    		Call     SetAnimation 	( .Actor:Self 00000001 000A0A06 )
    		Call     SetGoalToHome 	( .Actor:Self )
    		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.5] )
			Call     RunToGoal   	( .Actor:Self 00000000 .False )
			Call     SetAnimation 	( .Actor:Self 00000001 000A0A04 )
			Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
			Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000001 )
			Call     8026B438 ( FFFFFF81 00000001 00000000 )
			Call     SetActorYaw 	( .Actor:Self 00000000 )
			Call     EnableIdleScript 	( .Actor:Self 00000001 )
			Call     UseIdleAnimation 	( .Actor:Self .True )
			Return
		EndCaseGroup
	EndSwitch
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     SetGoalPos 	( .Actor:Self FFFFFF60 *Var[1] *Var[2] )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[24.0] )
	Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:RedFlames )
	Wait     00000001 
	Call     ModifyActorDecoration 	( .Actor:Self 00000001 00000000 85` 85` 00000000 00000000 )
	Call     AddActorDecoration 	( .Actor:Self 00000001 00000001 .Decoration:FireSmokeTrail )
	Call     ModifyActorDecoration 	( .Actor:Self 00000001 00000001 100` 00000000 00000000 00000000 )
	Thread
		Label    00000000 
		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
		Call     GetActorPos 	( .Actor:Player *Var[3] *Var[4] *Var[5] )
		Add *Var[3] 10` %check for a position ahead so that the damage isn't after he goes by
		If  *Var[0]  >  *Var[3] 
			Wait     00000001 
  			Goto     00000000 
		EndIf
		Call     SetTargetActor ( .Actor:Self .Actor:Player )
		Call     SetGoalToTarget 	( .Actor:Self )
		Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000002 0000FFFF 00000000 00000008 00000020 )
		Label    00000001
		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
		Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
		Add *Var[3] 10` %check for a position ahead so that the damage isn't after he goes by
		If  *Var[0]  >  *Var[3] 
			Wait     00000001 
  			Goto     00000001 
		EndIf
		Wait	 3` %give you a chance
		Call     SetTargetActor ( .Actor:Self .Actor:Partner )
		Call     SetGoalToTarget 	( .Actor:Self )
		Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000002 0000FFFF 00000000 00000003 00000020 )
	EndThread
	Call     RunToGoal   	( .Actor:Self 00000000 .False )
	Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
	Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000001 )
	Call     8026F6EC ( FFFFFF81 )
	Wait     00000002 
	%Switch   *Var[0] 
	%	CaseOR   ==  00000000 
	%	CaseOR   ==  00000002 
			Call     UseBattleCamPreset 	( 00000002 )
			Call     MoveBattleCamOver 	( 00000008 )
			Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
			Add  *Var[0]  00000028
			Set  *Var[1]  00000000 
			Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.4003906] )
			Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
			Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
			Add  *Var[0]  0000001E 
			Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
			Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
			Add  *Var[0]  00000014 
			Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
			Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
			Add  *Var[0]  0000000A 
			Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
			Call     JumpToGoal  	( .Actor:Self 00000004 00000000 00000001 00000000 )
			Call     SetAnimation 	( .Actor:Self 00000001 000A0A0F )
			Wait     0000000F 
			Call     YieldTurn   	( )
			Call     8026F6EC ( FFFFFF81 )
			Call     SetAnimation 	( .Actor:Self 00000001 000A0A06 )
			Call     SetGoalToHome 	( .Actor:Self )
			Call     SetActorSpeed 	( .Actor:Self *Fixed[4.5] )
			Call     RunToGoal   	( .Actor:Self 00000000 .False )
	%	EndCaseGroup
	%EndSwitch
	Call     EnableIdleScript 	( .Actor:Self .True )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End
}

#new:Script $Script_Kooper_DizzyShell
{
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self .False )
	Call     GetStatusFlags ( .Actor:Self *Var[0] )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     UseBattleCamPreset 	( 0000003F )
	Call     BattleCamTargetActor ( .Actor:Self )
	Call     SetGoalToTarget 	( .Actor:Self )
	If  *Var[0]  &  00080000 
		Call     AddGoalPos 	( .Actor:Self 00000008 00000000 00000000 )
	Else
		Call     AddGoalPos 	( .Actor:Self 00000014 00000000 00000000 )
	EndIf
	Call     SetAnimation 	( .Actor:Self 00000001 000A0A06 )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
	Call     RunToGoal   	( .Actor:Self 00000000 .False )
	Call     SetAnimation 	( .Actor:Self 00000001 000A0A0E )
	Wait     0000000A 
	Call     PlaySoundAtActor 	( .Actor:Self 00002021 )
	Call     SetAnimation 	( .Actor:Self 00000001 000A0A0D )
	Wait     00000014 
	Call     PlaySoundAtActor 	( .Actor:Self 00002026 )
	Call     AddActorDecoration 	( .Actor:Self 00000001 00000001 .Decoration:Whirlwind )
	Wait	 2`
	%Call     ModifyActorDecoration 	( .Actor:Self 00000001 00000001 155` 155` 0` 0` )
	Wait     00000028 
	Call     EnemyTestTarget ( .Actor:Self *Var[0] 40000000 00000000 00000000 00000010 )
	Switch *Var[0]
		CaseOR == 00000005
		CaseOR == 00000006
			Call     SetAnimation 	( .Actor:Self 00000001 000A0A06 )
			Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000001 )
			Call     SetGoalToHome 	( .Actor:Self )
			Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
			Call     RunToGoal   	( .Actor:Self 00000000 .False )
			Call     SetAnimation 	( .Actor:Self 00000001 000A0A04 )
			Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
			Call     8026B438 ( FFFFFF81 00000001 00000000 )
			Call     SetActorYaw 	( .Actor:Self 00000000 )
			Call     EnableIdleScript 	( .Actor:Self 00000001 )
			Call     UseIdleAnimation 	( .Actor:Self .True )
			Return
		EndCaseGroup
	EndSwitch
	Wait     00000002 
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 0000FFFF 80040264 00000005 00000020 )
	Wait	 00000008 %it looks weird if he just immediately leaves
	Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000001 )
	Call     SetAnimation 	( .Actor:Self 00000001 000A0A06 )
	Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000001 )
	Call     SetGoalToHome 	( .Actor:Self )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
	Call     RunToGoal   	( .Actor:Self 00000000 .False )
	Call     SetAnimation 	( .Actor:Self 00000001 000A0A04 )
	Call     8026B438 ( FFFFFF81 00000001 00000000 )
	Call     SetActorYaw 	( .Actor:Self 00000000 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Call     EnableIdleScript 	( .Actor:Self .True )
	Return
	End
}


#new:Function $Function_SetBlastPalette        
{
    0:  ADDIU        SP, SP, FFE8
    4:  SW            RA, 10 (SP)
    8:  LW            V0, C (A0)
    C:  JAL            ~Func:get_variable
   10:  LW            A1, 0 (V0)
   14:  LW            V1, C (V0)
   18:  ADDIU        A0, R0, D0                %R
   1C:  SB            A0, 50 (V1)
   20:  LW            V1, C (V0)
        ADDIU        A0, R0, 00                %G
   24:  SB            A0, 51 (V1)
   28:  LW            V1, C (V0)
   2C:  ADDIU        A1, R0, D0                %B
   30:  SB            A1, 52 (V1)
   34:  LW            A0, C (V0)
   38:  ADDIU        V1, R0, FF                %R 2
   3C:  SB            V1, 53 (A0)
   40:  LW            A0, C (V0)
   44:  ADDIU        V1, R0, B0                %G 2
   48:  SB            V1, 54 (A0)
   4C:  LW            V1, C (V0)
        ADDIU        A1, R0, FF                %B 2
   50:  SB            A1, 55 (V1)
   54:  LW            RA, 10 (SP)
   58:  ADDIU        V0, R0, 2
   5C:  JR            RA
   60:  ADDIU        SP, SP, 18
}

#new:IdleAnimations $IdleAnimations_80220660
{
.Status:Normal    000B0E04
.Status:Stone     000B0E00
.Status:Sleep     000B0E1E %just use the dizzy anim again lol
.Status:Poison    000B0E04
.Status:Stop      000B0E00
.Status:Static    000B0E04
.Status:Paralyze  000B0E00
.Status:Dizzy     000B0E1E
.Status:Fear      000B0E1E
.Status:End
}

#new:DefenseTable $DefenseTable_802206AC
{
.Element:Normal 00000001
.Element:End
}

#new:StatusTable $StatusTable_802206B8 %paralyze + dizzy
{
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      50`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy       0`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   50`
.Status:Shrink      0`
.Status:Stop       50`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End
}

#new:PartsTable $PartsTable_80220764
{
00800000 01000000 001600FF $IdleAnimations_80220660 $DefenseTable_802206AC 00000000 00000000 FEF90000 00000000 
}

#new:Actor $DarkBombette
{
% stats
[Index]        55b 
[Level]        23`b 
[MaxHP]        70`b 
[Coins]         2`b 
[Flags]       00000000 
[StatusTable] $StatusTable_802206B8 
% ai
[PartsCount]   1`s 
[PartsTable] $PartsTable_80220764 
[Script]      $Script_Init_802207B0 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]   3`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         30`b  28`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_802207B0
{
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_Bombette )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_802207FC )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80220984 )
		Call	 SetActorVar	( .Actor:Self 00000009 00000000 )
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_802207FC
{
    0:  Return
    8:  End
}

#new:Script $Script_Bombette_ShockExplosion
{
    0:  Call     8027D32C ( FFFFFF81 )
   10:  Set  *Var[A]  *Var[0] 
   20:  Set  *Var[B]  *Var[1] 
   30:  Set  *Var[C]  *Var[2] 
   40:  Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
   5C:  Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   78:  Call     SetActorDispOffset ( FFFFFF81 00000000 00000000 00000000 )
   94:  Call     SetAnimation 	( .Actor:Self *Var[A] *Var[B] )
   AC:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   C8:  Add  *Var[0]  0000000F 
   D8:  Add  *Var[1]  0000000A 
   E8:  Call     SetActorJumpGravity 	( .Actor:Self *Fixed[0.10058594] )
   FC:  Call     SetAnimation 	( .Actor:Self *Var[A] *Var[B] )
  114:  Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  130:  Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000000 00000000 )
  150:  Set  *Var[0]  *Var[A] 
  160:  Set  *Var[1]  *Var[B] 
  170:  ExecWait DoShockHit 
  17C:  Call     UseBattleCamPreset 	( 00000002 )
  18C:  Thread
  194:  	Call     SetActorRotationOffset 	( .Actor:Self 00000000 *Var[C] 00000000 )
  1B0:  	Set  *Var[0]  00000000 
  1C0:  	Loop     0000000F 
  1CC:  		Add  *Var[0]  FFFFFFD0 
  1DC:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  1F8:  		Wait     00000001 
  204:  	EndLoop
  20C:  	Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  228:  EndThread
  230:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  24C:  Add  *Var[0]  0000003C 
  25C:  Set  *Var[1]  00000000 
  26C:  Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.4003906] )
  280:  Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  29C:  Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  2BC:  Add  *Var[0]  00000014 
  2CC:  Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2E8:  Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  308:  Add  *Var[0]  0000000A 
  318:  Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  334:  Call     JumpToGoal  	( .Actor:Self 00000004 00000000 00000001 00000000 )
  354:  Return
  35C:  End
}

#new:Script $Script_HandleEvent_80220984 %no insta-death
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetLastEvent 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	Case  ==  .Event:HitCombo % 9
   54:  		SetConst  *Var[0]  00000001 
   64:  		SetConst  *Var[1]  000B0E12 
   74:  		ExecWait DoNormalHit 
   80:  	Case  ==  .Event:Hit % A
				SetConst  *Var[0]  00000001 
				SetConst  *Var[1]  000B0E12 
				ExecWait DoNormalHit 
  170:  	Case  ==  .Event:BurnHit % E
				SetConst  *Var[0]  00000001 
				SetConst  *Var[1]  000B0E13 
				SetConst  *Var[2]  000B0E14 
				ExecWait DoBurnHit 
  214:  	Case  ==  .Event:BurnDeath % 24
  220:  		SetConst  *Var[0]  00000001 
  230:  		SetConst  *Var[1]  000B0E13 
  240:  		SetConst  *Var[2]  000B0E14 
  250:  		ExecWait DoBurnHit 
  274:  		SetConst  *Var[0]  00000001 
  284:  		SetConst  *Var[1]  000B0E14 
  294:  		Set  *Var[2]  FFFFCFC7 
  2A4:  		ExecWait DoDeath 
  2B0:  		Return
  2B8:  	Case  ==  .Event:SpinSmashHit % B
  2C4:  		SetConst  *Var[0]  00000001 
  2D4:  		SetConst  *Var[1]  000B0E12 
  2E4:  		ExecWait DoSpinSmashHit 
  2F0:  	Case  ==  .Event:SpinSmashDeath % 21
  308:  		SetConst  *Var[0]  00000001 
  318:  		SetConst  *Var[1]  000B0E12 
  328:  		ExecWait DoSpinSmashHit 
  334:  		SetConst  *Var[0]  00000001 
  344:  		SetConst  *Var[1]  000B0E12 
  354:  		ExecWait DoDeath 
  360:  		Return
  368:  	Case  ==  .Event:ShockHit % 2F
				SetConst  *Var[0]  00000001 
				SetConst  *Var[1]  000B0E12 
				Set  *Var[2]  0000000F 
				ExecWait $Script_Bombette_ShockExplosion
				Call     SetAnimation 	( .Actor:Self 00000001 000B0E08 )
				Call     SetGoalToHome 	( .Actor:Self )
				Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
				Call     RunToGoal   	( .Actor:Self 00000000 .False )
  374:  	Case  ==  .Event:ShockDeath % 26
  380:  		Call     HPBarToCurrent ( .Actor:Self )
  390:  		Call     SetAnimation 	( .Actor:Self 00000001 000B0E13 )
  3A8:  		Wait     00000014 
				ExecWait $Script_Bombette_ShockExplosion
  3CC:  		Call     UseBattleCamPreset 	( 00000002 )
  3DC:  		SetConst  *Var[0]  00000001 
  3EC:  		SetConst  *Var[1]  000B0E14 
  3FC:  		Set  *Var[2]  FFFFCFC7 
  40C:  		ExecWait DoDeath 
  418:  		Return
  428:  	CaseOR  ==  00000017 % 17
  434:  	CaseOR  ==  .Event:Immune % 19
  440:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  44C:  		SetConst  *Var[0]  00000001 
  45C:  		SetConst  *Var[1]  000B0E04 
  46C:  		ExecWait DoImmune 
  478:  	EndCaseGroup
  480:  	Case  ==  .Event:Death % 20
  498:  		SetConst  *Var[0]  00000001 
  4A8:  		SetConst  *Var[1]  000B0E12 
  4B8:  		ExecWait DoNormalHit 
  4C4:  		Wait     0000000A 
  4D0:  		SetConst  *Var[0]  00000001 
  4E0:  		SetConst  *Var[1]  000B0E12 
  4F0:  		ExecWait DoDeath 
  4FC:  		Return
  504:  	Case  ==  .Event:RecoverStatus % 31
  510:  		SetConst  *Var[0]  00000001 
  520:  		SetConst  *Var[1]  000B0E04 
  530:  		ExecWait DoRecover 
  53C:  	Case  ==  .Event:ScareAway % 39
  548:  		SetConst  *Var[0]  00000001 
  558:  		SetConst  *Var[1]  000B0E08 
  568:  		SetConst  *Var[2]  000B0E12 
  578:  		ExecWait DoScareAway 
  584:  		Return
  58C:  	Case  ==  .Event:BeginAirLift % 3A
  598:  		SetConst  *Var[0]  00000001 
  5A8:  		SetConst  *Var[1]  000B0E08 
  5B8:  		ExecWait DoAirLift 
  5C4:  	Case  ==  .Event:BlowAway % 16
  5D0:  		SetConst  *Var[0]  00000001 
  5E0:  		SetConst  *Var[1]  000B0E12 
  5F0:  		ExecWait DoBlowAway 
  5FC:  		Return
  604:  	Default
  60C:  EndSwitch
  614:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  628:  Call     UseIdleAnimation 	( .Actor:Self .True )
  63C:  Return
  644:  End
}

%AI:
%	mega bomb (body slam if partner is stunned)
%	regular bomb
%	shrink bomb (body slam if partner is stunned)

#new:Script $Script_TakeTurn_Bombette
{
	Call     EnableIdleScript 	( .Actor:Self .False )
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call	GetActorVar ( .Actor:Self 00000009 *Var[9] )
	Switch *Var[9]
		Case == 00000000
			Call	 SetActorVar 	( .Actor:Self 00000009 00000001 )
			Call	 GetStatusFlags ( .Actor:Partner *Var[B] )
			If  *Var[B]  &  01000000 
				ExecWait $Script_Bombette_BodySlam
			Else
				ExecWait $Script_Bombette_MegaBomb
			EndIf
		Case == 00000001
			Call	 SetActorVar 	( .Actor:Self 00000009 00000002 )
			ExecWait $Script_Bombette_Bomb
		Case == 00000002
			Call	 SetActorVar 	( .Actor:Self 00000009 00000000 )
			Call	 GetStatusFlags ( .Actor:Partner *Var[B] )
			If  *Var[B]  &  01000000 
				ExecWait $Script_Bombette_BodySlam
			Else
				ExecWait $Script_Bombette_ShrinkBomb
			EndIf
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self .True )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End
}

#new:Script $Script_Bombette_Bomb
{
	Call	 SetTargetActor ( .Actor:Self .Actor:Player )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     AddGoalPos 	( .Actor:Self 0000000C 00000000 00000000 )		
	Call     PlaySoundAtActor 	( .Actor:Self 00000287 ) %fuse
	Thread
		Call     SetAnimation 	( .Actor:Self 00000000 000B0E09 )
		Call     RunToGoal   	( .Actor:Self 00000023 ) 
		Call     SetAnimation 	( .Actor:Self 00000000 000B0E1A )
	EndThread
	Call     EnemyTestTarget ( .Actor:Self *Var[C] 00000000 00000000 00000001 00000010 )
	If *Var[C] == 5 %lucky hit triggers a premature explosion
		Wait	1E
		Call     StopSound   	( 00000287 ) %no more fuse
		Call     80254218 ( 0000000B )
		Thread
			Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.75] )
			Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[3.0] )
			Call     ShakeCam    	( 00000001 00000000 0000000A *Fixed[4.5] )
			Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[3.0] )
		EndThread
		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
		Add  *Var[2]  00000002 
		Call     PlayEffect  	( ~FX:SmokeRing:Blast1 *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
		Add  *Var[1]  00000014 
		Add  *Var[2]  00000002 
		Call     PlayEffect  	( ~FX:Explosion1 *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
		Call     PlaySoundAtActor 	( .Actor:Self .Sound:BombBlast )
		Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
		Goto 	0
	EndIf
	Wait     2D %the regular partner move has a consistent timing, no matter where the enemy is 
	Call     StopSound   	( 00000287 ) %no more fuse
	Call     80254218 ( 0000000B )
	Thread
		Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.75] )
		Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[3.0] )
		Call     ShakeCam    	( 00000001 00000000 0000000A *Fixed[4.5] )
		Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[3.0] )
	EndThread
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[2]  00000002 
	Call     PlayEffect  	( ~FX:SmokeRing:Blast1 *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	Add  *Var[1]  00000014 
	Add  *Var[2]  00000002 
	Call     PlayEffect  	( ~FX:Explosion1 *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	Call     PlaySoundAtActor 	( .Actor:Self .Sound:BombBlast )
	If (*Var[C] == 6) %if mario is invisible, skip damage
		Goto 0
	Else
		Call     EnemyDamageTarget 	( .Actor:Self *Var[0] ~Flags:DamageType:NoContact|Blast 00000000 00000000 00000008 00000020 )
	EndIf
	Label 0 %fly up
	Call     UseBattleCamPreset 	( 00000002 ) %stop camera following
	Thread
		Set  *Var[0]  00000000 
		Loop     00000050 
			Wait     00000001 
			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
			Add  *Var[0]  00000021 
		EndLoop
		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
	EndThread
	Call     SetAnimation 	( .Actor:Self 00000000 000B0E1B )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Sub  *Var[0]  00000032 
	Add  *Var[1]  000000C8 
	Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     FlyToGoal  	( .Actor:Self 0000000A 00000000 .Easing:Linear )
	Wait     00000032 
	Call     80280818 ( )
	Call     SetGoalToHome 	( .Actor:Self )
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[0]  00000019 
	Add  *Var[1]  000000C8 
	Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     SetGoalToHome 	( .Actor:Self )
	Call     YieldTurn   	( ) %allows next enemy's turn script to start
	Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
	Call     SetActorJumpGravity 	( .Actor:Self *Fixed[0.60058594] )
	Call     SetAnimation 	( .Actor:Self 00000000 000B0E1B )
	Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
	Call     SetAnimation 	( .Actor:Self 00000000 000B0E04 )
	Return
	End
}

#new:Script $Script_Bombette_MegaBomb
{
	Call	 SetTargetActor ( .Actor:Self .Actor:Player )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     AddGoalPos 	( .Actor:Self 00000020 00000000 00000000 )		
	Call     PlaySoundAtActor 	( .Actor:Self 00000287 ) %fuse
	Thread
		Call     SetAnimation 	( .Actor:Self 00000000 000B0E09 )
		Call     RunToGoal   	( .Actor:Self 00000023 ) 
		Call     SetAnimation 	( .Actor:Self 00000000 000B0E1A )
	EndThread
	Call     EnemyTestTarget ( .Actor:Self *Var[C] 00000000 00000000 00000001 00000010 )
	If *Var[C] == 5 %lucky hit triggers a premature explosion
		Wait	1E
		Call     StopSound   	( 00000287 ) %no more fuse
		Call     80254218 ( 0000000B )
		Thread
			Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.75] )
			Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[3.0] )
			Call     ShakeCam    	( 00000001 00000000 0000000A *Fixed[4.5] )
			Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[3.0] )
		EndThread
		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
		Add  *Var[2]  00000002 
		Call     PlayEffect  	( ~FX:SmokeRing:Blast1 *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
		Add  *Var[1]  00000014 
		Add  *Var[2]  00000002 
		Call     PlayEffect  	( ~FX:Explosion1 *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
		Call     PlaySoundAtActor 	( .Actor:Self .Sound:BombBlast )
		Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
		Goto 	0
	EndIf
	Wait     32 %the regular partner move has a consistent timing, no matter where the enemy is 
	Call     StopSound   	( 00000287 ) %no more fuse
	Call     80254218 ( 0000000B )
	Thread
		Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.75] )
		Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[3.0] )
		Call     ShakeCam    	( 00000001 00000000 0000000A *Fixed[4.5] )
		Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[3.0] )
	EndThread
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[2]  00000002 
	Call     PlayEffect  	( ~FX:SmokeRing:Blast1 *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	Add  *Var[1]  00000014 
	Add  *Var[2]  00000002 
	Call     PlayEffect  	( ~FX:Explosion1 *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	Call     PlaySoundAtActor 	( .Actor:Self .Sound:BombBlast )
	If (*Var[C] == 6) %if mario is invisible, skip damage
		Goto 3
	Else
		Call     EnemyDamageTarget 	( .Actor:Self *Var[0] ~Flags:DamageType:NoContact|Blast 00000000 00000000 00000008 00000020 )
	EndIf
	Thread
		Set   *VarA  00000000
		Wait  10`
		Call  $Function_80238000    ( 00000058 00000021 00000005 )
		Wait  10`
		Call  $Function_80238000    ( 00000012 00000049 00000005 )
		Wait  10`
		Call  $Function_80238000    ( 00000078 00000013 00000005 )
		Wait  10`
	EndThread
	%Try hitting partner now
	Label 3
	Wait 6` %make this block possible
	Call     SetTargetActor ( .Actor:Self .Actor:Partner )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     EnemyTestTarget ( .Actor:Self *Var[C] 00000000 00000000 00000001 00000010 )
	Switch	*VarC
		CaseOR == 5`
		CaseOR == 6`
			Goto 0
		EndCaseGroup
	EndSwitch
	Call     EnemyDamageTarget 	( .Actor:Self *Var[0] ~Flags:DamageType:NoContact|Blast 00000000 00000000 00000003 00000020 )
	Label 0 %fly up
	Call     UseBattleCamPreset 	( 00000002 ) %stop camera following
	Thread
		Set  *Var[0]  00000000 
		Loop     00000050 
			Wait     00000001 
			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
			Add  *Var[0]  00000021 
		EndLoop
		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
	EndThread
	Call     SetAnimation 	( .Actor:Self 00000000 000B0E1B )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Sub  *Var[0]  00000032 
	Add  *Var[1]  000000C8 
	Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     FlyToGoal  	( .Actor:Self 0000000A 00000000 .Easing:Linear )
	Wait     00000032 
	Call     80280818 ( )
	Call     SetGoalToHome 	( .Actor:Self )
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[0]  00000019 
	Add  *Var[1]  000000C8 
	Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     SetGoalToHome 	( .Actor:Self )
	Call     YieldTurn   	( ) %allows next enemy's turn script to start
	Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
	Call     SetActorJumpGravity 	( .Actor:Self *Fixed[0.60058594] )
	Call     SetAnimation 	( .Actor:Self 00000000 000B0E1B )
	Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
	Call     SetAnimation 	( .Actor:Self 00000000 000B0E04 )
	Return
	End
}

#new:Script $Script_Bombette_ShrinkBomb
{
	Call	 SetTargetActor ( .Actor:Self .Actor:Player )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     AddGoalPos 	( .Actor:Self 00000020 00000000 00000000 )		
	Call     PlaySoundAtActor 	( .Actor:Self 00000287 ) %fuse
	Thread
		Call     SetAnimation 	( .Actor:Self 00000000 000B0E09 )
		Call     RunToGoal   	( .Actor:Self 00000023 ) 
		Call     SetAnimation 	( .Actor:Self 00000000 000B0E1A )
	EndThread
	Call     EnemyTestTarget ( .Actor:Self *Var[C] 00000000 00000000 00000001 00000010 )
	If *Var[C] == 5 %lucky hit triggers a premature explosion
		Wait	1E
		Call     StopSound   	( 00000287 ) %no more fuse
		Call     80254218 ( 0000000B )
		Thread
			Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.75] )
			Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[3.0] )
			Call     ShakeCam    	( 00000001 00000000 0000000A *Fixed[4.5] )
			Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[3.0] )
		EndThread
		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
		Add  *Var[2]  00000002 
		Call     PlayEffect  	( ~FX:SmokeRing:Blast1 *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
		Add  *Var[1]  00000014 
		Add  *Var[2]  00000002 
		Call     PlayEffect  	( ~FX:Explosion1 *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
		Call     PlaySoundAtActor 	( .Actor:Self .Sound:BombBlast )
		Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
		Goto 	0
	EndIf
	Wait     32 %the regular partner move has a consistent timing, no matter where the enemy is 
	Call     StopSound   	( 00000287 ) %no more fuse
	Call     80254218 ( 0000000B )
	Thread
		Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.75] )
		Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[3.0] )
		Call     ShakeCam    	( 00000001 00000000 0000000A *Fixed[4.5] )
		Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[3.0] )
	EndThread
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[2]  00000002 
	Call     PlayEffect  	( ~FX:SmokeRing:Blast1 *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	Add  *Var[1]  00000014 
	Add  *Var[2]  00000002 
	Call     PlayEffect  	( ~FX:Explosion1 *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	Call     PlaySoundAtActor 	( .Actor:Self .Sound:BombBlast )
	If (*Var[C] == 6) %if mario is invisible, skip damage
		Goto 3
	Else
		Call     EnemyDamageTarget 	( .Actor:Self *Var[0] ~Flags:DamageType:NoContact|Blast 00000000 80080264 00000005 00000020 )
	EndIf
	Thread
		Set   *VarA  00000000
		Wait  10`
		Call  GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
		Call  PlayEffect    ( ~FX:RedImpact:Huge *Var0 00000000 *Var2 00000001 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
		Call  $Function_SetBlastPalette ( *VarF )		
		Call  $Function_80238000    ( 00000012 00000049 00000005 )
		Wait  10`
		Call  $Function_80238000    ( 00000078 00000013 00000005 )
		Wait  10`
	EndThread
	%Try hitting partner now
	Label 3
	Wait 6` %make this block possible
	Call     SetTargetActor ( .Actor:Self .Actor:Partner )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     EnemyTestTarget ( .Actor:Self *Var[C] 00000000 00000000 00000001 00000010 )
	Switch	*VarC
		CaseOR == 5`
		CaseOR == 6`
			Goto 0
		EndCaseGroup
	EndSwitch
	Call     EnemyDamageTarget 	( .Actor:Self *Var[0] ~Flags:DamageType:NoContact|Blast 00000000 00000000 00000001 00000020 )
	Label 0 %fly up
	Call     UseBattleCamPreset 	( 00000002 ) %stop camera following
	Thread
		Set  *Var[0]  00000000 
		Loop     00000050 
			Wait     00000001 
			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
			Add  *Var[0]  00000021 
		EndLoop
		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
	EndThread
	Call     SetAnimation 	( .Actor:Self 00000000 000B0E1B )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Sub  *Var[0]  00000032 
	Add  *Var[1]  000000C8 
	Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     FlyToGoal  	( .Actor:Self 0000000A 00000000 .Easing:Linear )
	Wait     00000032 
	Call     80280818 ( )
	Call     SetGoalToHome 	( .Actor:Self )
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[0]  00000019 
	Add  *Var[1]  000000C8 
	Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     SetGoalToHome 	( .Actor:Self )
	Call     YieldTurn   	( ) %allows next enemy's turn script to start
	Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
	Call     SetActorJumpGravity 	( .Actor:Self *Fixed[0.60058594] )
	Call     SetAnimation 	( .Actor:Self 00000000 000B0E1B )
	Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
	Call     SetAnimation 	( .Actor:Self 00000000 000B0E04 )
	Return
	End
}

#new:Script $Script_Bombette_BodySlam
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Wait     0000000A 
   34:  Call     UseBattleCamPreset 	( 0000003F )
   44:  Call     BattleCamTargetActor ( .Actor:Self )
   54:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   68:  Call     SetGoalToTarget 	( .Actor:Self )
   78:  Call     AddGoalPos 	( .Actor:Self 00000028 00000000 00000000 )
   94:  Call     MoveBattleCamOver 	( 0000001E )
   A4:  Call     SetAnimation 	( .Actor:Self 00000001 000B0E08 )
   BC:  Call     RunToGoal   	( .Actor:Self 0000001E .False )
   D4:  Call     SetAnimation 	( .Actor:Self 00000001 000B0E04 )
   EC:  Call     SetAnimation 	( .Actor:Self 00000001 000B0E0F )
  104:  Wait     0000000F 
  110:  Call     SetActorSounds ( FFFFFF81 00000000 00000000 00000000 )
  12C:  Call     PlaySoundAtActor 	( .Actor:Self 00002020 )
  140:  Call     EnemyTestTarget ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  164:  Switch  *Var[0] 
  170:  	CaseOR  ==  .HitResult:Miss % 6
  17C:  	CaseOR  ==  .HitResult:Lucky % 5
  188:  		Set  *Var[A]  *Var[0] 
  198:  		Call     SetGoalToTarget 	( .Actor:Self )
  1A8:  		Call     AddGoalPos 	( .Actor:Self FFFFFFF6 00000000 00000000 )
  1C4:  		Call     SetAnimation 	( .Actor:Self 00000001 000B0E10 )
  1DC:  		Call     RunToGoal   	( .Actor:Self 00000005 .False )
  1F4:  		Call     SetAnimation 	( .Actor:Self 00000001 000B0E04 )
  20C:  		Thread
  214:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000F 00000000 )
  230:  			Set  *Var[0]  00000000 
  240:  			Loop     0000000A 
  24C:  				Add  *Var[0]  00000048 
  25C:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  278:  				Wait     00000001 
  284:  			EndLoop
  28C:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  2A8:  		EndThread
  2B0:  		Call     AddGoalPos 	( .Actor:Self FFFFFFC4 00000000 00000000 )
  2CC:  		Call     RunToGoal   	( .Actor:Self 0000000A .False )
  2E4:  		Call     SetAnimation 	( .Actor:Self 00000001 000B0E04 )
  2FC:  		Thread
  304:  			Call     $Function_80218E34 ( )
  310:  		EndThread
  318:  		If  *Var[A]  ==  00000005 
  328:  			Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  34C:  		EndIf
  354:  		Wait     00000014 
  360:  		Call     UseBattleCamPreset 	( 00000002 )
  370:  		Call     YieldTurn   	( )
  37C:  		Call     SetAnimation 	( .Actor:Self 00000001 000B0E08 )
  394:  		Call     SetGoalToHome 	( .Actor:Self )
  3A4:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
  3B8:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  3D0:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  3E4:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  3F8:  		Return
  400:  	EndCaseGroup
  408:  EndSwitch
  410:  Set  *Var[A]  *Var[0] 
  420:  Call     SetGoalToTarget 	( .Actor:Self )
  430:  Call     SetAnimation 	( .Actor:Self 00000001 000B0E10 )
  448:  Call     RunToGoal   	( .Actor:Self 00000004 .False )
  51C:  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000006 00000020 )
  54C:  Switch  *Var[0] 
  558:  	CaseOR  ==  00000000 
  564:  	CaseOR  ==  00000002 
  570:  		Call     SetAnimation 	( .Actor:Self 00000001 000B0E04 )
  588:  		Call     UseBattleCamPreset 	( 00000002 )
  598:  		Call     MoveBattleCamOver 	( 00000008 )
  5A8:  		Call     SetAnimation 	( .Actor:Self 00000001 000B0E11 )
  5C0:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  5DC:  		Add  *Var[0]  00000028 
  5EC:  		Set  *Var[1]  00000000 
  5FC:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.4003906] )
  610:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  62C:  		Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
  64C:  		Call     SetAnimation 	( .Actor:Self 00000001 000B0E0E )
  664:  		Wait     00000001 
  670:  		Call     SetAnimation 	( .Actor:Self 00000001 000B0E11 )
  688:  		Add  *Var[0]  00000028 
  698:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  6B4:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  6D4:  		Call     SetAnimation 	( .Actor:Self 00000001 000B0E0E )
  6EC:  		Wait     00000001 
  6F8:  		Call     SetAnimation 	( .Actor:Self 00000001 000B0E11 )
  710:  		Add  *Var[0]  00000014 
  720:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  73C:  		Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
  75C:  		Call     SetAnimation 	( .Actor:Self 00000001 000B0E0E )
  774:  		Wait     00000001 
  780:  		Call     SetAnimation 	( .Actor:Self 00000001 000B0E11 )
  798:  		Add  *Var[0]  0000000A 
  7A8:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  7C4:  		Call     JumpToGoal  	( .Actor:Self 00000004 00000000 00000001 00000000 )
  7E4:  		Call     SetAnimation 	( .Actor:Self 00000001 000B0E0E )
  7FC:  		Wait     00000001 
  808:  		Call     SetAnimation 	( .Actor:Self 00000001 000B0E04 )
  820:  		Wait     00000008 
  82C:  		Call     YieldTurn   	( )
  838:  		Call     SetAnimation 	( .Actor:Self 00000001 000B0E08 )
  850:  		Call     SetGoalToHome 	( .Actor:Self )
  860:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
  874:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  88C:  	EndCaseGroup
  894:  EndSwitch
  89C:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  8B0:  Call     UseIdleAnimation 	( .Actor:Self .True )
  8C4:  Return
  8CC:  End
}


#new:IdleAnimations $IdleAnimations_802218C0
{
.Status:Normal    000C0601
.Status:Stone     000C0600
.Status:Sleep     000C0618
.Status:Poison    000C0601
.Status:Stop      000C0600
.Status:Static    000C0601
.Status:Paralyze  000C0600
.Status:Dizzy     000C0601
.Status:Fear      000C0601
.Status:End
}

#new:DefenseTable $DefenseTable_8022190C
{
.Element:Normal 00000001
.Element:Throw	00000000
.Element:End
}

#new:StatusTable $StatusTable_80221918 %sleep + dizzy
{
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      50`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      50`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink      0`
.Status:Stop       50`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End
}

#new:PartsTable $PartsTable_802219C4
{
00020000 01000000 FD2000FF $IdleAnimations_802218C0 $DefenseTable_8022190C 00000000 00000000 00F00000 00000000 
80800001 02003200 FDEE00FF 00000000 $DefenseTable_8022190C 00000000 00000000 00F00000 00000000 
}

#new:Actor $DarkParakarry
{
% stats
[Index]        56b 
[Level]        23`b 
[MaxHP]        50`b 
[Coins]         2`b 
[Flags]       00000200 
[StatusTable] $StatusTable_80221918 
% ai
[PartsCount]   2`s 
[PartsTable] $PartsTable_802219C4 
[Script]      $Script_Init_80221A34 
% move effectiveness
[Escape]       50`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]   3`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         38`b  38`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_80221A34
{
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_Parakarry )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_80221A80 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80221A90 )
		Call	 SetActorVar 	( .Actor:Self 00000009 00000000 )
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_80221A80
{
    0:  Return
    8:  End
}

#new:Script $Script_HandleEvent_80221A90
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetLastEvent 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		Call     GetLastElement ( *Var[1] )
   70:  		If  *Var[1]  &  00000020 
   80:  			SetConst  *Var[0]  00000001 
   90:  			SetConst  *Var[1]  000C060E 
   %A0:  			ExecWait $Script_8021BF64 
   AC:  			Return
   B4:  		Else
   BC:  			SetConst  *Var[0]  00000001 
   CC:  			SetConst  *Var[1]  000C060E 
   DC:  			ExecWait DoNormalHit 
   E8:  		EndIf
   F0:  	EndCaseGroup
   F8:  	Case  ==  .Event:BurnHit % E
  104:  		SetConst  *Var[0]  00000001 
  114:  		SetConst  *Var[1]  000C060F 
  124:  		SetConst  *Var[2]  000C0610 
  134:  		ExecWait DoBurnHit 
  140:  	Case  ==  .Event:BurnDeath % 24
  14C:  		SetConst  *Var[0]  00000001 
  15C:  		SetConst  *Var[1]  000C060F 
  16C:  		SetConst  *Var[2]  000C0610 
  17C:  		ExecWait DoBurnHit 
  194:  		Wait     0000000A 
  1A0:  		SetConst  *Var[0]  00000001 
  1B0:  		SetConst  *Var[1]  000C0610 
  1C0:  		ExecWait DoDeath 
  1CC:  		Return
  1D4:  	Case  ==  .Event:SpinSmashHit % B
  1E0:  		SetConst  *Var[0]  00000001 
  1F0:  		SetConst  *Var[1]  000C060E 
  200:  		ExecWait DoSpinSmashHit 
  20C:  	Case  ==  .Event:SpinSmashDeath % 21
  224:  		SetConst  *Var[0]  00000001 
  234:  		SetConst  *Var[1]  000C060E 
  244:  		ExecWait DoSpinSmashHit 
  250:  		SetConst  *Var[0]  00000001 
  260:  		SetConst  *Var[1]  000C060E 
  270:  		ExecWait DoDeath 
  27C:  		Return
  284:  	Case  ==  .Event:ShockHit % 2F
  290:  		SetConst  *Var[0]  00000001 
  2A0:  		SetConst  *Var[1]  000C060E 
  %2B0:  		ExecWait $Script_8021C428 
				ExecWait DoShockHit
				Call     SetGoalToHome 	( .Actor:Self )
				Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
				Call     SetAnimation 	( .Actor:Self 00000001 000C0603 )
				Call     FlyToGoal  	( .Actor:Self 00000000 FFFFFFFB .Easing:Linear )
  2BC:  		Return
  2C4:  	Case  ==  .Event:ShockDeath % 26
  2DC:  		SetConst  *Var[0]  00000001 
  2EC:  		SetConst  *Var[1]  000C060D 
  2FC:  		Set  *Var[2]  00000016 
  %30C:  		ExecWait $Script_8021CAB4 
  318:  		SetConst  *Var[0]  00000001 
  328:  		SetConst  *Var[1]  000C060E 
  338:  		ExecWait DoDeath 
  344:  		Return
  34C:  	CaseOR  ==  00000017 % 17
  358:  	CaseOR  ==  .Event:Immune % 19
  364:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  370:  		SetConst  *Var[0]  00000001 
  380:  		SetConst  *Var[1]  000C0601 
  390:  		ExecWait DoImmune 
  39C:  	EndCaseGroup
  3A4:  	Case  ==  .Event:Death % 20
  3BC:  		SetConst  *Var[0]  00000001 
  3CC:  		SetConst  *Var[1]  000C060E 
  3DC:  		ExecWait DoNormalHit 
  3E8:  		Wait     0000000A 
  3F4:  		SetConst  *Var[0]  00000001 
  404:  		SetConst  *Var[1]  000C060E 
  414:  		ExecWait DoDeath 
  420:  		Return
  428:  	Case  ==  .Event:RecoverStatus % 31
  434:  		SetConst  *Var[0]  00000001 
  444:  		SetConst  *Var[1]  000C0601 
  454:  		ExecWait DoRecover 
  460:  	Case  ==  .Event:ScareAway % 39
  46C:  		SetConst  *Var[0]  00000001 
  47C:  		SetConst  *Var[1]  000C0603 
  48C:  		SetConst  *Var[2]  000C060E 
  49C:  		ExecWait DoScareAway 
  4A8:  		Return
  4B0:  	Case  ==  .Event:BeginAirLift % 3A
  4BC:  		SetConst  *Var[0]  00000001 
  4CC:  		SetConst  *Var[1]  000C0603 
  4DC:  		ExecWait DoAirLift 
  4E8:  	Case  ==  .Event:BlowAway % 16
  4F4:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  508:  		If  *Var[0]  !&  0035D000 
  518:  			If  *Var[0]  &  00080000 
  528:  				Call     SetActorDispOffset ( FFFFFF81 00000000 00000001 00000000 )
  544:  			Else
  54C:  				Call     SetActorDispOffset ( FFFFFF81 00000000 00000003 00000000 )
  568:  			EndIf
  570:  		EndIf
  578:  		SetConst  *Var[0]  00000001 
  588:  		SetConst  *Var[1]  000C060E 
  598:  		ExecWait DoBlowAway 
  5A4:  		Return
  5AC:  	Default
  5B4:  EndSwitch
  5BC:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  5D0:  Call     UseIdleAnimation 	( .Actor:Self .True )
  5E4:  Return
  5EC:  End
}

#new:Script $Script_SkyDive
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseBattleCamPreset 	( 0000003F )
   4C:  Call     BattleCamTargetActor ( .Actor:Self )
   5C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   74:  Call     SetAnimation 	( .Actor:Self 00000001 000C0603 )
   8C:  Call     SetGoalToTarget 	( .Actor:Self )
   9C:  Call     AddGoalPos 	( .Actor:Self 00000014 00000000 00000000 )
   B8:  Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
   CC:  Call     FlyToGoal  	( .Actor:Self 00000000 FFFFFFF6 .Easing:CosInOut )
   E8:  Call     SetAnimation 	( .Actor:Self 00000001 000C0600 )
  100:  Wait     00000003 
  10C:  Call     8024E664 ( 00000001 )
  11C:  Call     SetActorSounds ( FFFFFF81 00000001 00000000 00000000 )
  138:  Call     PlaySoundAtActor 	( .Actor:Self 00002004 )
  14C:  Call     SetAnimation 	( .Actor:Self 00000001 000C0614 )
  164:  Call     AddGoalPos 	( .Actor:Self 00000000 0000000A 00000000 )
  180:  Call     FlyToGoal  	( .Actor:Self 00000005 00000000 .Easing:Linear )
  19C:  Wait     00000002 
  1A8:  Thread
  1B0:  	Wait     00000003 
  1BC:  	Call     SetAnimation 	( .Actor:Self 00000001 000C0604 )
  1D4:  EndThread
  1DC:  Call     AddGoalPos 	( .Actor:Self 00000028 0000000F 00000000 )
  1F8:  Call     FlyToGoal  	( .Actor:Self 0000000F FFFFFFEC .Easing:QuarticOut )		%14 -> F
  214:  Call     PlaySoundAtActor 	( .Actor:Self 00002005 )
  228:  Call     EnableActorBlur 	( .Actor:Self 00000001 )
  23C:  Call     SetGoalToTarget 	( .Actor:Self )
  24C:  Call     SetAnimation 	( .Actor:Self 00000001 000C0605 )
  264:  Call     FlyToGoal  	( .Actor:Self 00000004 00000000 .Easing:Linear )			%5 -> 4
  280:  Call     EnemyTestTarget ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  2A4:  Switch  *Var[0] 
  2B0:  	CaseOR  ==  .HitResult:Miss % 6
  2BC:  	CaseOR  ==  .HitResult:Lucky % 5
  2C8:  		Set  *Var[A]  *Var[0] 
  2D8:  		Thread
  2E0:  			Wait     00000005 
  2EC:  			Call     SetAnimation 	( .Actor:Self 00000001 000C0601 )
  304:  		EndThread
  30C:  		Call     SetGoalToTarget 	( .Actor:Self )
  31C:  		Call     AddGoalPos 	( .Actor:Self FFFFFFD8 0000000A 00000000 )
  338:  		Call     FlyToGoal  	( .Actor:Self 0000000A FFFFFFEC .Easing:QuadraticOut )
  354:  		If  *Var[A]  ==  00000005 
  364:  			Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  388:  		EndIf
  390:  		Wait     00000014 
  39C:  		Call     EnableActorBlur 	( .Actor:Self 00000000 )
  3B0:  		Wait     0000000F 
  3BC:  		Call     UseBattleCamPreset 	( 00000002 )
  3CC:  		Call     YieldTurn   	( )
  3D8:  		Call     SetGoalToHome 	( .Actor:Self )
  3E8:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  3FC:  		Call     SetAnimation 	( .Actor:Self 00000001 000C0603 )
  414:  		Call     FlyToGoal  	( .Actor:Self 00000000 FFFFFFFB .Easing:Linear )
  430:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  444:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  458:  		Return
  460:  	EndCaseGroup
  468:  EndSwitch
  470:  Call     EnableActorBlur 	( .Actor:Self 00000000 )
  484:  Call     SetAnimation 	( .Actor:Self 00000001 000C0606 )
  49C:  Wait     00000001 
  558:  Wait     00000002 
  564:  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000007 00000020 )
  594:  Call     PlaySound   	( 00000000 )
  5A4:  Switch  *Var[0] 
  5B0:  	CaseOR  ==  00000000 
  5BC:  	CaseOR  ==  00000002 
  5C8:  		Call     UseBattleCamPreset 	( 00000002 )
  5D8:  		Call     SetAnimation 	( .Actor:Self 00000001 000C0605 )
  5F0:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.4003906] )
  604:  		Call     AddGoalPos 	( .Actor:Self 00000032 00000000 00000000 )
  620:  		Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000000 00000000 )
  640:  		Call     SetAnimation 	( .Actor:Self 00000001 000C0600 )
  658:  		Thread
  660:  			Wait     00000004 
  66C:  			Call     SetAnimation 	( .Actor:Self 00000001 000C0603 )
  684:  		EndThread
  68C:  		Call     AddGoalPos 	( .Actor:Self 0000001E 00000000 00000000 )
  6A8:  		Call     80279728 ( FFFFFF81 0000000A *Fixed[4.0] )
  6C0:  		Call     SetAnimation 	( .Actor:Self 00000001 000C0601 )
  6D8:  		Wait     00000006 
  6E4:  		Call     YieldTurn   	( )
  6F0:  		Call     SetGoalToHome 	( .Actor:Self )
  700:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  714:  		Call     SetAnimation 	( .Actor:Self 00000001 000C0603 )
  72C:  		Call     FlyToGoal  	( .Actor:Self 00000000 FFFFFFFB .Easing:Linear )
  748:  	EndCaseGroup
  750:  EndSwitch
  758:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  76C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  780:  Return
  788:  End
}

#new:Script $Script_ShellShot
{
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     UseBattleCamPreset 	( 0000003F )
	Call     BattleCamTargetActor ( .Actor:Self )
	Call     SetAnimation 	( .Actor:Self 00000001 000C0607 )
	Wait     0000000F
	Call     SetAnimation 	( .Actor:Self 00000001 000C0608 )
	Wait	 00000020
	Call     EnableActorBlur 	( .Actor:Self 00000001 )
	Call     EnemyTestTarget ( .Actor:Self *Var[0] 10000000 00000000 00000001 00000010 )
	Call     SetGoalToTarget 	( .Actor:Self )
	Switch (*Var[0])
		Case == 00000005 %lucky: misses you
			Call     EnableActorBlur 	( .Actor:Self 00000001 )
			Call     SetGoalToTarget 	( .Actor:Self )
			Call     AddGoalPos 	( .Actor:Self 00000032 FFFFFFCE 00000000 )
			Call     SetAnimation 	( .Actor:Self 00000001 000C060A )
			Call     FlyToGoal  	( .Actor:Self 00000007 00000000 00000064 )
			Call     EnableActorBlur 	( .Actor:Self 00000000 )
			Wait 	 00000004
			Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
			Goto 0
		Case == 00000006 %invis: goes through you
			Call     EnableActorBlur 	( .Actor:Self 00000001 )
			Call     SetGoalToTarget 	( .Actor:Self )
			Call     AddGoalPos 	( .Actor:Self FFFFFFCE FFFFFFCE 00000000 )
			Call     SetAnimation 	( .Actor:Self 00000001 000C060A )
			Call     FlyToGoal  	( .Actor:Self 00000007 00000000 00000064 )
			Call     EnableActorBlur 	( .Actor:Self 00000000 )
			Wait 	 00000004
			Goto 0
		Default
	EndSwitch
	Call     SetAnimation 	( .Actor:Self 00000001 000C060A )
	Call     FlyToGoal  	( .Actor:Self 00000007 00000000 .Easing:Linear )
	Call     EnableActorBlur 	( .Actor:Self 00000000 )
	Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 0000000A 00000020 )
	Call     PlaySoundAtActor 	( .Actor:Self 00000110 ) %the regular sound
	%go home
	Label 0
	Call     UseBattleCamPreset 	( 00000002 ) %stop camera following
	Call     SetAnimation 	( .Actor:Self 00000001 000C0617 )
	Call     SetActorJumpGravity 	( .Actor:Self *Fixed[2.0] )
	Call     AddGoalPos 	( .Actor:Self FFFFFFD8 00000000 00000000 )
	Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000000 00000000 )
	Call     SetAnimation 	( .Actor:Self 00000001 000C0600 )
	ChildThread
		Wait     00000004 
		Call     SetAnimation 	( .Actor:Self 00000001 000C0603 )
	EndChildThread
	Call     AddGoalPos 	( .Actor:Self FFFFFFE8 00000000 00000000 )
	Call     80279728 ( .Actor:Self 00000005 *Fixed[4.0] ) %also found in the kick move
	Call     SetAnimation 	( .Actor:Self 00000001 000C0601 )
	Wait     00000002 
	Call     SetGoalToHome 	( .Actor:Self )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
	Call     SetAnimation 	( .Actor:Self 00000001 000C0603 )
	Call     FlyToGoal  	( .Actor:Self 00000000 FFFFFFFB .Easing:Linear )
	Call     SetAnimation 	( .Actor:Self 00000001 000C0602 )
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End
}

%air lift: copy from buzzar scripts too
#new:Script $Script_AirLift
{
   0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  SetGoalToTarget   ( .Actor:Self )
   4C:  Call  UseBattleCamPreset    ( 0000003F )
   %5C:  Call  SetBattleCamZoom  ( 000000F0 )
   6C:  Call  BattleCamTargetActor  ( .Actor:Self )
   7C:  Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
   90:  Call  SetGoalToTarget   ( .Actor:Self )
   A0:  Call  AddGoalPos        ( .Actor:Self 0000002D 00000037 00000000 )
  184:  Call  SetAnimation      ( .Actor:Self 00000001 000C0603 )
  19C:  Call  FlyToGoal ( .Actor:Self 00000000 FFFFFFF6 .Easing:CosInOut )
  1B8:  Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:0 00000000 00000004 00000010 )
  1DC:  Switch  *VarA
  1E8:  	CaseOR  ==  .HitResult:Miss % 6
  1F4:  	CaseOR  ==  .HitResult:Lucky % 5
  24C:  		Call  GetGoalPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  268:  		Add   *Var1  00000014
  278:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  294:  		Call  FlyToGoal     ( .Actor:Self 0000000A FFFFFFF6 .Easing:CosIn )
  2B0:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[8.0] )
  2C8:  		Call  SetAnimation  ( .Actor:Self 00000001 000C0601 )
  2E0:  		Wait  10`
				If  *VarA  ==  .HitResult:Lucky % 5
					Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
				EndIf
  2EC:  		Call  SetGoalToHome ( .Actor:Self )
  2FC:  		Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
  310:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
  328:  		Call  SetActorYaw   ( .Actor:Self 000000B4 )
  33C:  		Call  SetAnimation  ( .Actor:Self 00000001 000C0603 )
  354:  		Call  FlyToGoal     ( .Actor:Self 00000000 00000000 .Easing:Linear )
  370:  		Call  SetAnimation  ( .Actor:Self 00000001 000C0602 )
				Call  SetActorYaw   ( .Actor:Self 00000000 )
  388:  		Return
  430:  	EndCaseGroup
  438:  	Case  ==  .HitResult:Immune % 8			parakarry will try and fail to lift you
  2B0:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[8.0] )
  2C8:  		Call  SetAnimation  ( .Actor:Self 00000001 000C0615 )
  2E0:  		Wait  10`
  2EC:  		Call  SetGoalToHome ( .Actor:Self )
  2FC:  		Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
  310:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
  328:  		Call  SetActorYaw   ( .Actor:Self 000000B4 )
  33C:  		Call  SetAnimation  ( .Actor:Self 00000001 000C0603 )
  354:  		Call  FlyToGoal     ( .Actor:Self 00000000 00000000 .Easing:Linear )
  370:  		Call  SetAnimation  ( .Actor:Self 00000001 000C0602 )
				Call  SetActorYaw   ( .Actor:Self 00000000 )
  388:  		Return
  7A8:  	Default
  7B0:  EndSwitch
  7B8:  Wait  10`
  7D4:  Call  SetBattleCamZoom  ( 00000168 )
  7E4:  Call  MoveBattleCamOver ( 0000001E )
  7F4:  Thread
  7FC:  	Wait  5`
  808:  	Call  UseBattleCamPreset    ( 00000013 )
  818:  	Call  SetBattleCamZoom      ( 00000168 )
  828:  	Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
  844:  	Set   *Var1  0000001B
  854:  	Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
  86C:  	Call  MoveBattleCamOver     ( 00000014 )
  87C:  EndThread
  898:  Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
  8AC:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  8C0:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  8DC:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  8F8:  Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
  948:  Call  SetGoalToTarget   ( .Actor:Self )
  958:  Call  AddGoalPos    ( .Actor:Self FFFFFFF1 FFFFFFF6 00000000 )
  974:  Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  988:  Call  SetAnimation  ( .Actor:Self 00000001 000C0603 )
  9A0:  Call  FlyToGoal     ( .Actor:Self 00000008 FFFFFFFB .Easing:Linear )
  A10:  Call  SetAnimation      ( .Actor:Self 00000001 000C0615 )
  A28:  Call  $Function_802180C0    ( 000000B4 00000014 )
  A3C:  Call  UseIdleAnimation  ( .Actor:Player .False )
  A50:  Call  SetAnimation      ( .Actor:Player 00000000 0001002B )
  A68:  Call  ShowMessageBox    ( 00000040 0000005A )
  A7C:  Thread
  A84:  	Loop  0000005A
  A90:  		Call  SetMessageBoxDuration ( 00000063 )
  AA0:  		Wait  1`
  AAC:  	EndLoop
  AB4:  	Call  SetMessageBoxDuration ( 00000000 )
  AC4:  EndThread
  ACC:  Wait  20`
  AD8:  Call  LoadActionCommand ( .ActionCommand:BreakFree )
  AE8:  Call  802A9000 ( )
  AF4:  Call  SetupMashMeter    ( 00000001 0000001E 00000000 00000000 00000000 00000000 )
  B18:  Wait  10`
  B24:  Call  SetAnimation      ( .Actor:Self 00000001 000C0616 )
  B3C:  Call  UseBattleCamPreset    ( 00000042 )
  B4C:  Call  SetBattleCamZoom  ( 000000F0 )
  B5C:  Call  SetBattleCamOffsetZ   ( FFFFFFF6 )
  B6C:  Call  BattleCamTargetActor  ( .Actor:Self )
  B7C:  Call  MoveBattleCamOver ( 0000003C )
  B8C:  Call  SetBattleFlagBits ( 00004000 .False )
  BA0:  Call  802694A4  ( 00000001 )
  BB0:  Call  802A91B0  ( 00000000 0000003C 0000001E 00000003 )
		Exec  $Script_AirLift_FlyUp
  BDC:  Wait  62`
  BE8:  Call  GetActionSuccessCopy  ( *Var0 )
  BF8:  If  *Var0  >  00000000
  C08:  	Call  SetAnimation      ( .Actor:Self 00000001 000C0602 )
  C20:  	Wait  2`
  C2C:  	Kill  *VarA
  C38:  	Call  SetJumpAnimations ( .Actor:Player 00000000 00010007 00010007 00010009 )
  C58:  	Call  SetActorSpeed     ( .Actor:Player *Fixed[5.0] )
  C6C:  	Call  SetActorJumpGravity   ( .Actor:Player *Fixed[1.8] )
  C80:  	Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
  C9C:  	Set   *Var1  00000000
  CAC:  	Call  SetGoalPos        ( .Actor:Player *Var0 *Var1 *Var2 )
  CC8:  	Call  PlayerFallToGoal  ( 0000000F )
  CD8:  	Wait  8`
			%Wait  15`	Debug
  CE4:  	Call  SetAnimation      ( .Actor:Player 00000000 00010002 )
			%Wait  15`
  CFC:  	Call  UseIdleAnimation  ( .Actor:Player .True )
  D10:  	Wait  8`
  D1C:  	Call  UseBattleCamPreset    ( 00000002 )
			Call  SetGoalToHome ( .Actor:Self )
			Call  SetActorSpeed ( .Actor:Self *Fixed[12.0] )
			Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
			Call  SetAnimation  ( .Actor:Self 00000001 000C0603 )
			Call  FlyToGoal     ( .Actor:Self 00000000 00000000 .Easing:Linear )
			Call  SetAnimation  ( .Actor:Self 00000001 000C0602 )
  D38:  	Call  EnableIdleScript  ( .Actor:Self 00000001 )
  D4C:  	Call  UseIdleAnimation  ( .Actor:Self .True )
  D60:  	Return
  D68:  EndIf
  D70:  Call  UseBattleCamPreset    ( 00000013 )
  D80:  Call  SetBattleCamZoom  ( 00000168 )
  D90:  Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
  DAC:  Set   *Var1  00000032
  DBC:  Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
  DD4:  Call  MoveBattleCamOver ( 000000C8 )
  DE4:  Wait  39`
  DF0:  Wait  10`
  DFC:  Call  SetJumpAnimations ( .Actor:Player 00000000 0001001B 0001001B 0001001B )
  E1C:  Call  SetActorSpeed     ( .Actor:Player *Fixed[5.0] )
  E30:  Call  SetActorJumpGravity   ( .Actor:Player *Fixed[1.2] )
  E44:  Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
  E60:  Set   *Var1  00000000
  E70:  Call  SetGoalPos        ( .Actor:Player *Var0 *Var1 *Var2 )
  E8C:  Call  PlayerFallToGoal  ( 00000018 )
		%Wait  30`	Debug (trying to find what crashes here)
		Call  SetAnimation      ( .Actor:Player 00000000 00010002 )
		%Wait  30`
		Call  UseIdleAnimation  ( .Actor:Player .True )
		%Wait  30`
		Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  EB0:  Call  SetGoalToTarget   ( .Actor:Self )
  EC0:  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 12000000 00000000 00000000 00000009 00000020 )
  EE8:  Set   *VarF  *Var0
  EF8:  Switch  *VarF
  F04:  	CaseOR  ==  .HitResult:Hit % 0
  F10:  	CaseOR  ==  00000002 % 2
				Call  SetGoalToHome ( .Actor:Self )
				Call  SetActorSpeed ( .Actor:Self *Fixed[12.0] )
				Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
				Call  SetAnimation  ( .Actor:Self 00000001 000C0603 )
				Call  FlyToGoal     ( .Actor:Self 00000000 00000000 .Easing:Linear )
				Call  SetAnimation  ( .Actor:Self 00000001 000C0602 )
 1088:  		Wait  10`
 1094:  		Call  UseBattleCamPreset    ( 00000002 )
 10A4:  		Call  YieldTurn ( )
 10BC:  	EndCaseGroup
 10C4:  EndSwitch
 10CC:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
 10E0:  Call  UseIdleAnimation  ( .Actor:Self .True )
 10F4:  Return
 10FC:  End
}

%buzzar uses a separate script for flying up during the lifting attack
%so copying it here
#new:Script $Script_AirLift_FlyUp
{
   F8:  ChildThread
  100:  	Loop
  10C:  		Call  $Function_802180C0    ( 00000064 0000000A )
  120:  		Wait  10`
  12C:  	EndLoop
  134:  EndChildThread
  13C:  ChildThread
  144:  	Call  SetActorSpeed ( .Actor:Player *Fixed[5.0] )
  158:  	Call  SetActorJumpGravity   ( .Actor:Player *Fixed[0.1] )
  16C:  	Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
  188:  	Add   *Var1  000000B4
  198:  	Call  SetGoalPos    ( .Actor:Player *Var0 *Var1 *Var2 )
  1B4:  	Call  FlyToGoal     ( .Actor:Player 00000063 00000000 .Easing:Linear )
  1D0:  EndChildThread
  1D8:  Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
  1EC:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.1] )
  200:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  21C:  Add   *Var1  000000B4
  22C:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  248:  Call  FlyToGoal     ( .Actor:Self 00000063 00000000 .Easing:Linear )
  264:  Return
  26C:  End
}

%AI:
%	sky dive
%	shell shot
%	air lift

#new:Script $Script_TakeTurn_Parakarry
{
	Call	GetActorVar ( .Actor:Self 00000009 *Var[9] )
	Switch *Var[9]
		Case == 00000000
			Call	 SetActorVar 	( .Actor:Self 00000009 00000001 )
			ExecWait $Script_SkyDive 
		Case == 00000001
			Call	 SetActorVar 	( .Actor:Self 00000009 00000002 )
			ExecWait $Script_ShellShot
		Case == 00000002
			Call	 SetActorVar 	( .Actor:Self 00000009 00000000 )
			ExecWait $Script_AirLift
	EndSwitch
	Return
	End
}






#new:Actor $DarkBow {
% stats
[Index]        57b 
[Level]        23`b 
[MaxHP]        60`b 
[Coins]         2`b 
[Flags]       00000200 
[StatusTable] $StatusTable_802228A4_24 
% ai
[PartsCount]    2`s 
[PartsTable]  $PartsTable_80222950_24 
[Script]      $Script_Init_802229C0_24 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]   3`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         36`b  29`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8022284C_24 {
.Status:Normal    000D0E01
.Status:Stone     000D0E00
.Status:Sleep     000D0E13
.Status:Poison    000D0E01
.Status:Stop      000D0E00
.Status:Static    000D0E01
.Status:Paralyze  000D0E00
.Status:Dizzy     000D0E1A
.Status:Fear      000D0E1A
.Status:End
}

#new:DefenseTable $DefenseTable_80222898_24 {
.Element:Normal 00000000
.Element:Throw  FFFFFFFF
.Element:End
}

#new:StatusTable $StatusTable_802228A4_24 {	%paralyze + sleep
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      50`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   50`
.Status:Shrink     50`
.Status:Stop        0`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End
}

#new:PartsTable $PartsTable_80222950_24 {
00020000 01000000 001800FF $IdleAnimations_8022284C_24 $DefenseTable_80222898_24 00000000 00000000 00F60000 00000000 
80800001 02003200 00E600FF 00000000 $DefenseTable_80222898_24 00000000 00000000 00F60000 00000000 
}

#new:Script $Script_Init_802229C0_24 {
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_Bow )
   14:  Call  BindIdle  ( .Actor:Self $Script_Idle_80222A0C_24 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80222A1C_24 )
		Call	SetActorVar ( .Actor:Self 00000009 00000000 ) %AI state
		Call	SetActorVar ( .Actor:Self 0000000C 00000000 ) %damage tracker
		Call	SetActorVar ( .Actor:Self 0000000D 00000000 ) %Smack disabled bool
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_80222A0C_24 {
    0:  Return
    8:  End
}

#new:Script $Script_HandleEvent_80222A1C_24 {
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0 
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		Call  GetLastElement    ( *Var1 )
   70:  		If  *Var1  &  00000020 
   80:  			SetConst  *Var0  00000001 
   90:  			SetConst  *Var1  000D0E15 
   DC:  			ExecWait  DoNormalHit 
   B4:  		Else
   BC:  			SetConst  *Var0  00000001 
   CC:  			SetConst  *Var1  000D0E15 
   DC:  			ExecWait  DoNormalHit 
   E8:  		EndIf
   F0:  	EndCaseGroup
   F8:  	Case  ==  .Event:BurnHit % E
  104:  		SetConst  *Var0  00000001 
  114:  		SetConst  *Var1  000D0E18 
  124:  		SetConst  *Var2  000D0E19 
  134:  		ExecWait  DoBurnHit 
  140:  	Case  ==  .Event:BurnDeath % 24
  14C:  		SetConst  *Var0  00000001 
  15C:  		SetConst  *Var1  000D0E18 
  16C:  		SetConst  *Var2  000D0E19 
  17C:  		ExecWait  DoBurnHit 
  194:  		Wait  10`
  1A0:  		SetConst  *Var0  00000001 
  1B0:  		SetConst  *Var1  000D0E19 
  1C0:  		ExecWait  DoDeath 
  1CC:  		Return
  1D4:  	Case  ==  .Event:SpinSmashHit % B
  1E0:  		SetConst  *Var0  00000001 
  1F0:  		SetConst  *Var1  000D0E15 
  200:  		ExecWait  DoSpinSmashHit 
  20C:  	Case  ==  .Event:SpinSmashDeath % 21
  224:  		SetConst  *Var0  00000001 
  234:  		SetConst  *Var1  000D0E15 
  244:  		ExecWait  DoSpinSmashHit 
  250:  		SetConst  *Var0  00000001 
  260:  		SetConst  *Var1  000D0E15 
  270:  		ExecWait  DoDeath 
  27C:  		Return
  284:  	Case  ==  .Event:ShockHit % 2F
  290:  		Call  UseBattleCamPreset    ( 00000002 )
  2A0:  		SetConst  *Var0  00000001 
  2B0:  		SetConst  *Var1  000D0E15 
				ExecWait  DoShockHit
				Call	SetActorVar ( .Actor:Self 0000000D 00000001 )
    B10:  		Call  UseBattleCamPreset    ( 00000002 )
  B20:  		Call  SetGoalToHome ( .Actor:Self )
  B30:  		Call  SetAnimation  ( .Actor:Self 00000001 000D0E03 )
  B48:  		Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
  B64:  		Call  SetAnimation  ( .Actor:Self 00000001 000D0E01 )
  B7C:  		Call  PlaySoundAtActor      ( .Actor:Self .Sound:BooVanish )
  B9C:  		Set   *Var0  00000037 
  BAC:  		Loop  00000014 
  BB8:  			Add   *Var0  0000000A 
  BC8:  			Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  BE0:  			Wait  1`
  BEC:  		EndLoop
  BF4:  		Call  SetPartAlpha  ( .Actor:Self 00000001 000000FF )
  2CC:  		Return
  2D4:  	Case  ==  .Event:ShockDeath % 26
  2E0:  		Call  UseBattleCamPreset    ( 00000002 )
  2FC:  		SetConst  *Var0  00000001 
  30C:  		SetConst  *Var1  000D0E15 
  31C:  		Set   *Var2  0000000E 
  338:  		SetConst  *Var0  00000001 
  348:  		SetConst  *Var1  000D0E15 
  358:  		ExecWait  DoDeath 
  364:  		Return
  36C:  	CaseOR  ==  00000017 % 17
  378:  	CaseOR  ==  .Event:Immune % 19
  384:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  390:  		SetConst  *Var0  00000001 
  3A0:  		SetConst  *Var1  000D0E01 
  3B0:  		ExecWait  DoImmune 
  3BC:  	EndCaseGroup
  3C4:  	Case  ==  .Event:Death % 20
  3DC:  		SetConst  *Var0  00000001 
  3EC:  		SetConst  *Var1  000D0E15 
  3FC:  		ExecWait  DoNormalHit 
  408:  		Wait  10`
  414:  		SetConst  *Var0  00000001 
  424:  		SetConst  *Var1  000D0E15 
  434:  		ExecWait  DoDeath 
  440:  		Return
  448:  	Case  ==  .Event:RecoverStatus % 31
  454:  		SetConst  *Var0  00000001 
  464:  		SetConst  *Var1  000D0E01 
  474:  		ExecWait  DoRecover 
  480:  	Case  ==  .Event:ScareAway % 39
  48C:  		SetConst  *Var0  00000001 
  49C:  		SetConst  *Var1  000D0E03 
  4AC:  		SetConst  *Var2  000D0E15 
  4BC:  		ExecWait  DoScareAway 
  4C8:  		Return
  4D0:  	Case  ==  .Event:BeginAirLift % 3A
  4DC:  		SetConst  *Var0  00000001 
  4EC:  		SetConst  *Var1  000D0E03 
  4FC:  		ExecWait  DoAirLift 
  508:  	Case  ==  .Event:BlowAway % 16
  514:  		SetConst  *Var0  00000001 
  524:  		SetConst  *Var1  000D0E15 
  534:  		ExecWait  DoBlowAway 
  540:  		Return
  548:  	Default
  550:  EndSwitch
  558:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  56C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  580:  Return
  588:  End
}

#new:Script $Script_Bow_Smack {
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Wait  10`
   34:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:BooAppear )
   48:  Thread
   50:  	Set   *Var0  000000C8 
   60:  	Loop  00000014 
   6C:  		Sub   *Var0  0000000A 
   7C:  		Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
   94:  		Wait  1`
   A0:  	EndLoop
   A8:  EndThread
   B0:  Wait  10`
   BC:  Call  UseBattleCamPreset    ( 00000001 )
   CC:  Call  SetTargetActor        ( .Actor:Self .Actor:Player )
   E0:  Call  SetGoalToTarget       ( .Actor:Self )
   F0:  Thread
   F8:  	Call  SetAnimation      ( .Actor:Self 00000001 000D0E03 )
  110:  	Call  GetStatusFlags    ( .Actor:Self *VarA )
  124:  	If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  134:  		Call  AddGoalPos    ( .Actor:Self 00000004 FFFFFFFC 00000000 )
  150:  	Else
  158:  		Call  AddGoalPos    ( .Actor:Self 0000000A FFFFFFF6 00000000 )
  174:  	EndIf
  17C:  	Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
  198:  	Call  SetAnimation  ( .Actor:Self 00000001 000D0E01 )
  1B0:  EndThread
  1B8:  Wait  15`
  1C4:  Call  UseBattleCamPreset    ( 0000000F )
  1D4:  Call  BattleCamTargetActor  ( .Actor:Self )
  1E4:  Call  MoveBattleCamOver     ( 0000001E )
  1F4:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  20C:  Call  PlaySoundAtActor      ( .Actor:Self .Sound:BooVanish )
  220:  Set   *Var0  00000037 
  230:  Loop  00000014 
  23C:  	Add   *Var0  0000000A 
  24C:  	Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  264:  	Wait  1`
  270:  EndLoop
  278:  Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
  290:  Call  SetAnimation      ( .Actor:Self 00000001 000D0E05 )
  2A8:  Wait  10`
  2B4:  Call  SetGoalToTarget   ( .Actor:Self )
  2C4:  Wait  15`
  2D0:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  2F4:  Switch  *Var0 
  300:  	CaseOR  ==  .HitResult:Miss % 6
  30C:  	CaseOR  ==  .HitResult:Lucky % 5
  318:  		Set   *VarA  *Var0 
  328:  		Call  UseBattleCamPreset    ( 00000002 )
  338:  		Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.4] *Fixed[1.4] *Fixed[1.0] )
  358:  		Call  SetAnimation  ( .Actor:Self 00000001 000D0E07 )
  370:  		Wait  2`
  37C:  		Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  39C:  		Set   *Var0  00000000 
  3AC:  		Loop  00000014 
  3B8:  			Add   *Var0  FFFFFFD3 
  3C8:  			Call  SetActorYaw   ( .Actor:Self *Var0 )
  3DC:  			Wait  1`
  3E8:  		EndLoop
  3F0:  		Call  SetActorYaw   ( .Actor:Self 00000000 )
  404:  		If  *VarA  ==  .HitResult:Lucky % 5
  414:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  438:  		EndIf
  440:  		Call  SetAnimation  ( .Actor:Self 00000001 000D0E1A )
  458:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:SeeingStars )
  474:  		Wait  30`
  480:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  498:  		Call  SetAnimation  ( .Actor:Self 00000001 000D0E01 )
  4B0:  		Wait  10`
  4BC:  		Call  PlaySoundAtActor      ( .Actor:Self .Sound:BooAppear )
  4D0:  		Thread
  4D8:  			Set   *Var0  000000C8 
  4E8:  			Loop  00000014 
  4F4:  				Sub   *Var0  0000000A 
  504:  				Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  51C:  				Wait  1`
  528:  			EndLoop
  530:  		EndThread
  538:  		Wait  10`
  544:  		Call  UseBattleCamPreset    ( 00000002 )
  554:  		Call  SetGoalToHome ( .Actor:Self )
  564:  		Call  SetAnimation  ( .Actor:Self 00000001 000D0E03 )
  57C:  		Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
  598:  		Call  SetAnimation  ( .Actor:Self 00000001 000D0E01 )
  5B0:  		Call  PlaySoundAtActor      ( .Actor:Self .Sound:BooVanish )
  5C4:  		Call  YieldTurn ( )
  5D0:  		Set   *Var0  00000037 
  5E0:  		Loop  00000014 
  5EC:  			Add   *Var0  0000000A 
  5FC:  			Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  614:  			Wait  1`
  620:  		EndLoop
  628:  		Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
  640:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  654:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  668:  		Return
  670:  	EndCaseGroup
  678:  EndSwitch
  680:  Set   *VarA  00000000 
  6F8:  Set   *Var8  00000006 
  710:  Set   *Var7  *Var8 
  720:  Loop  *Var7 
  72C:  	Call  PlaySoundAtActor  ( .Actor:Self 00002019 )
  740:  	Add   *VarA  00000001 
  750:  	Call  SetPartScale      ( .Actor:Self 00000001 *Fixed[1.4] *Fixed[1.4] *Fixed[1.0] )
  770:  	If  *Flag[00]  ==  .False 
  780:  		Call  SetAnimation  ( .Actor:Self 00000001 000D0E07 )
  798:  		Set   *Flag[00]  .True 
  7A8:  		If  *VarA  ==  *Var8 
  7B8:  			Call  80269EAC  ( 0000000C )
  7C8:  		Else
  7D0:  			Call  80269EAC  ( 0000000A )
  7E0:  		EndIf
  7E8:  	Else
  7F0:  		Call  SetAnimation  ( .Actor:Self 00000001 000D0E08 )
  808:  		Set   *Flag[00]  .False 
  818:  		If  *VarA  ==  *Var8 
  828:  			Call  80269EAC  ( 0000000D )
  838:  		Else
  840:  			Call  80269EAC  ( 0000000B )
  850:  		EndIf
  858:  	EndIf
  860:  	Wait  2`
  86C:  	Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  88C:  	Thread
  894:  		Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[0.5] )
  8B0:  		Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[1.5] )
  8CC:  		Call  ShakeCam  ( .Cam:Battle 00000000 00000001 *Fixed[0.5] )
  8E8:  		Call  ShakeCam  ( .Cam:Battle 00000000 00000001 *Fixed[0.2] )
  904:  	EndThread
  93C:  	Wait  2`
  948:  	Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000002 00000010 )
  9F8:  	Wait  8`
  A04:  	Call  SetAnimation  ( .Actor:Self 00000001 000D0E01 )
  A1C:  	Call  GetActorHP    ( .Actor:Player *Var1 )
  A30:  	If  *Var1  ==  00000000 
  A40:  		BreakLoop
  A48:  	EndIf
  A50:  EndLoop
  A58:  Switch  *Var0 
  A64:  	CaseOR  ==  .HitResult:Hit % 0
  A70:  	CaseOR  ==  00000002 % 2
  A7C:  		Wait  10`
  A88:  		Call  PlaySoundAtActor  ( .Actor:Self .Sound:BooAppear )
  A9C:  		Thread
  AA4:  			Set   *Var0  000000C8 
  AB4:  			Loop  00000014 
  AC0:  				Sub   *Var0  0000000A 
  AD0:  				Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  AE8:  				Wait  1`
  AF4:  			EndLoop
  AFC:  		EndThread
  B04:  		Wait  10`
  B10:  		Call  UseBattleCamPreset    ( 00000002 )
  B20:  		Call  SetGoalToHome ( .Actor:Self )
  B30:  		Call  SetAnimation  ( .Actor:Self 00000001 000D0E03 )
  B48:  		Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
  B64:  		Call  SetAnimation  ( .Actor:Self 00000001 000D0E01 )
  B7C:  		Call  PlaySoundAtActor      ( .Actor:Self .Sound:BooVanish )
  B90:  		Call  YieldTurn ( )
  B9C:  		Set   *Var0  00000037 
  BAC:  		Loop  00000014 
  BB8:  			Add   *Var0  0000000A 
  BC8:  			Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  BE0:  			Wait  1`
  BEC:  		EndLoop
  BF4:  		Call  SetPartAlpha  ( .Actor:Self 00000001 000000FF )
  C0C:  	EndCaseGroup
  C14:  EndSwitch
  C1C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  C30:  Call  UseIdleAnimation  ( .Actor:Self .True )
  C44:  Return
  C4C:  End
}

#new:Script $Script_Bow_FanSmack {
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Wait  10`
   34:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:BooAppear )
   48:  Thread
   50:  	Set   *Var0  000000C8 
   60:  	Loop  00000014 
   6C:  		Sub   *Var0  0000000A 
   7C:  		Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
   94:  		Wait  1`
   A0:  	EndLoop
   A8:  EndThread
   B0:  Wait  10`
   BC:  Call  UseBattleCamPreset    ( 00000001 )
   CC:  Call  SetTargetActor        ( .Actor:Self .Actor:Player )
   E0:  Call  SetGoalToTarget       ( .Actor:Self )
   F0:  Thread
   F8:  	Call  SetAnimation      ( .Actor:Self 00000001 000D0E03 )
  110:  	Call  GetStatusFlags    ( .Actor:Self *VarA )
  124:  	If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  134:  		Call  AddGoalPos    ( .Actor:Self 00000004 FFFFFFFC 00000000 )
  150:  	Else
  158:  		Call  AddGoalPos    ( .Actor:Self 0000000A FFFFFFF6 00000000 )
  174:  	EndIf
  17C:  	Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
  198:  	Call  SetAnimation  ( .Actor:Self 00000001 000D0E01 )
  1B0:  EndThread
  1B8:  Wait  15`
  1C4:  Call  UseBattleCamPreset    ( 0000000F )
  1D4:  Call  BattleCamTargetActor  ( .Actor:Self )
  1E4:  Call  MoveBattleCamOver     ( 0000001E )
  1F4:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  20C:  Call  PlaySoundAtActor      ( .Actor:Self .Sound:BooVanish )
  220:  Set   *Var0  00000037 
  230:  Loop  00000014 
  23C:  	Add   *Var0  0000000A 
  24C:  	Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  264:  	Wait  1`
  270:  EndLoop
  278:  Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
  290:  Call  SetAnimation      ( .Actor:Self 00000001 000D0E23 )
  2A8:  Wait  10`
  2B4:  Call  SetGoalToTarget   ( .Actor:Self )
  2C4:  Wait  15`
  2D0:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  2F4:  Switch  *Var0 
  300:  	CaseOR  ==  .HitResult:Miss % 6
  30C:  	CaseOR  ==  .HitResult:Lucky % 5
  318:  		Set   *VarA  *Var0 
  328:  		Call  UseBattleCamPreset    ( 00000002 )
  338:  		Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.4] *Fixed[1.4] *Fixed[1.0] )
  358:  		Call  SetAnimation  ( .Actor:Self 00000001 000D0E22 )
  370:  		Wait  2`
  37C:  		Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  458:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:SeeingStars )
				Call  SetAnimation  ( .Actor:Self 00000001 000D0E20 )
  40C:  		Set   *Var0  00000000
  41C:  		Loop  0000000F
  428:  			Add   *Var0  FFFFFFD3
  438:  			Call  SetActorYaw   ( .Actor:Self *Var0 )
  44C:  			Wait  1`
  458:  		EndLoop
  460:  		Loop  0000000F
  46C:  			Add   *Var0  FFFFFFA6
  47C:  			Call  SetActorYaw   ( .Actor:Self *Var0 )
  490:  			Wait  1`
  49C:  		EndLoop
  4A4:  		Call  SetActorYaw   ( .Actor:Self 00000000 )
				If  *VarA  ==  .HitResult:Lucky % 5
					Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
				EndIf
  4B8:  		Call  SetAnimation  ( .Actor:Self 00000001 000D0E1A )
				Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  4D0:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:SeeingStars )
  4EC:  		Wait  40`
  4F8:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  510:  		Call  SetAnimation  ( .Actor:Self 00000001 000D0E01 )
  528:  		Wait  10`
  544:  		Call  UseBattleCamPreset    ( 00000002 )
  554:  		Call  SetGoalToHome ( .Actor:Self )
  564:  		Call  SetAnimation  ( .Actor:Self 00000001 000D0E03 )
  57C:  		Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
  598:  		Call  SetAnimation  ( .Actor:Self 00000001 000D0E01 )
  5B0:  		Call  PlaySoundAtActor      ( .Actor:Self .Sound:BooVanish )
  5C4:  		Call  YieldTurn ( )
  5D0:  		Set   *Var0  00000037 
  5E0:  		Loop  00000014 
  5EC:  			Add   *Var0  0000000A 
  5FC:  			Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  614:  			Wait  1`
  620:  		EndLoop
  628:  		Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
  640:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  654:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  668:  		Return
  670:  	EndCaseGroup
  678:  EndSwitch
  680:  Set   *VarA  00000000 
  6DC:  Set   *Var8  00000004 %Loop 4 times as the final hit is after the loop
		Set   *VarF  00000000
  710:  Set   *Var7  *Var8 
  720:  Loop  *Var7 
  72C:  	Call  PlaySoundAtActor  ( .Actor:Self 00002019 )
  740:  	Add   *VarA  00000001 
  750:  	Call  SetPartScale      ( .Actor:Self 00000001 *Fixed[1.4] *Fixed[1.4] *Fixed[1.0] )
  770:  	If  *Flag[00]  ==  .False 
  780:  		Call  SetAnimation  ( .Actor:Self 00000001 000D0E20 )
  798:  		Set   *Flag[00]  .True 
  7A8:  		If  *VarA  ==  *Var8 
  7B8:  			Call  80269EAC  ( 0000000E )
  7C8:  		Else
  7D0:  			Call  80269EAC  ( 0000000E )
  7E0:  		EndIf
  7E8:  	Else
  7F0:  		Call  SetAnimation  ( .Actor:Self 00000001 000D0E21 )
  808:  		Set   *Flag[00]  .False 
  818:  		If  *VarA  ==  *Var8 
  828:  			Call  80269EAC  ( 0000000F )
  838:  		Else
  840:  			Call  80269EAC  ( 0000000F )
  850:  		EndIf
  858:  	EndIf
  860:  	Wait  2`
  86C:  	Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  88C:  	Thread
  894:  		Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[0.5] )
  8B0:  		Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[1.5] )
  8CC:  		Call  ShakeCam  ( .Cam:Battle 00000000 00000001 *Fixed[0.5] )
  8E8:  		Call  ShakeCam  ( .Cam:Battle 00000000 00000001 *Fixed[0.2] )
  904:  	EndThread
  9BC:  	Wait  2`
			Call  SetActorSounds    ( .Actor:Self .ActorSound:Hurt 0000201A 00000000 )
  9C8:  	Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 80040120 00000003 00000010 )
			If  *VarE  ==  00000001
				Set   *Var0  00000000
				Loop  00000008
					Add   *Var0  00000090
					Call  SetActorYaw   ( .Actor:Self *Var0 )
					Wait  1`
				EndLoop
			Else
				Set   *Var0  00000000
				Loop  00000008
					Sub   *Var0  00000090
					Call  SetActorYaw   ( .Actor:Self *Var0 )
					Wait  1`
				EndLoop
			EndIf
			Call  SetActorYaw   ( .Actor:Self 00000000 )
			Add   *VarF  0000000A
			Call  SetAnimation  ( .Actor:Self FFFFFFFF 000D0E01 )  
  A1C:  	Call  GetActorHP    ( .Actor:Player *Var1 )
  A30:  	If  *Var1  ==  00000000 
  A40:  		BreakLoop
  A48:  	EndIf
  A50:  EndLoop
		%%
		Thread
			Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[0.5] )
			Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[1.5] )
			Call  ShakeCam  ( .Cam:Battle 00000000 00000001 *Fixed[0.5] )
			Call  ShakeCam  ( .Cam:Battle 00000000 00000001 *Fixed[0.2] )
		EndThread
		If  *VarE  ==  00000001
			Call  $Function_80238014 ( )
		EndIf
		Call  SetActorScale ( .Actor:Self *Fixed[1.4] *Fixed[1.4] *Fixed[1.0] )
		If  *Flag[00]  ==  .False
			Call  SetAnimation  ( .Actor:Self FFFFFFFF 000D0E20 )
			Set   *Flag[00]  .True
			Call  80269EAC      ( 00000010 )
		Else
			Call  SetAnimation  ( .Actor:Self FFFFFFFF 000D0E21 )
			Set   *Flag[00]  .False
			Call  80269EAC      ( 00000011 )
		EndIf
		Wait  2`
		Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
		Call  SetActorSounds    ( .Actor:Self .ActorSound:Hurt 0000201A 00000000 )
		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 80040164 00000003 00000010 )
		Thread
			If  *VarE  ==  00000001
				Set   *Var0  00000000
				Loop  00000008
					Add   *Var0  00000090
					Call  SetActorYaw   ( .Actor:Self *Var0 )
					Wait  1`
				EndLoop
			Else
				Set   *Var0  00000000
				Loop  00000008
					Sub   *Var0  00000090
					Call  SetActorYaw   ( .Actor:Self *Var0 )
					Wait  1`
				EndLoop
			EndIf
			If  *VarE  ==  00000001
				Set   *Var0  00000000
				Loop  00000008
					Add   *Var0  00000048
					Call  SetActorYaw   ( .Actor:Self *Var0 )
					Wait  1`
				EndLoop
			Else
				Set   *Var0  00000000
				Loop  00000008
					Sub   *Var0  00000048
					Call  SetActorYaw   ( .Actor:Self *Var0 )
					Wait  1`
				EndLoop
			EndIf
			Call  SetActorYaw   ( .Actor:Self 00000000 )
		EndThread
		%%
  A58:  Switch  *Var0 
  A64:  	CaseOR  ==  .HitResult:Hit % 0
  A70:  	CaseOR  ==  00000002 % 2
  A7C:  		Wait  10`
  A88:  		Call  PlaySoundAtActor  ( .Actor:Self .Sound:BooAppear )
  A9C:  		Thread
  AA4:  			Set   *Var0  000000C8 
  AB4:  			Loop  00000014 
  AC0:  				Sub   *Var0  0000000A 
  AD0:  				Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  AE8:  				Wait  1`
  AF4:  			EndLoop
  AFC:  		EndThread
  B04:  		Wait  10`
  B10:  		Call  UseBattleCamPreset    ( 00000002 )
  B20:  		Call  SetGoalToHome ( .Actor:Self )
  B30:  		Call  SetAnimation  ( .Actor:Self 00000001 000D0E03 )
  B48:  		Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
  B64:  		Call  SetAnimation  ( .Actor:Self 00000001 000D0E01 )
  B7C:  		Call  PlaySoundAtActor      ( .Actor:Self .Sound:BooVanish )
  B90:  		Call  YieldTurn ( )
  B9C:  		Set   *Var0  00000037 
  BAC:  		Loop  00000014 
  BB8:  			Add   *Var0  0000000A 
  BC8:  			Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  BE0:  			Wait  1`
  BEC:  		EndLoop
  BF4:  		Call  SetPartAlpha  ( .Actor:Self 00000001 000000FF )
  C0C:  	EndCaseGroup
  C14:  EndSwitch
  C1C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  C30:  Call  UseIdleAnimation  ( .Actor:Self .True )
  C44:  Return
  C4C:  End
}

#new:Script $Script_Bow_Spook
{
	Call	UseIdleAnimation	( .Actor:Self .False )
	Call	EnableIdleScript	( .Actor:Self 00000000 )
	28:  Wait  10`
   34:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:BooAppear )
   48:  Thread
   50:  	Set   *Var0  000000C8 
   60:  	Loop  00000014 
   6C:  		Sub   *Var0  0000000A 
   7C:  		Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
   94:  		Wait  1`
   A0:  	EndLoop
   A8:  EndThread
   B0:  Wait  10`
   BC:  Call  UseBattleCamPreset    ( 00000001 )
   CC:  Call  SetTargetActor        ( .Actor:Self .Actor:Player )
   E0:  Call  SetGoalToTarget       ( .Actor:Self )
   F0:  Thread
   F8:  	Call  SetAnimation      ( .Actor:Self 00000001 000D0E03 )
  110:  	Call  GetStatusFlags    ( .Actor:Self *VarA )
  124:  	If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  134:  		Call  AddGoalPos    ( .Actor:Self 0000000A FFFFFFFC 00000000 )
  150:  	Else
  158:  		Call  AddGoalPos    ( .Actor:Self 00000014 FFFFFFF6 00000000 )
  174:  	EndIf
  17C:  	Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
  198:  	Call  SetAnimation  ( .Actor:Self 00000001 000D0E01 )
  1B0:  EndThread
  1B8:  Wait  15`
  1C4:  Call  UseBattleCamPreset    ( 0000000F )
  1D4:  Call  BattleCamTargetActor  ( .Actor:Self )
  1E4:  Call  MoveBattleCamOver     ( 0000001E )
  1F4:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  20C:  Call  PlaySoundAtActor      ( .Actor:Self .Sound:BooVanish )
  220:  Set   *Var0  00000037 
  230:  Loop  00000014 
  23C:  	Add   *Var0  0000000A 
  24C:  	Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  264:  	Wait  1`
  270:  EndLoop
  278:  Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
  290:  Call  SetAnimation      ( .Actor:Self 00000001 000D0E0C )
  2A8:  Wait  10`
  2B4:  Call  SetGoalToTarget   ( .Actor:Self )
  2C4:  Wait  15`
  2D0:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
	% randomized delay
	Call	RandInt			( 48` *Var[0] )
	Wait	*Var[0]
	% lunge and attack (4 frame delay)
	Thread
		Wait	16`
		Call	GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
		Sub  *Var[0] 16`		%was 17 but that made the animation look weird
		Call	SetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
		Call	RunToGoal   	( .Actor:Self  3` .False )	
	EndThread
	Thread
		Wait	17`
		Call	MakeLerp	( 100` 150` 2` 00000000 )
		Label	1
			Call	UpdateLerp  	( )
			DivF	*Var[0]  100`
			Call	SetActorScale	( .Actor:Self *Var[0] *Var[0] *Var[0] )
			Wait	1 
		If  *Var[1]  ==  .True 
			Goto	1
		EndIf
	EndThread
	%wiggle a little bit
	Thread
		Call	GetActorPos  	( .Actor:Self *VarD *VarE *VarF )
		Sub  *Var[0] 1`
		Call	SetActorPos   	( .Actor:Self  *VarD *VarE *VarF )	
		Wait 	2`
		Call	GetActorPos  	( .Actor:Self *VarD *VarE *VarF )
		Add  *Var[0] 2`
		Call	SetActorPos   	( .Actor:Self  *VarD *VarE *VarF )	
		Wait 	2`
		Call	GetActorPos  	( .Actor:Self *VarD *VarE *VarF )
		Sub  *Var[0] 3`
		Call	SetActorPos   	( .Actor:Self  *VarD *VarE *VarF )	
		Wait 	2`
		Call	GetActorPos  	( .Actor:Self *VarD *VarE *VarF )
		Add  *Var[0] 4`
		Call	SetActorPos   	( .Actor:Self  *VarD *VarE *VarF )	
		Wait 	2`
		Call	GetActorPos  	( .Actor:Self *VarD *VarE *VarF )
		Sub  *Var[0] 5`
		Call	SetActorPos   	( .Actor:Self  *VarD *VarE *VarF )	
		Wait 	2`
		Call	GetActorPos  	( .Actor:Self *VarD *VarE *VarF )
		Add  *Var[0] 6`
		Call	SetActorPos   	( .Actor:Self  *VarD *VarE *VarF )	
		Wait 	2`
		Call	GetActorPos  	( .Actor:Self *VarD *VarE *VarF )
		Sub  *Var[0] 7`
		Call	SetActorPos   	( .Actor:Self  *VarD *VarE *VarF )	
	EndThread
	Wait 	8`
	Call	SetAnimation 	( .Actor:Self 00000001 000D0E0D )
	Wait	7`
	Call	SetAnimation 	( .Actor:Self 00000001 000D0E0E )
	Wait 	5`
	Call	EnemyTestTarget ( .Actor:Self *Var[0] 10000000 00000000 *Var[1] 00000010 )
	Switch  *Var[0] 
		CaseOR   ==  00000006 
		CaseOR   ==  00000005 
			If  *Var[0] == 00000005 
				Call	EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
			EndIf
			Goto	10
		EndCaseGroup
	EndSwitch
	Call	PlaySoundAtActor	( .Actor:Self 00000291 )
	Wait	2 
	Call	EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 80200264 0000000A 00000020 ) %10 + stop
	Label	10
	Wait	10`
	Call	SetAnimation 	( .Actor:Self 00000001 000D0E01 )
	Call     MakeLerp	( 150` 100` 6` 00000000 )
	Label    2
		Call	UpdateLerp  	( )
		DivF	*Var[0]  100`
		Call	SetActorScale	( .Actor:Self *Var[0] *Var[0] *Var[0] )
		Wait     1 
	If  *Var[1]  ==  .True 
		Goto     2
	EndIf
	Wait  10`
	Call  PlaySoundAtActor  ( .Actor:Self .Sound:BooAppear )
	Thread
		Set   *Var0  000000C8 
		Loop  00000014 
			Sub   *Var0  0000000A 
			Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
			Wait  1`
		EndLoop
	EndThread
	Wait  10`
	Call  UseBattleCamPreset    ( 00000002 )
	Call  SetGoalToHome ( .Actor:Self )
	Call  SetAnimation  ( .Actor:Self 00000001 000D0E03 )
	Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
	Call  SetAnimation  ( .Actor:Self 00000001 000D0E01 )
	Call  PlaySoundAtActor      ( .Actor:Self .Sound:BooVanish )
	Call  YieldTurn ( )
	Set   *Var0  00000037 
	Loop  00000014 
 		Add   *Var0  0000000A 
 		Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
 		Wait  1`
	EndLoop
	Call  SetPartAlpha  ( .Actor:Self 00000001 000000FF )
	Call	EnableIdleScript 	( .Actor:Self 00000001 )
	Call	UseIdleAnimation 	( .Actor:Self .True )
	Return
	End
}


#new:Script $Script_TakeTurn_Bow
{
	Call	GetActorVar ( .Actor:Self 00000009 *Var9 )
	Switch *Var9
		Case == 00000000
			Call	SetActorVar ( .Actor:Self 00000009 00000001 ) 	%zap tap will interrupt this, so make sure this gets set first
			Call	GetActorVar ( .Actor:Self 0000000D *Var8 )
			If *Var8 == 1
				Goto 1
			EndIf
			Call	GetPlayerHP ( *Var8 )
			Call	SetActorVar ( .Actor:Self 0000000C *Var8 )
			ExecWait $Script_Bow_Smack
			Call	GetPlayerHP ( *Var7 )
			Call	GetActorVar ( .Actor:Self 0000000C *Var8 )
			Sub *Var8 *Var7
			If *Var8 < 6
				Call	SetActorVar ( .Actor:Self 0000000D 00000001 )
			EndIf
		Case == 00000001
			Label 1
			ExecWait $Script_Bow_FanSmack
			Call	SetActorVar ( .Actor:Self 00000009 00000002 )
		Case == 00000002
			ExecWait $Script_Bow_Spook
			Call	SetActorVar ( .Actor:Self 00000009 00000000 )		
	EndSwitch
	Return
	End
}


%function that creates lightning bolts
%it appears that A0 controls some kind of effect creation state
/%
#new:Function 800723B0
{
ADDIU		SP, SP, -30
SW			A0, 10 (SP)
SW			A1, 14 (SP)
SW			A2, 18 (SP)
SW			A3, 1C (SP)
SWC1		F12, 20 (SP)
SWC1		F14, 24 (SP)
SWC1		F16, 28 (SP)
SW			RA, 2C (SP)
LUI			A0, 0001
JAL			8005A564
ADDIU		A0, A0, 0073
LW			A0, 10 (SP)
LW			A1, 10 (SP)
LW			A2, 10 (SP)
LW			A3, 10 (SP)
LWC1		F12, 10 (SP)
LWC1		F14, 10 (SP)
LWC1		F16, 10 (SP)
LW			RA, 10 (SP)
ADDIU		SP, SP, 30
LUI			AT, 8008
LW			AT, FCD8 (AT)
JR			AT
NOP
}
%/



%problem: bolts won't be dark because there is only one copy of effect data that can be modified at a time

#new:Actor $DarkWatt {
% stats
[Index]        58b 
[Level]        23`b 
[MaxHP]        40`b 
[Coins]         2`b 
[Flags]       00000200 
[StatusTable] $StatusTable_80223C7C_24 
% ai
[PartsCount]    2`s 
[PartsTable]  $PartsTable_80223D28_24 
[Script]      $Script_Init_80223D98_24 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]   3`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         34`b  28`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:Function $Function_80218F58_24 {
    0:  ADDIU     SP, SP, FFB8
    4:  SW        RA, 2C (SP)
    8:  SW        S2, 28 (SP)
    C:  SW        S1, 24 (SP)
   10:  SW        S0, 20 (SP)
   14:  SDC1      F24, 40 (SP)
   18:  SDC1      F22, 38 (SP)
   1C:  SDC1      F20, 30 (SP)
   20:  LW        A0, 148 (A0)
   24:  JAL       ~Func:get_actor
   28:  COPY      S0, A1
   2C:  COPY      S1, V0
   30:  BEQ       S0, R0, .o128
   34:  ADDIU     S2, S1, C
   38:  JAL       ~Func:heap_malloc
   3C:  LI        A0, 20
   40:  COPY      S0, V0
   44:  LI        V0, 1
   48:  ADDIU     A1, S1, 144
   4C:  ADDIU     A2, S1, 148
   50:  SW        S0, 90 (S1)
   54:  SW        V0, 4 (S0)
   58:  SW        R0, 8 (S0)
   5C:  SW        V0, C (S0)
   60:  SW        R0, 10 (S0)
   64:  LB        V1, 210 (S1)
   68:  LI        V0, A
   6C:  BEQ       V1, V0, .o84
   70:  ADDIU     A3, S1, 14C
   74:  LIF       F0, 1.0
   7C:  BEQ       R0, R0, .o98
   80:  SWC1      F0, 10 (SP)
        .o84
   84:  LIF       F0, 0.39804688
   90:  NOP
   94:  SWC1      F0, 10 (SP)
        .o98
   98:  LI        V0, 5
   9C:  SW        V0, 14 (SP)
   A0:  SW        R0, 18 (SP)
   A4:  LW        A1, 0 (A1)
   A8:  LW        A2, 0 (A2)
   AC:  LW        A3, 0 (A3)
		%ADDIU		A0, R0, 2
		%SAW			A0, $LightningBoltPalette
   B0:  JAL       800723B0
		ADDIU		A0, R0, 2							%Palette 4
   B4:  CLEAR     A0
   B8:  ADDIU     A1, S1, 144
   BC:  SW        V0, 14 (S0)
   C0:  LB        V0, 210 (S1)
   C4:  LI        V1, A
   C8:  BEQ       V0, V1, .oE0
   CC:  ADDIU     A3, S1, 14C
   D0:  LIF       F0, 1.0
   D8:  BEQ       R0, R0, .oF4
   DC:  SWC1      F0, 10 (SP)
        .oE0
   E0:  LIF       F0, 0.39804688
   EC:  NOP
   F0:  SWC1      F0, 10 (SP)
        .oF4
   F4:  LI        V0, 5
   F8:  SW        V0, 14 (SP)
   FC:  SW        R0, 18 (SP)
  100:  LW        A1, 0 (A1)
  104:  LUI       A2, C47A
  108:  LW        A3, 0 (A3)
		%ADDIU		A0, R0, 2
		%SAW			A0, $LightningBoltPalette
  10C:  JAL       800723B0
		ADDIU		A0, R0, 3							%Palette 4
  %110:  LI        A0, 1
  114:  SW        V0, 18 (S0)
  118:  LI        V0, 1
  11C:  SW        V0, 0 (S0)
  120:  LB        V0, 210 (S1)
  124:  SW        V0, 1C (S0)
        .o128
  128:  LW        S0, 84 (S2)
  12C:  LW        V0, 0 (S0)
  130:  BEQ       V0, R0, .o458
  134:  LI        V0, 2
  138:  LW        V0, 4 (S0)
  13C:  BEQ       V0, R0, .o174
  140:  LI        V0, 8
  144:  LB        V1, 210 (S1)
  148:  BEQ       V1, V0, .o174
  14C:  NOP
  150:  LW        V0, 8 (S0)
  154:  ADDIU     V0, V0, F
  158:  MTC1      V0, F12
  15C:  NOP
  160:  CVT.S.W   F12, F12
  164:  JAL       ~Func:clamp_angle
  168:  SW        V0, 8 (S0)
  16C:  TRUNC.W.S F6, F0
  170:  SWC1      F6, 8 (S0)
        .o174
  174:  LIF       F0, 6.28318
  180:  LWC1      F12, 8 (S0)
  184:  CVT.S.W   F12, F12
  188:  MUL.S     F12, F12, F0
  18C:  NOP
  190:  LIF       F0, 360.0
  198:  JAL       ~Func:sin_rad
  19C:  DIV.S     F12, F12, F0
  1A0:  LIF       F2, 3.0
  1A8:  NOP
  1AC:  MUL.S     F0, F0, F2
  1B0:  NOP
  1B4:  LH        V0, 152 (S1)
  1B8:  MTC1      V0, F2
  1BC:  NOP
  1C0:  CVT.S.W   F2, F2
  1C4:  TRUNC.W.S F6, F0
  1C8:  MFC1      V1, F6
  1CC:  NOP
  1D0:  SLL       V0, V1, 18
  1D4:  LWC1      F0, 148 (S1)
  1D8:  SRA       V0, V0, 18
  1DC:  SB        V1, 19A (S1)
  1E0:  ADD.S     F0, F0, F2
  1E4:  MTC1      V0, F2
  1E8:  NOP
  1EC:  CVT.S.W   F2, F2
  1F0:  LH        V0, 150 (S1)
  1F4:  ADD.S     F0, F0, F2
  1F8:  LI        V1, A
  1FC:  MTC1      V0, F2
  200:  NOP
  204:  CVT.S.W   F2, F2
  208:  CVT.D.S   F4, F0
  20C:  LWC1      F0, 144 (S1)
  210:  LB        V0, 210 (S1)
  214:  ADD.S     F22, F0, F2
  218:  LAD       F0, $ConstDouble_80228448_24
  220:  BEQL      V0, V1, .o23C
  224:  ADD.D     F0, F4, F0
  228:  LIF       F1, 2.625
  230:  MTC1      R0, F0
  234:  NOP
  238:  ADD.D     F0, F4, F0
        .o23C
  23C:  CVT.S.D   F20, F0
  240:  LH        V0, 154 (S1)
  244:  LWC1      F0, 14C (S1)
  248:  MTC1      V0, F2
  24C:  NOP
  250:  CVT.S.W   F2, F2
  254:  LW        V0, C (S0)
  258:  BEQ       V0, R0, .o3C0
  25C:  ADD.S     F24, F0, F2
  260:  LW        V1, 10 (S0)
  264:  BEQ       V1, R0, .o27C
  268:  LI        V0, 1
  26C:  BEQ       V1, V0, .o318
  270:  NOP
  274:  BEQ       R0, R0, .o3F8
  278:  NOP
        .o27C
  27C:  LW        V0, 14 (S0)
  280:  BNE       V0, R0, .o2DC
  284:  LI        V0, A
  288:  LB        V1, 210 (S1)
  28C:  BEQ       V1, V0, .o2A4
  290:  NOP
  294:  LIF       F0, 1.0
  29C:  BEQ       R0, R0, .o2B8
  2A0:  SWC1      F0, 10 (SP)
        .o2A4
  2A4:  LIF       F0, 0.39804688
  2B0:  NOP
  2B4:  SWC1      F0, 10 (SP)
        .o2B8
		%ADDIU		A0, R0, 2
		%SAW			A0, $LightningBoltPalette
  %2B8:  CLEAR     A0
		ADDIU		A0, R0, 2							%Palette 4
  2BC:  MFC1      A1, F22
  2C0:  MFC1      A2, F20
  2C4:  MFC1      A3, F24
  2C8:  LI        V0, 5
  2CC:  SW        V0, 14 (SP)
  2D0:  JAL       800723B0
  2D4:  SW        R0, 18 (SP)
  2D8:  SW        V0, 14 (S0)
        .o2DC
  2DC:  LW        V1, 18 (S0)
  2E0:  BEQ       V1, R0, .o2F8
  2E4:  NOP
  2E8:  LW        V0, 0 (V1)
  2EC:  ORI       V0, V0, 10
  2F0:  SW        V0, 0 (V1)
  2F4:  SW        R0, 18 (S0)
        .o2F8
  2F8:  LW        V0, 14 (S0)
  2FC:  LW        V0, C (V0)
  300:  SWC1      F22, 4 (V0)
  304:  LW        V0, 14 (S0)
  308:  LW        V0, C (V0)
  30C:  SWC1      F20, 8 (V0)
  310:  BEQ       R0, R0, .o3B4
  314:  LW        V0, 14 (S0)
        .o318
  318:  LW        V1, 14 (S0)
  31C:  BEQ       V1, R0, .o334
  320:  NOP
  324:  LW        V0, 0 (V1)
  328:  ORI       V0, V0, 10
  32C:  SW        V0, 0 (V1)
  330:  SW        R0, 14 (S0)
        .o334
  334:  LW        V0, 18 (S0)
  338:  BNE       V0, R0, .o39C
  33C:  NOP
  340:  LB        V1, 210 (S1)
  344:  LI        V0, A
  348:  BEQ       V1, V0, .o360
  34C:  NOP
  350:  LIF       F0, 1.0
  358:  BEQ       R0, R0, .o374
  35C:  SWC1      F0, 10 (SP)
        .o360
  360:  LIF       F0, 0.39804688
  36C:  NOP
  370:  SWC1      F0, 10 (SP)
        .o374
		%ADDIU		A0, R0, 2
		%SAW			A0, $LightningBoltPalette
  %374:  LI        A0, 1
		ADDIU		A0, R0, 3							%Palette 4
  378:  MFC1      A1, F22
  37C:  MFC1      A2, F20
  380:  MFC1      A3, F24
  384:  LI        V0, 5
  388:  SW        V0, 14 (SP)
  38C:  JAL       800723B0
  390:  SW        R0, 18 (SP)
  394:  SW        V0, 18 (S0)
  398:  LW        V0, 18 (S0)
        .o39C
  39C:  LW        V0, C (V0)
  3A0:  SWC1      F22, 4 (V0)
  3A4:  LW        V0, 18 (S0)
  3A8:  LW        V0, C (V0)
  3AC:  SWC1      F20, 8 (V0)
  3B0:  LW        V0, 18 (S0)
        .o3B4
  3B4:  LW        V0, C (V0)
  3B8:  BEQ       R0, R0, .o3F8
  3BC:  SWC1      F24, C (V0)
        .o3C0
  3C0:  LW        V1, 14 (S0)
  3C4:  BEQ       V1, R0, .o3DC
  3C8:  NOP
  3CC:  LW        V0, 0 (V1)
  3D0:  ORI       V0, V0, 10
  3D4:  SW        V0, 0 (V1)
  3D8:  SW        R0, 14 (S0)
        .o3DC
  3DC:  LW        V1, 18 (S0)
  3E0:  BEQ       V1, R0, .o3F8
  3E4:  NOP
  3E8:  LW        V0, 0 (V1)
  3EC:  ORI       V0, V0, 10
  3F0:  SW        V0, 0 (V1)
  3F4:  SW        R0, 18 (S0)
        .o3F8
  3F8:  LB        V1, 210 (S1)
  3FC:  LW        V0, 1C (S0)
  400:  BEQ       V0, V1, .o454
  404:  CLEAR     V0
  408:  LW        V0, C (S0)
  40C:  BEQ       V0, R0, .o454
  410:  CLEAR     V0
  414:  LW        V1, 14 (S0)
  418:  BEQ       V1, R0, .o430
  41C:  NOP
  420:  LW        V0, 0 (V1)
  424:  ORI       V0, V0, 10
  428:  SW        V0, 0 (V1)
  42C:  SW        R0, 14 (S0)
        .o430
  430:  LW        V1, 18 (S0)
  434:  BEQ       V1, R0, .o44C
  438:  NOP
  43C:  LW        V0, 0 (V1)
  440:  ORI       V0, V0, 10
  444:  SW        V0, 0 (V1)
  448:  SW        R0, 18 (S0)
        .o44C
  44C:  LB        V1, 210 (S1)
  450:  CLEAR     V0
        .o454
  454:  SW        V1, 1C (S0)
        .o458
  458:  LW        RA, 2C (SP)
  45C:  LW        S2, 28 (SP)
  460:  LW        S1, 24 (SP)
  464:  LW        S0, 20 (SP)
  468:  LDC1      F24, 40 (SP)
  46C:  LDC1      F22, 38 (SP)
  470:  LDC1      F20, 30 (SP)
  474:  JR        RA
  478:  ADDIU     SP, SP, 48
}

#new:Function $Function_802193D4_24 {
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  JAL       ~Func:get_actor
    C:  LW        A0, 148 (A0)
   10:  LW        A0, 90 (V0)
   14:  LW        V1, 14 (A0)
   18:  BEQ       V1, R0, .o2C
   1C:  SW        R0, 0 (A0)
   20:  LW        V0, 0 (V1)
   24:  ORI       V0, V0, 10
   28:  SW        V0, 0 (V1)
        .o2C
   2C:  LW        V1, 18 (A0)
   30:  BEQ       V1, R0, .o44
   34:  NOP
   38:  LW        V0, 0 (V1)
   3C:  ORI       V0, V0, 10
   40:  SW        V0, 0 (V1)
        .o44
   44:  LW        RA, 10 (SP)
   48:  LI        V0, 2
   4C:  JR        RA
   50:  ADDIU     SP, SP, 18
}

#new:Function $Function_80219428_24 {
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S1, 14 (SP)
   14:  LW        A0, 148 (S0)
   18:  JAL       ~Func:get_actor
   1C:  LW        S1, C (S0)
   20:  COPY      A0, S0
   24:  LW        A1, 0 (S1)
   28:  JAL       ~Func:get_variable
   2C:  LW        S0, 90 (V0)
   30:  SW        V0, 4 (S0)
   34:  LW        RA, 18 (SP)
   38:  LW        S1, 14 (SP)
   3C:  LW        S0, 10 (SP)
   40:  LI        V0, 2
   44:  JR        RA
   48:  ADDIU     SP, SP, 20
}

#new:Function $Function_80219474_24 {
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S1, 14 (SP)
   14:  LW        A0, 148 (S0)
   18:  JAL       ~Func:get_actor
   1C:  LW        S1, C (S0)
   20:  COPY      A0, S0
   24:  LW        A1, 0 (S1)
   28:  JAL       ~Func:get_variable
   2C:  LW        S0, 90 (V0)
   30:  SW        V0, C (S0)
   34:  LW        RA, 18 (SP)
   38:  LW        S1, 14 (SP)
   3C:  LW        S0, 10 (SP)
   40:  LI        V0, 2
   44:  JR        RA
   48:  ADDIU     SP, SP, 20
}

#new:Function $Function_802194C0_24 {
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S1, 14 (SP)
   14:  LW        A0, 148 (S0)
   18:  JAL       ~Func:get_actor
   1C:  LW        S1, C (S0)
   20:  COPY      A0, S0
   24:  LW        A1, 0 (S1)
   28:  JAL       ~Func:get_variable
   2C:  LW        S0, 90 (V0)
   30:  SW        V0, 10 (S0)
   34:  LW        RA, 18 (SP)
   38:  LW        S1, 14 (SP)
   3C:  LW        S0, 10 (SP)
   40:  LI        V0, 2
   44:  JR        RA
   48:  ADDIU     SP, SP, 20
}

#new:Function $Function_8021950C_24 {
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  JAL       8011D82C
    C:  LI        A0, 1
   10:  CLEAR     A0
   14:  LI        V0, 1
   18:  COPY      A1, A0
   1C:  COPY      A2, A0
   20:  LAW       V1, 801512F0
   28:  COPY      A3, A0
   2C:  JAL       ~Func:set_background_color_blend
   30:  SB        V0, 0 (V1)
   34:  LW        RA, 10 (SP)
   38:  LI        V0, 2
   3C:  JR        RA
   40:  ADDIU     SP, SP, 18
}

#new:Function $Function_80219550_24 {
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  LW        V0, C (A0)
    C:  JAL       ~Func:get_variable
   10:  LW        A1, 0 (V0)
   14:  CLEAR     A0
   18:  COPY      A1, A0
   1C:  COPY      A2, A0
   20:  JAL       ~Func:set_background_color_blend
   24:  ANDI      A3, V0, FF
   28:  LW        RA, 10 (SP)
   2C:  LI        V0, 2
   30:  JR        RA
   34:  ADDIU     SP, SP, 18
}

#new:Function $Function_DarkenBackground
{
	ADDIU     SP, SP, FFE8
	SW        S0, 10 (SP)
	DADDU     S0, A0, R0
	BEQ       A1, R0, .o48
	SW        RA, 14 (SP)
	JAL       8011D82C
	ADDIU     A0, R0, 1
	DADDU     A0, R0, R0
	DADDU     A1, A0, R0
	DADDU     A2, A0, R0
	DADDU     A3, A0, R0
	LAW       V0, 801512F0
	ADDIU     V1, R0, 1
	JAL       8011BE5C
	SB        V1, 0 (V0)
	ADDIU     V0, R0, 14
	SW        V0, 70 (S0)
       .o48
	DADDU     A0, R0, R0
	DADDU     A1, A0, R0
	DADDU     A2, A0, R0
	LW        V1, 70 (S0)
	ADDIU     V0, R0, 14
	SUBU      V0, V0, V1
	SLL       A3, V0, 2
	ADDU      A3, A3, V0
	SLL       A3, A3, 1
	JAL       8011BE5C
	ANDI      A3, A3, FE
	LW        V0, 70 (S0)
	ADDIU     V0, V0, FFFF
	SW        V0, 70 (S0)
	SLTIU     V0, V0, 1
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	SLL       V0, V0, 1
	JR        RA
	ADDIU     SP, SP, 18
}
	
#new:Function $Function_BrightenBackground
{
	ADDIU     SP, SP, FFE8
	SW        S0, 10 (SP)
	DADDU     S0, A0, R0
	BEQ       A1, R0, .o1C
	SW        RA, 14 (SP)
	ADDIU     V0, R0, 14
	SW        V0, 70 (S0)
	.o1C
	DADDU     A0, R0, R0
	DADDU     A1, A0, R0
	LW        V0, 70 (S0)
	DADDU     A2, A0, R0
	SLL       A3, V0, 2
	ADDU      A3, A3, V0
	SLL       A3, A3, 1
	JAL       8011BE5C
	ANDI      A3, A3, FE
	LW        V0, 70 (S0)
	ADDIU     V0, V0, FFFF
	BEQ       V0, R0, .o58
	SW        V0, 70 (S0)
	BEQ       R0, R0, .o70
	DADDU     V0, R0, R0
	.o58
	DADDU     A0, R0, R0
	DADDU     A1, A0, R0
	DADDU     A2, A0, R0
	JAL       8011BE5C
	DADDU     A3, A0, R0
	ADDIU     V0, R0, 2
	.o70
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	JR        RA
	ADDIU     SP, SP, 18
}
	
#new:Function $Function_ThunderFX
{
	ADDIU     SP, SP, FFC0
	SW        RA, 24 (SP)
	SW        S2, 20 (SP)
	SW        S1, 1C (SP)
	SW        S0, 18 (SP)
	SDC1      F24, 38 (SP)
	SDC1      F22, 30 (SP)
	SDC1      F20, 28 (SP)
	JAL       ~Func:get_actor
	LW        A0, 148 (A0)
	JAL       ~Func:get_actor
	LH        A0, 428 (V0)
	DADDU     S0, V0, R0
	BEQ       S0, R0, .o128
	ADDIU     V0, R0, 2
	JAL       80149CB4
	ADDIU     A0, R0, 366
	LIO       V1, CCCCCCCD
	LBU       A0, 191 (S0)
	LBU       V0, 190 (S0)
	MULTU     A0, V1
	LWC1      F0, 188 (S0)
	SRL       V1, V0, 2
	ADDU      V0, V0, V1
	MTC1      V0, F6
	NOP
	CVT.S.W   F6, F6
	MUL.S     F6, F6, F0
	NOP
	ADDIU     V0, A0, FFFE
	MTC1      V0, F4
	NOP
	CVT.S.W   F4, F4
	MUL.S     F4, F4, F0
	NOP
	LWC1      F2, 148 (S0)
	LWC1      F22, 144 (S0)
	LWC1      F24, 14C (S0)
	MFHI      T0
	SRL       V0, T0, 3
	ANDI      V0, V0, FF
	MTC1      V0, F0
	NOP
	CVT.S.W   F0, F0
	TRUNC.W.S F8, F6
	MFC1      S1, F8
	TRUNC.W.S F8, F4
	MFC1      S2, F8
	LW        V0, 0 (S0)
	ANDI      V0, V0, 8000
	BEQ       V0, R0, .oE8
	ADD.S     F20, F2, F0
	SRL       V0, A0, 1
	MTC1      V0, F0
	NOP
	CVT.S.W   F0, F0
	SUB.S     F20, F20, F0
	.oE8
	JAL       800299FC
	ADDIU     A0, R0, 2
	ADDIU     A0, V0, 3
	MFC1      A1, F22
	MFC1      A2, F20
	MFC1      A3, F24
	MTC1      S1, F0
	NOP
	CVT.S.W   F0, F0
	SWC1      F0, 10 (SP)
	MTC1      S2, F0
	NOP
	CVT.S.W   F0, F0
	JAL       80070CD0
	SWC1      F0, 14 (SP)
	%Now to update the color of the lightning bolt (hopefully)
	%the shockwave thing has RGB values but the lightning bolt itself seems to have a palette in the effect data
	%problem: the second effect doesn't always exist
	%LW		 S1, C (V0)	%get pointer
	%ADDIU	 S2, R0, 80
	%SW		 S2, 90 (S1)
	%ADDIU	 S2, R0, 0
	%SW		 S2, 94 (S1)
	%ADDIU	 S2, R0, 0
	%SW		 S2, 98 (S1)
	%ADDIU	 S2, R0, 0
	%SW		 S2, 9C (S1)
	%ADDIU	 S2, R0, 0
	%SW		 S2, A0 (S1)
	%ADDIU	 S2, R0, 0
	%SW		 S2, A4 (S1)
	ADDIU     V0, R0, 2
	.o128
	LW        RA, 24 (SP)
	LW        S2, 20 (SP)
	LW        S1, 1C (SP)
	LW        S0, 18 (SP)
	LDC1      F24, 38 (SP)
	LDC1      F22, 30 (SP)
	LDC1      F20, 28 (SP)
	JR        RA
	ADDIU     SP, SP, 40
}

%lightning effect color swapping
#new:Function $Function_SetStaticColors
{
		PUSH		RA, S0
    8:  LW			V0, C (A0)
    C:  JAL			~Func:get_variable
   10:  LW			A1, 0 (V0)
   14:  LW			V1, C (V0)
   18:  ADDIU		A1, R0, 50			%R
   1C:  SW			A1, 18 (V1)
   20:  LW			V1, C (V0)
   18:  ADDIU		A1, R0, 00			%G
   24:  SW			A1, 1C (V1)
   28:  LW			V1, C (V0)
   18:  ADDIU		A1, R0, 80			%B
   2C:  SW			A1, 20 (V1)
   30:  LW			A0, C (V0)
   34:  ADDIU		V1, R0, 00			%R 2
   38:  SW			V1, 24 (A0)
   3C:  LW			A0, C (V0)
   40:  ADDIU		V1, R0, 00			%G 2
   44:  SW			V1, 28 (A0)
   48:  LW			V1, C (V0)
   18:  ADDIU		A1, R0, 00			%B 2
   4C:  SW			A1, 2C (V1)
		.end
   54:  ADDIU		V0, R0, 2
		JPOP		RA, S0
}

#new:Function $Function_SetLightningPalette
{
		PUSH		RA, S0
    8:  LW			V0, C (A0)
    C:  JAL			~Func:get_variable
   10:  LW			A1, 0 (V0)
   14:  LW			V1, C (V0)
   18:  ADDIU		A1, R0, F0			%R
   1C:  SW			A1, 30 (V1)
   20:  LW			V1, C (V0)
   18:  ADDIU		A1, R0, F0			%G
   24:  SW			A1, 34 (V1)
   28:  LW			V1, C (V0)
   18:  ADDIU		A1, R0, FF			%B
   2C:  SW			A1, 38 (V1)
   30:  LW			A0, C (V0)
   34:  ADDIU		V1, R0, FF			%R 2
   38:  SW			V1, 40 (A0)
   3C:  LW			A0, C (V0)
   40:  ADDIU		V1, R0, D0			%G 2
   44:  SW			V1, 44 (A0)
   48:  LW			V1, C (V0)
   18:  ADDIU		A1, R0, FF			%B 2
   4C:  SW			A1, 48 (V1)
   54:  ADDIU		V0, R0, 2
		JPOP		RA, S0
}

%lightning effect color swapping
#new:Function $Function_SetRadialPalette
{
		PUSH		RA, S0
    8:  LW			V0, C (A0)
    C:  JAL			~Func:get_variable
   10:  LW			A1, 0 (V0)
   14:  LW			V1, C (V0)
   18:  ADDIU		A1, R0, FF00		%R + G
   1C:  SH			A1, 68 (V1)
   20:  LW			V1, C (V0)
   18:  ADDIU		A1, R0, 00FF		%B + R2?
   24:  SH			A1, 6A (V1)
   28:  LW			V1, C (V0)
   18:  ADDIU		A1, R0, 80FF		%G2? + B2?
   2C:  SH			A1, 6C (V1)
   30:  LW			A0, C (V0)
   34:  ADDIU		V1, R0, FFFF		%supplemental data
   38:  SH			V1, 6E (A0)
		.end
   54:  ADDIU		V0, R0, 2
		JPOP		RA, S0
}

#new:IdleAnimations $IdleAnimations_80223C1C_24 {
.Status:Normal    000E0801
.Status:Stone     000E0800
.Status:Sleep     000E080A
.Status:Poison    000E0801
.Status:Stop      000E0800
.Status:Static    000E0801
.Status:Paralyze  000E0800
.Status:Dizzy     000E080F
.Status:Fear      000E080F
.Status:End
}

#new:DefenseTable $DefenseTable_80223C68_24 {
.Element:Normal 00000000
.Element:Shock  00000063
.Element:Water  FFFFFFFF
.Element:Throw  FFFFFFFF
.Element:End
}

#new:StatusTable $StatusTable_80223C7C_24 { %shrink + stop
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      50`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      50`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink     50`
.Status:Stop        0`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End
}

#new:PartsTable $PartsTable_80223D28_24 {
00020000 01000000 FF1400FF $IdleAnimations_80223C1C_24 $DefenseTable_80223C68_24 00000080 00000000 00F80000 00000000 
80800001 02003200 FFE200FF 00000000 $DefenseTable_80223C68_24 00000080 00000000 00F80000 00000000 
}

#new:Script $Script_Init_80223D98_24 {
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_Watt )
   14:  Call  BindIdle  ( .Actor:Self $Script_Idle_80223DE4_24 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80223E0C_24 )
		Call	SetActorVar ( .Actor:Self 00000009 00000000 ) %AI state
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_80223DE4_24 {
    0:  SetPriority  00000063 
    C:  Call  $Function_80218F58_24 ( )
   18:  Return
   20:  End
}

#new:Script $Script_HandleEvent_80223E0C_24 {
    0:  Call  UseIdleAnimation      ( .Actor:Self .False )
   14:  Call  $Function_80219428_24 ( 00000000 )
   24:  Call  $Function_80219474_24 ( 00000001 )
   34:  Call  $Function_802194C0_24 ( 00000000 )
   44:  Call  GetLastEvent  ( .Actor:Self *Var0 )
   58:  Switch  *Var0 
   64:  	CaseOR  ==  .Event:HitCombo % 9
   70:  	CaseOR  ==  .Event:Hit % A
   7C:  		SetConst  *Var0  00000001 
   8C:  		SetConst  *Var1  000E080C 
   9C:  		ExecWait  DoNormalHit 
   A8:  	EndCaseGroup
   B0:  	Case  ==  .Event:BurnHit % E
   BC:  		SetConst  *Var0  00000001 
   CC:  		SetConst  *Var1  000E080D 
   DC:  		SetConst  *Var2  000E080E 
   EC:  		ExecWait  DoBurnHit 
   F8:  	Case  ==  .Event:BurnDeath % 24
  104:  		SetConst  *Var0  00000001 
  114:  		SetConst  *Var1  000E080D 
  124:  		SetConst  *Var2  000E080E 
  134:  		ExecWait  DoBurnHit 
  140:  		Call  $Function_802193D4_24 ( )
  158:  		SetConst  *Var0  00000001 
  168:  		SetConst  *Var1  000E080E 
  178:  		ExecWait  DoDeath 
  184:  		Return
  18C:  	Case  ==  .Event:SpinSmashHit % B
  198:  		SetConst  *Var0  00000001 
  1A8:  		SetConst  *Var1  000E080C 
  1B8:  		ExecWait  DoSpinSmashHit 
  1C4:  	Case  ==  .Event:SpinSmashDeath % 21
  1D0:  		Call  $Function_802193D4_24 ( )
  1E8:  		SetConst  *Var0  00000001 
  1F8:  		SetConst  *Var1  000E080C 
  208:  		ExecWait  DoSpinSmashHit 
  214:  		SetConst  *Var0  00000001 
  224:  		SetConst  *Var1  000E080C 
  234:  		ExecWait  DoDeath 
  240:  		Return
  248:  	CaseOR  ==  00000017 % 17
  254:  	CaseOR  ==  .Event:Immune % 19
  260:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  26C:  		SetConst  *Var0  00000001 
  27C:  		SetConst  *Var1  000E0801 
  28C:  		ExecWait  DoImmune 
  298:  	EndCaseGroup
  2A0:  	Case  ==  .Event:Death % 20
  2AC:  		Call  $Function_802193D4_24 ( )
  2C4:  		SetConst  *Var0  00000001 
  2D4:  		SetConst  *Var1  000E080C 
  2E4:  		ExecWait  DoNormalHit 
  2F0:  		Wait  10`
  2FC:  		SetConst  *Var0  00000001 
  30C:  		SetConst  *Var1  000E080C 
  31C:  		ExecWait  DoDeath 
  328:  		Return
  330:  	Case  ==  .Event:RecoverStatus % 31
  33C:  		SetConst  *Var0  00000001 
  34C:  		SetConst  *Var1  000E0801 
  35C:  		ExecWait  DoRecover 
  368:  	Case  ==  .Event:ScareAway % 39
  374:  		SetConst  *Var0  00000001 
  384:  		SetConst  *Var1  000E0803 
  394:  		SetConst  *Var2  000E080C 
  3A4:  		ExecWait  DoScareAway 
  3B0:  		Return
  3B8:  	Case  ==  .Event:BeginAirLift % 3A
  3C4:  		SetConst  *Var0  00000001 
  3D4:  		SetConst  *Var1  000E0803 
  3E4:  		ExecWait  DoAirLift 
  3F0:  	Case  ==  .Event:BlowAway % 16
  3FC:  		SetConst  *Var0  00000001 
  40C:  		SetConst  *Var1  000E080C 
  41C:  		ExecWait  DoBlowAway 
  428:  		Return
  430:  	Default
  438:  EndSwitch
  440:  Call  $Function_80219428_24 ( 00000001 )
  450:  Call  UseIdleAnimation      ( .Actor:Self .True )
  464:  Return
  46C:  End
}

#new:Script $Script_Watt_Electroshock {
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  UseBattleCamPreset    ( 00000013 )
   24:  Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
   40:  Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
   58:  Call  SetBattleCamZoom  ( 0000015E )
   68:  Call  SetBattleCamOffsetZ   ( 00000028 )
   78:  Call  MoveBattleCamOver ( 00000050 )
   88:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   A0:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   B4:  Call  SetGoalToTarget   ( .Actor:Self )
   C4:  Call  SetAnimation      ( .Actor:Self 00000001 000E0803 )
   DC:  Call  $Function_802194C0_24 ( 00000001 )
   EC:  Call  AddGoalPos        ( .Actor:Self 0000000F FFFFFFF6 00000005 )
  108:  Call  FlyToGoal ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
  124:  Call  SetAnimation      ( .Actor:Self 00000001 000E0801 )
  13C:  Call  $Function_802194C0_24 ( 00000000 )
  14C:  Wait  5`
  158:  Call  $Function_80219428_24 ( 00000000 )
  168:  Call  AddGoalPos        ( .Actor:Self 00000019 00000014 00000000 )
  184:  Call  FlyToGoal ( .Actor:Self 0000000F FFFFFFEC .Easing:CosInOut )
  1A0:  Call  SetAnimation      ( .Actor:Self 00000001 000E0805 )
  1B8:  Call  SetGoalToTarget   ( .Actor:Self )
  1C8:  Call  FlyToGoal ( .Actor:Self 00000005 00000000 .Easing:CosInOut )
  1E4:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  208:  Switch  *Var0 
  214:  	CaseOR  ==  .HitResult:Miss % 6
  220:  	CaseOR  ==  .HitResult:Lucky % 5
  22C:  		Set   *VarA  *Var0 
  23C:  		Thread
  244:  			Wait  5`
  250:  			Call  SetAnimation  ( .Actor:Self 00000001 000E0801 )
  268:  		EndThread
  270:  		Call  SetGoalToTarget   ( .Actor:Self )
  280:  		Call  AddGoalPos        ( .Actor:Self FFFFFFD8 0000000A 00000000 )
  29C:  		Call  FlyToGoal ( .Actor:Self 0000000A FFFFFFEC .Easing:QuadraticOut )
  2B8:  		If  *VarA  ==  .HitResult:Lucky % 5
  2C8:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  2EC:  		EndIf
  2F4:  		Call  $Function_80219474_24 ( 00000001 )
  304:  		Call  $Function_80219428_24 ( 00000001 )
  314:  		Wait  20`
  320:  		Call  UseBattleCamPreset    ( 00000002 )
  330:  		Call  YieldTurn ( )
  33C:  		Call  SetGoalToHome     ( .Actor:Self )
  34C:  		Call  SetAnimation      ( .Actor:Self 00000001 000E0803 )
  364:  		Call  FlyToGoal ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
  380:  		Call  SetAnimation      ( .Actor:Self 00000001 000E0801 )
  398:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  3AC:  		Return
  3B4:  	EndCaseGroup
  3BC:  EndSwitch
  3C4:  Call  $Function_80219474_24 ( 00000000 )
  3D4:  Set   *VarA  00000028 
  3E4:  Call  AddBattleCamZoom  ( FFFFFFB5 )
  3F4:  Call  MoveBattleCamOver ( *VarA )
  404:  Call  8024ECF8  ( 00000000 00000000 00000001 )
  41C:  Call  PlaySoundAtActor  ( .Actor:Self 00000289 )
  430:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
  444:  If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  454:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  470:  	Add   *Var1  00000004 
  480:  	Call  PlayEffect    ( ~FX:RadialFlowIn:ElectricalWaves *Var0 *Var1 *Var2 *Fixed[0.52] *VarA 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
			Call  $Function_SetRadialPalette ( *VarF )
  4C4:  Else
  4CC:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  4E8:  	Add   *Var1  0000000C 
  4F8:  	Call  PlayEffect    ( ~FX:RadialFlowIn:ElectricalWaves *Var0 *Var1 *Var2 *Fixed[1.3] *VarA 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
			Call  $Function_SetRadialPalette ( *VarF )
  53C:  EndIf
  544:  Call  $Function_8021950C_24 ( )
  550:  Set   *Var9  00000000 
  560:  Call  SetAnimation  ( .Actor:Self 00000001 000E0806 )
  578:  Loop  *VarA 
  584:  	Add   *Var9  00000003 
  594:  	If  *Var9  >  000000C8 
  5A4:  		Set   *Var9  000000C8 
  5B4:  	EndIf
  5BC:  	Call  $Function_80219550_24 ( *Var9 )
  5CC:  	Wait  1`
  5D8:  EndLoop
  5E0:  Call  SetAnimation      ( .Actor:Self 00000001 000E0801 )
  5F8:  Call  8026EA7C  ( FFFFFF81 00000001 00000009 )
  610:  Call  AddBattleCamZoom  ( 0000004B )
  620:  Call  MoveBattleCamOver ( 00000005 )
  630:  Thread
  638:  	Wait  2`
  644:  	Call  $Function_80219550_24 ( 00000000 )
  654:  EndThread
  70C:  Wait  2`
  718:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:IgnoreDefense|Electric 0000FFFF 00000000 00000005 00000020 )
  748:  Switch  *Var0 
  754:  	CaseOR  ==  .HitResult:Hit % 0
  760:  	CaseOR  ==  00000002 % 2
  76C:  		Call  UseBattleCamPreset    ( 00000002 )
  77C:  		Call  $Function_80219474_24 ( 00000001 )
  78C:  		Call  $Function_80219428_24 ( 00000001 )
  79C:  		Call  AddGoalPos    ( .Actor:Self 00000019 0000000A 00000000 )
  7B8:  		Call  FlyToGoal     ( .Actor:Self 0000000F FFFFFFF6 .Easing:CosInOut )
  7D4:  		Wait  15`
  7E0:  		Call  YieldTurn ( )
  7EC:  		Call  SetGoalToHome ( .Actor:Self )
  7FC:  		Call  SetAnimation  ( .Actor:Self 00000001 000E0803 )
  814:  		Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
  830:  		Call  SetAnimation  ( .Actor:Self 00000001 000E0801 )
  848:  	EndCaseGroup
  850:  EndSwitch
  858:  Call  UseIdleAnimation  ( .Actor:Self .True )
  86C:  Return
  874:  End
}

#new:Script $Script_Watt_ChargeBolt
{
	Call     UseIdleAnimation 	( .Actor:Self .False ) 
	%Call     EnableIdleScript 	( .Actor:Self 00000000 )			Causes a softlock? (the other attacks don't mess with the idle script either)
	Call	SetAnimation	( .Actor:Self 00000001 000E080A )
	%Call	$Function_DarkenBackground ( )
	Call	PlaySound		( 00000365 )
	Call	GetActorPos		( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Sub		*Var[2]  10`
	Call	PlayEffect		( 0000005E 00000000 *Var[0] *Var[1] *Var[2] *Var[0] 200` 0` *Fixed[4.0] 00000006 00000000 00000000 00000000 00000000 )
	Call	$Function_SetLightningPalette ( *VarF )
	Wait	10` 
	Call	$Function_ThunderFX ( )
	Wait	5` 
	Call	80254218 ( 0000000A )
	Call	ShakeCam ( 00000001 00000000 00000005 *Fixed[1.0] )
	Call	EnemyTestTarget ( .Actor:Self  *Var[0] 00000000 00000000 00000001 00000010 )
	Switch   *Var[0] 
		CaseOR   ==  00000006 % transparent
		CaseOR   ==  00000005 % lucky
			Goto	1
		EndCaseGroup
	EndSwitch
	Call	SetGoalToTarget	( .Actor:Self )
	Call	EnemyDamageTarget	( .Actor:Self *Var[0] ~Flags:DamageType:IgnoreDefense|Electric 0000FFFF 80010264 0000000C 00000020 )
	Label	1
	Call	SetAnimation	( .Actor:Self 00000001 000E0801 )
	Wait	35` 
	%Call	$Function_BrightenBackground ( )
	Call     UseBattleCamPreset 	( 00000002 )
	Call     UseIdleAnimation 	( .Actor:Self .True ) 
	%Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Return
	End
}

#new:Script $Script_Watt_ChargeWave
{
	Call     UseIdleAnimation 	( .Actor:Self .False ) 
	%Call     EnableIdleScript 	( .Actor:Self 00000000 )
    Call     SetTargetActor ( .Actor:Self .Actor:Player )
    Call     UseBattleCamPreset 	( 0000000E )
    Call     BattleCamTargetActor ( .Actor:Self )
    Call     MoveBattleCamOver 	( 0000000F )
    Wait     0000000F 
    Call     SetAnimation 	( .Actor:Self 00000001 000E080A )
    Wait     00000005 
    Call     PlaySoundAtActor 	( .Actor:Self .Sound:BigPowerUp )
	Wait	 0000000A
    Call     UseBattleCamPreset 	( 00000002 ) %preset E doesn't have mario on screen so the attack would basically be unblockable without this
	Wait	 0000000A							%the timing is really bad without some extra time for the zoom
    Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call     GetStatusFlags ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000 
		%Sub  *Var[0]  00000006 
		%Add  *Var[1]  0000000C 
		%Sub  *Var[2]  00000002 
		Call     PlayEffect  	( ~FX:SnakingStatic *Var[0] *Var[1] *Var[2] *Fixed[1.2] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
		Call	 $Function_SetStaticColors ( *VarF )
    Else
    	%Sub  *Var[0]  00000010 
    	%Add  *Var[1]  0000001F 
		%Sub  *Var[2]  00000002 
		Call     PlayEffect  	( ~FX:SnakingStatic *Var[0] *Var[1] *Var[2] *Fixed[0.7] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
		Call	 $Function_SetStaticColors ( *VarF )
	EndIf
    Call     GetStatusFlags ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00080000 
    	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
    	%Add  *Var[0]  0000000D 
    	%Set  *Var[1]  00000037 
    	Call     PlayEffect  	( ~FX:EnergyShockwave *Var[0] *Var[1] *Var[2] *Fixed[1.0] 0000003C 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Else
		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
		%Add  *Var[0]  00000005 
		%Set  *Var[1]  00000016 
		Call     PlayEffect  	( ~FX:EnergyShockwave *Var[0] *Var[1] *Var[2] *Fixed[1.0] 0000003C 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	EndIf
    Wait     00000008 
    Call     SetGoalToTarget 	( .Actor:Self )
    Call     EnemyTestTarget ( .Actor:Self *Var[A] 00000000 00000000 00000001 00000010 )
    Switch  *Var[A] 
    	CaseOR  ==  .HitResult:Miss % 6
    	CaseOR  ==  .HitResult:Lucky % 5
    		Call     SetTargetActor ( .Actor:Self .Actor:Partner )
    		Call     EnemyTestTarget ( .Actor:Self *Var[B] 00000000 00000000 00000001 00000010 )
    		Switch  *Var[B] 
    			Case  ==  .HitResult:Miss % 6
    				Call     SetAnimation 	( .Actor:Self 00000001 000E080A )
    				Wait     0000001E 
    				Return
    			Default
    				Wait     00000002 
    				If  *Var[A]  ==  00000005 
    					Call     SetTargetActor ( .Actor:Self .Actor:Player )
    					Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
    				EndIf
    				Wait     00000002 
    				Call     SetTargetActor ( .Actor:Self .Actor:Partner )
    				Call     SetGoalToTarget 	( .Actor:Self )
    				Call     EnemyDamageTarget 	( .Actor:Self *Var[0] ~Flags:DamageType:IgnoreDefense|Electric 0000FFFF 80010164 00000002 00000020 )
    				Call     8026F44C ( 00010000 )
    				If  *Var[A]  !=  00000005 
    					Call     SetAnimation 	( .Actor:Self 00000001 000E080A )
    				EndIf
    				Wait     0000001E 
    				Return
    		EndSwitch
    	EndCaseGroup
    	Default
    EndSwitch
    Call     8026BF48 ( 00000001 )
    Thread
    	Wait     00000004 
    	Call     SetTargetActor ( .Actor:Self .Actor:Partner )
    	Call     SetGoalToTarget 	( .Actor:Self )
    	Call     EnemyDamageTarget 	( .Actor:Self *Var[0] ~Flags:DamageType:IgnoreDefense|Electric 0000FFFF 80010164 00000003 00000020 )
    	Call     8026BF48 ( 00000000 )
    EndThread
    Wait     00000002 
    Call     SetGoalToTarget 	( .Actor:Self )
	Call     EnemyDamageTarget 	( .Actor:Self *Var[F] ~Flags:DamageType:IgnoreDefense|Electric 0000FFFF 80010164 00000008 00000020 )
  	Call     UseBattleCamPreset 	( 00000002 )
    Call     SetAnimation 	( .Actor:Self 00000001 000E0801 )
	Call     UseIdleAnimation 	( .Actor:Self .True ) 
	%Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Return
	End
}


%	Electro dash
%	Charge bolt (skip if mario is stunned)
%	Charge wave (skip if partner is stunned)

#new:Script $Script_TakeTurn_Watt
{
	Label 1
	Call	GetActorVar ( .Actor:Self 00000009 *Var9 )
	Switch *Var9
		Case == 00000000
			ExecWait $Script_Watt_Electroshock
			Call	SetActorVar ( .Actor:Self 00000009 00000001 )
		Case == 00000001
			Call	SetActorVar ( .Actor:Self 00000009 00000002 )
			Call     GetStatusFlags ( .Actor:Player *Var[0] )
			If  *Var[0]  &  0035D000 
				Goto 1
			EndIf
			ExecWait $Script_Watt_ChargeBolt
		Case == 00000002
			Call	SetActorVar ( .Actor:Self 00000009 00000000 )		
			Call     GetStatusFlags ( .Actor:Partner *Var[0] )
			If  *Var[0]  &  01000000 
				Goto 1
			EndIf
			ExecWait $Script_Watt_ChargeWave
	EndSwitch
	Return
	End
}

#new:ConstDouble $ConstDouble_80228448_24 {
4.800000d
}



#new:ConstDouble $ConstDouble_8023C060
{
	0.100000d
}

#new:Function $Function_80238388
{
    0:  ADDIU     SP, SP, FFC8
    4:  LA        V0, 800DC070
    C:  SW        RA, 30 (SP)
   10:  SW        S1, 2C (SP)
   14:  SW        S0, 28 (SP)
   %18:  LW        S0, DC (V0)		%partner pointer
		%LW        S0, E4 (V0)		%enemy 1 pointer (the right one) (hacky solution)
	%Actually code something that isn't hacky :/
		LW		A0, 148 (S1) %value to get
		JAL		~Func:get_actor
		NOP
		DADDU	  S0, V0, R0
		LA        V0, 800DC070
   1C:  LW        S1, D8 (V0)		%mario pointer
   20:  JAL       ~Func:rand_int
   24:  LI        A0, A
   28:  LAD       F2, $ConstDouble_8023C060
   30:  LWC1      F0, 144 (S1)
   34:  LWC1      F4, 144 (S0)
   38:  LWC1      F6, 148 (S0)
   3C:  LWC1      F10, 14C (S0)
   40:  SWC1      F0, 10 (SP)
   44:  MTC1      V0, F0
   48:  NOP
   4C:  CVT.D.W   F0, F0
   50:  MUL.D     F0, F0, F2
   54:  NOP
   58:  LI        A0, 1
   5C:  LWC1      F2, 148 (S1)
   60:  LI        V0, 1E
   64:  SWC1      F2, 14 (SP)
   68:  LIF       F3, 1.875
   70:  MTC1      R0, F2
   74:  CVT.D.S   F4, F4
   78:  ADD.D     F0, F0, F2
   7C:  LIF       F3, 2.34375
   84:  MTC1      R0, F2
   88:  LWC1      F8, 14C (S1)
   8C:  SUB.D     F4, F4, F2
   90:  LIF       F3, 2.734375
   98:  MTC1      R0, F2
   9C:  CVT.D.S   F6, F6
   A0:  SW        V0, 20 (SP)
   A4:  SWC1      F8, 18 (SP)
   A8:  ADD.D     F6, F6, F2
   AC:  LIF       F2, 5.0
   B4:  CVT.S.D   F4, F4
   B8:  ADD.S     F10, F10, F2
   BC:  MFC1      A1, F4
   C0:  CVT.S.D   F6, F6
   C4:  MFC1      A2, F6
   C8:  MFC1      A3, F10
   CC:  CVT.S.D   F0, F0
   D0:  JAL       800719F0			%looks like this is one of the internal effect spawner functions
   D4:  SWC1      F0, 1C (SP)
		%now make it g r e e n (but I'll use the same color as the water beam below)
   14:  LW            V1, C (V0)
   18:  ADDIU        A0, R0, D2                %R
   1C:  SW            A0, 34 (V1)
   20:  LW            V1, C (V0)
        ADDIU        A0, R0, FF                %G
   24:  SW            A0, 38 (V1)
   28:  LW            V1, C (V0)
   2C:  ADDIU        A1, R0, E6                %B
   30:  SW            A1, 3C (V1)
   34:  LW            A0, C (V0)
   38:  ADDIU        V1, R0, 00                %R 2
   3C:  SW            V1, 44 (A0)
   40:  LW            A0, C (V0)
   44:  ADDIU        V1, R0, CD                %G 2
   48:  SW            V1, 48 (A0)
   4C:  LW            V1, C (V0)
        ADDIU        A1, R0, 1E                %B 2		
		SW            V1, 4C (A0)
   D8:  LW        RA, 30 (SP)
   DC:  LW        S1, 2C (SP)
   E0:  LW        S0, 28 (SP)
   E4:  SAW       V0, $End[0]
   EC:  LI        V0, 2
   F0:  JR        RA
   F4:  ADDIU     SP, SP, 38
}

%green, poison-y water

%D2, FF, E6, [C8]
%00, CD, 1E
#new:Function $Function_SetWaterBeamPalette        
{
    0:  ADDIU        SP, SP, FFE8
    4:  SW            RA, 10 (SP)
    8:  LW            V0, C (A0)
    C:  JAL            ~Func:get_variable
   10:  LW            A1, 0 (V0)
   14:  LW            V1, C (V0)
   18:  ADDIU        A0, R0, D2                %R
   1C:  SW            A0, 34 (V1)
   20:  LW            V1, C (V0)
        ADDIU        A0, R0, FF                %G
   24:  SW            A0, 38 (V1)
   28:  LW            V1, C (V0)
   2C:  ADDIU        A1, R0, E6                %B
   30:  SW            A1, 3C (V1)
   34:  LW            A0, C (V0)
   38:  ADDIU        V1, R0, 00                %R 2
   3C:  SW            V1, 44 (A0)
   40:  LW            A0, C (V0)
   44:  ADDIU        V1, R0, CD                %G 2
   48:  SW            V1, 48 (A0)
   4C:  LW            V1, C (V0)
        ADDIU        A1, R0, 1E                %B 2
   50:  SW            A1, 4C (V1)
   54:  LW            RA, 10 (SP)
   58:  ADDIU        V0, R0, 2
   5C:  JR            RA
   60:  ADDIU        SP, SP, 18
}

#new:Actor $DarkSushie {
% stats
[Index]        59b 
[Level]        23`b 
[MaxHP]        80`b 
[Coins]         2`b 
[Flags]       00000000 
[StatusTable] $StatusTable_80224B70_24 
% ai
[PartsCount]    1`s 
[PartsTable]  $PartsTable_80224C1C_24 
[Script]      $Script_Init_80224C68_24 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]   3`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         37`b  26`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_80224B18_24 {
.Status:Normal    000F0601
.Status:Stone     000F0600
.Status:Sleep     000F0613
.Status:Poison    000F0601
.Status:Stop      000F0600
.Status:Static    000F0601
.Status:Paralyze  000F0600
.Status:Dizzy     000F0610
.Status:Fear      000F0610
.Status:End
}

#new:DefenseTable $DefenseTable_80224B64_24 {
.Element:Normal 00000000
.Element:End
}

#new:StatusTable $StatusTable_80224B70_24 {	%sleep + stop
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      50`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      50`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   50`
.Status:Shrink      0`
.Status:Stop        0`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End
}

#new:PartsTable $PartsTable_80224C1C_24 {
00800000 01000000 001800FF $IdleAnimations_80224B18_24 $DefenseTable_80224B64_24 00000000 00000000 00F40000 00000000 
}

#new:Script $Script_Init_80224C68_24 {
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_Sushie )
   14:  Call  BindIdle  ( .Actor:Self $Script_Idle_80224CB4_24 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80224CC4_24 )
		Call	SetActorVar ( .Actor:Self 00000009 00000000 ) %AI state
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_80224CB4_24 {
    0:  Return
    8:  End
}

#new:Script $Script_HandleEvent_80224CC4_24 {
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0 
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		Call  GetLastElement    ( *Var1 )
   70:  		If  *Var1  &  00000020 
   80:  			SetConst  *Var0  00000001 
   90:  			SetConst  *Var1  000F060D 
   AC:  			Return
   B4:  		Else
   BC:  			SetConst  *Var0  00000001 
   CC:  			SetConst  *Var1  000F060D 
   DC:  			ExecWait  DoNormalHit 
   E8:  		EndIf
   F0:  	EndCaseGroup
   F8:  	Case  ==  .Event:BurnHit % E
  104:  		SetConst  *Var0  00000001 
  114:  		SetConst  *Var1  000F060E 
  124:  		SetConst  *Var2  000F060F 
  134:  		ExecWait  DoBurnHit 
  140:  	Case  ==  .Event:BurnDeath % 24
  14C:  		SetConst  *Var0  00000001 
  15C:  		SetConst  *Var1  000F060E 
  16C:  		SetConst  *Var2  000F060F 
  17C:  		ExecWait  DoBurnHit 
  194:  		Wait  10`
  1A0:  		SetConst  *Var0  00000001 
  1B0:  		SetConst  *Var1  000F060F 
  1C0:  		ExecWait  DoDeath 
  1CC:  		Return
  1D4:  	Case  ==  .Event:SpinSmashHit % B
  1E0:  		SetConst  *Var0  00000001 
  1F0:  		SetConst  *Var1  000F060D 
  200:  		ExecWait  DoSpinSmashHit 
  20C:  	Case  ==  .Event:SpinSmashDeath % 21
  224:  		SetConst  *Var0  00000001 
  234:  		SetConst  *Var1  000F060D 
  244:  		ExecWait  DoSpinSmashHit 
  250:  		SetConst  *Var0  00000001 
  260:  		SetConst  *Var1  000F060D 
  270:  		ExecWait  DoDeath 
  27C:  		Return
  284:  	Case  ==  .Event:ShockHit % 2F
  290:  		SetConst  *Var0  00000001 
  2A0:  		SetConst  *Var1  000F060D 
				ExecWait DoShockHit
				Call	 SetTargetActor 	( .Actor:Self .Actor:Player )
				Call     SetGoalToTarget 	( .Actor:Self )
				Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
				Add  *Var[0]  0000003C 
				Set  *Var[1]  00000000 
				Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.0] )
				Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
				Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
				Call  SetAnimation  ( .Actor:Self 00000001 000F0603 )
				Call  SetGoalToHome ( .Actor:Self )
				Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
				Call  RunToGoal     ( .Actor:Self 00000000 .False )
  2BC:  		Return
  2C4:  	Case  ==  .Event:ShockDeath % 26
  2DC:  		SetConst  *Var0  00000001 
  2EC:  		SetConst  *Var1  000F060D 
  2FC:  		Set   *Var2  00000014 
  318:  		SetConst  *Var0  00000001 
  328:  		SetConst  *Var1  000F060D 
  338:  		ExecWait  DoDeath 
  344:  		Return
  34C:  	CaseOR  ==  00000017 % 17
  358:  	CaseOR  ==  .Event:Immune % 19
  364:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  370:  		SetConst  *Var0  00000001 
  380:  		SetConst  *Var1  000F0601 
  390:  		ExecWait  DoImmune 
  39C:  	EndCaseGroup
  3A4:  	Case  ==  .Event:Death % 20
  3BC:  		SetConst  *Var0  00000001 
  3CC:  		SetConst  *Var1  000F060D 
  3DC:  		ExecWait  DoNormalHit 
  3E8:  		Wait  10`
  3F4:  		SetConst  *Var0  00000001 
  404:  		SetConst  *Var1  000F060D 
  414:  		ExecWait  DoDeath 
  420:  		Return
  428:  	Case  ==  .Event:RecoverStatus % 31
  434:  		SetConst  *Var0  00000001 
  444:  		SetConst  *Var1  000F0601 
  454:  		ExecWait  DoRecover 
  460:  	Case  ==  .Event:ScareAway % 39
  46C:  		SetConst  *Var0  00000001 
  47C:  		SetConst  *Var1  000F0603 
  48C:  		SetConst  *Var2  000F060D 
  49C:  		ExecWait  DoScareAway 
  4A8:  		Return
  4B0:  	Case  ==  .Event:BeginAirLift % 3A
  4BC:  		SetConst  *Var0  00000001 
  4CC:  		SetConst  *Var1  000F0603 
  4DC:  		ExecWait  DoAirLift 
  4E8:  	Case  ==  .Event:BlowAway % 16
  4F4:  		SetConst  *Var0  00000001 
  504:  		SetConst  *Var1  000F060D 
  514:  		ExecWait  DoBlowAway 
  520:  		Return
  528:  	Default
  530:  EndSwitch
  538:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  54C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  560:  Return
  568:  End
}

#new:Script $Script_Sushie_BellyFlop {
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  UseBattleCamPreset    ( 0000003F )
   38:  Call  BattleCamTargetActor  ( .Actor:Self )
   48:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   60:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   74:  Call  SetGoalToTarget   ( .Actor:Self )
   84:  Call  AddGoalPos        ( .Actor:Self 00000046 00000000 00000000 )
   A0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   BC:  Call  GetGoalPos        ( .Actor:Self *Var3 *Var4 *Var5 )
   D8:  Sub   *Var3  *Var0 
   E8:  Div   *Var3  *Fixed[3.0] 
   F8:  Set   *VarA  *Var3 
  108:  If  *VarA  <  00000000 
  118:  	Mul   *VarA  FFFFFFFF 
  128:  EndIf
  130:  Call  MoveBattleCamOver ( *VarA )
  140:  Call  SetAnimation      ( .Actor:Self 00000001 000F0603 )
  158:  Call  RunToGoal ( .Actor:Self *VarA .False )
  170:  Call  SetAnimation      ( .Actor:Self 00000001 000F0601 )
  188:  Wait  10`
  194:  Call  UseBattleCamPreset    ( 00000008 )
  1A4:  Call  BattleCamTargetActor  ( .Actor:Self )
  1B4:  Call  AddBattleCamZoom  ( FFFFFFCE )
  1C4:  Call  MoveBattleCamOver ( 0000001E )
  1D4:  Call  8024ECF8  ( 00000001 00000001 00000001 )
  1EC:  Call  SetAnimation      ( .Actor:Self 00000001 000F0604 )
  204:  Wait  15`
  210:  Call  SetAnimation      ( .Actor:Self 00000001 000F0608 )
  228:  Wait  15`
  234:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  258:  Switch  *Var0 
  264:  	CaseOR  ==  .HitResult:Miss % 6
  270:  	CaseOR  ==  .HitResult:Lucky % 5
  27C:  		Set   *VarA  *Var0 
  28C:  		Call  UseBattleCamPreset    ( 00000002 )
  29C:  		Call  MoveBattleCamOver     ( 00000014 )
  2AC:  		Call  SetAnimation  ( .Actor:Self 00000001 000F0605 )
  2C4:  		Thread
  2CC:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
  2E8:  			Set   *Var0  00000000 
  2F8:  			Loop  0000000A 
  304:  				Add   *Var0  00000024 
  314:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  330:  				Wait  1`
  33C:  			EndLoop
  344:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000014 )
  360:  		EndThread
  368:  		Thread
  570: 				Wait  13`
  57C:  			Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.1] *Fixed[1.1] *Fixed[1.1] )
  59C:  			Wait  1`
  5A8:  			Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.2] *Fixed[1.2] *Fixed[1.2] )
  5C8:  			Wait  1`
  5D4:  			Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.3] *Fixed[1.3] *Fixed[1.3] )
  5F4:  			Wait  1`
  600:  			Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.4] *Fixed[1.4] *Fixed[1.4] )
  620:  			Wait  1`
  62C:  			Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.5] *Fixed[1.5] *Fixed[1.5] )
  654:  		EndThread
  65C:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
  678:  		Call  PlaySoundAtActor  ( .Actor:Self 00002034 )
  68C:  		Call  SetGoalToTarget   ( .Actor:Self )
  69C:  		Thread
  6A4:  			Call  SetAnimation  ( .Actor:Self 00000001 000F0605 )
  6BC:  			Wait  10`
  6C8:  			Call  SetAnimation  ( .Actor:Self 00000001 000F0606 )
  6E0:  		EndThread
  6E8:  		Call  SetActorJumpGravity       ( .Actor:Self *Fixed[1.0] )
  6FC:  		Call  JumpToGoal    ( .Actor:Self 00000014 .False .True .False )
  71C:  		Call  SetAnimation  ( .Actor:Self 00000001 000F0607 )
  734:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  750:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  76C:  		Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  78C:  		Call  LandJump      ( .Actor:Self )
  79C:  		Call  PlaySoundAtActor  ( .Actor:Self 0000029A )
  7B0:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  7CC:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  7E8:  		Call  AddGoalPos    ( .Actor:Self FFFFFFF1 00000000 00000000 )
  804:  		Call  JumpToGoal    ( .Actor:Self 00000014 .False .True .False )
  824:  		Call  PlaySoundAtActor  ( .Actor:Self 0000029A )
  838:  		Call  AddGoalPos    ( .Actor:Self FFFFFFF6 00000000 00000000 )
  854:  		Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
  874:  		Call  PlaySoundAtActor  ( .Actor:Self 0000029A )
  888:  		If  *VarA  ==  .HitResult:Lucky % 5
  898:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  8BC:  		EndIf
  8C4:  		Wait  10`
  8D0:  		Call  UseBattleCamPreset    ( 00000002 )
  8E0:  		Call  YieldTurn ( )
  8EC:  		Call  SetAnimation      ( .Actor:Self 00000001 000F0603 )
  904:  		Call  SetGoalToHome     ( .Actor:Self )
  914:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
  928:  		Call  RunToGoal ( .Actor:Self 00000000 .False )
  940:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  954:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  968:  		Return
  970:  	EndCaseGroup
  978:  EndSwitch
  980:  Call  UseBattleCamPreset    ( 00000002 )
  990:  Call  MoveBattleCamOver     ( 0000000A )
  9A0:  Call  SetAnimation  ( .Actor:Self 00000001 000F0605 )
  9B8:  Thread
  9C0:  	Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
  9DC:  	Set   *Var0  00000000 
  9EC:  	Loop  0000000A 
  9F8:  		Add   *Var0  00000024 
  A08:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  A24:  		Wait  1`
  A30:  	EndLoop
  A38:  	Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000014 )
  A54:  EndThread
  A5C:  Thread
  C64:  	Wait  13`
  C70:  	Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.2] *Fixed[1.2] *Fixed[1.2] )
  C90:  	Wait  1`
  C9C:  	Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.3] *Fixed[1.3] *Fixed[1.3] )
  CBC:  	Wait  1`
  CC8:  	Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.5] *Fixed[1.5] *Fixed[1.5] )
  CE8:  	Wait  1`
  CF4:  	Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.6] *Fixed[1.6] *Fixed[1.6] )
  D14:  	Wait  1`
  D20:  	Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.8] *Fixed[1.8] *Fixed[1.8] )
  D48:  EndThread
  D50:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
  D6C:  Call  PlaySoundAtActor  ( .Actor:Self 00002034 )
  D80:  Call  SetGoalToTarget   ( .Actor:Self )
  D90:  Thread
  D98:  	Call  SetAnimation  ( .Actor:Self 00000001 000F0605 )
  DB0:  	Wait  10`
  DBC:  	Call  SetAnimation  ( .Actor:Self 00000001 000F0606 )
  DD4:  EndThread
  DDC:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  DF0:  Call  JumpToGoal    ( .Actor:Self 00000014 .False .True .False )
  E10:  Call  SetAnimation  ( .Actor:Self 00000001 000F0607 )
  E28:  Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
  E44:  Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  E60:  Thread
  E68:  	Wait  3`
  E74:  	Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  E94:  EndThread
  F4C:  Wait  2`
  F58:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000005 00000020 )
		%jump back and do item stealing stuff
  F88:  Switch  *Var0 
  F94:  	CaseOR  ==  .HitResult:Hit % 0
  FA0:  	CaseOR  ==  00000002 % 2
				Set  *Flag[00]  00000000 
				Call     GetBattleFlags ( *Var[0] )
				If  *Var[0]  !&  80000000 
					Call     $StealActionFunc3 ( *Var[0] )
					If  *Var[0]  !=  FFFFFFFF 
						Set  *Flag[00]  00000001 
					EndIf
				EndIf
				Call     GetLastDamage 	( .Actor:Player *Var[0] )
				If  *Var[0]  <=  00000000 
					Wait     00000014 
					Goto     00000064 
				EndIf
				Call     GetStatusFlags ( .Actor:Self *Var[1] )
				If  *Var[1]  &  00080000 
					Wait     00000014 
					Goto     00000064 
				EndIf
				Call     GetStatusFlags ( .Actor:Player *Var[1] )
				If  *Var[1]  &  40100000 
					Wait     00000014 
					Goto     00000064 
				EndIf
				If  *Flag[00]  ==  00000001 
					Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
					Exec     $StealAction 
					%Wait     00000008 
					%Bounce some times
					Call  SetAnimation  ( .Actor:Self 00000001 000F0606 )
					Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
					Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
					Add   *Var0  35`	%60 -> 35
					Set   *Var1  00000000 
					Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.4] )
					Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
					Call  JumpToGoal    ( .Actor:Self 11` .False .True .False )
					Call  PlaySoundAtActor  ( .Actor:Self 0000029A )
					Add   *Var0  17` 	%30 -> 17
					Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
					Call  JumpToGoal    ( .Actor:Self 5` .False .True .False )
					Call  PlaySoundAtActor  ( .Actor:Self 0000029A )
					Add   *Var0  11` 	%20 -> 11
					Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
					Call  JumpToGoal    ( .Actor:Self 3` .False .True .False )
					Call  PlaySoundAtActor  ( .Actor:Self 0000029A )
					Add   *Var0  7` 	%10 -> 7
					Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
					Call  JumpToGoal    ( .Actor:Self 2` .False .True .False )
					Call  PlaySoundAtActor  ( .Actor:Self 0000029A )
					Call  SetAnimation  ( .Actor:Self 00000001 000F0601 )
					%
					Label    00000000 
					Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
					If  *Var[0]  !=  00000000 
						Wait     00000001 
						Goto     00000000 
					EndIf
					Call     SetAnimation 	( .Actor:Self 00000001 000F0603 )
					Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
					Call     $StealActionFunc4 ( *Var[0] *Var[1] *Var[2] *Var[3] )
					Add  *Var[1]  00000014 
					Sub  *Var[3]  00000002 
					Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
					Call     SetGoalPos 	( .Actor:Self *Var[1] *Var[2] *Var[3] )
					Call     RunToGoal   	( .Actor:Self 00000000 .False )
					Thread
						Wait     00000005 
						Call     PlaySoundAtActor 	( .Actor:Self 000020DC )
						Call     $StealActionFunc5 ( 000000C8 0000000A )
					EndThread
					Call     SetAnimation 	( .Actor:Self 00000001 000F0611 )
					Wait     00000005 
					Call     SetActorVar 	( .Actor:Self 00000000 00000002 )
					Sub  *Var[1]  00000007 
					Call     PlayEffect  	( ~FX:Firework:White *Var[1] *Var[2] *Var[3] *Fixed[1.0] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
					Wait     00000028 
				Else
					%Wait     00000008 
					%Bounce some times
					Call  SetAnimation  ( .Actor:Self 00000001 000F0606 )
					Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
					Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
					Add   *Var0  35`	%60 -> 35
					Set   *Var1  00000000 
					Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.4] )
					Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
					Call  JumpToGoal    ( .Actor:Self 11` .False .True .False )
					Call  PlaySoundAtActor  ( .Actor:Self 0000029A )
					Add   *Var0  17` 	%30 -> 17
					Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
					Call  JumpToGoal    ( .Actor:Self 5` .False .True .False )
					Call  PlaySoundAtActor  ( .Actor:Self 0000029A )
					Add   *Var0  11` 	%20 -> 11
					Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
					Call  JumpToGoal    ( .Actor:Self 3` .False .True .False )
					Call  PlaySoundAtActor  ( .Actor:Self 0000029A )
					Add   *Var0  7` 	%10 -> 7
					Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
					Call  JumpToGoal    ( .Actor:Self 2` .False .True .False )
					Call  PlaySoundAtActor  ( .Actor:Self 0000029A )
					Call  SetAnimation  ( .Actor:Self 00000001 000F0601 )
					Wait     0000000A 
					Call  SetAnimation  ( .Actor:Self 00000001 000F0604 )		%get angry
					Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
					Add  *Var[1]  0000000A 
					Call     PlayEffect  	( ~FX:EmoteIcon:Question 00000000 *Var[0] *Var[1] *Var[2] 00000019 FFFFFFD3 00000014 00000000 00000000 00000000 00000000 00000000 )
					Wait     00000014 
				EndIf
				Goto 65
				Label 64 %end of stuff, go home
				%Wait     00000008 
				%Bounce some times
				Call  SetAnimation  ( .Actor:Self 00000001 000F0606 )
				Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
				Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
				Add   *Var0  60`	%60 -> 35
				Set   *Var1  00000000 
				Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.4] )
				Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
				Call  JumpToGoal    ( .Actor:Self 20` .False .True .False )
				Call  PlaySoundAtActor  ( .Actor:Self 0000029A )
				Add   *Var0  30` 	%30 -> 17
				Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
				Call  JumpToGoal    ( .Actor:Self 8` .False .True .False )
				Call  PlaySoundAtActor  ( .Actor:Self 0000029A )
				Add   *Var0  20` 	%20 -> 11
				Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
				Call  JumpToGoal    ( .Actor:Self 6` .False .True .False )
				Call  PlaySoundAtActor  ( .Actor:Self 0000029A )
				Add   *Var0  10` 	%10 -> 7
				Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
				Call  JumpToGoal    ( .Actor:Self 4` .False .True .False )
				Call  PlaySoundAtActor  ( .Actor:Self 0000029A )
				Call  SetAnimation  ( .Actor:Self 00000001 000F0601 )
				Wait     0000000A 
				Label 65
 11A8:  		Call  UseBattleCamPreset    ( 00000002 )
 11B8:  		Call  YieldTurn ( )
 11C4:  		Call  SetAnimation  ( .Actor:Self 00000001 000F0603 )
 11DC:  		Call  SetGoalToHome ( .Actor:Self )
 11EC:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
 1200:  		Call  RunToGoal     ( .Actor:Self 00000000 .False )
 1218:  	EndCaseGroup
 1220:  EndSwitch
 1228:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
 123C:  Call  UseIdleAnimation  ( .Actor:Self .True )
 1250:  Return
 1258:  End
}

#new:Script $Script_Sushie_Squirt
{
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     UseBattleCamPreset 	( 0000003F )
	Call     BattleCamTargetActor ( .Actor:Self )
	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     SetAnimation 	( .Actor:Self FFFFFFFF 000F0609 )
	Call     AddBattleCamZoom  	( FFFFFFCE ) %zoom in
	Call     MoveBattleCamOver 	( 0000001E )
	Wait 	 5A
	Call     SetAnimation 	( .Actor:Self FFFFFFFF 000F060A ) %time to shoot water
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[0]  FFFFFFF6 %0000000A 
	Add  *Var[1]  FFFFFFF5 %0000000B
	Call     UseBattleCamPreset 	( 00000003 )
	Call     MoveBattleCamOver 	( 0000000A )
	Call     EnemyTestTarget ( .Actor:Self *Var[0] 10000004 00000000 00000001 00000010 )
	Switch (*Var[0])
		Case == 00000005 %lucky: water beam misses you
			Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
			Add		*Var1 10`
			Add 	*Var0 -5`
			Call     SetTargetActor ( .Actor:Self .Actor:Player )
			Call     SetGoalToTarget 	( .Actor:Self )
			Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
			%Call     $Function_802382A4 ( )
			Sub	*Var[3] 15
			Add *Var[4] 15
			Call     PlaySoundAtActor 	( .Actor:Self 00000297 )
			Call     PlayEffect  	( ~FX:Squirt:Waterbeam *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] 00000001 0000000A 00000000 00000000 00000000 00000000 )
			Call	 $Function_SetWaterBeamPalette ( *VarF )
			Wait     00000014 
			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
			Goto 3
		Case == 00000006 %invis: water beam goes past you
			Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
			Add		*Var1 10`
			Add 	*Var0 -5`
			Call     SetTargetActor ( .Actor:Self .Actor:Player )
			Call     SetGoalToTarget 	( .Actor:Self )
			Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
			%Call     $Function_802382A4 ( )
			Sub	*Var[3] 15
			Call     PlaySoundAtActor 	( .Actor:Self 00000297 )
			Call     PlayEffect  	( ~FX:Squirt:Waterbeam *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] 00000001 0000000A 00000000 00000000 00000000 00000000 )
			Call	 $Function_SetWaterBeamPalette ( *VarF )
			Wait     00000014
			Goto 3
	EndSwitch
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add		*Var1 10`
	Add 	*Var0 -5`
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	%Call     $Function_802382A4 ( )
	Call     PlaySoundAtActor 	( .Actor:Self 00000297 )
	Call     PlayEffect  	( ~FX:Squirt:Waterbeam *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] 00000001 0000000A 00000000 00000000 00000000 00000000 )
	Call	 $Function_SetWaterBeamPalette ( *VarF )
	Wait     0000000A
	Call     EnemyDamageTarget 	( .Actor:Self *Var[0] ~Flags:DamageType:NoContact|Water 00000000 80020164 00000007 00000020 ) %~DebuffType:Poison:1:100`
	Label	 3
	Call     UseBattleCamPreset 	( 00000002 ) %reset camera?
	Call     YieldTurn   	( )
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End
}

%This was working before!
%Why not anymore???
%Now the camera goes into the void
%Sushie goes into a parallel universe (*her coordinates go to -2 billion) (This is basically a softlock as it takes 15 thousands frames for her to completely move home from that parallel universe)

%^ well now its fixed and I forgot how
#new:Script $Script_Sushie_PoisonBlock
{
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call  SetGoalToTarget   ( .Actor:Self )
	Call  AddGoalPos        ( .Actor:Self 00000046 00000000 00000000 )
	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
	Call  GetGoalPos        ( .Actor:Self *Var3 *Var4 *Var5 )
	Add   *Var3  0000001E
	Call  SetGoalPos        ( .Actor:Self *Var3 *Var4 *Var5 )
	Sub   *Var3  *Var0 
	Div   *Var3  *Fixed[3.0] 
	Set   *VarA  *Var3 
	If  *VarA  <  00000000 
		Mul   *VarA  FFFFFFFF 
	EndIf
	Call  	MoveBattleCamOver ( *VarA )
	Call  	SetAnimation      ( .Actor:Self 00000001 000F0603 )
	Call  	RunToGoal ( .Actor:Self *VarA .False )
	Call  	SetAnimation      ( .Actor:Self 00000001 000F0601 )
	Call  UseBattleCamPreset    ( 0000003F )
	Call  BattleCamTargetActor  ( .Actor:Self )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     SetAnimation 	( .Actor:Self 00000001 000F0609 )
	Wait 	 110`
	Call     SetAnimation 	( .Actor:Self 00000001 000F060C ) %time to shoot water
	Thread
		Call  PlaySoundAtActor  ( .Actor:Self 00000298 )
		Call  $Function_80238388 ( )
		Wait  65`
		Call  SetAnimation      ( .Actor:Self 00000001 000F0611 )
	EndThread
	Wait  45`
	Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
	Add   *Var1  00000053
	Call  PlayEffect        ( ~FX:WaterFall *Var0 *Var1 *Var2 *Fixed[1.0] 00000032 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	Call     EnemyTestTarget ( .Actor:Self *Var[0] 10000004 00000000 00000001 00000010 )
	Switch (*Var[0])
		Case == 00000005
			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
			Goto 3
		Case == 00000006 
			Goto 3
	EndSwitch
	%Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     SetGoalToTarget 	( .Actor:Self )
	%Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Wait	 20` %8 -> 20 %make things easier to time
	Call     EnemyDamageTarget 	( .Actor:Self *Var[0] ~Flags:DamageType:NoContact|Water 00000000 80020364 00000007 00000020 ) %~DebuffType:Poison:1:100`
	Label	 3
	%if mario is not poisoned, get mad
	Call     GetStatusFlags ( .Actor:Player *Var[0] )
	If  *Var[0]  !&  00020000 
		Call  SetAnimation      ( .Actor:Self 00000001 000F0604 )
	EndIf
	Wait     0000000A
	%Switch  *Var0 
	%	CaseOR  ==  .HitResult:Hit % 0
	%	CaseOR  ==  00000002 % 2
			Call  SetAnimation  ( .Actor:Self 00000001 000F0601 )
			Wait  15`
			Call  UseBattleCamPreset    ( 00000002 )
			Call  YieldTurn ( )
			Call  SetAnimation  ( .Actor:Self 00000001 000F0603 )
			Call  SetGoalToHome ( .Actor:Self )
			Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
			Call  RunToGoal     ( .Actor:Self 00000000 .False )
	%	EndCaseGroup
	%EndSwitch
	Call  EnableIdleScript  ( .Actor:Self 00000001 )
	Call  UseIdleAnimation  ( .Actor:Self .True )
	Return
	End
}

#new:Script $Script_TakeTurn_Sushie
{
	Call	GetActorVar ( .Actor:Self 00000009 *Var9 )
	Label 1
	Switch *Var9
		Case == 00000000
			Call	SetActorVar ( .Actor:Self 00000009 00000001 )
			ExecWait $Script_Sushie_PoisonBlock
		Case == 00000001
			Call	SetActorVar ( .Actor:Self 00000009 00000002 )
			ExecWait $Script_Sushie_Squirt
		Case == 00000002
			Call	SetActorVar ( .Actor:Self 00000009 00000000 )		
			ExecWait $Script_Sushie_BellyFlop
	EndSwitch
	Return
	End
}



%modify the script to fix the x pos and spiny velocity
%velocity works "properly", but still need to fix x pos
#new:Function $Function_SpinySpawn %this looks like something that spawns the spinies
{
    0:  ADDIU     SP, SP, FFA8
    4:  LAW       V1, 800DC14C
    C:  LIF       F0, 120.0 %x pos?
   14:  ADDIU     A0, R0, 8C
   18:  SW        RA, 28 (SP)
   1C:  SDC1      F28, 50 (SP)
   20:  SDC1      F26, 48 (SP)
   24:  SDC1      F24, 40 (SP)
   28:  SDC1      F22, 38 (SP)
   2C:  SDC1      F20, 30 (SP)
   30:  LWC1      F24, 144 (V1)
   34:  LBU       V0, 191 (V1)
   38:  ADD.S     F24, F24, F0
   3C:  LWC1      F22, 148 (V1)
   40:  MTC1      V0, F0
   44:  NOP
   48:  CVT.S.W   F0, F0
   4C:  ADD.S     F22, F22, F0
   50:  LIF       F26, 20.0
   58:  LWC1      F28, 14C (V1)
   5C:  JAL       ~Func:rand_int %determining spiny x vel?
   60:  ADD.S     F22, F22, F26
   64:  ADDIU      V0, V0, A %+ 10
   68:  MTC1      V0, F20
   6C:  NOP
   70:  CVT.S.W   F20, F20
   74:  JAL       ~Func:rand_int %spiny y vel?
   78:  ADDIU     A0, R0, 50
   7C:  DADDU     A0, R0, R0
   80:  ADDIU     V0, V0, A % + 10
   84:  MTC1      V0, F0
   88:  NOP
   8C:  CVT.S.W   F0, F0
   90:  SWC1      F0, 14 (SP)
   94:  LIF       F0, 1.5
   9C:  MFC1      A1, F24
   A0:  MFC1      A3, F28
   A4:  MFC1      A2, F22
   A8:  ADDI      V0, R0, FFED	%(used to be 1E)  it does weird stuff to velocity (don't set it to 0) high absolute values result in it going more vertically, lower abso values result in more horizontally, but lower values increase speed?
   AC:  SWC1      F20, 10 (SP)
   B0:  SWC1      F26, 18 (SP)
   B4:  SW        V0, 20 (SP)
   B8:  JAL       80071E10		%called once per spiny (I bet this is the actual spiny spawning function)
   BC:  SWC1      F0, 1C (SP)
   C0:  LW        RA, 28 (SP)
   C4:  LDC1      F28, 50 (SP)
   C8:  LDC1      F26, 48 (SP)
   CC:  LDC1      F24, 40 (SP)
   D0:  LDC1      F22, 38 (SP)
   D4:  LDC1      F20, 30 (SP)
   D8:  ADDIU     V0, R0, 2
   DC:  JR        RA
   E0:  ADDIU     SP, SP, 58
}

#new:Function $Function_SetBreathPalette        %$Function_80218280
{
    0:  ADDIU        SP, SP, FFE8
    4:  SW            RA, 10 (SP)
    8:  LW            V0, C (A0)
    C:  JAL            ~Func:get_variable
   10:  LW            A1, 0 (V0)
   14:  LW            V1, C (V0)
   18:  ADDIU        A0, R0, 60                %R
   1C:  SW            A0, 18 (V1)
   20:  LW            V1, C (V0)
        ADDIU        A0, R0, B0                %G
   24:  SW            A0, 1C (V1)
   28:  LW            V1, C (V0)
   2C:  ADDIU        A1, R0, F0                %B
   30:  SW            A1, 20 (V1)
   34:  LW            A0, C (V0)
   38:  ADDIU        V1, R0, C8                %R 2
   3C:  SW            V1, 28 (A0)
   40:  LW            A0, C (V0)
   44:  ADDIU        V1, R0, F0                %G 2
   48:  SW            V1, 2C (A0)
   4C:  LW            V1, C (V0)
        ADDIU        A1, R0, F0                %B 2
   50:  SW            A1, 30 (V1)
   54:  LW            RA, 10 (SP)
   58:  ADDIU        V0, R0, 2
   5C:  JR            RA
   60:  ADDIU        SP, SP, 18
}

#new:Function $Function_SetCloudPalette
{
		PUSH		RA, S0
    8:  LW			V0, C (A0)
    C:  JAL			~Func:get_variable
   10:  LW			A1, 0 (V0)
   14:  LW			V1, C (V0)
   18:  ADDIU		A1, R0, FF			%R
   1C:  SW			A1, 24 (V1)
   20:  LW			V1, C (V0)
   18:  ADDIU		A1, R0, FF			%G
   24:  SW			A1, 28 (V1)
   28:  LW			V1, C (V0)
   18:  ADDIU		A1, R0, FF			%B
   2C:  SW			A1, 2C (V1)
   30:  LW			A0, C (V0)
   34:  ADDIU		V1, R0, DC			%R 2
   38:  SW			V1, 34 (A0)
   3C:  LW			A0, C (V0)
   40:  ADDIU		V1, R0, F5			%G 2
   44:  SW			V1, 38 (A0)
   48:  LW			V1, C (V0)
   18:  ADDIU		A1, R0, FF			%B 2
   4C:  SW			A1, 3C (V1)
   54:  ADDIU		V0, R0, 2
		JPOP		RA, S0
}


#new:Actor $DarkLakilester {
% stats
[Index]        5Ab 
[Level]        23`b 
[MaxHP]        70`b 
[Coins]         2`b 
[Flags]       00000200 
[StatusTable] $StatusTable_80226514_24 
% ai
[PartsCount]    2`s 
[PartsTable]  $PartsTable_802265C0_24 
[Script]      $Script_Init_80226630_24 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]   3`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         44`b  40`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_802264B0_24 {
.Status:Normal    00100F01
.Status:Stone     00100F00
.Status:Sleep     00100F09
.Status:Poison    00100F01
.Status:Stop      00100F00
.Status:Static    00100F01
.Status:Paralyze  00100F00
.Status:Dizzy     00100F08
.Status:Fear      00100F01
.Status:End
}

#new:IdleAnimations $IdleAnimations_802264FC_24 {
.Status:Normal    00101014
.Status:End
}

#new:DefenseTable $DefenseTable_80226508_24 {
.Element:Normal 00000000
.Element:Throw  FFFFFFFF
.Element:End
}

#new:StatusTable $StatusTable_80226514_24 { %shrink + dizzy
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      50`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink     50`
.Status:Stop       50`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End
}

#new:PartsTable $PartsTable_802265C0_24 {
00800000 01000000 FD2100FF $IdleAnimations_802264B0_24 $DefenseTable_80226508_24 00000000 00000000 FEF60000 00000000 
00120001 03000000 000000FF $IdleAnimations_802264FC_24 $DefenseTable_80226508_24 00000000 00000000 00000000 00000000 
}

#new:Script $Script_Init_80226630_24 {
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_Lakilester )
   14:  Call  BindIdle  ( .Actor:Self $Script_Idle_8022667C_24 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022668C_24 )
		Call	SetActorVar ( .Actor:Self 00000009 00000000 ) %AI state
		%swapping out cloud 9 for hurricane because I got it working :)
		/%
		Call	SetActorVar ( .Actor:Self 0000000A 00000000 ) %can Cloud 9 be used? (1 = true)
		Call  GetOriginalActorType  ( .Actor:Enemy0 *Var2 ) %should work
		If *Var2 == 000000FA
			Call	SetActorVar ( .Actor:Self 0000000A 00000001 ) 
		EndIf
		%/
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_8022667C_24 {
    0:  Return
    8:  End
}

#new:Script $Script_HandleEvent_8022668C_24 {
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0 
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		Call  GetLastElement    ( *Var1 )
   70:  		If  *Var1  &  00000020 
   80:  			SetConst  *Var0  00000001 
   90:  			SetConst  *Var1  00100F0A 
   AC:  			Return
   B4:  		Else
   BC:  			SetConst  *Var0  00000001 
   CC:  			SetConst  *Var1  00100F0A 
   DC:  			ExecWait  DoNormalHit 
   E8:  		EndIf
   F0:  	EndCaseGroup
   F8:  	Case  ==  .Event:BurnHit % E
  104:  		SetConst  *Var0  00000001 
  114:  		SetConst  *Var1  00100F0C 
  124:  		SetConst  *Var2  00100F0D 
  134:  		ExecWait  DoBurnHit 
  140:  	Case  ==  .Event:BurnDeath % 24
  14C:  		SetConst  *Var0  00000001 
  15C:  		SetConst  *Var1  00100F0C 
  16C:  		SetConst  *Var2  00100F0D 
  17C:  		ExecWait  DoBurnHit 
  194:  		Wait  10`
  1A0:  		SetConst  *Var0  00000001 
  1B0:  		SetConst  *Var1  00100F0D 
  1C0:  		ExecWait  DoDeath 
  1CC:  		Return
  1D4:  	Case  ==  .Event:SpinSmashHit % B
  1E0:  		SetConst  *Var0  00000001 
  1F0:  		SetConst  *Var1  00100F0A 
  200:  		ExecWait  DoSpinSmashHit 
  20C:  	Case  ==  .Event:SpinSmashDeath % 21
  224:  		SetConst  *Var0  00000001 
  234:  		SetConst  *Var1  00100F0A 
  244:  		ExecWait  DoSpinSmashHit 
  250:  		SetConst  *Var0  00000001 
  260:  		SetConst  *Var1  00100F0B 
  270:  		ExecWait  DoDeath 
  27C:  		Return
  284:  	Case  ==  .Event:ShockHit % 2F
  290:  		SetConst  *Var0  00000001 
  2A0:  		SetConst  *Var1  00100F0A 
  2B0:  		ExecWait  DoShockHit 
  2BC:  		SetConst  *Var0  00000001 
  2CC:  		SetConst  *Var1  00100F0A 
  2DC:  		ExecWait  DoJumpBack 
  2E8:  		Call  SetAnimation  ( .Actor:Self 00000001 00100F03 )
  300:  		Call  SetGoalToHome ( .Actor:Self )
  310:  		Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
  32C:  	Case  ==  .Event:ShockDeath % 26
  344:  		SetConst  *Var0  00000001 
  354:  		SetConst  *Var1  00100F0A 
  364:  		ExecWait  DoShockHit 
  370:  		SetConst  *Var0  00000001 
  380:  		SetConst  *Var1  00100F0B 
  390:  		ExecWait  DoDeath 
  39C:  		Return
  3A4:  	CaseOR  ==  00000017 % 17
  3B0:  	CaseOR  ==  .Event:Immune % 19
  3BC:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  3C8:  		SetConst  *Var0  00000001 
  3D8:  		SetConst  *Var1  00100F01 
  3E8:  		ExecWait  DoImmune 
  3F4:  	EndCaseGroup
  3FC:  	Case  ==  .Event:Death % 20
  414:  		SetConst  *Var0  00000001 
  424:  		SetConst  *Var1  00100F0A 
  434:  		ExecWait  DoNormalHit 
  440:  		Wait  10`
  44C:  		SetConst  *Var0  00000001 
  45C:  		SetConst  *Var1  00100F0B 
  46C:  		ExecWait  DoDeath 
  478:  		Return
  480:  	Case  ==  .Event:RecoverStatus % 31
  48C:  		SetConst  *Var0  00000001 
  49C:  		SetConst  *Var1  00100F01 
  4AC:  		ExecWait  DoRecover 
  4B8:  	Case  ==  .Event:ScareAway % 39
  4C4:  		SetConst  *Var0  00000001 
  4D4:  		SetConst  *Var1  00100F03 
  4E4:  		SetConst  *Var2  00100F0A 
  4F4:  		ExecWait  DoScareAway 
  500:  		Return
  508:  	Case  ==  .Event:BeginAirLift % 3A
  514:  		SetConst  *Var0  00000001 
  524:  		SetConst  *Var1  00100F03 
  534:  		ExecWait  DoAirLift 
  540:  	Case  ==  .Event:BlowAway % 16
  54C:  		SetConst  *Var0  00000001 
  55C:  		SetConst  *Var1  00100F0A 
  56C:  		ExecWait  DoBlowAway 
  578:  		Return
  580:  	Default
  588:  EndSwitch
  590:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  5A4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  5B8:  Return
  5C0:  End
}

#new:Script $Script_Lakilester_SpinyToss {
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   74:  Call  SetAnimation      ( .Actor:Self 00000001 00100F03 )
   8C:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   A8:  Call  SetGoalPos        ( .Actor:Self 00000014 0000001E *Var2 )
   C4:  Call  FlyToGoal ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
   E0:  Call  SetAnimation      ( .Actor:Self 00000001 00100F01 )
   F8:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  114:  Call  GetStatusFlags    ( .Actor:Self *VarA )
  128:  If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  138:  	Add   *Var0  FFFFFFFF 
  148:  	Add   *Var1  00000004 
  158:  	Add   *Var2  00000002 
  168:  	Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
  188:  Else
  190:  	Add   *Var0  FFFFFFFD 
  1A0:  	Add   *Var1  0000000A 
  1B0:  	Add   *Var2  00000005 
  1C0:  	Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  1E0:  EndIf
  1E8:  Call  SetPartPos    ( .Actor:Self 00000003 *Var0 *Var1 *Var2 )
  208:  Wait  1`
  214:  Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
  230:  Call  SetAnimation  ( .Actor:Self 00000003 00101014 )
  248:  Call  SetAnimation  ( .Actor:Self 00000001 00100F0F )
  260:  Loop  00000004 
  26C:  	Call  GetStatusFlags    ( .Actor:Self *VarA )
  280:  	If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  290:  		AddF  *Var1  *Fixed[2.4] 
  2A0:  	Else
  2A8:  		Add   *Var1  00000006 
  2B8:  	EndIf
  2C0:  	Call  SetPartPos    ( .Actor:Self 00000003 *Var0 *Var1 *Var2 )
  2E0:  	Wait  1`
  2EC:  EndLoop
  2F4:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  310:  Call  GetStatusFlags    ( .Actor:Self *VarA )
  324:  If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  334:  	Add   *Var0  FFFFFFFD 
  344:  	Add   *Var1  00000010 
  354:  	Add   *Var2  00000002 
  364:  	SetF  *Var3  *Fixed[0.4] 
  374:  Else
  37C:  	Add   *Var0  FFFFFFF8 
  38C:  	Add   *Var1  00000028 
  39C:  	Add   *Var2  00000005 
  3AC:  	SetF  *Var3  *Fixed[1.0] 
  3BC:  EndIf
  3C4:  Call  PlayEffect        ( ~FX:EnergyIn:ShortStreaks *Var0 *Var1 *Var2 *Var3 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  408:  Call  PlaySoundAtActor  ( .Actor:Self 000002C5 )
  41C:  Thread
  424:  	Loop  0000000F 
  430:  		Call  SetActorDispOffset    ( .Actor:Self 00000001 00000000 00000000 )
  44C:  		Call  SetPartDispOffset     ( .Actor:Self 00000003 00000001 00000000 00000000 )
  46C:  		Wait  1`
  478:  		Call  SetActorDispOffset    ( .Actor:Self FFFFFFFF 00000000 00000000 )
  494:  		Call  SetPartDispOffset     ( .Actor:Self 00000003 FFFFFFFF 00000000 00000000 )
  4B4:  		Wait  1`
  4C0:  	EndLoop
  4C8:  	Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  4E4:  	Call  SetPartDispOffset     ( .Actor:Self 00000003 00000000 00000000 00000000 )
  504:  EndThread
  50C:  Call  SetGoalToTarget   ( .Actor:Self )
  51C:  Wait  10`
  528:  Call  SetAnimation      ( .Actor:Self 00000001 00100F10 )
  540:  Wait  10`
  54C:  Call  SetAnimation      ( .Actor:Self 00000001 00100F11 )
  564:  Wait  10`
  570:  Call  SetAnimation      ( .Actor:Self 00000001 00100F12 )
  588:  Wait  3`
  594:  Call  SetPartSounds     ( .Actor:Self 00000003 .ActorSound:Jump 00000000 00000000 )
  5B4:  Call  PlaySoundAtActor  ( .Actor:Self 0000201B )
  5C8:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  5EC:  Switch  *Var0 
  5F8:  	CaseOR  ==  .HitResult:Miss % 6
  604:  	CaseOR  ==  .HitResult:Lucky % 5
  610:  		Set   *VarA  *Var0 
  620:  		Call  SetAnimation  ( .Actor:Self 00000003 00101015 )
  638:  		Call  SetPartJumpGravity    ( .Actor:Self 00000003 *Fixed[1.5] )
  650:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  66C:  		Call  RandInt       ( 00000064 *Var3 )
  680:  		Sub   *Var3  00000032 
  690:  		Add   *Var0  *Var3 
  6A0:  		Call  JumpPartTo    ( .Actor:Self 00000003 *Var0 00000000 *Var2 00000014 .True )
  6C8:  		Thread
  6D0:  			Add   *Var0  FFFFFFCE 
  6E0:  			Call  JumpPartTo        ( .Actor:Self 00000003 *Var0 00000000 *Var2 0000000F .True )
  708:  			Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  724:  		EndThread
  72C:  		If  *VarA  ==  .HitResult:Lucky % 5
  73C:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  760:  		EndIf
  768:  		Wait  15`
  774:  		Call  YieldTurn ( )
  780:  		Call  UseBattleCamPreset    ( 00000002 )
  790:  		Call  MoveBattleCamOver ( 0000003C )
  7A0:  		Call  SetAnimation      ( .Actor:Self 00000001 00100F03 )
  7B8:  		Call  SetGoalToHome     ( .Actor:Self )
  7C8:  		Call  FlyToGoal ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
  7E4:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  7F8:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  80C:  		Return
  814:  	EndCaseGroup
  81C:  EndSwitch
  824:  Call  SetAnimation      ( .Actor:Self 00000003 00101015 )
  83C:  Call  SetPartJumpGravity    ( .Actor:Self 00000003 *Fixed[1.5] )
  854:  Call  SetGoalToTarget   ( .Actor:Self )
  864:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  880:  Call  JumpPartTo        ( .Actor:Self 00000003 *Var0 *Var1 *Var2 00000014 .True )
  8A8:  Thread
  8B0:  	Add   *Var0  FFFFFFCE 
  8C0:  	Call  JumpPartTo        ( .Actor:Self 00000003 *Var0 00000000 *Var2 0000000F .True )
  8E8:  	Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  904:  EndThread
  9BC:  Wait  2`
  9C8:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000006 00000020 )
  9F8:  Switch  *Var0 
  A04:  	CaseOR  ==  .HitResult:Hit % 0
  A10:  	CaseOR  ==  00000002 % 2
  A1C:  		Wait  15`
  A28:  		Call  YieldTurn ( )
  A34:  		Call  UseBattleCamPreset    ( 00000002 )
  A44:  		Call  MoveBattleCamOver ( 00000008 )
  A54:  		Call  SetAnimation      ( .Actor:Self 00000001 00100F03 )
  A6C:  		Call  SetGoalToHome     ( .Actor:Self )
  A7C:  		Call  FlyToGoal ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
  A98:  	EndCaseGroup
  AA0:  EndSwitch
  AA8:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  ABC:  Call  UseIdleAnimation  ( .Actor:Self .True )
  AD0:  Return
  AD8:  End
}

#new:Script $Script_Lakilester_SpinySurge
{
    Call     UseIdleAnimation 	( .Actor:Self .False )
    Call     EnableIdleScript 	( .Actor:Self 00000000 )
    Call     SetTargetActor ( .Actor:Self .Actor:Player )
    Call     UseBattleCamPreset 	( 0000003F )
    Call     BattleCamTargetActor ( .Actor:Self )
    Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
	Call     SetAnimation 	( .Actor:Self 00000001 00100F03 )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     SetGoalPos 	( .Actor:Self 00000014 0000001E *Var[2] )
	Call     FlyToGoal  	( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
	Call     SetAnimation 	( .Actor:Self 00000001 00100F01 )
	%the action command time ~= 3C
	%60
	%(the time where the spinies are appearing)
	Loop F
		Call     SetPartFlagBits 	( .Actor:Self 00000003 00000001 .False )
		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
		Add  *Var[0]  00000003 
		Add  *Var[1]  00000022 
		Add  *Var[2]  00000005 
		Call     SetPartPos 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
		Call     SetAnimation 	( .Actor:Self 00000001 00100F0F )
		Wait	 2
		Call     SetPartFlagBits 	( .Actor:Self 00000003 00000001 .True )
		Call     SetAnimation 	( .Actor:Self 00000001 00100F01 )
		Call     $Function_SpinySpawn ( )
		Wait     2
	EndLoop
	Call	 SetTargetActor ( .Actor:Self .Actor:Player )
	Call	 SetGoalToTarget ( .Actor:Self )
	Set *Var[0] 0
	Call     EnemyTestTarget ( .Actor:Self *Var[1] 00000000 00000000 00000001 00000010 )
	Switch *Var[1]
		CaseOR == 00000005
		CaseOR == 00000006
			Goto 1
		EndCaseGroup
	EndSwitch
	Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10040000 00000000 00000000 00000007 00000020 )
	Label 1
	Wait	 10` %10 frames, why not
	Call	 SetTargetActor ( .Actor:Self .Actor:Partner )
	Call	 SetGoalToTarget ( .Actor:Self )
	Call     EnemyTestTarget ( .Actor:Self *Var[1] 00000000 00000000 00000001 00000010 )
	Switch *Var[1]
		CaseOR == 00000005
		CaseOR == 00000006
			Goto 2
		EndCaseGroup
	EndSwitch
	Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10040000 00000000 00000000 00000002 00000020 )
	Label 2
	Switch  *Var[0] 
		CaseOR  ==  00000000 
		CaseOR  ==  00000002 
			Wait     0000000F 
			Call     YieldTurn   	( )
			Call     UseBattleCamPreset 	( 00000002 )
			Call     MoveBattleCamOver 	( 00000008 )
			Call     SetAnimation 	( .Actor:Self 00000001 00100F03 )
			Call     SetGoalToHome 	( .Actor:Self )
			Call     FlyToGoal  	( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
		EndCaseGroup
	EndSwitch			
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End
}

#new:Script $Script_Lakilester_Hurricane
{
    Call     UseIdleAnimation 	( .Actor:Self .False )
    Call     EnableIdleScript 	( .Actor:Self 00000000 )
    Call     SetTargetActor ( .Actor:Self .Actor:Player )
    Call     UseBattleCamPreset 	( 0000003F )
    Call     BattleCamTargetActor ( .Actor:Self )
    Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
	Call     SetAnimation 	( .Actor:Self 00000001 00100F03 )
	Call	 SetGoalToTarget ( .Actor:Self )
	Call	 AddGoalPos ( .Actor:Self 00000040 FFFFFFF5 00000000 )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
	Call     FlyToGoal  	( .Actor:Self 00000000 FFFFFFF6 .Easing:SinOut )
	Call     SetAnimation 	( .Actor:Self 00000001 00100F01 )
	Call  	 PlaySoundAtActor  ( .Actor:Self 00000288 )
	%the action command time ~= 96 / dec 150
	Thread
		Loop 10 %16
			Call     RandInt     	( 00000096 *Var[3] )
			Call     RandInt     	( 00000064 *Var[4] )
			Add  *Var[3]  00000032 
			SetF  *Var[4]  *Fixed[5.0] 
			Call     RandInt     	( 00000004 *Var[5] )
			AddF  *Var[4]  *Var[5] 
			DivF  *Var[4]  *Fixed[10.0] 
			SetF  *Var[5]  *Fixed[100.0] 
			Call     RandInt     	( 00000028 *Var[6] )
			AddF  *Var[5]  *Var[6] 
			DivF  *Var[5]  *Fixed[10.0] 
			Call     PlayEffect  	( ~FX:MovingCloud 00000096 *Var[3] 00000005 FFFFFF38 *Var[4] 00000005 *Var[5] *Var[4] 00000000 00000000 00000000 00000000 )
			Call     $Function_SetCloudPalette ( *Var[F] )
			Call     RandInt     	( 00000006 *Var[0] )
			Add  *Var[0]  00000006
			Wait     *Var[0] 
		EndLoop
	EndThread
	Loop 6
		%sounds 201E and 201F are used
		%anims 00100F16 and 00100F17 are used
		%	6 breaths
		%effect 116 / 0x74 (! it uses color changing tech)
		%	80072410 = cloud effect (0x74)
		%		??? not sure if color has to be changed
		%	800721D0 = breath effect (0x6E)
		%		colors = 14,50,F0 and C8,F0,F0	
		Call	 PlaySoundAtActor ( .Actor:Self 0000201E )
		Call     SetAnimation 	( .Actor:Self 00000001 00100F16 )
		Wait	 C
		Call	 PlaySoundAtActor ( .Actor:Self 0000201F )
		Call     SetAnimation 	( .Actor:Self 00000001 00100F17 )
		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
		Add  *Var[0]  FFFFFFF1 
		Add  *Var[1]  00000008
		Call     PlayEffect  	( ~FX:HuffPuffBreath *Var[0] *Var[1] *Var[2] *Fixed[180.0] *Fixed[2.5] *Fixed[1.0] 0000000C 00000000 00000000 00000000 00000000 00000000 )	
		Call     $Function_SetBreathPalette ( *Var[F] )
		Wait     C
	EndLoop
	Call	 SetTargetActor ( .Actor:Self .Actor:Player )
	Call	 SetGoalToTarget ( .Actor:Self )
	Set *Var[0] 0
	Call     EnemyTestTarget ( .Actor:Self *Var[1] 00000000 00000000 00000001 00000010 )
	Switch *Var[1]
		CaseOR == 00000005
		CaseOR == 00000006
			Goto 1
		EndCaseGroup
	EndSwitch
	Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 18000004 00000000 80004264 00000006 00000020 ) 
	Label 1
	Wait	 10` %10 frames, why not
	Call	 SetTargetActor ( .Actor:Self .Actor:Partner )
	Call	 SetGoalToTarget ( .Actor:Self )
	Call     EnemyTestTarget ( .Actor:Self *Var[1] 00000000 00000000 00000001 00000010 )
	Switch *Var[1]
		CaseOR == 00000005
		CaseOR == 00000006
			Goto 2
		EndCaseGroup
	EndSwitch
	Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 18000004 00000000 00000000 00000003 00000020 )
	Label 2
	Switch  *Var[0] 
		CaseOR  ==  00000000 
		CaseOR  ==  00000002 
			Wait     0000000F 
			Call     YieldTurn   	( )
			Call     UseBattleCamPreset 	( 00000002 )
			Call     MoveBattleCamOver 	( 00000008 )
			Call     SetAnimation 	( .Actor:Self 00000001 00100F03 )
			Call     SetGoalToHome 	( .Actor:Self )
			Call     FlyToGoal  	( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
		EndCaseGroup
	EndSwitch			
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End
}

%past shade was weak, I figured out the effect functions
%Ok hurricane is full of asm functions hardcoded to work with partner
%So change this to cloud nine
#new:Script $Script_Lakilester_CloudNine
{
	Call    UseIdleAnimation 	( .Actor:Self .False )
    Call    EnableIdleScript 	( .Actor:Self 00000000 )
	% Call     UseIdleAnimation 	( .Actor:Enemy0 .False )
    % Call     EnableIdleScript 	( .Actor:Enemy0 00000000 )
	% Go to Lakilulu
	Call 	GetHomePos 			( .Actor:Enemy0 *Var[1] *Var[2] *Var[3] )
	Sub *Var[1] 00000010
	Call    SetActorSpeed     	( .Actor:Self *Fixed[2.0] )
	Call    SetAnimation 		( .Actor:Self 00000001 00100F03 )
	Call    FlyToGoal  		( .Actor:Self 00000000 FFFFFFF6 .Easing:Linear )
	Call    SetAnimation 		( .Actor:Self 00000001 00100F05 ) % Cloud nine animation
	Wait 10`
	Call    SetAnimation 		( .Actor:Self 00000001 00100F04 )
	Wait 10`
	Call    SetAnimation 		( .Actor:Enemy0 00000002 00100F1B ) % add a cloud to mario %10-0D-1B
	Call    SetPartFlagBits 	( .Actor:Enemy0 00000002 00000001 .False )
	Call    SetAnimation 		( .Actor:Self 00000001 00100F06 )
	Call    SetActorVar 	( .Actor:Enemy0 00000000 00000003 ) % 3 turns of Cloud Nine for mario	
	Call     UseBattleCamPreset 	( 00000002 )
	Call     MoveBattleCamOver 	( 00000008 )
	Call     SetAnimation 	( .Actor:Self 00000001 00100F03 )
	Call     SetGoalToHome 	( .Actor:Self )
	Call     FlyToGoal  	( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
	Call    UseIdleAnimation 	( .Actor:Self .True )
    Call    EnableIdleScript 	( .Actor:Self 00000001 )
	Return
	End
}

#new:Script $Script_TakeTurn_Lakilester
{
	Label 1
	Call	GetActorVar ( .Actor:Self 00000009 *Var9 )
	Switch *Var9
		Case == 00000000
			Call	SetActorVar ( .Actor:Self 00000009 00000001 )
			ExecWait $Script_Lakilester_SpinyToss
		Case == 00000001
			Call	SetActorVar ( .Actor:Self 00000009 00000002 )
			Call GetStatusFlags ( .Actor:Partner *Var[B] )
			If  *Var[B]  &  01000000 
				Goto 1 %no stunlock
			EndIf
			ExecWait $Script_Lakilester_SpinySurge
		Case == 00000002
			Call	SetActorVar ( .Actor:Self 00000009 00000000 )		
			Call     GetStatusFlags ( .Actor:Player *Var[0] )
			If  *Var[0]  &  0035D000 
				Goto 1	%no stunlock
			EndIf
			Call GetStatusFlags ( .Actor:Partner *Var[B] )
			If  *Var[B]  &  01000000 
				Goto 1 %no stunlock
			EndIf
			ExecWait $Script_Lakilester_Hurricane
	EndSwitch
	Return
	End
}



#new:IdleAnimations $IdleAnimations_Buzzatrice
{
	.Status:Normal    00FC0501
	.Status:Stone     00FC0500
	.Status:Sleep     00FC050C
	.Status:Poison    00FC0501
	.Status:Stop      00FC0500
	.Status:Static    00FC0501
	.Status:Paralyze  00FC0500
	.Status:Dizzy     00FC050B
	.Status:Fear      00FC0501
	.Status:End
}

#new:DefenseTable $DefenseTable_Buzzatrice
{
	.Element:Normal 00000003	%you don't get the full 9 defense dark beetles usually have (otherwise she would be way too hard to kill)
	.Element:Fire   00000063	%heh heh
	.Element:Throw FFFFFFFF
	.Element:End
}

#new:PartsTable $PartsTable_Buzzatrice
{
	00020000 01000000 FD2000FF $IdleAnimations_Buzzatrice $DefenseTable_Buzzatrice 000C0000 00000000 00F00000 00000000
	00800001 02003200 FDEE00FF 00000000 $DefenseTable_Buzzatrice 00000000 000C0000 00F00000 00000000
}

#new:StatusTable $StatusTable_Buzzatrice
{
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      50`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      50`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink      0`
.Status:Stop        0`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End
}

#new:Actor $DarkBuzzatrice
{
	% stats
	[Index]        8Fb
	[Level]         0`b
	[MaxHP]        50`b		%Low health, but highest def
	[Coins]         0`b
	[Flags]       00000200
	[StatusTable] $StatusTable_Buzzatrice
	% ai
	[PartsCount]    2`s
	[PartsTable]  $PartsTable_Buzzatrice
	[Script]      $Script_Init_Buzzatrice
	% move effectiveness
	[Escape]      100`b
	[Item]          0`b
	[AirLift]       0`b
	[Hurricane]     0`b % Bow's "Spook" as well
	[UpAndAway]     0`b
	[PowerBounce]   3`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         38`b  38`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_Buzzatrice
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_Buzzatrice )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_Buzzatrice )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_Buzzatrice )  
		Call  SetActorVar ( .Actor:Self 00000009 00000000 )
   68:  Return
   70:  End
}

#new:Script $Script_Idle_Buzzatrice
{
    0:  Return
    8:  End
}

#new:Script $Script_HandleEvent_Buzzatrice
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001
   70:  		SetConst  *Var1  00FC0506
   80:  		ExecWait  DoNormalHit
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit % E
   A0:  		SetConst  *Var0  00000001
   B0:  		SetConst  *Var1  00FC0506
   C0:  		SetConst  *Var2  00FC0505
   D0:  		ExecWait  DoBurnHit
   DC:  	Case  ==  .Event:BurnDeath % 24
   E8:  		SetConst  *Var0  00000001
   F8:  		SetConst  *Var1  00FC0506
  108:  		SetConst  *Var2  00FC0505
  118:  		ExecWait  DoBurnHit
  130:  		Wait  10`
  13C:  		SetConst  *Var0  00000001
  14C:  		SetConst  *Var1  00FC0505
  15C:  		ExecWait  DoDeath
  168:  		Return
  170:  	Case  ==  .Event:SpinSmashHit % B
  17C:  		SetConst  *Var0  00000001
  18C:  		SetConst  *Var1  00FC0506
  19C:  		ExecWait  DoSpinSmashHit
  1A8:  	Case  ==  .Event:SpinSmashDeath % 21
  1C0:  		SetConst  *Var0  00000001
  1D0:  		SetConst  *Var1  00FC0506
  1E0:  		ExecWait  DoSpinSmashHit
  1EC:  		SetConst  *Var0  00000001
  1FC:  		SetConst  *Var1  00FC0506
  20C:  		ExecWait  DoDeath
  218:  		Return
  220:  	Case  ==  .Event:ShockHit % 2F
					%she doesn't have melee attacks so I don't really have to make these work correctly :P
  22C:  		SetConst  *Var0  00000001
  23C:  		SetConst  *Var1  00FC0505
  24C:  		Set   *Var2  00000016
  268:  		Call  SetGoalToHome ( .Actor:Self )
  278:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  28C:  		Call  SetAnimation  ( .Actor:Self 00000001 00FC0503 )
  2A4:  		Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFFB .Easing:Linear )
  2C0:  	Case  ==  .Event:ShockDeath % 26
					%she doesn't have melee attacks so I don't really have to make these work correctly :P
  2D8:  		SetConst  *Var0  00000001
  2E8:  		SetConst  *Var1  00FC0505
  2F8:  		Set   *Var2  00000016
  314:  		SetConst  *Var0  00000001
  324:  		SetConst  *Var1  00FC0506
  334:  		ExecWait  DoDeath
  340:  		Return
  348:  	CaseOR  ==  00000017 % 17
  354:  	CaseOR  ==  .Event:Immune % 19
  360:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  36C:  		SetConst  *Var0  00000001
  37C:  		SetConst  *Var1  00FC0501
  38C:  		ExecWait  DoImmune
  398:  	EndCaseGroup
  3A0:  	Case  ==  .Event:Death % 20
  3B8:  		SetConst  *Var0  00000001
  3C8:  		SetConst  *Var1  00FC0506
  3D8:  		ExecWait  DoNormalHit
  3E4:  		Wait  10`
  3F0:  		SetConst  *Var0  00000001
  400:  		SetConst  *Var1  00FC0506
  410:  		ExecWait  DoDeath
  41C:  		Return
  424:  	Case  ==  .Event:RecoverStatus % 31
  430:  		SetConst  *Var0  00000001
  440:  		SetConst  *Var1  00FC0501
  450:  		ExecWait  DoRecover
  45C:  	Case  ==  .Event:ScareAway % 39
  468:  		SetConst  *Var0  00000001
  478:  		SetConst  *Var1  00FC0506
  488:  		SetConst  *Var2  00FC0505
  498:  		ExecWait  DoScareAway
  4A4:  		Return
  4AC:  	Case  ==  .Event:BeginAirLift % 3A
  4B8:  		SetConst  *Var0  00000001
  4C8:  		SetConst  *Var1  00FC0504
  4D8:  		ExecWait  DoAirLift
  4E4:  	Case  ==  .Event:BlowAway % 16
  4F0:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  504:  		If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  514:  			If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  524:  				Call  SetActorDispOffset    ( .Actor:Self 00000000 00000001 00000000 )
  540:  			Else
  548:  				Call  SetActorDispOffset    ( .Actor:Self 00000000 00000003 00000000 )
  564:  			EndIf
  56C:  		EndIf
  574:  		SetConst  *Var0  00000001
  584:  		SetConst  *Var1  00FC0506
  594:  		ExecWait  DoBlowAway
  5A0:  		Return
  5A8:  	Default
  5B0:  EndSwitch
  5B8:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  5CC:  Call  UseIdleAnimation  ( .Actor:Self .True )
  5E0:  Return
  5E8:  End
}

%varE = damage
%uses Var0, VarC, VarD, VarB
#new:Script $Script_DamageCalc
{
	Call	 GetOwnerTarget ( *VarD *VarB )
	Call     GetActorHP  	( *VarD *Var[0] ) %this works
	Call	 GetEnemyMaxHP	( *VarD *VarC )
	If *Var[0] > *VarC
		Set *Var[0] *VarC 
	EndIf
	Set *Var[B] *Var[0]
	Mul *Var[B] -1`
	Add *Var[B] *VarC
	Add *Var[B] *VarC
	Mul *Var[E] *Var[B]
	Div *Var[E] *VarC
	Return
	End
}

#new:Script $Script_Buzzatrice_MagicBlast
{
	Call	EnableIdleScript ( .Actor:Self .False )
	Call	UseIdleAnimation ( .Actor:Self .False )
	Call	SetTargetActor ( .Actor:Self .Actor:Player )
	   1C:  Call  SetAnimation  ( .Actor:Self FFFFFFFF 00FC0503 )
   34:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   50:  Add   *Var0  -40`
   60:  Add   *Var1  20`
   70:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
		Call  FlyToGoal     ( .Actor:Self 0000000F 00000000 .Easing:CosInOut )
   A8:  Call  SetAnimation  ( .Actor:Self FFFFFFFF 00FC0501 )  
   CC:  Call  SetGoalToTarget       ( .Actor:Self )
		Call  UseBattleCamPreset    ( 0000003F )
		Call     BattleCamTargetActor ( .Actor:Self )
  134:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  150:  Add   *Var0  -3`
  160:  Add   *Var1  0000000A
  170:  Add   *Var2  00000005
  1A0:  Wait  1`
  1E0:  Call  SetAnimation  ( .Actor:Self FFFFFFFF 00FC0511 )
  234:  Wait  4`
  418:  Call  SetGoalToTarget   ( .Actor:Self )
  434:  Call  SetActorVar       ( .Actor:Self 00000000 00000000 )
  44C:  Call  SetAnimation      ( .Actor:Self FFFFFFFF 00FC0514 )
  464:  Wait  3`
		Call     EnemyTestTarget ( .Actor:Self *Var[1] 00000000 00000000 00000001 00000010 )
		Set *VarF 00000000
		Switch *Var[1]
			CaseOR == 00000005
			CaseOR == 00000006
				Set *VarF FFFFFFFF
			EndCaseGroup
		EndSwitch
  4D0:  Switch  *VarF
  4DC:  	Case  ==  FFFFFFFF		%miss
				Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast2 )
				Call     GetGoalPos  	( .Actor:Self *Var[4] *Var[5] *Var[6] )
				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
				Add  *Var[0]  -15`
				Add  *Var[1]  1` 
				Call     $Function_80218200 ( *Var[0] *Var[1] *Var[2] *Var[4] *Var[5] *Var[6] 0000000A ) %shoot out magic that hits in 20 frames?
				Wait 	 10` %wait for the actual blast
				Goto 	 1
  580:  	Case  ==  00000000
				Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast2 )
				Call     GetGoalPos  	( .Actor:Self *Var[4] *Var[5] *Var[6] )
				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
				Add  *Var[0]  -15`
				Add  *Var[1]  1` 
				Call     $Function_80218200 ( *Var[0] *Var[1] *Var[2] *Var[4] *Var[5] *Var[6] 0000000A ) %shoot out magic that hits in 20 frames?
				Wait 	 10` %wait for the actual blast
  69C:  EndSwitch
		Set *VarE 5
		ExecWait $Script_DamageCalc
		Call     EnemyDamageTarget 	( .Actor:Self *Var[0] ~Flags:DamageType:NoContact|Magic 00000000 00000000 *VarE 00000020 )
		Label 1
  808:  Switch  *VarF
  814:  	Case  ==  00000001
  820:  		Call  UseBattleCamPreset    ( 00000004 )
  830:  	Default
  838:  		Call  UseBattleCamPreset    ( 00000033 )
  848:  EndSwitch
  850:  Wait  15`
    C:  Call  UseBattleCamPreset    ( 00000002 )
   1C:  Call  SetGoalToHome ( .Actor:Self )
		Call  YieldTurn 	( )
   2C:  Call  SetAnimation  ( .Actor:Self FFFFFFFF 00FC0503 )
   44:  Call  FlyToGoal     ( .Actor:Self 0000000F 00000000 .Easing:CosInOut )
   60:  Call  SetAnimation  ( .Actor:Self FFFFFFFF 00FC0502 )
	Call	EnableIdleScript ( .Actor:Self .True )
	Call	UseIdleAnimation ( .Actor:Self .True )
	Return
	End
}

#new:Function $Function_80218200
{
    0:  ADDIU		SP, SP, FFA0
    4:  SW			S1, 24 (SP)
    8:  COPY		S1, A0
    C:  SW			RA, 28 (SP)
   10:  SW			S0, 20 (SP)
   14:  SDC1		F30, 58 (SP)
   18:  SDC1		F28, 50 (SP)
   1C:  SDC1		F26, 48 (SP)
   20:  SDC1		F24, 40 (SP)
   24:  SDC1		F22, 38 (SP)
   28:  SDC1		F20, 30 (SP)
   2C:  LW			S0, C (S1)
   30:  LW			A1, 0 (S0)
   34:  JAL			~Func:get_float_variable
   38:  ADDIU		S0, S0, 4
   3C:  LW			A1, 0 (S0)
   40:  ADDIU		S0, S0, 4
   44:  COPY		A0, S1
   48:  JAL			~Func:get_float_variable
   4C:  MOV.S		F30, F0
   50:  LW			A1, 0 (S0)
   54:  ADDIU		S0, S0, 4
   58:  COPY		A0, S1
   5C:  JAL			~Func:get_float_variable
   60:  MOV.S		F20, F0
   64:  LW			A1, 0 (S0)
   68:  ADDIU		S0, S0, 4
   6C:  COPY		A0, S1
   70:  JAL			~Func:get_float_variable
   74:  MOV.S		F28, F0
   78:  LW			A1, 0 (S0)
   7C:  ADDIU		S0, S0, 4
   80:  COPY		A0, S1
   84:  JAL			~Func:get_float_variable
   88:  MOV.S		F26, F0
   8C:  LW			A1, 0 (S0)
   90:  ADDIU		S0, S0, 4
   94:  COPY		A0, S1
   98:  JAL			~Func:get_float_variable
   9C:  MOV.S		F24, F0
   A0:  COPY		A0, S1
   A4:  LW			A1, 0 (S0)
   A8:  JAL			~Func:get_variable
   AC:  MOV.S		F22, F0
   B0:  LW			A0, 148 (S1)
   B4:  JAL			~Func:get_actor
   B8:  COPY		S0, V0
   BC:  CVT.D.S		F20, F20
   C0:  MFC1		A1, F30
   C4:  LIF			F1, 2.3125
   CC:  MTC1		R0, F0
   D0:  MFC1		A3, F28
   D4:  ADD.D		F20, F20, F0
   D8:  CLEAR		A0
   DC:  SW			S0, 1C (SP)
   E0:  CVT.S.D		F20, F20
   E4:  MFC1		A2, F20
   E8:  COPY		S0, V0
   EC:  SWC1		F26, 10 (SP)
   F0:  SWC1		F24, 14 (SP)
   F4:  JAL			8006FF50 %internal playeffect function?
   F8:  SWC1		F22, 18 (SP)
   FC:  COPY		A0, V0
  100:  LB			V1, 210 (S0)
  104:  ADDIU		V0, R0, A
  108:  BNE			V1, V0, .o128
  10C:  NOP
  110:  LW			V0, C (A0)
  114:  LIO			AT, 3ECCCCCD
  11C:  MTC1		AT, F0
  120:  NOP
  124:  SWC1		F0, 28 (V0)
        .o128
  128:  LW			RA, 28 (SP)
  12C:  LW			S1, 24 (SP)
  130:  LW			S0, 20 (SP)
  134:  LDC1		F30, 58 (SP)
  138:  LDC1		F28, 50 (SP)
  13C:  LDC1		F26, 48 (SP)
  140:  LDC1		F24, 40 (SP)
  144:  LDC1		F22, 38 (SP)
  148:  LDC1		F20, 30 (SP)
  14C:  ADDIU		V0, R0, 2
  150:  JR			RA
  154:  ADDIU		SP, SP, 60
}

#new:Script $Script_Buzzatrice_MagicBeam
{
		Call	EnableIdleScript ( .Actor:Self .False )
		Call	UseIdleAnimation ( .Actor:Self .False )
		Call	SetTargetActor ( .Actor:Self .Actor:Player )
		Call	SetGoalToTarget ( .Actor:Self )
		Call     UseBattleCamPreset 	( 0000003F )
		Call     BattleCamTargetActor ( .Actor:Self )
   14:  Call  SetAnimation      ( .Actor:Self FFFFFFFF 00FC0512 )
   2C:  Wait  15`
   38:  Call  InitTargetIterator ( )
   44:  Call  SetAnimation      ( .Actor:Self FFFFFFFF 00FC0513 )
		Wait  30`
   78:  Call  PlaySoundAtActor  ( .Actor:Self 00002006 )
		Call     EnemyTestTarget ( .Actor:Self *Var[1] 00000000 00000000 00000001 00000010 )
		Switch *Var[1]
			Case == 00000005
				Set *VarF 00000000
			Case == 00000006
				Set *VarF 00000001
			Default
				Set *VarF 00000001
		EndSwitch
   E8:  Switch  *VarF
   F4:  	Case  ==  00000001		%the only successful one
  134:  		Call  	 SetGoalToTarget   ( .Actor:Self )
  144:  		Call 	 SetAnimation      ( .Actor:Self FFFFFFFF 00FC0515 )
				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
				Add		*Var1  2`
				Add 	*Var0 -14`
				Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
				/%	probably shouldn't need to fine tune this
				Sub	*Var[3] 15
				Add *Var[4] 15
				%/
				Add 	 *Var3 3
				Add	     *Var4 3
				Call     PlayEffect  	( ~FX:Squirt:Waterbeam *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] 00000001 0000000A 00000000 00000000 00000000 00000000 )
				Call	 $Function_PinkWaterBeam ( *VarF )
				Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
				Add 	 *Var3 3
				Sub	     *Var4 3
				Call     PlayEffect  	( ~FX:Squirt:Waterbeam *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] 00000001 0000000A 00000000 00000000 00000000 00000000 )
				Call	 $Function_CyanWaterBeam ( *VarF )
				Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
				Call     PlayEffect  	( ~FX:Squirt:Waterbeam *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] 00000001 0000000A 00000000 00000000 00000000 00000000 )
				Call	 $Function_YellowWaterBeam ( *VarF )
				Wait     0000000A
  240:  	Default 	%too high
  280:  		Call  SetGoalToTarget   ( .Actor:Self )
  290:  		Call  AddGoalPos        ( .Actor:Self 00000032 00000032 00000000 )
  134:  		Call  SetGoalToTarget   ( .Actor:Self )
  144:  		Call  SetAnimation      ( .Actor:Self FFFFFFFF 00FC0516 )
				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
				Add		*Var1  2`
				Add 	*Var0 -14`
				Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
				Add 	*Var3 30`
				Add 	*Var4 30`
				/%	probably shouldn't need to fine tune this
				Sub	*Var[3] 15
				Add *Var[4] 15
				%/
				Add 	 *Var3 3
				Add	     *Var4 3
				Call     PlayEffect  	( ~FX:Squirt:Waterbeam *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] 00000001 00000006 00000000 00000000 00000000 00000000 )
				Call	 $Function_PinkWaterBeam ( *VarF )
				Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
				Add 	*Var3 30`
				Add 	*Var4 30`
				Add 	 *Var3 3
				Sub	     *Var4 3
				Call     PlayEffect  	( ~FX:Squirt:Waterbeam *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] 00000001 00000006 00000000 00000000 00000000 00000000 )
				Call	 $Function_CyanWaterBeam ( *VarF )
				Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
				Add 	*Var3 30`
				Add 	*Var4 30`
				Call     PlayEffect  	( ~FX:Squirt:Waterbeam *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] 00000001 00000006 00000000 00000000 00000000 00000000 )
				Call	 $Function_YellowWaterBeam ( *VarF )
				Wait     00000004
				Goto 	 A
  3A8:  EndSwitch
		%calculate damage by level
		Set *VarF 7
		%
		Call  GetOwnerTarget ( *VarB *VarC )
		Call  GetActorAttackBoost	( *VarB *VarD )
		If *VarD > 0
			Add   *VarF *VarD
		EndIf
		Call  GetActorDefenseBoost	( *VarB *VarD )
		If *VarD > 0
			Add   *VarF *VarD
		EndIf
		%Add in mario's charge too
		Call	$Function_ChargeCheck ( *Var6 *Var7 )
		Add *VarF *Var6
		Add *VarF *Var7
  3D4:  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] ~Flags:DamageType:NoContact|Magic 00000000 80200164 *VarF 00000020 )
  3F8:  Call  PlaySoundAtActor      ( .Actor:Self 00000110 )
  42C:  Call  PlaySoundAtActor  ( .Actor:Self 00000000 )
  440:  Label  A
  850:  Wait  15`
    C:  Call  UseBattleCamPreset    ( 00000002 )
   1C:  Call  SetGoalToHome ( .Actor:Self )
		Call  YieldTurn 	( )
   2C:  Call  SetAnimation  ( .Actor:Self FFFFFFFF 00FC0503 )
   44:  Call  FlyToGoal     ( .Actor:Self 0000000F 00000000 .Easing:CosInOut )
   60:  Call  SetAnimation  ( .Actor:Self FFFFFFFF 00FC0502 )
	Call	EnableIdleScript ( .Actor:Self .True )
	Call	UseIdleAnimation ( .Actor:Self .True )
	Return
	End
}

#new:Function $Function_ChargeCheck
{
    0:  ADDIU		SP, SP, FFE0
    4:  SW			S1, 14 (SP)
    8:  COPY		S1, A0
    C:  SW			S2, 18 (SP)
   10:  LIA			S2, 800DC070
   18:  SW			RA, 1C (SP)
   1C:  SW			S0, 10 (SP)
   20:  LW			S0, C (S1)
   24:  LB			A2, 97 (S2)
   28:  LW			A1, 0 (S0)
   2C:  JAL			~Func:set_variable
   30:  ADDIU		S0, S0, 4
   34:  LW			A1, 0 (S0)
   38:  LB			A2, 96 (S2)
   3C:  JAL			~Func:set_variable
   40:  COPY		A0, S1
   44:  LW			RA, 1C (SP)
   48:  LW			S2, 18 (SP)
   4C:  LW			S1, 14 (SP)
   50:  LW			S0, 10 (SP)
   54:  ADDIU		V0, R0, 2
   58:  JR			RA
   5C:  ADDIU		SP, SP, 20
}

%effect colors
%FF, FF, 80
%FF, FF, 00
#new:Function $Function_YellowWaterBeam    
{
    0:  ADDIU        SP, SP, FFE8
    4:  SW            RA, 10 (SP)
    8:  LW            V0, C (A0)
    C:  JAL            ~Func:get_variable
   10:  LW            A1, 0 (V0)
   14:  LW            V1, C (V0)
   18:  ADDIU        A0, R0, FF                %R
   1C:  SW            A0, 34 (V1)
   20:  LW            V1, C (V0)
        ADDIU        A0, R0, FF                %G
   24:  SW            A0, 38 (V1)
   28:  LW            V1, C (V0)
   2C:  ADDIU        A1, R0, 80                %B
   30:  SW            A1, 3C (V1)
   34:  LW            A0, C (V0)
   38:  ADDIU        V1, R0, FF                %R 2
   3C:  SW            V1, 44 (A0)
   40:  LW            A0, C (V0)
   44:  ADDIU        V1, R0, FF                %G 2
   48:  SW            V1, 48 (A0)
   4C:  LW            V1, C (V0)
        ADDIU        A1, R0, 00                %B 2
   50:  SW            A1, 4C (V1)
   54:  LW            RA, 10 (SP)
   58:  ADDIU        V0, R0, 2
   5C:  JR            RA
   60:  ADDIU        SP, SP, 18
}

%FF, 80, FF
%FF, 00, FF
#new:Function $Function_PinkWaterBeam    
{
    0:  ADDIU        SP, SP, FFE8
    4:  SW            RA, 10 (SP)
    8:  LW            V0, C (A0)
    C:  JAL            ~Func:get_variable
   10:  LW            A1, 0 (V0)
   14:  LW            V1, C (V0)
   18:  ADDIU        A0, R0, FF                %R
   1C:  SW            A0, 34 (V1)
   20:  LW            V1, C (V0)
        ADDIU        A0, R0, 80                %G
   24:  SW            A0, 38 (V1)
   28:  LW            V1, C (V0)
   2C:  ADDIU        A1, R0, FF                %B
   30:  SW            A1, 3C (V1)
   34:  LW            A0, C (V0)
   38:  ADDIU        V1, R0, FF                %R 2
   3C:  SW            V1, 44 (A0)
   40:  LW            A0, C (V0)
   44:  ADDIU        V1, R0, 00                %G 2
   48:  SW            V1, 48 (A0)
   4C:  LW            V1, C (V0)
        ADDIU        A1, R0, FF                %B 2
   50:  SW            A1, 4C (V1)
   54:  LW            RA, 10 (SP)
   58:  ADDIU        V0, R0, 2
   5C:  JR            RA
   60:  ADDIU        SP, SP, 18
}

%80, FF, FF
%00, FF, FF
#new:Function $Function_CyanWaterBeam    
{
    0:  ADDIU        SP, SP, FFE8
    4:  SW            RA, 10 (SP)
    8:  LW            V0, C (A0)
    C:  JAL            ~Func:get_variable
   10:  LW            A1, 0 (V0)
   14:  LW            V1, C (V0)
   18:  ADDIU        A0, R0, 80                %R
   1C:  SW            A0, 34 (V1)
   20:  LW            V1, C (V0)
        ADDIU        A0, R0, FF                %G
   24:  SW            A0, 38 (V1)
   28:  LW            V1, C (V0)
   2C:  ADDIU        A1, R0, FF                %B
   30:  SW            A1, 3C (V1)
   34:  LW            A0, C (V0)
   38:  ADDIU        V1, R0, 00                %R 2
   3C:  SW            V1, 44 (A0)
   40:  LW            A0, C (V0)
   44:  ADDIU        V1, R0, FF                %G 2
   48:  SW            V1, 48 (A0)
   4C:  LW            V1, C (V0)
        ADDIU        A1, R0, FF                %B 2
   50:  SW            A1, 4C (V1)
   54:  LW            RA, 10 (SP)
   58:  ADDIU        V0, R0, 2
   5C:  JR            RA
   60:  ADDIU        SP, SP, 18
}


#new:Script $Script_Buzzatrice_HustleSpell
{
		Call	EnableIdleScript ( .Actor:Self .False )
		Call	UseIdleAnimation ( .Actor:Self .False )
		Call	SetTargetActor ( .Actor:Self .Actor:Player )
		Call	SetGoalToTarget ( .Actor:Self )
		Call     UseBattleCamPreset 	( 0000003F )
		Call     BattleCamTargetActor ( .Actor:Self )
   14:  Call  SetAnimation      ( .Actor:Self FFFFFFFF 00FC0512 )
   2C:  Wait  15`
   38:  Call  InitTargetIterator ( )
   44:  Call  SetAnimation      ( .Actor:Self FFFFFFFF 00FC0513 )
		Wait  30`
		Call  SetAnimation      ( .Actor:Self FFFFFFFF 00FC0514 )
   78:  Call  PlaySoundAtActor  ( .Actor:Self 00002006 )
		%add in some buff code
    0:  Set   *Flag[00]  .False 
   10:  Label  A
   1C:  Call  EnemyCreateTargetList ( 00008002 )
   2C:  Call  InitTargetIterator ( )
   38:  Label  0
   44:  Call  GetOwnerTarget    ( *Var0 *Var1 )		%current target		value in *Var0, part target in *Var1
   58:  Call  GetIndexFromHome  ( *Var0 *Var1 )		%target index		get index of thing in *Var0 into *Var1
		%Do not buff yourself! (if possible)
		Call  GetOwnerID		( *VarA )
		Call  GetIndexFromHome  ( *VarA *VarB )
		If *VarB == *Var1			
			Goto 3
		EndIf		
   6C:  Call  GetBattleVar      ( 00000002 *Var2 )	%???
   80:  If  *Var1  >  *Var2 						%if target index > ???						<-- This setup seems to make it so that enemies get buffed from left to right
   D8:  	Set   *Var8  *Var0 						%this is our target now
   E8:  	Call  SetBattleVar  ( 00000002 *Var1 )	%set ??? to our target index
   FC:  	Goto  C									%now do effect stuff
  118:  EndIf
		Label 3
  120:  Call  ChooseNextTarget  ( .Iter:Next *Var0 ) %go to the next one
  134:  If  *Var0  !=  FFFFFFFF 
  144:  	Goto  0
  150:  EndIf
  158:  If  *Flag[00]  ==  .False 					%no targets? try again without the battle var 2 thing
  168:  	Set   *Flag[00]  .True 
  178:  	Call  SetBattleVar  ( 00000002 FFFFFFFF )
  18C:  	Goto  A
  198:  EndIf
  1A0:  Call  CountPlayerTargets    ( .Actor:Self 00008002 *Var0 )	%how many people can you even hit, anyway?
  1B8:  If  *Var0  ==  00000001 									%if alone...
			Goto D													%Break out
  1DC:  EndIf
  440:  Label  C
		%target found, do buff stuff
		Call  $HustleTarget		( *Var8 00000001 )
		Wait  30`
		Call	$ShowCustomMessage	( 002F0090 50` ) 
		Wait  30`  
		Label  D
  850:  Wait  15`
    C:  Call  UseBattleCamPreset    ( 00000002 )
   1C:  Call  SetGoalToHome ( .Actor:Self )
		Call  YieldTurn 	( )
   2C:  Call  SetAnimation  ( .Actor:Self FFFFFFFF 00FC0503 )
   44:  Call  FlyToGoal     ( .Actor:Self 0000000F 00000000 .Easing:CosInOut )
   60:  Call  SetAnimation  ( .Actor:Self FFFFFFFF 00FC0502 )
	Call	EnableIdleScript ( .Actor:Self .True )
	Call	UseIdleAnimation ( .Actor:Self .True )
	Return
	End
}


#new:Script $Script_TakeTurn_Buzzatrice
{
	Call	GetActorVar ( .Actor:Self 00000009 *Var[9] )
	Switch *Var[9]
		Case == 00000000
			Call	 SetActorVar 	( .Actor:Self 00000009 00000001 )
			ExecWait  $Script_Buzzatrice_MagicBlast
		Case == 00000001
			Call	 SetActorVar 	( .Actor:Self 00000009 00000002 )
			ExecWait  $Script_Buzzatrice_MagicBeam
		Case == 00000002
			Call	 SetActorVar 	( .Actor:Self 00000009 00000000 )
			ExecWait  $Script_Buzzatrice_HustleSpell
	EndSwitch
	Return
	End
}
