%Ultra blooper
%He is a retextured baby blooper
%Making something bigger than super blooper doesn't make much sense

%stats
%only 50 hp, 0 def
%but attack power is quite high

%alternates siphoning (5 each, but very fast) and a strong dash move (20 damage + paralyze!)
%moveset
%	siphoning (5 each, but very fast)
%	buff attack by +2, heal +10
%	strong dash (20 damage + paralyze for 2 turns)
%dash move has some cool effects because it is possible
%using zap tap causes him to skip siphoning attack

#new:IdleAnimations $IdleAnimations_UltraBlooperA
{
	.Status:Normal    00510100
	.Status:Stop      00510100
	.Status:Sleep     00510106
	.Status:Paralyze  00510107
	.Status:Paralyze  00510100
	.Status:Dizzy     00510107
	.Status:Shrink    00510100
	.Status:End
}

#new:IdleAnimations $IdleAnimations_UltraBlooperB
{
	.Status:Normal    00510101
	.Status:Stop      00510100
	.Status:Sleep     00510106
	.Status:Paralyze  00510107
	.Status:Paralyze  00510100
	.Status:Dizzy     00510107
	.Status:Shrink    00510101
	.Status:End
}

#new:IdleAnimations $IdleAnimations_UltraBlooperC
{
	.Status:Normal    00510100
	.Status:Stop      00510100
	.Status:Sleep     00510106
	.Status:Paralyze  00510107
	.Status:Paralyze  00510100
	.Status:Dizzy     00510107
	.Status:Shrink    00510100
	.Status:End
}

#new:DefenseTable $DefenseTable_UltraBlooper
{
	.Element:Normal 00000000
	.Element:Throw FFFFFFFF
	.Element:End
}

%dizzy works again, but he can still self heal and buff
#new:StatusTable $StatusTable_UltraBlooper
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep       0`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy      50`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze    0`
	.Status:Shrink      0`
	.Status:Stop        0`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod  -1`
	.Status:ShrinkTurnMod    -1`
	.Status:StopTurnMod      -2`
	.Status:End
}

#new:PartsTable $PartsTable_UltraBlooper
{
	00020000 01000000 005500FF $IdleAnimations_UltraBlooperA $DefenseTable_UltraBlooper 00000000 00000000 00000000 00000000
	00800000 02001B00 000000FF 00000000 $DefenseTable_UltraBlooper 00000000 00000000 01F30000 00000000
}

#new:Actor $UltraBlooper
{
	% stats
	[Index]        79b
	[Level]        90`b
	[MaxHP]        60`b
	[Coins]         0`b
	[Flags]       00000200
	[StatusTable] $StatusTable_UltraBlooper
	% ai
	[PartsCount]    2`s
	[PartsTable]  $PartsTable_UltraBlooper
	[Script]      $Script_Init_UltraBlooper
	% move effectiveness
	[Escape]        0`b
	[Item]          0`b
	[AirLift]       0`b
	[Hurricane]     0`b % Bow's "Spook" as well
	[UpAndAway]     0`b
	[PowerBounce]   3`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         28`b  25`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -12`b  20`b % dx dy
	[StatusIcon]   10`b  25`b % dx dy
}

%remove the normal baby blooper stuff
#new:Script $Script_Init_UltraBlooper
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_UltraBlooper )
   14:  Call  BindHandleEvent       ( .Actor:Self $Script_HandleEvent_UltraBlooper )
  23C:  Call  BindIdle      ( .Actor:Self $Script_Idle_UltraBlooper )
  250:  Call  HPBarToHome   ( .Actor:Self )
		Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
		Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
  260:  Return
  268:  End
}

#new:Script $Script_Idle_UltraBlooper
{
    0:  Label  0
    C:  Call  GetStatusFlags    ( .Actor:Self *VarA )
   20:  If  *VarA  &  ~Flags:StatusFlags:Sleep|Paralyze|Dizzy|Stone|Stop % 351000
   30:  	Wait  1`
   3C:  	Goto  0
   48:  EndIf
   50:  Call  SetGoalToHome ( .Actor:Self )
   60:  Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
   7C:  Add   *Var1  00000000
   8C:  Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
   A8:  If  *Var4  >=  *Var1
   B8:  	Goto  B
   C4:  EndIf
   CC:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_UltraBlooperB )
   E4:  Call  SetAnimation      ( .Actor:Self 00000001 00510100 )
   FC:  Wait  9`
  108:  Call  SetAnimation      ( .Actor:Self 00000001 00510101 )
  120:  Call  SetActorIdleJumpGravity   ( .Actor:Self *Fixed[1.0] )
  134:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
  148:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  164:  Call  IdleFlyToGoal     ( .Actor:Self 00000000 00000000 .Easing:SinOut )
  180:  Label  B
  18C:  Call  GetStatusFlags    ( .Actor:Self *VarA )
  1A0:  If  *VarA  &  ~Flags:StatusFlags:Sleep|Paralyze|Dizzy|Stone|Stop % 351000
  1B0:  	Wait  1`
  1BC:  	Goto  0
  1C8:  EndIf
  1D0:  Call  SetGoalToHome ( .Actor:Self )
  1E0:  Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  1FC:  Add   *Var1  00000005
  20C:  Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
  228:  If  *Var4  >=  *Var1
  238:  	Goto  C
  244:  EndIf
  24C:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_UltraBlooperB )
  264:  Call  SetAnimation      ( .Actor:Self 00000001 00510100 )
  27C:  Wait  9`
  288:  Call  SetAnimation      ( .Actor:Self 00000001 00510101 )
  2A0:  Call  SetActorIdleJumpGravity   ( .Actor:Self *Fixed[1.0] )
  2B4:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
  2C8:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  2E4:  Call  IdleFlyToGoal     ( .Actor:Self 00000000 00000000 .Easing:SinOut )
  300:  Wait  3`
  30C:  Label  C
  318:  Call  GetStatusFlags    ( .Actor:Self *VarA )
  32C:  If  *VarA  &  ~Flags:StatusFlags:Sleep|Paralyze|Dizzy|Stone|Stop % 351000
  33C:  	Wait  1`
  348:  	Goto  0
  354:  EndIf
  35C:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_UltraBlooperC )
  374:  Call  SetGoalToHome     ( .Actor:Self )
  384:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  3A0:  Add   *Var1  FFFFFFFB
  3B0:  Call  SetActorIdleJumpGravity   ( .Actor:Self *Fixed[0.8] )
  3C4:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[0.3] )
  3D8:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  3F4:  Call  IdleFlyToGoal     ( .Actor:Self 00000000 00000001 .Easing:SinOut )
  410:  Wait  1`
  41C:  Goto  0
  428:  Return
  430:  End
}

#new:Script $Script_HandleEvent_UltraBlooper
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001
   70:  		SetConst  *Var1  00510102
   80:  		ExecWait  DoNormalHit
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:Death % 20
   A0:  		SetConst  *Var0  00000001
   B0:  		SetConst  *Var1  00510102
   C0:  		ExecWait  DoNormalHit
   CC:  		SetConst  *Var1  00510103
   DC:  		ExecWait  $Script_80223170_UB
   E8:  		Return
   F0:  	Case  ==  .Event:BurnHit % E
   FC:  		Set   *Var0  00000001
  10C:  		Set   *Var1  00510104
  11C:  		Set   *Var2  00510105
  12C:  		ExecWait  DoBurnHit
  138:  	Case  ==  .Event:BurnDeath % 24
  144:  		Set   *Var0  00000001
  154:  		Set   *Var1  00510104
  164:  		Set   *Var2  00510105
  174:  		ExecWait  DoBurnHit
  180:  		SetConst  *Var1  00510105
  190:  		ExecWait  $Script_80223170_UB
  19C:  		Return
  1A4:  	Case  ==  .Event:SpinSmashHit % B
  1B0:  		SetConst  *Var0  00000001
  1C0:  		SetConst  *Var1  00510102
  1D0:  		ExecWait  DoSpinSmashHit
  1DC:  	Case  ==  .Event:SpinSmashDeath % 21
  1E8:  		SetConst  *Var0  00000001
  1F8:  		SetConst  *Var1  00510102
  208:  		ExecWait  DoSpinSmashHit
  214:  		SetConst  *Var0  00000001
  224:  		SetConst  *Var1  00510103
  234:  		ExecWait  $Script_80223170_UB
  240:  		Return
  248:  	CaseOR  ==  00000017 % 17
  254:  	CaseOR  ==  .Event:Immune % 19
  260:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  26C:  		SetConst  *Var0  00000001
  27C:  		SetConst  *Var1  00510100
  28C:  		ExecWait  DoImmune
  298:  	EndCaseGroup
  2A0:  	Case  ==  .Event:ShockHit % 2F
  2AC:  		Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  2C8:  		SetConst  *Var0  00000001
  2D8:  		SetConst  *Var1  00510102
  2E8:  		ExecWait  DoShockHit
  2F4:  		SetConst  *Var0  00000001
  304:  		SetConst  *Var1  00510102
  314:  		ExecWait  DoJumpBack
  320:  		ExecWait  $Script_GoHome_UB
				Call  SetActorVar   ( .Actor:Self 00000002 00000001 )
  32C:  	CaseOR  ==  .Event:ShockDeath % 26
  338:  		Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  354:  		SetConst  *Var0  00000001
  364:  		SetConst  *Var1  00510102
  374:  		ExecWait  DoShockHit
  380:  		SetConst  *Var0  00000001
  390:  		SetConst  *Var1  00510102
  3A0:  		ExecWait  DoJumpBack
  3AC:  		SetConst  *Var0  00000001
  3BC:  		SetConst  *Var1  00510103
  3CC:  		ExecWait  $Script_80223170_UB
  3D8:  		Return
  3E0:  	Case  ==  .Event:EndFirstStrike % 35
  3EC:  		ExecWait  $Script_GoHome_UB
  3F8:  	Case  ==  .Event:RecoverStatus % 31
  404:  		SetConst  *Var0  00000001
  414:  		SetConst  *Var1  00510100
  424:  		ExecWait  DoRecover
  430:  	Default
  438:  EndSwitch
  440:  Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  454:  Call  UseIdleAnimation  ( .Actor:Self .True )
  468:  Return
  470:  End
}

#new:Script $Script_80223170_UB
{
    0:  SetConst  *Var0  00000001
   10:  ExecWait  DoDeath
   1C:  Return
   24:  End
}

#new:Script $Script_TakeTurn_UltraBlooper
{
	Label Start
	Call  GetActorVar   ( .Actor:Self 00000001 *Var2 )
	Switch *Var2
		Case == 00000000
			Call  SetActorVar   ( .Actor:Self 00000001 00000001 )		
			Call  GetActorVar   ( .Actor:Self 00000002 *Var3 )
			If *Var3 == 1
				Goto Start
			EndIf
			ExecWait $Script_Siphoning
		Case == 00000001
			Call  SetActorVar   ( .Actor:Self 00000001 00000002 )		
			ExecWait $Script_Heal
		Case == 00000002
			Call  SetActorVar   ( .Actor:Self 00000001 00000000 )		
			ExecWait $Script_BigDash
	EndSwitch
	Return
	End
}

#new:Script $Script_Siphoning
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  SetGoalToTarget   ( .Actor:Self )
   4C:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
   68:  Set   *Var1  00000064
   78:  Set   *Var3  0000000C
   88:  ExecWait  $Script_80221F40_UB
   94:  Thread
   9C:  	Wait  2`
   A8:  	Call  PlaySoundAtActor  ( .Actor:Self 00000301 )
   BC:  EndThread
   C4:  Call  EnemyTestTarget   ( .Actor:Self *VarF ~Flags:DamageType:0 00000000 00000001 00000010 )
   E8:  Switch  *VarF
   F4:  	CaseOR  ==  .HitResult:Miss % 6
  100:  	CaseOR  ==  .HitResult:Lucky % 5
  10C:  		Call  SetAnimation  ( .Actor:Self 00000001 00510102 )
  124:  		Call  SetGoalToTarget       ( .Actor:Self )
  134:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  150:  		Set   *Var1  00000000
  160:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  174:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  190:  		Call  JumpToGoal    ( .Actor:Self 00000010 .False .True .False )
  1B0:  		If  *VarF  ==  .HitResult:Lucky % 5
  1C0:  			Call  EnemyTestTarget   ( .Actor:Self *VarF ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  1E4:  		EndIf
  1EC:  		Add   *Var0  0000001E
  1FC:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  218:  		Call  JumpToGoal    ( .Actor:Self 0000000C .False .True .False )
  238:  		Add   *Var0  00000014
  248:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  264:  		Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
  284:  		ExecWait  $Script_GoHome_UB
  290:  		Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  2A4:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  2B8:  		Return
  2C0:  	EndCaseGroup
  2C8:  	CaseOR  ==  .HitResult:HitStatic % 7
  2D4:  	CaseOR  ==  .HitResult:Immune % 8
  2E0:  		Call  SetAnimation  ( .Actor:Self 00000001 00510102 )
  2F8:  		Call  SetGoalToTarget       ( .Actor:Self )
  308:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  324:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
  338:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  354:  		Call  JumpToGoal    ( .Actor:Self 00000010 .False .True .False )
  374:  		If  *VarF  ==  00000007
  384:  			Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:0 00000000 00000000 00000000 00000040 )
  3AC:  		EndIf
  3B4:  		Add   *Var0  0000001E
  3C4:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  3E0:  		Call  JumpToGoal        ( .Actor:Self 0000000F .False .True .False )
  400:  		ExecWait  $Script_GoHome_UB
  40C:  		Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  420:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  434:  		Return
  43C:  	EndCaseGroup
  444:  EndSwitch
  44C:  Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
  468:  Add   *Var1  00000032
  478:  Call  UseBattleCamPreset    ( 00000013 )
  488:  Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
  4A0:  Call  SetBattleCamZoom  ( 00000145 )
  4B0:  Call  MoveBattleCamOver ( 0000001E )
  4C0:  Call  SetAnimation      ( .Actor:Self 00000001 00510102 )
  4D8:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  4EC:  Call  SetGoalToTarget   ( .Actor:Self )
  4FC:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  518:  Sub   *Var1  0000000A
  528:  Sub   *Var2  00000005
  538:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  554:  Call  JumpToGoal        ( .Actor:Self 00000010 .False .True .False )
  574:  Call  SetGoalToTarget   ( .Actor:Self )
  584:  Call  SetAnimation      ( .Actor:Self 00000001 00510108 )
  59C:  Call  ShowMessageBox    ( 00000031 00007FFF )
  5B0:  Call  802694A4  ( 00000001 )
  5C0:  Call  LoadActionCommand ( .ActionCommand:StopLeech )
  5D0:  Call  802A9000 ( )
  5DC:  Call  SetupMashMeter    ( 00000001 0000000F 00000000 00000000 00000000 00000000 )
  600:  Wait  10`
  60C:  Call  SetBattleFlagBits ( 00004000 .False )
  620:  Call  802A9110  ( 00000000 00007FFF 00000003 )
  638:  Loop  00000005
  644:  	Call  UseIdleAnimation  ( .Actor:Player .False )
  658:  	Call  SetAnimation      ( .Actor:Player 00000000 0003000C )
  670:  	Set   *Flag[00]  .False
  680:  	Loop  00000005		%A -> 5
  68C:  		Call  GetActionSuccessCopy  ( *Var1 )
  69C:  		If  *Var1  ==  00000001
  6AC:  			Set   *Flag[00]  .True
  6BC:  			BreakLoop
  6C4:  		EndIf
  6CC:  		Wait  1`
  6D8:  	EndLoop
  6E0:  	If  *Flag[00]  ==  .True
  6F0:  		Call  DispatchEventPlayer   ( 00000042 )
  700:  		Call  UseIdleAnimation      ( .Actor:Player .True )
  714:  		BreakLoop
  71C:  	EndIf
  724:  	Call  PlaySoundAtActor  ( .Actor:Self 000003E0 )
  738:  	Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  754:  	Set   *Flag[00]  .False
  764:  	Loop  00000001		%2 -> 1
  770:  		Call  GetActionSuccessCopy  ( *Var1 )
  780:  		If  *Var1  ==  00000001
  790:  			Set   *Flag[00]  .True
  7A0:  			BreakLoop
  7A8:  		EndIf
  7B0:  		Wait  1`
  7BC:  	EndLoop
  7C4:  	If  *Flag[00]  ==  .True
  7D4:  		Call  DispatchEventPlayer   ( 00000042 )
  7E4:  		Call  UseIdleAnimation      ( .Actor:Player .True )
  7F8:  		BreakLoop
  800:  	EndIf
  808:  	Call  SetActorScale ( .Actor:Self *Fixed[0.9] *Fixed[1.1] *Fixed[1.0] )
  824:  	Set   *Flag[00]  .False
  834:  	Loop  00000001		%2 -> 1
  840:  		Call  GetActionSuccessCopy  ( *Var1 )
  850:  		If  *Var1  ==  00000001
  860:  			Set   *Flag[00]  .True
  870:  			BreakLoop
  878:  		EndIf
  880:  		Wait  1`
  88C:  	EndLoop
  894:  	If  *Flag[00]  ==  .True
  8A4:  		Call  DispatchEventPlayer   ( 00000042 )
  8B4:  		Call  UseIdleAnimation      ( .Actor:Player .True )
  8C8:  		BreakLoop
  8D0:  	EndIf
  8D8:  	Call  SetActorScale ( .Actor:Self *Fixed[0.8] *Fixed[1.2] *Fixed[1.0] )
  8F4:  	Set   *Flag[00]  .False
  904:  	Loop  00000002		%3 -> 2
  910:  		Call  GetActionSuccessCopy  ( *Var1 )
  920:  		If  *Var1  ==  00000001
  930:  			Set   *Flag[00]  .True
  940:  			BreakLoop
  948:  		EndIf
  950:  		Wait  1`
  95C:  	EndLoop
  964:  	If  *Flag[00]  ==  .True
  974:  		Call  DispatchEventPlayer   ( 00000042 )
  984:  		Call  UseIdleAnimation      ( .Actor:Player .True )
  998:  		BreakLoop
  9A0:  	EndIf
  9A8:  	Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.4] *Fixed[1.0] )
  9C4:  	Set   *Flag[00]  .False
  9D4:  	Loop  00000001		%2 -> 1
  9E0:  		Call  GetActionSuccessCopy  ( *Var1 )
  9F0:  		If  *Var1  ==  00000001
  A00:  			Set   *Flag[00]  .True
  A10:  			BreakLoop
  A18:  		EndIf
  A20:  		Wait  1`
  A2C:  	EndLoop
  A34:  	If  *Flag[00]  ==  .True
  A44:  		Call  DispatchEventPlayer   ( 00000042 )
  A54:  		Call  UseIdleAnimation      ( .Actor:Player .True )
  A68:  		BreakLoop
  A70:  	EndIf
  A78:  	Call  UseIdleAnimation  ( .Actor:Player .True )
  A8C:  	Call  80269EAC  ( 00000001 )
  A9C:  	Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:IgnoreDefense:2000000 00000000 00000000 00000005 00000040 )
  AC4:  	Call  StartRumble       ( 00000002 )
  AD4:  	Call  GetLastDamage     ( .Actor:Player *Var3 )
  AE8:  	If  *Var3  !=  00000000
  AF8:  		Call  PlaySoundAtActor  ( .Actor:Self 0000206D )
  B0C:  		Call  PlaySoundAtActor  ( .Actor:Self 00000214 )
  B20:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  B3C:  		Add   *Var1  0000000A
  B4C:  		Call  $Function_80218A78    ( *Var0 *Var1 *Var2 *Var3 )
  B68:  		Thread
  B70:  			Wait  15`
  B7C:  			Call  PlaySoundAtActor      ( .Actor:Self 0000025C )
  B90:  			Call  $Function_80218B2C_UB    ( *Var0 *Var1 *Var2 *Var3 )
  BAC:  		EndThread
  BB4:  		Add   *Var0  00000014
  BC4:  		Add   *Var1  00000014
  BD4:  		Call  PlayEffect    ( ~FX:Recover:HP *Var0 *Var1 *Var2 *Var3 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  C18:  		Call  GetEnemyMaxHP ( .Actor:Self *Var1 )
  C2C:  		Call  GetActorHP    ( .Actor:Self *Var0 )
  C40:  		Add   *Var0  *Var3
  C50:  		If  *Var0  >  *Var1
  C60:  			Set   *Var0  *Var1
  C70:  		EndIf
  C78:  		Call  SetEnemyHP    ( .Actor:Self *Var0 )
  C8C:  	Else
  C94:  		Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  CB0:  		Call  DispatchEventPlayer   ( 00000042 )
  CC0:  		Call  80269470 ( )
  CCC:  		BreakLoop
  CD4:  	EndIf
  CDC:  	Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.4] *Fixed[1.0] )
  CF8:  	Set   *Flag[00]  .False
  D08:  	Loop  00000002		%3 -> 2
  D14:  		Call  GetActionSuccessCopy  ( *Var1 )
  D24:  		If  *Var1  ==  00000001
  D34:  			Set   *Flag[00]  .True
  D44:  			BreakLoop
  D4C:  		EndIf
  D54:  		Wait  1`
  D60:  	EndLoop
  D68:  	If  *Flag[00]  ==  .True
  D78:  		Call  DispatchEventPlayer   ( 00000042 )
  D88:  		Call  UseIdleAnimation      ( .Actor:Player .True )
  D9C:  		BreakLoop
  DA4:  	EndIf
  DAC:  	Call  SetActorScale ( .Actor:Self *Fixed[0.8] *Fixed[1.2] *Fixed[1.0] )
  DC8:  	Set   *Flag[00]  .False
  DD8:  	Loop  00000001		%2 -> 1
  DE4:  		Call  GetActionSuccessCopy  ( *Var1 )
  DF4:  		If  *Var1  ==  00000001
  E04:  			Set   *Flag[00]  .True
  E14:  			BreakLoop
  E1C:  		EndIf
  E24:  		Wait  1`
  E30:  	EndLoop
  E38:  	If  *Flag[00]  ==  .True
  E48:  		Call  DispatchEventPlayer   ( 00000042 )
  E58:  		Call  UseIdleAnimation      ( .Actor:Player .True )
  E6C:  		BreakLoop
  E74:  	EndIf
  E7C:  	Call  SetActorScale ( .Actor:Self *Fixed[0.9] *Fixed[1.1] *Fixed[1.0] )
  E98:  	Set   *Flag[00]  .False
  EA8:  	Loop  00000001		%2 -> 1
  EB4:  		Call  GetActionSuccessCopy  ( *Var1 )
  EC4:  		If  *Var1  ==  00000001
  ED4:  			Set   *Flag[00]  .True
  EE4:  			BreakLoop
  EEC:  		EndIf
  EF4:  		Wait  1`
  F00:  	EndLoop
  F08:  	If  *Flag[00]  ==  .True
  F18:  		Call  DispatchEventPlayer   ( 00000042 )
  F28:  		Call  UseIdleAnimation      ( .Actor:Player .True )
  F3C:  		BreakLoop
  F44:  	EndIf
  F4C:  	Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  F68:  	Call  GetPlayerHP   ( *Var1 )
  F78:  	If  *Var1  ==  00000000
  F88:  		Call  DispatchEventPlayer   ( 00000042 )
  F98:  		Call  80269470 ( )
  FA4:  		BreakLoop
  FAC:  	EndIf
  FB4:  	Set   *Flag[00]  .False
  FC4:  	Loop  00000006		%C -> 6
  FD0:  		Call  GetActionSuccessCopy  ( *Var1 )
  FE0:  		If  *Var1  ==  00000001
  FF0:  			Set   *Flag[00]  .True
 1000:  			BreakLoop
 1008:  		EndIf
 1010:  		Wait  1`
 101C:  	EndLoop
 1024:  	If  *Flag[00]  ==  .True
 1034:  		Call  DispatchEventPlayer   ( 00000042 )
 1044:  		BreakLoop
 104C:  	EndIf
 1054:  EndLoop
 105C:  Call  DispatchEventPlayer   ( 00000042 )
 106C:  Call  80269470 ( )
 1078:  Call  UseIdleAnimation      ( .Actor:Player .True )
 108C:  Call  UseBattleCamPreset    ( 00000002 )
 109C:  Call  MoveBattleCamOver     ( 00000014 )
 10AC:  Call  GetStatusFlags        ( .Actor:Player *Var0 )
 10C0:  If  *Var0  &  ~Flags:StatusFlags:Stone % 100000
 10D0:  	Call  SetAnimation  ( .Actor:Self 00000001 00510102 )
 10E8:  Else
 10F0:  	Call  SetAnimation  ( .Actor:Self 00000001 00510100 )
 1108:  EndIf
 1110:  Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
 112C:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
 1148:  Add   *Var0  0000001E
 1158:  Sub   *Var1  0000000F
 1168:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
 117C:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
 1198:  Call  JumpToGoal        ( .Actor:Self 0000000A .False .True .False )
 11B8:  ExecWait  $Script_GoHome_UB
 11C4:  Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
 11D8:  Call  UseIdleAnimation  ( .Actor:Self .True )
 11EC:  Return
 11F4:  End
}

#new:Script $Script_80221F40_UB
{
    0:  Call  SetAnimation  ( .Actor:Self 00000001 00510100 )
   18:  Call  SetAnimation  ( .Actor:Self 00000001 00510101 )
   30:  Call  GetActorPos   ( .Actor:Self *VarA *VarB *VarC )
   4C:  If  *VarB  >  00000014
   5C:  	Sub   *VarB  00000014
   6C:  Else
   74:  	Set   *VarB  00000000
   84:  EndIf
   8C:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.3] )
   A0:  Call  SetGoalPos    ( .Actor:Self *VarA *VarB *VarC )
   BC:  Call  FallToGoal    ( .Actor:Self 00000008 )
   D0:  Call  GetActorPos   ( .Actor:Self *Var4 *Var5 *Var6 )
   EC:  Call  PlaySoundAtActor      ( .Actor:Self 0000035F )
  100:  Set   *Var7  *Var4
  110:  Add   *Var7  *Var4
  120:  Add   *Var7  *Var0
  130:  MulF  *Var7  *Fixed[0.33]
  140:  Set   *Var8  *Var5
  150:  Add   *Var8  *Var5
  160:  Add   *Var8  *Var1
  170:  MulF  *Var8  *Fixed[0.33]
  180:  Set   *Var9  *Var6
  190:  Add   *Var9  *Var6
  1A0:  Add   *Var9  *Var2
  1B0:  MulF  *Var9  *Fixed[0.33]
  1C0:  Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
  1D4:  Call  SetGoalPos    ( .Actor:Self *Var7 *Var8 *Var9 )
  1F0:  Call  FlyToGoal     ( .Actor:Self *Var3 FFFFFFFE .Easing:CubicOut )
  20C:  Call  SetAnimation  ( .Actor:Self 00000001 00510100 )
  224:  Call  SetAnimation  ( .Actor:Self 00000001 00510101 )
  23C:  Call  GetActorPos   ( .Actor:Self *VarA *VarB *VarC )
  258:  Sub   *VarB  00000014
  268:  Call  SetGoalPos    ( .Actor:Self *VarA *VarB *VarC )
  284:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.3] )
  298:  Call  FallToGoal    ( .Actor:Self 00000008 )
  2AC:  Call  PlaySoundAtActor      ( .Actor:Self 0000035F )
  2C0:  Set   *Var7  *Var0
  2D0:  Add   *Var7  *Var0
  2E0:  Add   *Var7  *Var4
  2F0:  MulF  *Var7  *Fixed[0.33]
  300:  Set   *Var8  *Var1
  310:  Add   *Var8  *Var1
  320:  Add   *Var8  *Var5
  330:  MulF  *Var8  *Fixed[0.33]
  340:  Set   *Var9  *Var2
  350:  Add   *Var9  *Var2
  360:  Add   *Var9  *Var6
  370:  MulF  *Var9  *Fixed[0.33]
  380:  Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
  394:  Call  SetGoalPos    ( .Actor:Self *Var7 *Var8 *Var9 )
  3B0:  Call  FlyToGoal     ( .Actor:Self *Var3 FFFFFFFE .Easing:CubicOut )
  3CC:  Call  SetAnimation  ( .Actor:Self 00000001 00510100 )
  3E4:  Call  SetAnimation  ( .Actor:Self 00000001 00510101 )
  3FC:  Call  GetActorPos   ( .Actor:Self *VarA *VarB *VarC )
  418:  Sub   *VarB  00000014
  428:  Call  SetGoalPos    ( .Actor:Self *VarA *VarB *VarC )
  444:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.3] )
  458:  Call  FallToGoal    ( .Actor:Self 00000008 )
  46C:  Call  PlaySoundAtActor      ( .Actor:Self 0000035F )
  480:  Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
  494:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  4B0:  Call  FlyToGoal     ( .Actor:Self *Var3 FFFFFFFE .Easing:CubicOut )
  4CC:  Return
  4D4:  End
}


#new:Script $Script_GoHome_UB
{
    0:  Call  SetGoalToHome ( .Actor:Self )
   10:  Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
   2C:  Set   *Var3  0000000C
   3C:  ExecWait  $Script_80221F40_UB
   48:  Return
   50:  End
}

#new:Function $Function_802182EC_UB
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  BEQ       A1, R0, .o48
   10:  SW        RA, 14 (SP)
   14:  JAL       8011D82C
   18:  LI        A0, 1
   1C:  CLEAR     A0
   20:  COPY      A1, A0
   24:  COPY      A2, A0
   28:  COPY      A3, A0
   2C:  LAW       V0, 801512F0
   34:  LI        V1, 1
   38:  JAL       ~Func:set_background_color_blend
   3C:  SB        V1, 0 (V0)
   40:  LI        V0, 14
   44:  SW        V0, 70 (S0)
        .o48
   48:  CLEAR     A0
   4C:  COPY      A1, A0
   50:  COPY      A2, A0
   54:  LW        V1, 70 (S0)
   58:  LI        V0, 14
   5C:  SUBU      V0, V0, V1
   60:  SLL       A3, V0, 2
   64:  ADDU      A3, A3, V0
   68:  SLL       A3, A3, 1
   6C:  JAL       ~Func:set_background_color_blend
   70:  ANDI      A3, A3, FE
   74:  LW        V0, 70 (S0)
   78:  ADDIU     V0, V0, FFFF
   7C:  SW        V0, 70 (S0)
   80:  SLTIU     V0, V0, 1
   84:  LW        RA, 14 (SP)
   88:  LW        S0, 10 (SP)
   8C:  SLL       V0, V0, 1
   90:  JR        RA
   94:  ADDIU     SP, SP, 18
}

#new:Function $Function_80218200_UB
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, S1
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  COPY      S0, V0
   34:  COPY      A0, S0
   38:  JAL       ~Func:start_rumble
   3C:  COPY      A1, V0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  LI        V0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20
}

#new:Function $Function_80218384_UB
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  BEQ       A1, R0, .o1C
   10:  SW        RA, 14 (SP)
   14:  LI        V0, 14
   18:  SW        V0, 70 (S0)
        .o1C
   1C:  CLEAR     A0
   20:  COPY      A1, A0
   24:  LW        V0, 70 (S0)
   28:  COPY      A2, A0
   2C:  SLL       A3, V0, 2
   30:  ADDU      A3, A3, V0
   34:  SLL       A3, A3, 1
   38:  JAL       ~Func:set_background_color_blend
   3C:  ANDI      A3, A3, FE
   40:  LW        V0, 70 (S0)
   44:  ADDIU     V0, V0, FFFF
   48:  BEQ       V0, R0, .o58
   4C:  SW        V0, 70 (S0)
   50:  BEQ       R0, R0, .o70
   54:  CLEAR     V0
        .o58
   58:  CLEAR     A0
   5C:  COPY      A1, A0
   60:  COPY      A2, A0
   64:  JAL       ~Func:set_background_color_blend
   68:  COPY      A3, A0
   6C:  LI        V0, 2
        .o70
   70:  LW        RA, 14 (SP)
   74:  LW        S0, 10 (SP)
   78:  JR        RA
   7C:  ADDIU     SP, SP, 18
}

%spliced out of electro blooper electrification
#new:Script $Script_Heal
{
	Call  UseIdleAnimation  ( .Actor:Self .False )
	Call  EnableIdleScript  ( .Actor:Self 00000000 )
	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
	Add   *Var1  00000008
    Call  UseBattleCamPreset    ( 00000013 )
    Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
    Call  SetBattleCamZoom  ( 00000140 )
    Call  MoveBattleCamOver ( 00000032 )
    Wait  20`
    Call  $Function_802182EC_UB ( )
	Call  $Function_80218200_UB    ( 00000046 00000050 )
	Thread
		Call  ShakeCam  ( .Cam:Battle 00000000 00000028 *Fixed[0.3] )
	EndThread
	Call  SetAnimation      ( .Actor:Self 00000001 00510101 )
	Wait  15`
	Call  SetAnimation      ( .Actor:Self 00000001 00510102 )
	Wait  15`
	%spliced this non-script heal to take up less time
	Exec $Script_QuickHeal
	%now do boost attack and hope it doesn't break
	Call	PlaySoundAtActor	( .Actor:Self 000002D8 )
	Thread
		Call	 8026BF48	( 00000001 )
		Call	 BoostAttack 	( .Actor:Self 00000002 )
		Call 	 8026BF48 ( 00000000 )	
	EndThread
	Wait  20`
	Call  UseBattleCamPreset    ( 00000002 )
	Call  MoveBattleCamOver ( 0000001E )
	Call  $Function_80218384_UB ( )
	Call  EnableIdleScript  ( .Actor:Self .True )	%was FFFFFFFF (what does that mean?)
	Call  UseIdleAnimation  ( .Actor:Self .True )
	Return
	End
}

#new:Function $Function_80218B2C_UB
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  MTC1      S3, F12
   68:  NOP
   6C:  CVT.S.W   F12, F12
   70:  MTC1      S2, F14
   74:  NOP
   78:  CVT.S.W   F14, F14
   7C:  MTC1      S0, F0
   80:  NOP
   84:  CVT.S.W   F0, F0
   88:  MFC1      A2, F0
   8C:  JAL       802D74C0
   90:  COPY      A3, V0
   94:  LW        RA, 20 (SP)
   98:  LW        S3, 1C (SP)
   9C:  LW        S2, 18 (SP)
   A0:  LW        S1, 14 (SP)
   A4:  LW        S0, 10 (SP)
   A8:  LI        V0, 2
   AC:  JR        RA
   B0:  ADDIU     SP, SP, 28
}

#new:Script $Script_QuickHeal
{
	Set *Var3 10`
	Call  PlaySoundAtActor  ( .Actor:Self 0000206D )
	Call  PlaySoundAtActor  ( .Actor:Self 00000214 )
	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
	Add   *Var1  0000000A
	Call  $Function_80218A78    ( *Var0 *Var1 *Var2 *Var3 )
	Thread
		Wait  15`
		Call  PlaySoundAtActor      ( .Actor:Self 0000025C )
		Call  $Function_80218B2C_UB    ( *Var0 *Var1 *Var2 *Var3 )
	EndThread
	Add   *Var0  00000014
	Add   *Var1  00000014
	Call  PlayEffect    ( ~FX:Recover:HP *Var0 *Var1 *Var2 *Var3 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	Call  GetEnemyMaxHP ( .Actor:Self *Var1 )
	Call  GetActorHP    ( .Actor:Self *Var0 )
	Add   *Var0  *Var3
	If  *Var0  >  *Var1
		Set   *Var0  *Var1
	EndIf
	Call  SetEnemyHP    ( .Actor:Self *Var0 )	
	Return
	End
}

#new:Script $Script_BigDash
{
	Call  UseIdleAnimation  ( .Actor:Self .False )
	Call  EnableIdleScript  ( .Actor:Self 00000000 )
	Call  SetTargetActor    ( .Actor:Self .Actor:Player )
	Call  SetGoalToTarget   ( .Actor:Self )
	Thread
		Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
		Call  UseBattleCamPreset    ( 00000013 )
		Add   *Var0  75`
		Add   *Var1  40`
		Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
		Call  SetBattleCamZoom      ( 0000015E )
		Call  MoveBattleCamOver     ( 00000032 )
	EndThread
	%shuffle around before flying to you
	Call  SetAnimation      ( .Actor:Self 00000001 00510102 )
	%wiggle a little bit
	Set *VarC 0`
	Call	EnableActorBlur ( .Actor:Self 00000001 )
	Loop	15`
		Add *VarC 4`
		If *VarC > 30`
			Set *VarC 30`
		EndIf
		Call	GetHomePos  	( .Actor:Self *VarD *VarE *VarF )		%prevent ultra blooper from straying too far from where he's supposed to be due to rng
		Call	RandInt			( *VarC *VarB )
		Set *VarA *VarC
		Div *VarA 2
		Sub *VarB *VarA
		Add *VarD *VarB
		Call	RandInt			( *VarC *VarB )
		Set *VarA *VarC
		Div *VarA 2
		Sub *VarB *VarA
		Add *VarE *VarB
		Call	RandInt			( *VarC *VarB )
		Set *VarA *VarC
		Div *VarA 2
		Sub *VarB *VarA
		Add *VarF *VarB
		Call	SetActorPos   	( .Actor:Self  *VarD *VarE *VarF )	
		Wait 2`
	EndLoop
	Wait	5`
	Call     PlaySoundAtActor 	( .Actor:Self 0000037C )
	Call     EnemyTestTarget ( .Actor:Self *Var[F] 00000000 00000000 00000001 00000010 )
	Switch *Var[F]
		CaseOR == 00000005
		CaseOR == 00000006
			Call	GetGoalPos ( .Actor:Self *Var7 *Var8 *Var9 )
			Set *Var8 0
			Sub *Var7 60`
			Call	SetGoalPos ( .Actor:Self *Var7 *Var8 *Var9 )
			Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000078 )	%should be the right angle			
			Call  FlyToGoal     ( .Actor:Self 00000004 00000000 .Easing:Linear )
			%fly past you
			Call	EnableActorBlur ( .Actor:Self 00000000 )
			Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
			If *VarF == 00000005
				Call     EnemyTestTarget ( .Actor:Self *Var[A] 80000000 00000000 00000000 00000000 )
			EndIf
			%Goto GoHome
		EndCaseGroup
		Default
			Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000078 )	%should be the right angle			
			Call  FlyToGoal     ( .Actor:Self 00000004 00000000 .Easing:Linear )			
			Call  EnableActorBlur ( .Actor:Self 00000000 )
			Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
			Call  $Function_YellowWaveEffect    ( *Var0 *Var1 *Var2 )	
			Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
			Wait  2` %make the timing a little more generous
			Call  EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000014 00000020 )
			%Goto GoHome
	EndSwitch
	Label	GoHome
	Call  SetAnimation      ( .Actor:Self 00000001 00510101 )
	ExecWait  $Script_GoHome_UB
	Call  UseIdleAnimation  ( .Actor:Self .True )
	Call  EnableIdleScript  ( .Actor:Self .True )
	Return
	End
}

%uses 3 vars for positions
#new:Function $Function_YellowWaveEffect
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 1C (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 24 (SP)
   10:  SW        S2, 20 (SP)
   14:  SW        S0, 18 (SP)
   18:  LW        S0, C (S1)
   1C:  LW        A1, 0 (S0)
   20:  JAL       ~Func:get_variable
   24:  ADDIU     S0, S0, 4
   28:  LW        A1, 0 (S0)
   2C:  ADDIU     S0, S0, 4
   30:  COPY      A0, S1
   34:  JAL       ~Func:get_variable
   38:  COPY      S2, V0
   3C:  COPY      A0, S1
   40:  LW        A1, 0 (S0)
   44:  JAL       ~Func:get_variable
   48:  COPY      S0, V0
   4C:  LW        V1, AC (S1)
   50:  BNE       V1, R0, .o90
   54:  CLEAR     A0
   58:  MTC1      S2, F0
   5C:  NOP
   60:  CVT.S.W   F0, F0
   64:  MFC1      A1, F0
   68:  MTC1      S0, F0
   6C:  NOP
   70:  CVT.S.W   F0, F0
   74:  MFC1      A2, F0
   78:  MTC1      V0, F0
   7C:  NOP
   80:  CVT.S.W   F0, F0
   84:  MFC1      A3, F0
   88:  BEQ       R0, R0, .oC0
   8C:  LI        A0, 1
        .o90
   90:  MTC1      S2, F0
   94:  NOP
   98:  CVT.S.W   F0, F0
   9C:  MFC1      A1, F0
   A0:  MTC1      S0, F0
   A4:  NOP
   A8:  CVT.S.W   F0, F0
   AC:  MFC1      A2, F0
   B0:  MTC1      V0, F0
   B4:  NOP
   B8:  CVT.S.W   F0, F0
   BC:  MFC1      A3, F0
        .oC0
   C0:  JAL       80070B50
   C4:  SW        R0, 10 (SP)
		LW			V1, C (V0)
		ADDIU		A1, R0, FF			%R
		SB			A1, 50 (V1)
		LW			V1, C (V0)
		ADDIU		A1, R0, FF			%G
		SB			A1, 51 (V1)
		LW			V1, C (V0)
		ADDIU		A1, R0, 00			%B
		SB			A1, 52 (V1)
		LW			A0, C (V0)
		ADDIU		V1, R0, FF			%R 2
		SB			V1, 53 (A0)
		LW			A0, C (V0)
		ADDIU		V1, R0, FF			%G 2
		SB			V1, 54 (A0)
		LW			V1, C (V0)
		ADDIU		A1, R0, D0			%B 2
		SB			A1, 55 (V1)		
   C8:  LW        RA, 24 (SP)
   CC:  LW        S2, 20 (SP)
   D0:  LW        S1, 1C (SP)
   D4:  LW        S0, 18 (SP)
   D8:  LI        V0, 2
   DC:  JR        RA
   E0:  ADDIU     SP, SP, 28
}