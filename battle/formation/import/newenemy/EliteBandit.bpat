%id FC

#new:Actor $EliteBandit
{
% stats
[Index]        FCb 
[Level]        30`b %endgame enemy 
[MaxHP]        21`b 
[Coins]        20`b  
[Flags]       00000000 
[StatusTable] $StatusTable_EliteBandit 
% ai
[PartsCount]   2`s 
[PartsTable] $PartsTable_EliteBandit 
[Script]      $Script_Init_EliteBandit 
% move effectiveness
[Escape]        0`b 
[Item]         20`b 
[AirLift]      20`b 
[Hurricane]     0`b %these guys have seen stuff, so ghosts don't faze them % Bow's "Spook" as well
[UpAndAway]    60`b 
[PowerBounce]  80`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         26`b  32`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  25`b % dx dy
[StatusIcon]   10`b  25`b % dx dy
}

#new:IdleAnimations $IdleAnimations_EliteBanditA %normal
{
.Status:Normal    00320701
.Status:Stone     00320700
.Status:Sleep     00320710
.Status:Poison    00320701
.Status:Stop      00320700
.Status:Static    00320701
.Status:Paralyze  00320700
.Status:Dizzy     00320711
.Status:Fear      00320711
.Status:End
}

#new:IdleAnimations $IdleAnimations_EliteBanditB %holding something, we don't really need this anymore though
{
.Status:Normal    00320702
.Status:Stone     00320704
.Status:Sleep     00320710
.Status:Poison    00320702
.Status:Stop      00320704
.Status:Static    00320702
.Status:Paralyze  00320704
.Status:Dizzy     00320711
.Status:Fear      00320711
.Status:End
}

#new:IdleAnimations $IdleAnimations_EliteBanditC %a coin, also not needed anymore
{
.Status:Normal    00320714
.Status:End
}

#new:DefenseTable $DefenseTable_EliteBandit
{
.Element:Normal 00000000
.Element:End
}

#new:StatusTable $StatusTable_EliteBandit
{
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      60`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      40`
.Status:Fear       50`
.Status:Static     30`
.Status:Paralyze   40`
.Status:Shrink     40`
.Status:Stop       40`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -2` %these guys sleep with one eye open
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -2`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End
}

#new:PartsTable $PartsTable_EliteBandit
{
00800000 01000000 FE1C00FF $IdleAnimations_EliteBanditA $DefenseTable_EliteBandit 00000000 00000000 00F40000 00000000 
00020001 02001E00 000000FF $IdleAnimations_EliteBanditB $DefenseTable_EliteBandit 00000000 00000000 00000000 00000000 
}

#new:PartsTable $PartsTable_EliteBanditB
{
00020000 02000000 000000FF $IdleAnimations_EliteBanditB $DefenseTable_EliteBandit 00000000 00000000 00000000 00000000 
}

#new:Actor $EliteBanditB %this is for the coin I think, we don't need this anymore
{
% stats
[Index]        13b 
[Level]         9`b 
[MaxHP]         5`b 
[Coins]         1`b 
[Flags]       00600000 
[StatusTable] $StatusTable_EliteBandit 
% ai
[PartsCount]   1`s 
[PartsTable] $PartsTable_EliteBanditB 
[Script]      $Script_Init_EliteBanditB 
% move effectiveness
[Escape]       40`b 
[Item]         40`b 
[AirLift]      20`b 
[Hurricane]    20`b % Bow's "Spook" as well
[UpAndAway]    60`b 
[PowerBounce]  80`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         26`b  32`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  25`b % dx dy
[StatusIcon]   10`b  25`b % dx dy
}

#new:Vector3D $Vector3D_OOB
{
0` -1000` 0`
}

#new:SpecialFormation $SpecialFormation_EliteBandit
{
$EliteBanditB $Vector3D_OOB 00000000 00000000 00000000 00000000 00000000 
}

#new:Script $Script_Init_EliteBandit
{
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_EliteBandit )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_EliteBandit )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_EliteBandit )
   3C:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
		Call	 RandInt ( 00000004 *Var[0] )
		Call     SetActorVar 	( .Actor:Self 00000001 *Var[0] ) %determine next move
   54:  Return
   5C:  End
}

#new:Script $Script_EB_Null
{
    0:  Return
    8:  End
}

#new:Script $Script_Init_EliteBanditB
{
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_EB_Null )
   14:  Call     BindIdle    	( .Actor:Self $Script_EB_Null )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_EB_Null )
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_EliteBandit
{
    0:  Return
    8:  End
}
/%
#new:Script $Script_GiveCoinBack_EB
{
    0:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   18:  Switch  *Var[0] 
   24:  	Case  ==  00000000 
   30:  	Case  ==  00000001 
   3C:  		Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   54:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_EliteBandit )
   6C:  		Call     SetPartFlagBits 	( .Actor:Self 00000002 00100000 .False )
   88:  		Call     SummonEnemy 	( $SpecialFormation_EliteBandit 00000000 )
   9C:  		Set  *Var[A]  *Var[0] 
   AC:  		Call     GetPartOffset 	( .Actor:Self 00000002 *Var[1] *Var[2] *Var[3] )
   CC:  		Call     SetActorPos 	( *Var[A] *Var[1] *Var[2] *Var[3] )
   E8:  		Call     SetPartFlagBits 	( .Actor:Self 00000002 00000001 .True )
  104:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  11C:  		Call     SetActorVar 	( *Var[A] 00000001 *Var[0] )
  134:  		Call     SetActorJumpGravity 	( *Var[A] *Fixed[1.0] )
  148:  		Call     RandInt     	( 00000168 *Var[0] )
  15C:  		Call     GetActorPos 	( .Actor:Self *Var[1] *Var[2] *Var[3] )
  178:  		Add  *Var[2]  0000001E 
  188:  		Call     SetActorPos 	( *Var[A] *Var[1] *Var[2] *Var[3] )
  1A4:  		Call     SetActorSounds ( *Var[A] 00000002 00000000 00000000 )
  1C0:  		Call     AddVectorPolar ( *Var[1] *Var[3] *Fixed[40.0] *Var[0] )
  1DC:  		Call     SetGoalPos 	( *Var[A] *Var[1] 00000000 *Var[3] )
  1F8:  		Call     JumpToGoal  	( *Var[A] 00000014 00000000 00000001 00000000 )
  218:  		Call     PlaySoundAtActor 	( *Var[A] 00000212 )
  22C:  		Call     AddVectorPolar ( *Var[1] *Var[3] *Fixed[20.0] *Var[0] )
  248:  		Call     SetGoalPos 	( *Var[A] *Var[1] 00000000 *Var[3] )
  264:  		Call     JumpToGoal  	( *Var[A] 0000000A 00000000 00000001 00000000 )
  284:  		Call     PlaySoundAtActor 	( *Var[A] 00000212 )
  298:  		Call     AddVectorPolar ( *Var[1] *Var[3] *Fixed[10.0] *Var[0] )
  2B4:  		Call     SetGoalPos 	( *Var[A] *Var[1] 00000000 *Var[3] )
  2D0:  		Call     JumpToGoal  	( *Var[A] 00000005 00000000 00000001 00000000 )
  2F0:  		Call     PlaySoundAtActor 	( *Var[A] 00000212 )
  304:  		Loop     
  310:  			Call     GetBattleFlags ( *Var[1] )
  320:  			If  *Var[1]  &  00080000 
  330:  				BreakLoop
  338:  			EndIf
  340:  			If  *Var[1]  !&  00000100 
  350:  				BreakLoop
  358:  			EndIf
  360:  			Wait     00000001 
  36C:  		EndLoop
  374:  		Wait     0000000F 
  380:  		Call     SetActorJumpGravity 	( *Var[A] *Fixed[1.0] )
  394:  		Call     SetActorSpeed 	( *Var[A] *Fixed[6.0] )
  3A8:  		Set  *Var[0]  FFFFFFBA 
  3B8:  		Set  *Var[1]  00000000 
  3C8:  		Set  *Var[2]  0000000A 
  3D8:  		Label    00000005 
  3E4:  		Call     GetActorPos 	( *Var[A] *Var[3] *Var[4] *Var[5] )
  400:  		If  *Var[3]  ==  *Var[0] 
  410:  			Goto     0000000A 
  41C:  		EndIf
  424:  		If  *Var[3]  <  *Var[0] 
  434:  			Set  *Var[4]  *Var[0] 
  444:  			Sub  *Var[4]  *Var[3] 
  454:  			If  *Var[4]  <  0000001E 
  464:  				Call     SetGoalPos 	( *Var[A] *Var[0] *Var[1] *Var[2] )
  480:  				Call     JumpToGoal  	( *Var[A] 00000005 00000000 00000001 00000000 )
  4A0:  				Call     PlaySoundAtActor 	( *Var[A] 00000212 )
  4B4:  			Else
  4BC:  				Set  *Var[4]  *Var[3] 
  4CC:  				Add  *Var[3]  0000001E 
  4DC:  				Call     SetGoalPos 	( *Var[A] *Var[3] *Var[1] *Var[2] )
  4F8:  				Call     JumpToGoal  	( *Var[A] 00000000 00000000 00000001 00000000 )
  518:  				Call     PlaySoundAtActor 	( *Var[A] 00000212 )
  52C:  			EndIf
  534:  		Else
  53C:  			Set  *Var[4]  *Var[3] 
  54C:  			Sub  *Var[4]  *Var[0] 
  55C:  			If  *Var[4]  <  0000001E 
  56C:  				Call     SetGoalPos 	( *Var[A] *Var[0] *Var[1] *Var[2] )
  588:  				Call     JumpToGoal  	( *Var[A] 00000005 00000000 00000001 00000000 )
  5A8:  				Call     PlaySoundAtActor 	( *Var[A] 00000212 )
  5BC:  			Else
  5C4:  				Sub  *Var[3]  0000001E 
  5D4:  				Call     SetGoalPos 	( *Var[A] *Var[3] *Var[1] *Var[2] )
  5F0:  				Call     JumpToGoal  	( *Var[A] 00000000 00000000 00000001 00000000 )
  610:  				Call     PlaySoundAtActor 	( *Var[A] 00000212 )
  624:  			EndIf
  62C:  		EndIf
  634:  		Goto     00000005 
  640:  		Label    0000000A 
  64C:  		Call     EnableActorBlur 	( *Var[A] 00000001 )
  660:  		Call     SetTargetActor ( *Var[A] .Actor:Player )
  674:  		Call     SetGoalToTarget 	( *Var[A] )
  684:  		Call     JumpToGoal  	( *Var[A] 0000000F 00000000 00000000 00000000 )
  6A4:  		Call     GetGoalPos  	( *Var[A] *Var[0] *Var[1] *Var[2] )
  6C0:  		Call     PlayEffect  	( {FX:SmallGoldSparkle} *Var[0] *Var[1] *Var[2] *Fixed[1.0] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  704:  		Call     PlaySoundAtActor 	( *Var[A] 00000211 )
  718:  		Call     GetActorVar 	( *Var[A] 00000001 *Var[0] )
  730:  		Call     AddCoin     	( *Var[0] )
  740:  		Call     RemoveActor 	( *Var[A] )
  750:  EndSwitch
  758:  Return
  760:  End
%/

#new:Script $Script_HandleEvent_EliteBandit
{
    0:  UseArray $End[0] 
    C:  Call     UseIdleAnimation 	( .Actor:Self .False )
   20:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   34:  Call     GetLastEvent 	( .Actor:Self *Var[0] )
   48:  Switch  *Var[0] 
   54:  	Case  ==  .Event:HitCombo
   %60:  		Exec     $Script_GiveCoinBack_EB *Array[0] 
   70:  		SetConst  *Var[0]  00000001 
   80:  		SetConst  *Var[1]  00320709 
   90:  		ExecWait DoNormalHit 
   %9C:  		Loop     
   %A8:  			DoesScriptExist *Array[0] *Var[0] 
   %B8:  			If  *Var[0]  ==  00000000 
   %C8:  				BreakLoop
   %D0:  			EndIf
   %D8:  			Wait     00000001 
   %E4:  		EndLoop
   EC:  	CaseOR  ==  .Event:Hit
   F8:  	CaseOR  ==  00000011
  %104:  		Exec     $Script_GiveCoinBack_EB *Array[0] 
  114:  		SetConst  *Var[0]  00000001 
  124:  		SetConst  *Var[1]  00320709 
  134:  		ExecWait DoNormalHit 
  %140:  		Loop     
  %14C:  			DoesScriptExist *Array[0] *Var[0] 
  %15C:  			If  *Var[0]  ==  00000000 
  %16C:  				BreakLoop
  %174:  			EndIf
  %17C:  			Wait     00000001 
  %188:  		EndLoop
  190:  	EndCaseGroup
  198:  	Case  ==  .Event:BurnHit
  %1A4:  		Exec     $Script_GiveCoinBack_EB *Array[0] 
  1B4:  		SetConst  *Var[0]  00000001 
  1C4:  		SetConst  *Var[1]  0032070A 
  1D4:  		SetConst  *Var[2]  0032070B 
  1E4:  		ExecWait DoBurnHit 
  %1F0:  		Loop     
  %1FC:  			DoesScriptExist *Array[0] *Var[0] 
  %20C:  			If  *Var[0]  ==  00000000 
  %21C:  				BreakLoop
  %224:  			EndIf
  %22C:  			Wait     00000001 
  %238:  		EndLoop
  240:  	Case  ==  .Event:BurnDeath
  %24C:  		Exec     $Script_GiveCoinBack_EB *Array[0] 
  25C:  		SetConst  *Var[0]  00000001 
  26C:  		SetConst  *Var[1]  0032070A 
  27C:  		SetConst  *Var[2]  0032070B 
  28C:  		ExecWait DoBurnHit 
  298:  		SetConst  *Var[0]  00000001 
  2A8:  		SetConst  *Var[1]  0032070B 
  2B8:  		ExecWait DoDeath 
  %2C4:  		Loop     
  %2D0:  			DoesScriptExist *Array[0] *Var[0] 
  %2E0:  			If  *Var[0]  ==  00000000 
  %2F0:  				BreakLoop
  %2F8:  			EndIf
  %300:  			Wait     00000001 
  %30C:  		EndLoop
  314:  		Return
  31C:  	Case  ==  .Event:SpinSmashHit
  %328:  		Exec     $Script_GiveCoinBack_EB *Array[0] 
  338:  		SetConst  *Var[0]  00000001 
  348:  		SetConst  *Var[1]  00320709 
  358:  		ExecWait 8029B998 
  %364:  		Loop     
  %370:  			DoesScriptExist *Array[0] *Var[0] 
  %380:  			If  *Var[0]  ==  00000000 
  %390:  				BreakLoop
  %398:  			EndIf
  %3A0:  			Wait     00000001 
  %3AC:  		EndLoop
  3B4:  	Case  ==  .Event:SpinSmashDeath
  %3C0:  		Exec     $Script_GiveCoinBack_EB *Array[0] 
  3D0:  		SetConst  *Var[0]  00000001 
  3E0:  		SetConst  *Var[1]  00320709 
  3F0:  		ExecWait 8029B998 
  3FC:  		SetConst  *Var[0]  00000001 
  40C:  		SetConst  *Var[1]  00320709 
  41C:  		ExecWait DoDeath 
  %428:  		Loop     
  %434:  			DoesScriptExist *Array[0] *Var[0] 
  %444:  			If  *Var[0]  ==  00000000 
  %454:  				BreakLoop
  %45C:  			EndIf
  %464:  			Wait     00000001 
  %470:  		EndLoop
  478:  		Return
  480:  	Case  ==  .Event:ShockHit
  48C:  		SetConst  *Var[0]  00000001 
  49C:  		SetConst  *Var[1]  00320709 
  4AC:  		ExecWait DoShockHit 
  4B8:  		SetConst  *Var[0]  00000001 
  4C8:  		SetConst  *Var[1]  00320709 
  4D8:  		ExecWait DoJumpBack 
  4E4:  		SetConst  *Var[0]  00000001 
  4F4:  		SetConst  *Var[1]  00320707 
  504:  		ExecWait DoReturnHome 
  510:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.6005859] )
  524:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  544:  	Case  ==  .Event:ShockDeath
  550:  		SetConst  *Var[0]  00000001 
  560:  		SetConst  *Var[1]  00320709 
  570:  		ExecWait DoShockHit 
  57C:  		SetConst  *Var[0]  00000001 
  58C:  		SetConst  *Var[1]  00320709 
  59C:  		ExecWait DoDeath 
  5A8:  		Return
  5B0:  	CaseOR  ==  00000017
  5BC:  	CaseOR  ==  .Event:Immune
  5C8:  	CaseOR  ==  .Event:AirLiftFailed
  5D4:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  5EC:  		Switch  *Var[0] 
  5F8:  			Case  ==  00000000 
  604:  				SetConst  *Var[1]  00320701 
  614:  			Case  ==  00000001 
  620:  				SetConst  *Var[1]  00320702 
  630:  		EndSwitch
  638:  		SetConst  *Var[0]  00000001 
  648:  		ExecWait DoImmune 
  654:  	EndCaseGroup
  65C:  	CaseOR  ==  .Event:Death
  668:  	CaseOR  ==  00000025
  %674:  		Exec     $Script_GiveCoinBack_EB *Array[0] 
  684:  		SetConst  *Var[0]  00000001 
  694:  		SetConst  *Var[1]  00320709 
  6A4:  		ExecWait DoNormalHit 
  6B0:  		Wait     0000000A 
  6BC:  		SetConst  *Var[0]  00000001 
  6CC:  		SetConst  *Var[1]  00320709 
  6DC:  		ExecWait DoDeath 
  %6E8:  		Loop     
  %6F4:  			DoesScriptExist *Array[0] *Var[0] 
  %704:  			If  *Var[0]  ==  00000000 
  %714:  				BreakLoop
  %71C:  			EndIf
  %724:  			Wait     00000001 
  %730:  		EndLoop
  738:  		Return
  740:  	EndCaseGroup
  748:  	Case  ==  .Event:RecoverStatus
  754:  		SetConst  *Var[0]  00000001 
  764:  		SetConst  *Var[1]  00320701 
  774:  		ExecWait DoRecover 
  780:  	Case  ==  .Event:ScareAway
  %78C:  		Exec     $Script_GiveCoinBack_EB *Array[0] 
  79C:  		SetConst  *Var[0]  00000001 
  7AC:  		SetConst  *Var[1]  00320707 
  7BC:  		SetConst  *Var[2]  00320709 
  7CC:  		ExecWait DoScareAway 
  %7D8:  		Loop     
  %7E4:  			DoesScriptExist *Array[0] *Var[0] 
  %7F4:  			If  *Var[0]  ==  00000000 
  %804:  				BreakLoop
  %80C:  			EndIf
  %814:  			Wait     00000001 
  %820:  		EndLoop
  828:  		Return
  830:  	Case  ==  .Event:BeginAirLift
  %83C:  		Exec     $Script_GiveCoinBack_EB *Array[0] 
  84C:  		SetConst  *Var[0]  00000001 
  85C:  		SetConst  *Var[1]  00320709 
  86C:  		ExecWait DoAirLift 
  %878:  		Loop     
  %884:  			DoesScriptExist *Array[0] *Var[0] 
  %894:  			If  *Var[0]  ==  00000000 
  %8A4:  				BreakLoop
  %8AC:  			EndIf
  %8B4:  			Wait     00000001 
  %8C0:  		EndLoop
  8C8:  	Case  ==  .Event:BlowAway
  8D4:  		SetConst  *Var[0]  00000001 
  8E4:  		SetConst  *Var[1]  00320709 
  8F4:  		SetConst  *Var[2]  00040000 
  904:  		ExecWait DoBlowAway 
  910:  		Return
  918:  	Default
  920:  EndSwitch
  928:  Call     SetAnimation 	( .Actor:Self 00000001 00320701 )
  940:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  954:  Call     UseIdleAnimation 	( .Actor:Self .True )
  968:  Return
  970:  End
}

#import tools/ActionSteal.bpat

#new:Script $Script_TakeTurn_EliteBandit
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
  128:  Call     UseBattleCamPreset 	( 0000003F )
  138:  Call     BattleCamTargetActor ( .Actor:Self )
  148:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
  160:  Call     GetBattlePhase ( *Var[0] )
  170:  If  *Var[0]  ==  .Phase:FirstStrike
  180:  	Call     SetGoalToTarget 	( .Actor:Self )
  190:  	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1AC:  	Add  *Var[0]  00000032 
  1BC:  	Set  *Var[1]  00000000 
  1CC:  	Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1E8:  Else
  1F0:  	Call     SetAnimation 	( .Actor:Self 00000001 00320707 )
  208:  	Call     SetGoalToTarget 	( .Actor:Self )
  218:  	Call     AddGoalPos 	( .Actor:Self 00000032 00000000 00000000 )
  234:  	Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  248:  	Call     RunToGoal   	( .Actor:Self 00000000 .False )
  260:  	Call     SetAnimation 	( .Actor:Self 00000001 00320701 )
  278:  	Wait     00000006 
  284:  EndIf
  28C:  Call     SetActorSpeed 	( .Actor:Self *Fixed[2.0] )
  2A0:  Call     SetAnimation 	( .Actor:Self 00000001 00320705 )
  2B8:  Call     SetGoalToTarget 	( .Actor:Self )
  2C8:  Call     AddGoalPos 	( .Actor:Self 00000038 00000000 00000000 ) %23 -> 38
  2E4:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  %2FC:  Call     PlaySoundAtActor 	( .Actor:Self 000020C2 )
  310:  Call     SetActorSounds ( FFFFFF81 00000000 00000000 00000000 )
  32C:  Call     EnemyTestTarget ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  350:  Switch  *Var[0] 
  35C:  	CaseOR  ==  00000006 
  368:  	CaseOR  ==  00000005 
  374:  		Set  *Var[A]  *Var[0] 
  384:  		Call     SetAnimation 	( .Actor:Self 00000001 0032070D )
  39C:  		Call     SetGoalToTarget 	( .Actor:Self )
  3AC:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  3C0:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  3D8:  		Call     8026F6EC ( FFFFFF81 )
  3E8:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  3FC:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[0.5] )
  410:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  42C:  		Sub  *Var[0]  0000001E 
  43C:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  458:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  478:  		Sub  *Var[0]  00000014 
  488:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4A4:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  4C4:  		Wait     00000005 
  4D0:  		If  *Var[A]  ==  00000005 
  4E0:  			Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  504:  		EndIf
  50C:  		Wait     00000005 
  518:  		Call     UseBattleCamPreset 	( 00000002 )
  528:  		Call     YieldTurn   	( )
  534:  		Call     SetActorYaw 	( .Actor:Self 000000B4 )
  548:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  564:  		Call     SetAnimation 	( .Actor:Self 00000001 00320707 )
  57C:  		Call     SetGoalToHome 	( .Actor:Self )
  58C:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  5A0:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  5B8:  		Call     SetAnimation 	( .Actor:Self 00000001 00320701 )
  5D0:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  5E8:  		Call     SetActorYaw 	( .Actor:Self 00000000 )
  5FC:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  610:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  624:  		Return
  62C:  	EndCaseGroup
  634:  EndSwitch
		Call	 GetActorVar 	( .Actor:Self 00000001 *Var[A] )
		Switch *Var[A]
			Case == 00000000 %slightly different than normal bandits
				Call	 SetActorVar ( .Actor:Self 00000001 00000001 )
				Call     SetGoalToTarget 	( .Actor:Self )
				Call     AddGoalPos 	( .Actor:Self 00000020 00000000 00000000 ) 
				Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
				Call     RunToGoal   	( .Actor:Self 00000000 .False )
				Call     SetAnimation 	( .Actor:Self 00000001 0032070D )
				Call     PlaySoundAtActor 	( .Actor:Self 000020C2 )
				Call     SetGoalToTarget 	( .Actor:Self )
				Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
				Call     RunToGoal   	( .Actor:Self 00000000 .False )
			Case == 00000001 %the bandito miss attack
				Call	 SetActorVar ( .Actor:Self 00000001 00000002 )
				Call     SetGoalToTarget 	( .Actor:Self )
				Call     AddGoalPos 	( .Actor:Self 00000020 00000000 00000000 ) 
				Call     SetAnimation 	( .Actor:Self 00000001 00320701 )
				Wait	 00000004 %weird pause
				Call     SetAnimation 	( .Actor:Self 00000001 00320705 )
				%Call     SetActorSpeed 	( .Actor:Self *Fixed[2.0] )
				Call     RunToGoal   	( .Actor:Self 00000000 .False )
				Call     SetAnimation 	( .Actor:Self 00000001 0032070D )
				Call     PlaySoundAtActor 	( .Actor:Self 000020C2 )
				Call     SetGoalToTarget 	( .Actor:Self )
				Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
				Call     RunToGoal   	( .Actor:Self 00000000 .False )
				%						oh no i missed ):
				Call     SetAnimation 	( .Actor:Self 00000001 0032070D )
				Call     PlaySoundAtActor 	( .Actor:Self 000020C2 )
				Call     SetGoalToTarget 	( .Actor:Self )
				Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
				Call     RunToGoal   	( .Actor:Self 00000000 .False )
				Call     8026F6EC ( FFFFFF81 )
				Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] ) %6 -> 8
				Call     SetActorJumpGravity 	( .Actor:Self *Fixed[0.5] )
				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
				Sub  *Var[0]  0000001E 
				Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
				Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
				Sub  *Var[0]  00000014 
				Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
				Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
				Wait     00000005 
				Wait     00000005 
				%						nope
				Call	 SetActorYaw 	( .Actor:Self 000000B4 ) %flip 180 degrees
				Call     SetAnimation 	( .Actor:Self 00000001 0032070D )
				Call     PlaySoundAtActor 	( .Actor:Self 000020C2 )
				Call     SetGoalToTarget 	( .Actor:Self )
				Call	 AddGoalPos   ( .Actor:Self FFFFFFF0 00000000 00000000 ) %attack back
				Call     SetActorSpeed 	( .Actor:Self *Fixed[20.0] ) %make this attack fast to make it harder to avoid
				Call     RunToGoal   	( .Actor:Self 00000000 .False )
			Case == 00000002 %a fast rush
				Call	 SetActorVar ( .Actor:Self 00000001 00000003 )
				Call     SetGoalToTarget 	( .Actor:Self )
				Call     SetAnimation 	( .Actor:Self 00000001 0032070D )
				Call     PlaySoundAtActor 	( .Actor:Self 000020C2 )
				Call     SetGoalToTarget 	( .Actor:Self )
				Call     SetActorSpeed 	( .Actor:Self *Fixed[16.0] )
				Call     RunToGoal   	( .Actor:Self 00000000 .False )
			Case == 00000003 %fake rest
				Call	 SetActorVar ( .Actor:Self 00000001 00000004 )
				Call     SetGoalToTarget 	( .Actor:Self )
				Call     AddGoalPos 	( .Actor:Self 00000020 00000000 00000000 ) 
				Call     SetActorSpeed 	( .Actor:Self *Fixed[1.0] )
				Call     RunToGoal   	( .Actor:Self 00000000 .False )
				Call     SetAnimation 	( .Actor:Self 00000001 00320713 )
				Wait	 00000020
				Call     SetAnimation 	( .Actor:Self 00000001 0032070D )
				Call     PlaySoundAtActor 	( .Actor:Self 000020C2 )
				Call     SetGoalToTarget 	( .Actor:Self )
				Call     SetActorSpeed 	( .Actor:Self *Fixed[20.0] )
				Call     RunToGoal   	( .Actor:Self 00000000 .False )	
			Case == 00000004 %weak hit, then strong hit
				Call	 SetActorVar ( .Actor:Self 00000001 00000000 )
				Call     SetGoalToTarget 	( .Actor:Self )
				Call     SetAnimation 	( .Actor:Self 00000001 0032070D )
				Call     PlaySoundAtActor 	( .Actor:Self 000020C2 )
				Call     SetGoalToTarget 	( .Actor:Self )
				Call     SetActorSpeed 	( .Actor:Self *Fixed[16.0] )
				Call     RunToGoal   	( .Actor:Self 00000000 .False )
				Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000000 00000020 ) %boop
				Wait	 4`
				Call     SetAnimation 	( .Actor:Self 00000001 00320712 )
				Wait	 00000018
				Call     SetAnimation 	( .Actor:Self 00000001 0032070D )
		EndSwitch
/%
  63C:  Call     SetAnimation 	( .Actor:Self 00000001 0032070D )
  654:  Call     SetGoalToTarget 	( .Actor:Self )
  664:  Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  678:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
%/
  690:  Call     8026F6EC ( FFFFFF81 )
  6A0:  Wait     00000002 
  6AC:  Call     EnemyDamageTarget 	( .Actor:Self *Var[A] 00000000 00000000 00000000 00000009 00000020 ) %stronk
  		Call 	 SetActorYaw 	( .Actor:Self 00000000 )
		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
		Add  *Var[0]  0000001E 
		Set  *Var[1]  00000000 
		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.8007812] )
		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
		Switch  *Var[A] 
			CaseOR  ==  00000000 
			CaseOR  ==  00000002 
				Set  *Flag[00]  00000000 
				Call     GetBattleFlags ( *Var[0] )
				If  *Var[0]  !&  80000000 
					Call     $StealActionFunc3 ( *Var[0] )
					If  *Var[0]  !=  FFFFFFFF 
						Set  *Flag[00]  00000001 
					EndIf
				EndIf
				Call     GetLastDamage 	( .Actor:Player *Var[0] )
				If  *Var[0]  <=  00000000 
					Wait     00000014 
					Goto     00000064 
				EndIf
				Call     GetStatusFlags ( .Actor:Self *Var[1] )
				If  *Var[1]  &  00080000 
					Wait     00000014 
					Goto     00000064 
				EndIf
				Call     GetStatusFlags ( .Actor:Player *Var[1] )
				If  *Var[1]  &  40100000 
					Wait     00000014 
					Goto     00000064 
				EndIf
				If  *Flag[00]  ==  00000001 
					Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
					Exec     $StealAction 
					Wait     00000008 
					Call     SetAnimation 	( .Actor:Self 00000001 00320707 )
					Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
					Add  *Var[0]  00000046 
					Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
					Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
					Call     RunToGoal   	( .Actor:Self 00000000 .False )
					Call     SetAnimation 	( .Actor:Self 00000001 00320701 )
					Label    00000000 
					Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
					If  *Var[0]  !=  00000000 
						Wait     00000001 
						Goto     00000000 
					EndIf
					Call     SetAnimation 	( .Actor:Self 00000001 00320707 )
					Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
					Call     $StealActionFunc4 ( *Var[0] *Var[1] *Var[2] *Var[3] )
					Add  *Var[1]  00000014 
					Sub  *Var[3]  00000002 
					Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
					Call     SetGoalPos 	( .Actor:Self *Var[1] *Var[2] *Var[3] )
					Call     RunToGoal   	( .Actor:Self 00000000 .False )
					Thread
						Wait     00000005 
						Call     PlaySoundAtActor 	( .Actor:Self 000020DC )
						Call     $StealActionFunc5 ( 000000C8 0000000A )
					EndThread
					Call     SetAnimation 	( .Actor:Self 00000001 00320712 )
					Wait     00000005 
					Call     SetActorVar 	( .Actor:Self 00000000 00000002 )
					Sub  *Var[1]  00000007 
					Call     PlayEffect  	( ~FX:Firework:White *Var[1] *Var[2] *Var[3] *Fixed[1.0] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
					Wait     00000028 
				Else
					Wait     00000008 
					Call     SetAnimation 	( .Actor:Self 00000001 00320707 )
					Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
					Add  *Var[0]  00000046 
					Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
					Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
					Call     RunToGoal   	( .Actor:Self 00000000 .False )
					Call     PlaySoundAtActor 	( .Actor:Self 000020C3 )
					Call     SetAnimation 	( .Actor:Self 00000001 00320710 )
					Wait     0000000A 
					Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
					Add  *Var[1]  0000000A 
					Call     PlayEffect  	( ~FX:EmoteIcon:Question 00000000 *Var[0] *Var[1] *Var[2] 00000019 FFFFFFD3 00000014 00000000 00000000 00000000 00000000 00000000 )
					Wait     00000014 
				EndIf
				Label    00000064 
				Call     UseBattleCamPreset 	( 00000002 )
				SetConst  *Var[0]  00000001 
				SetConst  *Var[1]  00320707 
				ExecWait DoReturnHome 
			EndCaseGroup
		EndSwitch
  DDC:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  DF0:  Call     UseIdleAnimation 	( .Actor:Self .True )
  E04:  Return
  E0C:  End
}
