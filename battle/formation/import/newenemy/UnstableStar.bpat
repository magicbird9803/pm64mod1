
#define .AnimStopUS	00B30201
#define .AnimIdleUS	00B30201
#define .AnimRunUS	00B30203
#define .AnimPainUS	00B30204

%might add dizzy animation later
%#define .AnimDizzy	00950009
%#define .AnimDeadUS	00950012 %unused?
#define .AnimDeadUS	00B30201

%Unstable star
%Relatively weak, but passively deals damage over real time!
%I have to scale it in order to ensure that danger is still possible

#new:Actor $UnstableStar
{
% stats
[Index]        F3b 
[Level]        40`b %miniboss stats 
[MaxHP]        80`b 
[Coins]         0`b 
[Flags]       00000200 
[StatusTable] $StatusTable_UnstableStar 
% ai
[PartsCount]   1`s 
[PartsTable] $PartsTable_UnstableStar 
[Script]      $Script_Init_UnstableStar 
% move effectiveness
[Escape]        0`b %no escape 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]   3`b 
[SpinSmash]     4`b % weight (0-4)
% ui positions
[Size]         36`b  16`b % width height - affects shadow
[HealthBar]     0`b   4`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

%regular boo is 48 x 40, atomic boo is (usually) 120 x 108

#new:StatusTable $StatusTable_UnstableStar 
{
.Status:Normal            0`
.Status:Sleep             0` 
.Status:Poison            0`
.Status:Frozen            0`
.Status:Dizzy             0` %I don't have animations for dizzy yet
.Status:Static            0`
.Status:Paralyze          0`
.Status:Shrink            0`
.Status:Stop              0`
.Status:SleepTurnMod      1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod     1`
.Status:StopTurnMod      -1`
.Status:End
}

#new:StatusTable $StatusTable_UnstableStar_Charged
{
.Status:Normal            0`
.Status:Sleep             0` 
.Status:Poison            0`
.Status:Frozen            0`
.Status:Dizzy             0` %I don't have animations for dizzy yet
.Status:Static            0`
.Status:Paralyze          0`
.Status:Shrink            0`
.Status:Stop              0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End
}

#new:PartsTable $PartsTable_UnstableStar
{
00800000 % flags      = targetable by multi-target attacks
01000000 % II-XXYYZZ    PartsCount index, pos offset
001600FF % XXYY-AAAA    cursor pos, opacity was FE19
$IdleAnimations_UnstableStar
$DefenseTable_UnstableStar
08000000					%Add sprite event flag 08000000
00000000
00000000 % FDF6
00000000
}

#new:IdleAnimations $IdleAnimations_UnstableStar
{
.Status:Normal    .AnimIdleUS
.Status:Stone     .AnimStopUS
.Status:Sleep     .AnimStopUS %.AnimSleep
.Status:Poison    .AnimIdleUS
.Status:Stop      .AnimStopUS
.Status:Static    .AnimIdleUS
.Status:Paralyze  .AnimStopUS
.Status:Dizzy     .AnimPainUS %.AnimDizzy
.Status:End
}

#new:DefenseTable $DefenseTable_UnstableStar
{
.Element:Normal 00000000
.Element:Throw FFFFFFFF
.Element:End
}



#new:Script $Script_Init_UnstableStar
{
	Call	BindTakeTurn	( .Actor:Self $Script_TakeTurn_UnstableStar )
	Call	BindIdle		( .Actor:Self $Script_Idle_UnstableStar )
	Call	BindHandleEvent	( .Actor:Self $Script_HandleEvent_UnstableStar )
	Call	SetActorVar		( .Actor:Self 00000001 00000000 )	%Turncount
	Call  SetActorVar ( .Actor:Self 00000002 00000006 )
	Call	$Function_SetName_C ( 000000F3 002900F5 )
	Call	$Function_SetTattle_C ( 000000F3 001C00EF )		
	Set *EnviroEffectsAux 00000007
	Call $ShowCustomMessage	( 002F0091 0000005A )
	Return
	End
}

#new:Script $Script_Idle_UnstableStar
{
		Label 0
		Call  GetActorVar ( .Actor:Self 00000002 *Var6 )
		%Wait  5`
		If *Var6 == 0`
			Goto 0
		EndIf
		Set *VarE 0
		Set *VarD 360`		%x * 360 / total 
		Div *VarD *Var6
		Set *VarC *VarD
		Loop *Var6
			Set *VarC *VarD
			Mul *VarC *VarE
			Add *VarE 1
			Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
			Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
			Add   *Var1 5`
			Add   *Var4 5`
			Call  $Function_802182A4_DarkAspirant    ( *Var3 *Var4 *Var5 *VarC *Fixed[0.0] *Fixed[45.0] )	%Find a point 45 away from the target with an angle in *Var2
			%Outputs on var 3, 4, 5
			Set		*VarB *Var6
			Add 	*VarB 3
			Call	PlayEffect		( 0000005E 00000000 *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[0.5] *VarB 00000000 00000000 00000000 00000000 )
				%subtype; startX; startY; startZ; endX; endY; endZ; scale; duration
			Call	$Function_SetLightningPalette ( *VarF )			
			Wait 2`	%makes it harder to count them
		EndLoop
		Goto 0
   18:  Return
   20:  End
}

#new:Function $Function_802182A4_DarkAspirant
{
    0:  ADDIU     SP, SP, FFA0
    4:  SW        S1, 1C (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 2C (SP)
   10:  SW        S4, 28 (SP)
   14:  SW        S3, 24 (SP)
   18:  SW        S2, 20 (SP)
   1C:  SW        S0, 18 (SP)
   20:  SDC1      F30, 58 (SP)
   24:  SDC1      F28, 50 (SP)
   28:  SDC1      F26, 48 (SP)
   2C:  SDC1      F24, 40 (SP)
   30:  SDC1      F22, 38 (SP)
   34:  SDC1      F20, 30 (SP)
   38:  LW        S0, C (S1)
   3C:  LW        S3, 0 (S0)
   40:  ADDIU     S0, S0, 4
   44:  JAL       ~Func:get_float_variable
   48:  COPY      A1, S3
   4C:  SWC1      F0, 10 (SP)
   50:  LW        S4, 0 (S0)
   54:  ADDIU     S0, S0, 4
   58:  COPY      A0, S1
   5C:  JAL       ~Func:get_float_variable
   60:  COPY      A1, S4
   64:  MOV.S     F30, F0
   68:  LW        S2, 0 (S0)
   6C:  ADDIU     S0, S0, 4
   70:  COPY      A0, S1
   74:  JAL       ~Func:get_float_variable
   78:  COPY      A1, S2
   7C:  MOV.S     F28, F0
   80:  LW        A1, 0 (S0)
   84:  ADDIU     S0, S0, 4
   88:  JAL       ~Func:get_float_variable
   8C:  COPY      A0, S1
   90:  LW        A1, 0 (S0)
   94:  ADDIU     S0, S0, 4
   98:  COPY      A0, S1
   9C:  JAL       ~Func:get_float_variable
   A0:  MOV.S     F26, F0
   A4:  MOV.S     F24, F0
   A8:  LW        A1, 0 (S0)
   AC:  JAL       ~Func:get_float_variable
   B0:  COPY      A0, S1
   B4:  MOV.S     F12, F26
   B8:  LIF       F2, 15.0
   C0:  MOV.S     F22, F0
   C4:  JAL       ~Func:cos_deg
   C8:  SUB.S     F24, F24, F2
   CC:  MOV.S     F20, F0
   D0:  JAL       ~Func:cos_deg
   D4:  MOV.S     F12, F24
   D8:  MUL.S     F20, F22, F20
   DC:  NOP
   E0:  MUL.S     F20, F20, F0
   E4:  NOP
   E8:  LWC1      F4, 10 (SP)
   EC:  ADD.S     F4, F4, F20
   F0:  MOV.S     F12, F26
   F4:  JAL       ~Func:sin_deg
   F8:  SWC1      F4, 10 (SP)
   FC:  MUL.S     F0, F22, F0
  100:  NOP
  104:  MOV.S     F12, F26
  108:  JAL       ~Func:cos_deg
  10C:  ADD.S     F30, F30, F0
  110:  MOV.S     F12, F24
  114:  JAL       ~Func:sin_deg
  118:  MOV.S     F20, F0
  11C:  MUL.S     F22, F22, F20
  120:  NOP
  124:  MUL.S     F22, F22, F0
  128:  NOP
  12C:  COPY      A0, S1
  130:  COPY      A1, S3
  134:  LW        A2, 10 (SP)
  138:  JAL       ~Func:set_float_variable
  13C:  SUB.S     F28, F28, F22
  140:  COPY      A0, S1
  144:  MFC1      A2, F30
  148:  JAL       ~Func:set_float_variable
  14C:  COPY      A1, S4
  150:  COPY      A0, S1
  154:  MFC1      A2, F28
  158:  JAL       ~Func:set_float_variable
  15C:  COPY      A1, S2
  160:  LW        RA, 2C (SP)
  164:  LW        S4, 28 (SP)
  168:  LW        S3, 24 (SP)
  16C:  LW        S2, 20 (SP)
  170:  LW        S1, 1C (SP)
  174:  LW        S0, 18 (SP)
  178:  LDC1      F30, 58 (SP)
  17C:  LDC1      F28, 50 (SP)
  180:  LDC1      F26, 48 (SP)
  184:  LDC1      F24, 40 (SP)
  188:  LDC1      F22, 38 (SP)
  18C:  LDC1      F20, 30 (SP)
  190:  LI        V0, 2
  194:  JR        RA
  198:  ADDIU     SP, SP, 60
}

#new:Function $Function_SetLightningPalette
{
		PUSH		RA, S0
    8:  LW			V0, C (A0)
    C:  JAL			~Func:get_variable
   10:  LW			A1, 0 (V0)
   14:  LW			V1, C (V0)
   18:  ADDIU		A1, R0, D0			%R
   1C:  SW			A1, 30 (V1)
   20:  LW			V1, C (V0)
   18:  ADDIU		A1, R0, FF			%G
   24:  SW			A1, 34 (V1)
   28:  LW			V1, C (V0)
   18:  ADDIU		A1, R0, FF			%B
   2C:  SW			A1, 38 (V1)
   30:  LW			A0, C (V0)
   34:  ADDIU		V1, R0, 77			%R 2
   38:  SW			V1, 40 (A0)
   3C:  LW			A0, C (V0)
   40:  ADDIU		V1, R0, FF			%G 2
   44:  SW			V1, 44 (A0)
   48:  LW			V1, C (V0)
   18:  ADDIU		A1, R0, FF			%B 2
   4C:  SW			A1, 48 (V1)
   54:  ADDIU		V0, R0, 2
		JPOP		RA, S0
}

#new:Script $Script_ReturnHome_UnstableStar
{
	Call     SetAnimation 	( .Actor:Self 00000001 .AnimRunUS )
	Call     SetGoalToHome 	( .Actor:Self )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
	Thread
		Call     $Function_ReturnHome_UnstableStar ( )
	EndThread
	Call     FlyToGoal  	( .Actor:Self 00000000 00000001 .Easing:SinOut )
	Call     SetAnimation 	( .Actor:Self 00000001 .AnimIdleUS )
	Return
	End
}
	
#new:Function $Function_ReturnHome_UnstableStar
{
	ADDIU     SP, SP, FFD8
	SW        S2, 20 (SP)
	DADDU     S2, A0, R0
	SW        RA, 24 (SP)
	SW        S1, 1C (SP)
	SW        S0, 18 (SP)
	LW        A0, 148 (S2)
	JAL       ~Func:get_actor
	DADDU     S0, A1, R0
	BEQ       S0, R0, .oDC
	DADDU     S1, V0, R0
	LWC1      F2, 18 (S1)
	LWC1      F0, 144 (S1)
	SUB.S     F2, F2, F0
	MUL.S     F2, F2, F2
	NOP
	LWC1      F6, 1C (S1)
	LWC1      F0, 148 (S1)
	SUB.S     F6, F6, F0
	MUL.S     F6, F6, F6
	NOP
	LWC1      F4, 14C (S1)
	LWC1      F0, 20 (S1)
	SUB.S     F0, F0, F4
	MUL.S     F0, F0, F0
	NOP
	ADD.S     F2, F2, F6
	ADD.S     F12, F2, F0
	SQRT.S    F4, F12
	C.EQ.S    F4, F4
	NOP
	BC1T      .o90
	NOP
	JAL       80061EF0
	NOP
	MOV.S     F4, F0
        .o90
	LWC1      F0, 4C (S1)
	LIF       F2, 0.5
	DIV.S     F0, F4, F0
	MUL.S     F0, F0, F2
	NOP
	LIF       F2, 1.0
	NOP
	ADD.S     F0, F0, F2
	TRUNC.W.S F8, F0
	SWC1      F8, 70 (S2)
	LWC1      F0, 14C (S1)
	ADDIU     A0, R0, 359
	SWC1      F0, 10 (SP)
	LW        A2, 144 (S1)
	LW        A3, 148 (S1)
	JAL       80149D5C
	DADDU     A1, R0, R0
        .oDC
	LW        V0, 70 (S2)
	DADDU     V1, V0, R0
	ADDIU     V0, V0, FFFF
	BGTZ      V1, .o114
	SW        V0, 70 (S2)
	LWC1      F0, 14C (S1)
	ADDIU     A0, R0, 759
	SWC1      F0, 10 (SP)
	LW        A2, 144 (S1)
	LW        A3, 148 (S1)
	JAL       80149D5C
	DADDU     A1, R0, R0
	BEQ       R0, R0, .o118
	ADDIU     V0, R0, 2
        .o114
	DADDU     V0, R0, R0
        .o118
	LW        RA, 24 (SP)
	LW        S2, 20 (SP)
	LW        S1, 1C (SP)
	LW        S0, 18 (SP)
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Script $Script_HandleEvent_UnstableStar
{
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     GetLastEvent 	( .Actor:Self *Var[0] )
	Switch  *Var[0] 
		CaseOR  ==  .Event:HitCombo
		CaseOR  ==  .Event:Hit
			SetConst  *Var[0]  00000001 
			SetConst  *Var[1]  .AnimPainUS 
			ExecWait DoNormalHit 
		EndCaseGroup
		Case  ==  .Event:BurnHit
			SetConst  *Var[0]  00000001 
			SetConst  *Var[1]  .AnimPainUS 
			SetConst  *Var[2]  .AnimDeadUS 
			ExecWait DoBurnHit 
		Case  ==  .Event:BurnDeath
			SetConst  *Var[0]  00000001 
			SetConst  *Var[1]  .AnimPainUS 
			SetConst  *Var[2]  .AnimDeadUS 
			ExecWait DoBurnHit 
			Set *EnviroEffectsAux 00000003		%so you don't die at the last second :P
			SetConst  *Var[0]  00000001 
			SetConst  *Var[1]  .AnimDeadUS 
			ExecWait DoDeath 
			Return
		Case  ==  .Event:SpinSmashHit
			SetConst  *Var[0]  00000001 
			SetConst  *Var[1]  .AnimPainUS 
			ExecWait 8029B998 
		Case  ==  .Event:SpinSmashDeath
			SetConst  *Var[0]  00000001 
			SetConst  *Var[1]  .AnimPainUS 
			ExecWait 8029B998 
			Set *EnviroEffectsAux 00000003		%so you don't die at the last second :P
			SetConst  *Var[0]  00000001 
			SetConst  *Var[1]  .AnimPainUS 
			ExecWait DoDeath 
			Return
		Case  ==  .Event:ShockHit
			Call     PlaySoundAtActor 	( .Actor:Self 00000759 )
			SetConst  *Var[0]  00000001 
			SetConst  *Var[1]  .AnimPainUS 
			ExecWait DoShockHit 
			SetConst  *Var[0]  00000001 
			SetConst  *Var[1]  .AnimPainUS 
			ExecWait 8029BD70 
			ExecWait $Script_ReturnHome_UnstableStar 
		Case  ==  .Event:ShockDeath
			Call     PlaySoundAtActor 	( .Actor:Self 00000759 )
			SetConst  *Var[0]  00000001 
			SetConst  *Var[1]  .AnimPainUS 
			ExecWait DoShockHit 
			Set *EnviroEffectsAux 00000003		%so you don't die at the last second :P
			SetConst  *Var[0]  00000001 
			SetConst  *Var[1]  .AnimPainUS 
			ExecWait DoDeath 
			Return
		CaseOR  ==  00000017
		CaseOR  ==  .Event:Immune
		CaseOR  ==  .Event:AirLiftFailed
		CaseOR  ==  .Event:BurnTaunt
			SetConst  *Var[0]  00000001 
			SetConst  *Var[1]  .AnimIdleUS 
			ExecWait DoImmune 
		EndCaseGroup
		Case  ==  .Event:Death
			SetConst  *Var[0]  00000001 
			SetConst  *Var[1]  .AnimPainUS 
			ExecWait DoNormalHit 
			Set *EnviroEffectsAux 00000003		%so you don't die at the last second :P
			SetConst  *Var[0]  00000001 
			SetConst  *Var[1]  .AnimPainUS 
			ExecWait DoDeath 
			Return
		Case  ==  .Event:BeginFirstStrike
			Call     SetActorPos 	( .Actor:Self 00000014 00000000 00000000 )
			Call     HPBarToCurrent ( .Actor:Self )
		Case  ==  .Event:EndFirstStrike
			ExecWait $Script_ReturnHome_UnstableStar 
			Call     HPBarToHome 	( .Actor:Self )
		Case  ==  .Event:RecoverStatus
			SetConst  *Var[0]  00000001 
			SetConst  *Var[1]  .AnimIdleUS 
			ExecWait DoRecover 
		Case  ==  .Event:ScareAway
			SetConst  *Var[0]  00000001 
			SetConst  *Var[1]  .AnimRunUS 
			SetConst  *Var[2]  .AnimPainUS 
			ExecWait DoScareAway 
			Return
		Case  ==  .Event:BeginAirLift
			SetConst  *Var[0]  00000001 
			SetConst  *Var[1]  .AnimRunUS 
			ExecWait DoAirLift 
		Case  ==  .Event:BlowAway
			SetConst  *Var[0]  00000001 
			SetConst  *Var[1]  .AnimRunUS 
			ExecWait DoBlowAway 
			Return
		Case  ==  .Event:UpAndAway
		Default
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End
}

%AI: 
%very simple, does a very fast attack to yeet you

#new:Script $Script_TakeTurn_UnstableStar
{
	Call	UseIdleAnimation	( .Actor:Self .False )
	Call	EnableIdleScript	( .Actor:Self 00000000 )
	Call GetActorVar (.Actor:Self 00000001 *Var[F] )
	Add *VarF 1`
	Call SetActorVar (.Actor:Self 00000001 *Var[F] )
	Wait 	8`
	Call	GetActorPos ( .Actor:Self *Var0 *Var1 *Var2 )
	Call 	$Function_WhiteWave ( *Var0 *Var1 *Var2 )	
	Wait 	10`
	Call	SetTargetActor		( .Actor:Self .Actor:Player )
	Call	SetGoalToTarget 	( .Actor:Self )
	Call	EnemyTestTarget ( .Actor:Self *Var[0] 10000000 00000000 *Var[1] 00000010 )
	Switch  *Var[0] 
		CaseOR   ==  00000006 
		CaseOR   ==  00000005 
			If  *Var[0] == 00000005 
				Call	EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
			EndIf
			Goto	10
		EndCaseGroup
	EndSwitch
	Call GetActorVar (.Actor:Self 00000001 *Var[F] )
	Add *VarF 5`
	Call	EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 *VarF 00000020 ) %3 damage and hard to block	
	Label 	10
	Call	UseIdleAnimation	( .Actor:Self .True )
	Call	EnableIdleScript	( .Actor:Self 00000001 )
	Return
	End
}

#new:Function $Function_WhiteWave
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 1C (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 24 (SP)
   10:  SW        S2, 20 (SP)
   14:  SW        S0, 18 (SP)
   18:  LW        S0, C (S1)
   1C:  LW        A1, 0 (S0)
   20:  JAL       ~Func:get_variable
   24:  ADDIU     S0, S0, 4
   28:  LW        A1, 0 (S0)
   2C:  ADDIU     S0, S0, 4
   30:  COPY      A0, S1
   34:  JAL       ~Func:get_variable
   38:  COPY      S2, V0
   3C:  COPY      A0, S1
   40:  LW        A1, 0 (S0)
   44:  JAL       ~Func:get_variable
   48:  COPY      S0, V0
   4C:  LW        V1, AC (S1)
   50:  BNE       V1, R0, .o90
   54:  CLEAR     A0
   58:  MTC1      S2, F0
   5C:  NOP
   60:  CVT.S.W   F0, F0
   64:  MFC1      A1, F0
   68:  MTC1      S0, F0
   6C:  NOP
   70:  CVT.S.W   F0, F0
   74:  MFC1      A2, F0
   78:  MTC1      V0, F0
   7C:  NOP
   80:  CVT.S.W   F0, F0
   84:  MFC1      A3, F0
   88:  BEQ       R0, R0, .oC0
   8C:  LI        A0, 1
        .o90
   90:  MTC1      S2, F0
   94:  NOP
   98:  CVT.S.W   F0, F0
   9C:  MFC1      A1, F0
   A0:  MTC1      S0, F0
   A4:  NOP
   A8:  CVT.S.W   F0, F0
   AC:  MFC1      A2, F0
   B0:  MTC1      V0, F0
   B4:  NOP
   B8:  CVT.S.W   F0, F0
   BC:  MFC1      A3, F0
        .oC0
   C0:  JAL       80070B50
   C4:  SW        R0, 10 (SP)
		LW			V1, C (V0)
		ADDIU		A1, R0, F0			%R
		SB			A1, 50 (V1)
		LW			V1, C (V0)
		ADDIU		A1, R0, F0			%G
		SB			A1, 51 (V1)
		LW			V1, C (V0)
		ADDIU		A1, R0, F0			%B
		SB			A1, 52 (V1)
		LW			A0, C (V0)
		ADDIU		V1, R0, FF			%R 2
		SB			V1, 53 (A0)
		LW			A0, C (V0)
		ADDIU		V1, R0, FF			%G 2
		SB			V1, 54 (A0)
		LW			V1, C (V0)
		ADDIU		A1, R0, FF			%B 2
		SB			A1, 55 (V1)		
   C8:  LW        RA, 24 (SP)
   CC:  LW        S2, 20 (SP)
   D0:  LW        S1, 1C (SP)
   D4:  LW        S0, 18 (SP)
   D8:  LI        V0, 2
   DC:  JR        RA
   E0:  ADDIU     SP, SP, 28
}