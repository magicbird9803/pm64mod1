%New Enemy: Layzee Dayzee
%basically, these guys have vanilla crayzee dayzee stats (- sleep)
%so crayzee dayzees will have buffed stats

#new:DefenseTable $DefenseTable_Layzee
{
.Element:Normal 00000000
.Element:End
}

#new:StatusTable $StatusTable_Layzee
{
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep     100` %95 -> 100   lazy
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy      30`
.Status:Fear        0`
.Status:Static     50`
.Status:Paralyze   30`
.Status:Shrink     30`
.Status:Stop       30`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End
}

#new:PartsTable $PartsTable_Layzee
{
00800000 01000000 FE1E00FF $IdleAnimations_Layzee $DefenseTable_Layzee 00000000 00000000 00F80000 00000000 
}

#new:Actor $LayzeeDayzee
{
% stats
[Index]        D7b 
[Level]        12`b %around the same as other chapter 3 enemies 
[MaxHP]         8`b %used to be regular dayzee max health 
[Coins]         1`b 
[Flags]       00000000 
[StatusTable] $StatusTable_Layzee 
% ai
[PartsCount]   1`s 
[PartsTable] $PartsTable_Layzee 
[Script]      $Script_Init_Layzee 
% move effectiveness
[Escape]      100`b %they're not gonna follow you 
[Item]        100`b 
[AirLift]      85`b 
[Hurricane]    80`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  75`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         32`b  34`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -14`b  17`b % dx dy
[StatusIcon]    9`b  25`b % dx dy
}

%regular dayzees = 48
%layzee = EB
#new:IdleAnimations $IdleAnimations_Layzee %$IdleAnimations_8021D8A4
{
.Status:Normal    00EB0001
.Status:Stone     00EB0000
.Status:Sleep     00EB000C
.Status:Poison    00EB0001
.Status:Stop      00EB0000
.Status:Static    00EB0001
.Status:Paralyze  00EB0000
.Status:Dizzy     00EB000B
.Status:Fear      00EB000B
.Status:End
}

#new:Script $Script_Init_Layzee %$Script_Init_8021D8F0
{
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_Layzee )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_Layzee )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_Layzee )
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_Layzee %$Script_Idle_8021D93C
{
    0:  Return
    8:  End
}

#new:Script $Script_Layzee_8021D94C %$Script_8021D94C
{
    0:  SetConst  *Var[0]  00000001 
   10:  SetConst  *Var[1]  00EB0003 
   20:  ExecWait DoReturnHome 
   2C:  Return
   34:  End
}

#new:Script $Script_HandleEvent_Layzee %$Script_HandleEvent_8021D988
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     GetLastEvent 	( .Actor:Self *Var[0] )
   28:  Switch  *Var[0] 
   34:  	CaseOR  ==  .Event:HitCombo
   40:  	CaseOR  ==  .Event:Hit
   4C:  		SetConst  *Var[0]  00000001 
   5C:  		SetConst  *Var[1]  00EB0008 
   6C:  		ExecWait DoNormalHit 
   78:  	EndCaseGroup
   80:  	Case  ==  .Event:BurnHit
   8C:  		SetConst  *Var[0]  00000001 
   9C:  		SetConst  *Var[1]  00EB0009 
   AC:  		SetConst  *Var[2]  00EB000A 
   BC:  		ExecWait DoBurnHit 
   C8:  	Case  ==  .Event:BurnDeath
   D4:  		SetConst  *Var[0]  00000001 
   E4:  		SetConst  *Var[1]  00EB0009 
   F4:  		SetConst  *Var[2]  00EB000A 
  104:  		ExecWait DoBurnHit 
  110:  		SetConst  *Var[0]  00000001 
  120:  		SetConst  *Var[1]  00EB000A 
  130:  		ExecWait DoDeath 
  13C:  		Return
  144:  	Case  ==  .Event:SpinSmashHit
  150:  		SetConst  *Var[0]  00000001 
  160:  		SetConst  *Var[1]  00EB0008 
  170:  		ExecWait 8029B998 
  17C:  	Case  ==  .Event:SpinSmashDeath
  188:  		SetConst  *Var[0]  00000001 
  198:  		SetConst  *Var[1]  00EB0008 
  1A8:  		ExecWait 8029B998 
  1B4:  		SetConst  *Var[0]  00000001 
  1C4:  		SetConst  *Var[1]  00EB0008 
  1D4:  		ExecWait DoDeath 
  1E0:  		Return
  1E8:  	Case  ==  .Event:ShockHit
  1F4:  		SetConst  *Var[0]  00000001 
  204:  		SetConst  *Var[1]  00EB0008 
  214:  		ExecWait DoShockHit 
  220:  		SetConst  *Var[0]  00000001 
  230:  		SetConst  *Var[1]  00EB0008 
  240:  		ExecWait DoJumpBack 
  24C:  		ExecWait $Script_Layzee_8021D94C 
  258:  	Case  ==  .Event:ShockDeath
  264:  		SetConst  *Var[0]  00000001 
  274:  		SetConst  *Var[1]  00EB0008 
  284:  		ExecWait DoShockHit 
  290:  		SetConst  *Var[0]  00000001 
  2A0:  		SetConst  *Var[1]  00EB0008 
  2B0:  		ExecWait DoDeath 
  2BC:  		Return
  2C4:  	CaseOR  ==  00000017
  2D0:  	CaseOR  ==  .Event:Immune
  2DC:  	CaseOR  ==  .Event:AirLiftFailed
  2E8:  		SetConst  *Var[0]  00000001 
  2F8:  		SetConst  *Var[1]  00EB0001 
  308:  		ExecWait DoImmune 
  314:  	EndCaseGroup
  31C:  	Case  ==  .Event:Death
  328:  		SetConst  *Var[0]  00000001 
  338:  		SetConst  *Var[1]  00EB0008 
  348:  		ExecWait DoNormalHit 
  354:  		Wait     0000000A 
  360:  		SetConst  *Var[0]  00000001 
  370:  		SetConst  *Var[1]  00EB0008 
  380:  		ExecWait DoDeath 
  38C:  		Return
  394:  	Case  ==  .Event:RecoverStatus
  3A0:  		SetConst  *Var[0]  00000001 
  3B0:  		SetConst  *Var[1]  00EB0001 
  3C0:  		ExecWait DoRecover 
  3CC:  	Case  ==  .Event:ScareAway
  3D8:  		SetConst  *Var[0]  00000001 
  3E8:  		SetConst  *Var[1]  00EB0004 
  3F8:  		SetConst  *Var[2]  00EB0008 
  408:  		ExecWait DoScareAway 
  414:  		Return
  41C:  	Case  ==  .Event:BeginAirLift
  428:  		SetConst  *Var[0]  00000001 
  438:  		SetConst  *Var[1]  00EB0004 
  448:  		ExecWait DoAirLift 
  454:  	Case  ==  .Event:BlowAway
  460:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  474:  		If  *Var[0]  !&  0035D000 
  484:  			If  *Var[0]  &  00080000 
  494:  				Call     SetActorDispOffset ( FFFFFF81 00000000 00000001 00000000 )
  4B0:  			Else
  4B8:  				Call     SetActorDispOffset ( FFFFFF81 00000000 00000003 00000000 )
  4D4:  			EndIf
  4DC:  		EndIf
  4E4:  		SetConst  *Var[0]  00000001 
  4F4:  		SetConst  *Var[1]  00EB0008 
  504:  		ExecWait DoBlowAway 
  510:  		Return
  518:  	Default
  520:  EndSwitch
  528:  Call     UseIdleAnimation 	( .Actor:Self .True )
  53C:  Return
  544:  End
}

#new:Script $Script_Layzee_Sing
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   % 28:  Call     GetBattlePhase ( *Var[0] )
   %layzee dayzees are too lazy to move out of their normal spots, so no movement code
   % 38:  If  *Var[0]  ==  .Phase:FirstStrike
   % 48:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   % 64:  	Call     SetActorPos 	( .Actor:Self FFFFFFEC *Var[1] *Var[2] )
   % 80:  Else
   % 88:  	Call     UseBattleCamPreset 	( 0000003F )
   % 98:  	Call     BattleCamTargetActor ( .Actor:Self )
   % A8:  	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   % C0:  	Call     MoveBattleCamOver 	( 00000046 )
   % D0:  	Set  *Flag[00]  00000000 
   % E0:  	Label    00000000 
   % EC:  	If  *Flag[00]  ==  00000000 
   % FC:  		Call     SetAnimation 	( .Actor:Self 00000001 00EB000E )
  % 114:  		Set  *Flag[00]  00000001 
  % 124:  	Else
  % 12C:  		Call     SetAnimation 	( .Actor:Self 00000001 00EB000F )
  % 144:  		Set  *Flag[00]  00000000 
  % 154:  	EndIf
  % 15C:  	Wait     00000001 
  % 168:  	Call     SetActorJumpGravity 	( .Actor:Self *Fixed[0.5] )
  % 17C:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  % 198:  	Sub  *Var[0]  00000014 
  % 1A8:  	Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  % 1C4:  	Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  % 1E4:  	If  *Var[0]  >  00000000 
  % 1F4:  		Goto     00000000 
  % 200:  	EndIf
  % 208:  	If  *Flag[00]  ==  00000000 
  % 218:  		Call     SetAnimation 	( .Actor:Self 00000001 00EB000E )
  % 230:  		Set  *Flag[00]  00000001 
  % 240:  	Else
  % 248:  		Call     SetAnimation 	( .Actor:Self 00000001 00EB000F )
  % 260:  		Set  *Flag[00]  00000000 
  % 270:  	EndIf
  % 278:  	Wait     00000001 
  % 284:  	Call     SetActorJumpGravity 	( .Actor:Self *Fixed[0.5] )
  % 298:  	Call     SetGoalPos 	( .Actor:Self FFFFFFDD 00000000 0000000A )
  % 2B4:  	Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  % 2D4:  EndIf
  % 2DC:  Call     SetAnimation 	( .Actor:Self 00000001 00EB0001 )
  2F4:  Wait     0000000A 
  300:  Thread
  308:  	Call     SetAnimation 	( .Actor:Self 00000001 00EB0006 )
  320:  	Wait     00000028 
  32C:  	Call     SetAnimation 	( .Actor:Self 00000001 00EB0007 )
  344:  EndThread
  34C:  Wait     00000014 
  358:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:DayzeeSong )
  36C:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  388:  Add  *Var[1]  00000019 
  398:  Add  *Var[2]  00000002 
  3A8:  Loop     00000008 %D -> 8 (less notes, they don't put effort into their songs)
  3B4:  	Call     RandInt     	( 0000001E *Var[3] )
  3C8:  	Sub  *Var[3]  0000000F 
  3D8:  	Add  *Var[3]  *Var[0] 
  3E8:  	Call     PlayEffect  	( ~FX:MusicNote:Left *Var[3] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  42C:  	Wait     0000000A 
  438:  EndLoop
  440:  Call     SetAnimation 	( .Actor:Self 00000001 00EB0001 )
  458:  Wait     00000005 %A -> 5 (mirrors dayzee change)
  464:  Call     EnemyTestTarget ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  488:  Switch  *Var[0] 
  494:  	CaseOR  ==  00000006 
  4A0:  	CaseOR  ==  00000005 
  4AC:  		Set  *Var[A]  *Var[0] 
  4BC:  		If  *Var[A]  ==  00000005 
  4CC:  			Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  4F0:  		EndIf
  4F8:  		Call     UseBattleCamPreset 	( 00000002 )
  508:  		Wait     0000000F 
  514:  		Call     YieldTurn   	( )
  520:  		Call     SetActorYaw 	( .Actor:Self 000000B4 )
  534:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  550:  		ExecWait $Script_Layzee_8021D94C 
  55C:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  574:  		Call     SetActorYaw 	( .Actor:Self 00000000 )
  588:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  59C:  		Return
  5A4:  	EndCaseGroup
  5AC:  EndSwitch
  5B4:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
  5C8:  Call     SetGoalToTarget 	( .Actor:Self )
  5D8:  Wait     00000002 
  5E4:  Call     EnemyDamageTarget 	( .Actor:Self *Var[F] 10000000 00000000 80001101 00000004 00000020 ) %20% sleep -> 1% sleep (imagine if someone gets that 1% though)
  60C:  Switch  *Var[F] 
  618:  	CaseOR  ==  00000000 
  624:  	CaseOR  ==  00000002 
  630:  		Call     UseBattleCamPreset 	( 00000002 )
  640:  		Call     MoveBattleCamOver 	( 0000000A )
  650:  		Wait     00000014 
  65C:  		Call     YieldTurn   	( )
  668:  		ExecWait $Script_Layzee_8021D94C 
  674:  	EndCaseGroup
  67C:  EndSwitch
  684:  Call     UseIdleAnimation 	( .Actor:Self .True )
  698:  Return
  6A0:  End
}

#new:Script $Script_Layzee_RunAway
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     UseBattleCamPreset 	( 00000013 )
   24:  Call     SetBattleCamZoom  	( 0000012C )
   34:  Call     SetBattleCamOffsetZ 	( 0000001E )
   44:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   60:  Sub  *Var[0]  00000014 
   70:  Call     SetBattleCamTarget 	( *Var[0] *Var[1] *Var[2] )
   88:  Call     MoveBattleCamOver 	( 0000001E )
   98:  Call     SetActorYaw 	( .Actor:Self 000000B4 )
   AC:  Call     SetAnimation 	( .Actor:Self 00000001 00EB0003 )
   C4:  Wait     0000000A 
   D0:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   EC:  Call     SetActorSpeed 	( .Actor:Self *Fixed[1.0] )
  100:  Sub  *Var[0]  00000014 
  110:  Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  12C:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  144:  Wait     00000014 
  150:  Call     UseBattleCamPreset 	( 00000002 )
  160:  Call     EnableActorBlur 	( .Actor:Self 00000001 )
  174:  Call     SetAnimation 	( .Actor:Self 00000001 00EB0004 )
  18C:  Call     SetActorSpeed 	( .Actor:Self *Fixed[12.0] )
  1A0:  Add  *Var[0]  000000C8 
  1B0:  Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1CC:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  1E4:  Call     EnableActorBlur 	( .Actor:Self 00000000 )
  1F8:  Call     SetBattleFlagBits 	( 00040000 .True )
  20C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  220:  Call     RemoveActor 	( .Actor:Self )
  230:  Return
  238:  End
}

#new:Script $Script_TakeTurn_Layzee %$Script_TakeTurn_8021E7BC
{
    0:  Call     GetBattlePhase ( *Var[0] )
   10:  If  *Var[0]  ==  .Phase:FirstStrike
   20:  	ExecWait $Script_Layzee_Sing 
   2C:  	Return
   34:  EndIf
   3C:  Call     GetActorHP  	( .Actor:Self *Var[0] )
   50:  Call     RandInt     	( 00000064 *Var[1] )
   64:  Switch  *Var[0] 
   70:  	Case  ==  00000001 
   7C:  		If  *Var[1]  <  0000000C %50 -> 12 
   8C:  			ExecWait $Script_Layzee_RunAway 
   98:  			Return
   A0:  		EndIf
   A8:  	Case  ==  00000002 
   B4:  		If  *Var[1]  <  00000008 %28 -> 8 
   C4:  			ExecWait $Script_Layzee_RunAway 
   D0:  			Return
   D8:  		EndIf
   E0:  	Case  ==  00000003 
   EC:  		If  *Var[1]  <  00000004 %14 -> 4
   FC:  			ExecWait $Script_Layzee_RunAway 
  108:  			Return
  110:  		EndIf
  150:  EndSwitch
  158:  ExecWait $Script_Layzee_Sing 
  164:  Return
  16C:  End
}