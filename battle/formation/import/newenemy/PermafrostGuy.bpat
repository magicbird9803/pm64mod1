%sprite ED palette 1
%pyro guy is sprite 3E

#new:IdleAnimations $IdleAnimations_PermafrostGuy %$IdleAnimations_8022CB00
{
.Status:Normal    00ED0101
.Status:Stone     00ED0100
.Status:Sleep     00ED0107
.Status:Poison    00ED0101
.Status:Stop      00ED0100
.Status:Static    00ED0101
.Status:Paralyze  00ED0100
.Status:Dizzy     00ED0108
.Status:Fear      00ED0108
.Status:End
}

#new:DefenseTable $DefenseTable_PermafrostGuy %$DefenseTable_8022CB4C
{
.Element:Normal 00000003
.Element:Water  0000000C %you CAN get through this with a 13 damage tidal wave, but why?
.Element:Ice    00000063 %why would you try this?
.Element:Fire   00000063 %not gonna work
.Element:Shock  00000063 %ice is a bad conductor
.Element:Blast  00000063 %nope
.Element:End
}

#new:StatusTable $StatusTable_PermafrostGuy %status chances are only 25%, so you can't statuslock him like the others without extreme status spam + rng
{											%	^	Now that 1-50 acts as "1 use", I have to make all the status chances 0 to stop you from statusing him
.Status:Normal      0`						%not that it would stop you from dying to the 6 turn time limit
.Status:Default     0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy       0`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze    0` 
.Status:Shrink      0`
.Status:Stop       25`
.Status:DefaultTurnMod   -2`
.Status:SleepTurnMod     -2`
.Status:PoisonTurnMod    -2`
.Status:FrozenTurnMod    -2`
.Status:DizzyTurnMod     -2`
.Status:FearTurnMod      -2`
.Status:StaticTurnMod    -2`
.Status:ParalyzeTurnMod  -2`
.Status:ShrinkTurnMod    -2`
.Status:StopTurnMod      -2`
.Status:End
}

#new:PartsTable $PartsTable_PermafrostGuy
{
00800000 01000000 001800FF $IdleAnimations_PermafrostGuy $DefenseTable_PermafrostGuy 00000008 00000000 FFF60000 00000000 
}

#new:Actor $PermafrostGuy
{
% stats
[Index]        EFb 
[Level]        58`b 
[MaxHP]        50`b 
[Coins]         1`b 
[Flags]       00000000 
[StatusTable] $StatusTable_PermafrostGuy 
% ai
[PartsCount]   1`s 
[PartsTable] $PartsTable_PermafrostGuy 
[Script]      $Script_Init_PermafrostGuy 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]   3`b 
[SpinSmash]     3`b % weight (0-4)
% ui positions
[Size]         28`b  36`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_PermafrostGuy
{
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_PermafrostGuy )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_PermafrostGuy )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_PermafrostGuy )
		Call	 BindNextTurn (.Actor:Self $Script_NextTurn_PermafrostGuy )
		Call	 SetActorVar ( .Actor:Self 00000001 00000000 ) %used for time limit stuff
		Call	 SetActorVar ( .Actor:Self 00000002 00000000 ) %bonus var for special quick text
		Set *EnviroEffectsAux 1 %the 6 turn time limit would be insane with the attack reduction effect
   3C:  Return
   44:  End
}

#new:Script $Script_NextTurn_PermafrostGuy
{
Call     GetBattlePhase ( *Var[0] )
Switch   *Var[0] 
	Case == .Phase:PlayerBegin
		Switch *GameByte[00B]
			Case == 00000000 %show the start text, but show some cool effects too
				Call     PlaySoundAtActor 	( .Actor:Self 0000035D )
				Thread
					%Loop 15`
						Call PlayEffect ( 00000045 00000000 30` ) %according to effects.txt, 100 is a lot
					%	Wait 3`
					%EndLoop
				EndThread
				Wait     00000035 %hope this is the right timing
				Call     StopSound ( 0000035D )
				Call	$ShowCustomMessage	( 002F0041 90` ) %the "intense cold" start text
			Case == 00000001 %5 turns left
				Call	$ShowCustomMessage	( 002F002E 90` ) 
			Case == 00000003 %3 turns left
				Call	$ShowCustomMessage	( 002F002F 90` ) 
			Case == 00000005 %1 turn left
				Call	$ShowCustomMessage	( 002F0030 90` ) 
			Case > 00000005 %oof
				Call	 SetTargetActor (.Actor:Self .Actor:Partner )
				Call     SetGoalToTarget 	( .Actor:Self )
				Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 1A000008 00000000 80004964 00000004 00000020 ) %9 turn freeze
				Wait	 2`
				Call	 SetTargetActor (.Actor:Self .Actor:Player )
				Call     SetGoalToTarget 	( .Actor:Self )
				Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 1A000008 00000000 80004964 00000004 00000020 ) %9 turn freeze
				Call	 SetActorVar ( .Actor:Self 00000001 00000001 ) %activate anti-cheat
		EndSwitch
EndSwitch
Return
End
}

#new:Script $Script_Idle_PermafrostGuy
{
    0:  Label    00000000 
    C:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
   20:  If  *Var[0]  &  00001000 
   30:  	Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFC 0000000E )
   4C:  	Call     8027D4C8 ( FFFFFF81 00000001 00000000 00000000 )
   68:  	Call     $Function_80218EE0_PG ( FFFFFFF6 0000000D 0000000A 0000000D )
   84:  Else
   8C:  	Call     SetTargetOffset 	( .Actor:Self 00000001 00000000 00000018 )
   A8:  	Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFF FFFFFFF6 )
   C4:  	Call     $Function_80218EE0_PG ( FFFFFFF6 00000014 0000000A 00000014 )
   E0:  EndIf
   E8:  Wait     00000001 
   F4:  Goto     00000000 
  100:  Return
  108:  End
}

#new:Script $Script_8022CDDC_PermafrostGuy
{
    0:  Call     SetActorSounds ( FFFFFF81 00000000 000020BA 000003B4 )
   1C:  Call     SetActorSounds ( FFFFFF81 00000004 0000000A 00000000 )
   38:  SetConst  *Var[0]  00000001 
   48:  SetConst  *Var[1]  00ED0104 
   58:  SetConst  *Var[2]  00ED0101 
   68:  ExecWait DoReturnHome 
   74:  Return
   7C:  End
}

#new:Script $Script_HandleEvent_PermafrostGuy
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     GetLastEvent 	( .Actor:Self *Var[0] )
   28:  Switch  *Var[0] 
   34:  	CaseOR  ==  .Event:HitCombo
   40:  	CaseOR  ==  .Event:Hit
   4C:  		SetConst  *Var[0]  00000001 
   5C:  		SetConst  *Var[1]  00ED0106 
   6C:  		ExecWait DoNormalHit 
   78:  	EndCaseGroup
   80:  	Case  ==  .Event:BurnHit
   8C:  		SetConst  *Var[0]  00000001 
   9C:  		SetConst  *Var[1]  00ED0106 
   AC:  		SetConst  *Var[2]  FFFFFFFF 
   BC:  		ExecWait DoBurnHit 
   C8:  	Case  ==  .Event:BurnDeath
   D4:  		SetConst  *Var[0]  00000001 
   E4:  		SetConst  *Var[1]  00ED0106 
   F4:  		SetConst  *Var[2]  FFFFFFFF 
  104:  		ExecWait DoBurnHit 
  110:  		SetConst  *Var[0]  00000001 
  120:  		SetConst  *Var[1]  00ED0106 
  130:  		ExecWait DoDeath 
  13C:  		Return
  144:  	Case  ==  .Event:SpinSmashHit
  150:  		SetConst  *Var[0]  00000001 
  160:  		SetConst  *Var[1]  00ED0106 
  170:  		ExecWait 8029B998 
  17C:  	Case  ==  .Event:SpinSmashDeath
  188:  		SetConst  *Var[0]  00000001 
  198:  		SetConst  *Var[1]  00ED0106 
  1A8:  		ExecWait 8029B998 
  1B4:  		SetConst  *Var[0]  00000001 
  1C4:  		SetConst  *Var[1]  00ED0106 
  1D4:  		ExecWait DoDeath 
  1E0:  		Return
  1E8:  	Case  ==  .Event:ShockHit
  1F4:  		SetConst  *Var[0]  00000001 
  204:  		SetConst  *Var[1]  00ED0106 
  214:  		ExecWait DoShockHit 
  220:  		SetConst  *Var[0]  00000001 
  230:  		SetConst  *Var[1]  00ED0106 
  240:  		ExecWait DoJumpBack 
  24C:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  260:  		ExecWait $Script_8022CDDC_PermafrostGuy
  26C:  	Case  ==  .Event:ShockDeath
  278:  		SetConst  *Var[0]  00000001 
  288:  		SetConst  *Var[1]  00ED0106 
  298:  		ExecWait DoShockHit 
  2A4:  		SetConst  *Var[0]  00000001 
  2B4:  		SetConst  *Var[1]  00ED0106 
  2C4:  		ExecWait DoDeath 
  2D0:  		Return
  2D8:  	CaseOR  ==  00000017
  2E4:  	CaseOR  ==  .Event:Immune
  2F0:  	CaseOR  ==  .Event:AirLiftFailed
  2FC:  		SetConst  *Var[0]  00000001 
  30C:  		SetConst  *Var[1]  00ED0101 
  31C:  		ExecWait DoImmune 
  328:  	EndCaseGroup
  330:  	Case  ==  .Event:Death
  33C:  		SetConst  *Var[0]  00000001 
  34C:  		SetConst  *Var[1]  00ED0106 
  35C:  		ExecWait DoNormalHit 
  368:  		SetConst  *Var[0]  00000001 
  378:  		SetConst  *Var[1]  00ED0106 
  388:  		ExecWait DoDeath 
  394:  		Return
  39C:  	Case  ==  .Event:RecoverStatus
  3A8:  		SetConst  *Var[0]  00000001 
  3B8:  		SetConst  *Var[1]  00ED0101 
  3C8:  		ExecWait DoRecover 
  3D4:  	Case  ==  .Event:ScareAway
  3E0:  		SetConst  *Var[0]  00000001 
  3F0:  		SetConst  *Var[1]  00ED0103 
  400:  		SetConst  *Var[2]  00ED0109 
  410:  		ExecWait DoScareAway 
  41C:  		Return
  424:  	Case  ==  .Event:BeginAirLift
  430:  		SetConst  *Var[0]  00000001 
  440:  		SetConst  *Var[1]  00ED0103 
  450:  		ExecWait DoAirLift 
  45C:  	Case  ==  .Event:BlowAway
  468:  		SetConst  *Var[0]  00000001 
  478:  		SetConst  *Var[1]  00ED0103 
  488:  		ExecWait DoBlowAway 
  494:  		Return
  49C:  	Case  ==  .Event:UpAndAway
  4A8:  		Return
  4B0:  	Default
  4B8:  EndSwitch
  4C0:  Call     UseIdleAnimation 	( .Actor:Self .True )
  4D4:  Return
  4DC:  End
}

#new:Script $Script_TakeTurn_PermafrostGuy %his attack is the weakest of the anti five but the time limit and freeze turns mean that it is still a challenge to kill him
		/%
   		If (*Var[1] == 1`)
			Call     GetStatusFlags ( .Actor:Player *Var[0] )
			If  *Var[0]  !&  00004000 
			EndIf
		EndIf
		%/
{
		Call	 GetActorVar ( .Actor:Self 00000001 *Var[1] )
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   28:  Call     UseBattleCamPreset 	( 0000003F )
   38:  Call     BattleCamTargetActor ( .Actor:Self )
   48:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   60:  Call     SetAnimation 	( .Actor:Self 00000001 00ED0103 )
   78:  Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
   8C:  Call     SetGoalToTarget 	( .Actor:Self )
   9C:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   B8:  Add  *Var[0]  00000046 
   C8:  Set  *Var[1]  00000000 
   D8:  Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   F4:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  10C:  Call     SetActorSounds ( FFFFFF81 00000000 000020BA 000003B4 )
  128:  Call     SetActorSounds ( FFFFFF81 00000004 0000000A 00000000 )
  144:  Call     SetAnimation 	( .Actor:Self 00000001 00ED0104 )
  15C:  Call     SetActorSpeed 	( .Actor:Self *Fixed[10.0] ) %slick
  170:  Call     SetGoalToTarget 	( .Actor:Self )
  180:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  19C:  Add  *Var[0]  00000034 
  1AC:  Set  *Var[1]  00000000 
  1BC:  Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1D8:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
		Sub  *Var[0]  00000020 
		Set  *Var[1]  00000000 
		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
		Call     SetActorSpeed 	( .Actor:Self *Fixed[20.0] ) %slick
		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  1F0:  Call     EnemyTestTarget ( .Actor:Self *Var[0] 10000000 00000000 00000001 00000010 )
  214:  Switch  *Var[0] 
  220:  	CaseOR  ==  00000006 
  22C:  	CaseOR  ==  00000005 
  238:  		Set  *Var[A]  *Var[0] 
  %248:  		Call     SetActorSounds ( FFFFFF81 00000002 000002EF 00000000 )
  264:  		Call     SetAnimation 	( .Actor:Self 00000001 00ED0105 )
  27C:  		Call     SetGoalToTarget 	( .Actor:Self )
  28C:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  2A4:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[9.0] ) %slick
  2B8:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[0.5] )
  2CC:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2E8:  		Sub  *Var[0]  0000001E 
  2F8:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  314:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  334:  		If  *Var[A]  ==  00000005 
  344:  			Call     EnemyTestTarget ( .Actor:Self *Var[A] 80000000 00000000 00000000 00000000 )
  368:  		EndIf
  370:  		Call     8026F6EC ( FFFFFF81 )
  380:  		Sub  *Var[0]  00000014 
  390:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3AC:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  3CC:  		Wait     0000000F 
  3D8:  		Call     UseBattleCamPreset 	( 00000002 )
  3E8:  		Call     YieldTurn   	( )
  3F4:  		Call     SetActorYaw 	( .Actor:Self 000000B4 )
  408:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  424:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  438:  		ExecWait $Script_8022CDDC_PermafrostGuy 
  444:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  45C:  		Call     SetActorYaw 	( .Actor:Self 00000000 )
  470:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  484:  		Return
  48C:  	EndCaseGroup
  494:  EndSwitch
  49C:  Call     PlaySoundAtActor 	( .Actor:Self 000002EF )
  4B0:  Call     SetAnimation 	( .Actor:Self 00000001 00ED0105 )
  4C8:  Call     SetGoalToTarget 	( .Actor:Self )
  4D8:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4F4:  Add  *Var[0]  0000000A 
  504:  Set  *Var[1]  00000000 
  514:  Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  530:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  548:  Wait     00000002 
  554:  Call     SetGoalToTarget 	( .Actor:Self )
  564:  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000008 00000000 80004264 00000008 00000020 ) %8 damage with 2 freeze turns (thats 1/4 of your time remaining!)	
  58C:  Switch  *Var[0] 
  598:  	CaseOR  ==  00000000 
  5A4:  	CaseOR  ==  00000002 
  5B0:  		Call     8026F6EC ( FFFFFF81 )
  5C0:  		Call     UseBattleCamPreset 	( 00000002 )
  5D0:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  5EC:  		Add  *Var[0]  0000001E 
  5FC:  		Set  *Var[1]  00000000 
  60C:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.8007812] )
  620:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  63C:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  65C:  		Call     SetAnimation 	( .Actor:Self 00000001 00ED0101 )
  674:  		Wait     00000008 
  680:  		Call     YieldTurn   	( )
  68C:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  6A0:  		ExecWait $Script_8022CDDC_PermafrostGuy
  6AC:  	EndCaseGroup
  6B4:  EndSwitch
  6BC:  Call     UseIdleAnimation 	( .Actor:Self .True )
  6D0:  Return
  6D8:  End
}

#new:Function $Function_80218EE0_PG
{
    0:  ADDIU		SP, SP, FFD8
    4:  SW			S1, 14 (SP)
    8:  COPY		S1, A0
    C:  SW			RA, 20 (SP)
   10:  SW			S3, 1C (SP)
   14:  SW			S2, 18 (SP)
   18:  SW			S0, 10 (SP)
   1C:  LW			S0, C (S1)
   20:  LW			A1, 0 (S0)
   24:  JAL			~Func:get_variable
   28:  ADDIU		S0, S0, 4
   2C:  LW			A1, 0 (S0)
   30:  ADDIU		S0, S0, 4
   34:  COPY		A0, S1
   38:  JAL			~Func:get_variable
   3C:  COPY		S3, V0
   40:  LW			A1, 0 (S0)
   44:  ADDIU		S0, S0, 4
   48:  COPY		A0, S1
   4C:  JAL			~Func:get_variable
   50:  COPY		S2, V0
   54:  COPY		A0, S1
   58:  LW			A1, 0 (S0)
   5C:  JAL			~Func:get_variable
   60:  COPY		S0, V0
   64:  LW			A0, 148 (S1)
   68:  JAL			~Func:get_actor
   6C:  COPY		S1, V0
   70:  COPY		V1, V0
   74:  LW			V0, 8 (V1)
   78:  LBU			V0, 24 (V0)
   7C:  LW			A0, 8 (V1)
   80:  SUBU		S3, S3, V0
   84:  SB			S3, 194 (V1)
   88:  LBU			V0, 25 (A0)
   8C:  SUBU		S2, S2, V0
   90:  SB			S2, 195 (V1)
   94:  LBU			V0, 26 (A0)
   98:  SUBU		S0, S0, V0
   9C:  SB			S0, 196 (V1)
   A0:  LBU			A0, 27 (A0)
   A4:  SUBU		S1, S1, A0
   A8:  SB			S1, 197 (V1)
   AC:  LW			RA, 20 (SP)
   B0:  LW			S3, 1C (SP)
   B4:  LW			S2, 18 (SP)
   B8:  LW			S1, 14 (SP)
   BC:  LW			S0, 10 (SP)
   C0:  ADDIU		V0, R0, 2
   C4:  JR			RA
   C8:  ADDIU		SP, SP, 28
}