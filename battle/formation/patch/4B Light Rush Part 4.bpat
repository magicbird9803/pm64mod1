/%
	The final fight!
		Room 6
			Light queen
				Peach sprites
				300 hp, 0 def
				3 phases for each 100 hp
				200-300 hp
					Attacks normally
										
					Kiss attack
						Normal damage
						8 atk
					Prismatic lightning (weak version)
						Shoots magenta, yellow and cyan lightning to hit you (one hit)
						7 atk
					White beam (weak)
						Hits you and partner
						12 atk / 2
				100-200 hp
					More aggressive, spawns 1 light guardian
					
					White fire
						Relatively small but does damage
						12 atk (+ 1 defense down)
					Prismatic lightning (triple version)
						Shoots magenta, yellow and cyan lightning to hit you (fast triple hit)
						6x3 atk
					Rainbow beam (weak)
						Hits you and partner
						16 atk / 3
				0-100 hp
					More aggressive, spawns 2 light guardians

					Prismatic fire
						Big cloud (+ 2 defense down)
						16 atk
					Prismatic lightning (strong version)
						Now shoots red, yellow, green, blue, cyan, magenta
						Each bolt gives 2 turns of a status	
							stop, paralyze, poison, sleep, frozen, dizzy
						5x6 atk
					Rainbow beam (weak)
						Hits you and partner						
						20 atk / 3
			Light guardians
				75 hp, 2 def, (8x3 or 12 or 9/2) atk
				Counter attacks if you hit light queen
				LightGuardian AI
				They shoot lasers instead of attacking normally
					8x3
					12
					9/3 (+1 atk and def per turn)
%/

#new:Script $Script_80234100
{
		Call	EnableModel		( 00000007 .False )
		Call	EnableModel		( 00000008 .False )
		Call	EnableModel		( 00000009 .False )
		Call	EnableModel		( 0000000A .False )
		Call	EnableModel		( 0000000B .False )		
		Call	EnableModel		( 0000000C .False )		
		Switch *PitFloor
			Case == 1`
				Call	EnableModel		( 00000007 .True )		
			Case == 2`
				Call	EnableModel		( 00000008 .True )		
			Case == 3`
				Call	EnableModel		( 00000009 .True )		
			Case == 4`
				Call	EnableModel		( 0000000A .True )		
			Case == 5`
				Call	EnableModel		( 0000000B .True )		
			Case == 6`
				Call	EnableModel		( 0000000C .True )		
		EndSwitch		
    0:  Set   *VarA  *Var0
   10:  Call  SetTexPanner  ( *VarA 00000001 )
   24:  Set   *Var0  00000000
   34:  Set   *Var1  00000000
   44:  Loop
   50:  	Call  SetTexPanOffset   ( 00000001 00000000 *Var0 *Var1 )
			Mul   *Var1 -1`
			Call  SetTexPanOffset   ( 00000001 00000000 *Var0 *Var1 )
			Mul   *Var1 -1`
   6C:  	Add   *Var0  00000240
   7C:  	Add   *Var1  00000240
   8C:  	Wait  5`
   98:  EndLoop
   A0:  Return
   A8:  End
}

#new:Stage $Stage_LightRush
{
"hos_tex"
"hal_b01_shape"
"hal_b01_hit"
$Script_BeforeBattle_Hall
$Script_AfterBattle_Hall
00000000 
00000000 
00000000 
00000000 
00000000 
}

#new:Script $Script_BeforeBattle_Hall
{
	Thread
		Set   *Var0  00000005
		Exec  $Script_80234100
	EndThread
	Return
	End
}

#new:Script $Script_AfterBattle_Hall
{
	Return
	End
}

#new:StageTable $StageTable
{
"hal_01" $Stage_LightRush
00000000 00000000 
}

#new:FormationTable $FormationTable
{
00000000 00000001 $Formation_00 $Stage_LightRush 00000000
00000000 00000001 $Formation_01 $Stage_LightRush 00000000
00000000 00000000 00000000 00000000 00000000 % unused
}


#new:Formation $Formation_00
{
$QueenOfLight 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_01
{
$LightGuardian 00000001 0000000A 00000000 00000000 00000000 00000000
}



%Queen of light

%Real final boss of the mod

%Get good


#define .AnimWalk	00D6091B
#define .AnimRun	00D60909
#define .AnimStop	00D60900
#define .AnimIdle	00D6091A
#define .AnimPoison	00D6091A
#define .AnimPain	00D60906
#define .AnimDizzy	00D60904
#define .AnimDead	00D60907
#define .AnimSleep  00D60907
#define .AnimBurn   00D60906
#define .AnimBurn2  00D60900
#define .AnimBow    00D6090A
#define .AnimKissA   00D6091C		%0 frames? (a still image)
#define .AnimKissB   00D6091D		%4 frames?
#define .AnimKissC   00D6091E		%6 frames?
#define .AnimTalk 00D60902

#new:Actor $QueenOfLight
{
% stats
[Index]         D3b % index from ActorTable.xml
[Level]       255`b	%Maximum level  
[MaxHP]       255`b	%set to correct value later 
[Coins]         1`b 
[Flags]       00000000 
[StatusTable] $StatusTable_QueenOfLight
% ai
[PartsCount]   1`s 							%Top and bottom target (low target has high defense, high target is spiky but low defense)
[PartsTable] $PartsTable_QueenOfLight
[Script]      $Script_Init_QueenOfLight 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]   3`b 
[SpinSmash]     4`b % weight (0-4)
% ui positions
[Size]         24`b  48`b % width height	%she's a bit taller than the toad guards (double check the numbers here)
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  48`b % dx dy
[StatusIcon]   10`b  48`b % dx dy
}

#new:DefenseTable $DefenseTable_QueenOfLight
{
.Element:Normal 00000001
.Element:End
}


#new:StatusTable $StatusTable_QueenOfLight %Good luck!
{
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy       0`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink      0`
.Status:Stop        0`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -2`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End
}


%only one of these should be targettable by multi target moves, otherwise they will hit twice

#new:PartsTable $PartsTable_QueenOfLight
{
00800000 01000000 001C00FF $IdleAnimations_QueenOfLight $DefenseTable_QueenOfLight 00000000 00000000 00F60000 00000000 
}

#new:IdleAnimations $IdleAnimations_QueenOfLight
{
.Status:Normal    .AnimIdle
.Status:Stone     .AnimStop
.Status:Sleep     .AnimSleep
.Status:Poison    .AnimPoison
.Status:Stop      .AnimStop
.Status:Static    .AnimIdle
.Status:Paralyze  .AnimStop
.Status:Dizzy     .AnimDizzy
.Status:Fear      .AnimDizzy
.Status:End
}

#new:Script $Script_Init_QueenOfLight
{
	Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_QueenOfLight )
	Call     BindIdle    	( .Actor:Self $Script_Idle_QueenOfLight )
    Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_QueenOfLight )
	Call	 SetActorVar	( .Actor:Self 00000001 FFFFFFFF )	%Determine AI state
	Call	 SetActorVar	( .Actor:Self 00000002 .Actor:Enemy1 )	%Light Guardian ID 1
	Call	 SetActorVar	( .Actor:Self 00000003 .Actor:Enemy2 )	%Light Guardian ID 2
	Call	 SetActorVar	( .Actor:Self 00000004 00000000 )	%Phase (tracks light guardian phase)
	Call	 $Function_SetAllHealth_B ( 300` )
	Call	$Function_SetName_C ( D3 002900F3 )
	Call	$Function_SetTattle_C ( D3 001C0160 )	
    Return
    End
}

#new:Script $Script_InvokeCounters
{
	Call     GetLastDamage 	( .Actor:Self *Var[0] )
	If  *Var[0]  ==  00000000 
		Return
	EndIf
	Call     GetStatusFlags ( .Actor:Self *Var[0] )
	If  *Var[0]  &  0035D000 
		Return
	EndIf
	Label    00000000 
	Call     GetBattleFlags ( *Var[0] )
	If  *Var[0]  &  00000100 
		Wait     00000001 
		Goto     00000000 
	EndIf 
	Call     GetActorVar 	( .Actor:Self 00000002 *VarD )
	Call	 ActorExists	( *VarD *VarE )
	If *VarE != 00000000
		Call	 SetActorVar ( *Var[D] 00000003 00000001 ) %is moving
	EndIf
	Call     GetActorVar 	( .Actor:Self 00000003 *VarD )
	Call	 ActorExists	( *VarD *VarE )
	If *VarE != 00000000
		Call	 SetActorVar ( *Var[D] 00000003 00000001 ) %is moving
	EndIf
	Wait     15`  
	Call     GetActorVar 	( .Actor:Self 00000002 *VarD )
	Call	 ActorExists	( *VarD *VarE )
	If *VarE != 00000000
		Call	GetActorHP 	( *VarD *VarF )
		If *VarF > 0
			Call	 SetActorVar ( *Var[D] 00000003 00000001 ) %is moving
			%Do counter
			ExecWait $Script_TakeTurn_LightGuardian
		EndIf
	EndIf
	Call     GetActorVar 	( .Actor:Self 00000003 *VarD )
	Call	 ActorExists	( *VarD *VarE )
	If *VarE != 00000000
		Call	GetActorHP 	( *VarD *VarF )
		If *VarF > 0
			Call	 SetActorVar ( *Var[D] 00000003 00000001 ) %is moving
			%Do counter
			Wait 4`
			ExecWait $Script_TakeTurn_LightGuardian
		EndIf
	EndIf		
	Return
	End
}

#new:Script $Script_InvokeCounterSelf
{
	Call     GetLastDamage 	( .Actor:Self *Var[0] )
	If  *Var[0]  ==  00000000 
		Return
	EndIf
	Call     GetStatusFlags ( .Actor:Self *Var[0] )
	If  *Var[0]  &  0035D000 
		Return
	EndIf
	Label    00000000 
	Call     GetBattleFlags ( *Var[0] )
	If  *Var[0]  &  00000100 
		Wait     00000001 
		Goto     00000000 
	EndIf 
	Wait     15`
	Call	GetActorVar (.Actor:Self 00000003 *VarD ) %is moving
	If *VarD != 0`
		Return
	EndIf
	Wait 	 4`
	Call	GetActorVar (.Actor:Self 00000003 *VarD ) %is moving
	If *VarD != 0`
		Return
	EndIf
	Wait 	 8`
	Call	GetActorVar (.Actor:Self 00000003 *VarD ) %is moving
	If *VarD != 0`
		Return
	EndIf
	Call	GetActorPos ( .Actor:Self *Var0 *Var1 *Var2 )
	If *Var0 > 80`
		Wait 8`
		Call	GetActorVar (.Actor:Self 00000003 *VarD ) %is moving
		If *VarD != 0`
			Return
		EndIf
	EndIf	
	Call	SetActorFlagBits ( .Actor:Self 00040000 .True )
	Set *VarD .Actor:Self
	Call	 ActorExists	( *VarD *VarE )
	If *VarE != 00000000
		Call	GetActorHP 	( *VarD *VarF )
		If *VarF > 0
			%Do counter
			ExecWait $Script_TakeTurn_LightGuardian
		EndIf
	EndIf
	Call	SetActorFlagBits ( .Actor:Self 00040000 .False )
	Return
	End
}

#new:Script $Script_KillGuardians
{
	Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
	Call  ActorExists   ( *Var0 *Var1 )
	If  *Var1  ==  .True
		Call  80269EAC  ( 00000000 )
		Call  SetActorFlagBits  ( *Var0 00400000 .True )
		Call  DispatchEvent     ( *Var0 .Event:Death )
	EndIf
	Call  GetActorVar   ( .Actor:Self 00000003 *Var0 )
	Call  ActorExists   ( *Var0 *Var1 )
	If  *Var1  ==  .True
		Call  80269EAC  ( 00000000 )
		Call  SetActorFlagBits  ( *Var0 00400000 .True )
		Call  DispatchEvent     ( *Var0 .Event:Death )
	EndIf
	Return
	End
}



#new:Script $Script_Idle_QueenOfLight
{
  Return
  End
}

#new:Script $Script_HandleEvent_QueenOfLight
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   44:  Call     GetLastEvent 	( .Actor:Self *Var[0] )
   58:  Switch  *Var[0] 
   64:  	CaseOR  ==  .Event:HitCombo
   70:  	CaseOR  ==  .Event:Hit
   7C:  		SetConst  *Var[0]  00000001 
   8C:  		SetConst  *Var[1]  .AnimPain 
   9C:  		ExecWait DoNormalHit 
				ExecWait $Script_InvokeCounters
   A8:  	EndCaseGroup
   B0:  	Case  ==  .Event:BurnHit
   BC:  		SetConst  *Var[0]  00000001 
   CC:  		SetConst  *Var[1]  .AnimBurn 
   DC:  		SetConst  *Var[2]  .AnimBurn2 
   EC:  		ExecWait DoBurnHit 
				ExecWait $Script_InvokeCounters
   F8:  	Case  ==  .Event:BurnDeath
  104:  		SetConst  *Var[0]  00000001 
  114:  		SetConst  *Var[1]  .AnimBurn 
  124:  		SetConst  *Var[2]  .AnimBurn2 
  134:  		ExecWait DoBurnHit 
  140:  		SetConst  *Var[0]  00000001 
  150:  		SetConst  *Var[1]  .AnimBurn2 
  160:  		ExecWait $Script_DoDeath
  16C:  		Return
  174:  	Case  ==  .Event:SpinSmashHit
  180:  		SetConst  *Var[0]  00000001 
  190:  		SetConst  *Var[1]  .AnimPain 
  1A0:  		ExecWait DoNormalHit			%Spin smash fails   ExecWait 8029B998 
				ExecWait $Script_InvokeCounters
  1AC:  	Case  ==  .Event:SpinSmashDeath
  1B8:  		SetConst  *Var[0]  00000001 
  1C8:  		SetConst  *Var[1]  .AnimPain 
  1D8:  		ExecWait DoNormalHit			%Spin smash fails	ExecWait 8029B998 
  1E4:  		SetConst  *Var[0]  00000001 
  1F4:  		SetConst  *Var[1]  .AnimDead 
  204:  		ExecWait $Script_DoDeath
  210:  		Return
  218:  	Case  ==  .Event:ShockHit
  224:  		SetConst  *Var[0]  00000001 
  234:  		SetConst  *Var[1]  .AnimPain 
  244:  		ExecWait DoShockHit 
  250:  		SetConst  *Var[0]  00000001 
  260:  		SetConst  *Var[1]  .AnimPain 
  270:  		ExecWait 8029BD70 
  27C:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  29C:  		Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[2.0] )
  2B4:  		Call     SetAnimation 	( .Actor:Self 00000001 .AnimDizzy )
  2CC:  		Call     SetGoalToHome 	( .Actor:Self )
  2DC:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  2F0:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  308:  		Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[1.0] )
  320:  		Wait     00000005 
  32C:  		Call     SetAnimation 	( .Actor:Self 00000001 .AnimIdle )
  344:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.6005859] )
  358:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  378:  	Case  ==  .Event:ShockDeath
  384:  		SetConst  *Var[0]  00000001 
  394:  		SetConst  *Var[1]  .AnimPain 
  3A4:  		ExecWait DoShockHit 
  3B0:  		SetConst  *Var[0]  00000001 
  3C0:  		SetConst  *Var[1]  .AnimDead 
  3D0:  		ExecWait $Script_DoDeath
  3DC:  		Return
  3E4:  	Case  ==  .Event:StarBeam
  3F0:  	CaseOR  ==  00000017
  3FC:  	CaseOR  ==  .Event:Immune
  408:  	CaseOR  ==  .Event:AirLiftFailed
  414:  		SetConst  *Var[0]  00000001 
  424:  		SetConst  *Var[1]  .AnimIdle 
  434:  		ExecWait DoImmune 
  440:  	EndCaseGroup
  448:  	Case  ==  .Event:Death
  454:  		SetConst  *Var[0]  00000001 
  464:  		SetConst  *Var[1]  .AnimPain 
  474:  		ExecWait DoNormalHit 
  480:  		Wait     0000000A 
  48C:  		SetConst  *Var[0]  00000001 
  49C:  		SetConst  *Var[1]  .AnimDead 
  4AC:  		ExecWait $Script_DoDeath 
  4B8:  		Return
  4C0:  	Case  ==  .Event:EndFirstStrike
  4CC:  		Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[2.0] )
  4E4:  		Call     SetAnimation 	( .Actor:Self 00000001 .AnimRun )
  4FC:  		Call     SetGoalToHome 	( .Actor:Self )
  50C:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  520:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  538:  		Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[1.0] )
  550:  		Call     HPBarToHome 	( .Actor:Self )
  560:  	Case  ==  .Event:RecoverStatus
  56C:  		SetConst  *Var[0]  00000001 
  57C:  		SetConst  *Var[1]  .AnimIdle 
  58C:  		ExecWait DoRecover 
  598:  	Case  ==  .Event:ScareAway
  5A4:  		SetConst  *Var[0]  00000001 
  5B4:  		SetConst  *Var[1]  .AnimRun 
  5C4:  		SetConst  *Var[2]  .AnimPain 
  5D4:  		ExecWait DoScareAway 
  5E0:  		Return
  5E8:  	Case  ==  .Event:BeginAirLift
  5F4:  		SetConst  *Var[0]  00000001 
  604:  		SetConst  *Var[1]  .AnimRun 
  614:  		ExecWait DoAirLift 
  620:  	Case  ==  .Event:BlowAway
  62C:  		SetConst  *Var[0]  00000001 
  63C:  		SetConst  *Var[1]  .AnimPain 
  64C:  		ExecWait DoBlowAway 
  658:  		Return
  660:  	Default
  668:  EndSwitch
  670:  Call     SetAnimation 	( .Actor:Self 00000001 .AnimIdle )
  688:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  69C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  6B0:  Return
  6B8:  End
}

%Cool effects n stuff
#new:Script $Script_DoDeath
{
	%yeet all the light guardians
	ExecWait $Script_KillGuardians
	Call  8027D32C  ( FFFFFF81 )
	Call  UseIdleAnimation  ( .Actor:Self .False )
	SetConst  *Var[0]  00000001 
	SetConst  *Var[1]  .AnimDead
	Set   *Var2  00000000
	Call  SetAnimation      ( .Actor:Self *Var0 *Var1 )
	Wait  10`
	/%
	Loop  00000018
		Call  SetActorYaw   ( .Actor:Self *Var2 )
		Add   *Var2  0000001E
		Wait  1`
	EndLoop
	%/
	%big flashy effects
	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
	Add   *Var1  20`
	Sub   *Var2  00000003
	Call  PlaySound     ( 000000A4 )
	Call  PlayEffect    ( ~FX:LightRays:SharpA *Var0 *Var1 *Var2 *Fixed[1.5] *VarF 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	Thread
		%Shaky cam
		Call	ShakeCam ( 00000001 00000000 00000007 *Fixed[1.0] )
		Call	ShakeCam ( 00000001 00000000 00000007 *Fixed[2.0] )
		Call	ShakeCam ( 00000001 00000000 00000007 *Fixed[3.0] )
		Call	ShakeCam ( 00000001 00000000 00000007 *Fixed[4.0] )
		Call	ShakeCam ( 00000001 00000000 00000007 *Fixed[5.0] )
	EndThread
	%Wait  50`
	Set *VarE *VarF
	Thread
		Wait  35`
		Call  StopSound     ( 000000A4 )
		Call  RemoveEffect      ( *VarE )
	EndThread
	Wait  5`
	Call  GetActorPos 	( .Actor:Self *Var5 *Var6 *Var7 )
	Call  PlayEffect    ( ~FX:RedImpact:Huge *Var5 00000000 *Var7 00000001 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	Call  $Function_SetRedBlastPalette ( *VarF )			
	Wait  5`
	Call  GetActorPos 	( .Actor:Self *Var5 *Var6 *Var7 )
	Call  PlayEffect    ( ~FX:RedImpact:Huge *Var5 00000000 *Var7 00000001 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	Call  $Function_SetYellowBlastPalette ( *VarF )			
	Wait  5`
	Call  GetActorPos 	( .Actor:Self *Var5 *Var6 *Var7 )
	Call  PlayEffect    ( ~FX:RedImpact:Huge *Var5 00000000 *Var7 00000001 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	Call  $Function_SetGreenBlastPalette ( *VarF )			
	Wait  5`
	Call  GetActorPos 	( .Actor:Self *Var5 *Var6 *Var7 )
	Call  PlayEffect    ( ~FX:RedImpact:Huge *Var5 00000000 *Var7 00000001 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	Call  $Function_SetCyanBlastPalette ( *VarF )			
	Wait  5`
	Call  GetActorPos 	( .Actor:Self *Var5 *Var6 *Var7 )
	Call  PlayEffect    ( ~FX:RedImpact:Huge *Var5 00000000 *Var7 00000001 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	Call  $Function_SetBlueBlastPalette ( *VarF )			
	Wait  5`
	Call  GetActorPos 	( .Actor:Self *Var5 *Var6 *Var7 )
	Call  PlayEffect    ( ~FX:RedImpact:Huge *Var5 00000000 *Var7 00000001 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	Call  $Function_SetMagentaBlastPalette ( *VarF )			
	Call  GetActorPos       ( .Actor:Self *Var2 *Var3 *Var4 )
	%Call  PlayEffect        ( ~FX:BigSmokePuff *Var2 *Var3 *Var4 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	Call  PlaySoundAtActor  ( .Actor:Self .Sound:Death )
	Call  DropStarPoints    ( .Actor:Self )
	Set   *Var3  00000000
	Call  SetPartFlagBits   ( .Actor:Self 00000001 00000001 .True )
	Call  SetActorFlagBits  ( .Actor:Self 00000004 .True )
	Wait  6`
	Call	RemoveActor ( .Actor:Self )
	Return
	End
}

#new:Function $Function_SetRedBlastPalette        
{
    0:  ADDIU        SP, SP, FFE8
    4:  SW            RA, 10 (SP)
    8:  LW            V0, C (A0)
    C:  JAL            ~Func:get_variable
   10:  LW            A1, 0 (V0)
   14:  LW            V1, C (V0)
   18:  ADDIU        A0, R0, FF                %R
   1C:  SB            A0, 50 (V1)
   20:  LW            V1, C (V0)
        ADDIU        A0, R0, 80                %G
   24:  SB            A0, 51 (V1)
   28:  LW            V1, C (V0)
   2C:  ADDIU        A1, R0, 80                %B
   30:  SB            A1, 52 (V1)
   34:  LW            A0, C (V0)
   38:  ADDIU        V1, R0, FF                %R 2
   3C:  SB            V1, 53 (A0)
   40:  LW            A0, C (V0)
   44:  ADDIU        V1, R0, D0                %G 2
   48:  SB            V1, 54 (A0)
   4C:  LW            V1, C (V0)
        ADDIU        A1, R0, D0                %B 2
   50:  SB            A1, 55 (V1)
   54:  LW            RA, 10 (SP)
   58:  ADDIU        V0, R0, 2
   5C:  JR            RA
   60:  ADDIU        SP, SP, 18
}

#new:Function $Function_SetYellowBlastPalette        
{
    0:  ADDIU        SP, SP, FFE8
    4:  SW            RA, 10 (SP)
    8:  LW            V0, C (A0)
    C:  JAL            ~Func:get_variable
   10:  LW            A1, 0 (V0)
   14:  LW            V1, C (V0)
   18:  ADDIU        A0, R0, FF                %R
   1C:  SB            A0, 50 (V1)
   20:  LW            V1, C (V0)
        ADDIU        A0, R0, FF                %G
   24:  SB            A0, 51 (V1)
   28:  LW            V1, C (V0)
   2C:  ADDIU        A1, R0, 80                %B
   30:  SB            A1, 52 (V1)
   34:  LW            A0, C (V0)
   38:  ADDIU        V1, R0, FF                %R 2
   3C:  SB            V1, 53 (A0)
   40:  LW            A0, C (V0)
   44:  ADDIU        V1, R0, FF                %G 2
   48:  SB            V1, 54 (A0)
   4C:  LW            V1, C (V0)
        ADDIU        A1, R0, D0                %B 2
   50:  SB            A1, 55 (V1)
   54:  LW            RA, 10 (SP)
   58:  ADDIU        V0, R0, 2
   5C:  JR            RA
   60:  ADDIU        SP, SP, 18
}

#new:Function $Function_SetGreenBlastPalette        
{
    0:  ADDIU        SP, SP, FFE8
    4:  SW            RA, 10 (SP)
    8:  LW            V0, C (A0)
    C:  JAL            ~Func:get_variable
   10:  LW            A1, 0 (V0)
   14:  LW            V1, C (V0)
   18:  ADDIU        A0, R0, 80                %R
   1C:  SB            A0, 50 (V1)
   20:  LW            V1, C (V0)
        ADDIU        A0, R0, FF                %G
   24:  SB            A0, 51 (V1)
   28:  LW            V1, C (V0)
   2C:  ADDIU        A1, R0, 80                %B
   30:  SB            A1, 52 (V1)
   34:  LW            A0, C (V0)
   38:  ADDIU        V1, R0, D0                %R 2
   3C:  SB            V1, 53 (A0)
   40:  LW            A0, C (V0)
   44:  ADDIU        V1, R0, FF                %G 2
   48:  SB            V1, 54 (A0)
   4C:  LW            V1, C (V0)
        ADDIU        A1, R0, D0                %B 2
   50:  SB            A1, 55 (V1)
   54:  LW            RA, 10 (SP)
   58:  ADDIU        V0, R0, 2
   5C:  JR            RA
   60:  ADDIU        SP, SP, 18
}

#new:Function $Function_SetCyanBlastPalette        
{
    0:  ADDIU        SP, SP, FFE8
    4:  SW            RA, 10 (SP)
    8:  LW            V0, C (A0)
    C:  JAL            ~Func:get_variable
   10:  LW            A1, 0 (V0)
   14:  LW            V1, C (V0)
   18:  ADDIU        A0, R0, 80                %R
   1C:  SB            A0, 50 (V1)
   20:  LW            V1, C (V0)
        ADDIU        A0, R0, FF                %G
   24:  SB            A0, 51 (V1)
   28:  LW            V1, C (V0)
   2C:  ADDIU        A1, R0, FF                %B
   30:  SB            A1, 52 (V1)
   34:  LW            A0, C (V0)
   38:  ADDIU        V1, R0, D0                %R 2
   3C:  SB            V1, 53 (A0)
   40:  LW            A0, C (V0)
   44:  ADDIU        V1, R0, FF                %G 2
   48:  SB            V1, 54 (A0)
   4C:  LW            V1, C (V0)
        ADDIU        A1, R0, FF                %B 2
   50:  SB            A1, 55 (V1)
   54:  LW            RA, 10 (SP)
   58:  ADDIU        V0, R0, 2
   5C:  JR            RA
   60:  ADDIU        SP, SP, 18
}

#new:Function $Function_SetBlueBlastPalette        
{
    0:  ADDIU        SP, SP, FFE8
    4:  SW            RA, 10 (SP)
    8:  LW            V0, C (A0)
    C:  JAL            ~Func:get_variable
   10:  LW            A1, 0 (V0)
   14:  LW            V1, C (V0)
   18:  ADDIU        A0, R0, 80                %R
   1C:  SB            A0, 50 (V1)
   20:  LW            V1, C (V0)
        ADDIU        A0, R0, 80                %G
   24:  SB            A0, 51 (V1)
   28:  LW            V1, C (V0)
   2C:  ADDIU        A1, R0, FF                %B
   30:  SB            A1, 52 (V1)
   34:  LW            A0, C (V0)
   38:  ADDIU        V1, R0, D0                %R 2
   3C:  SB            V1, 53 (A0)
   40:  LW            A0, C (V0)
   44:  ADDIU        V1, R0, D0                %G 2
   48:  SB            V1, 54 (A0)
   4C:  LW            V1, C (V0)
        ADDIU        A1, R0, FF                %B 2
   50:  SB            A1, 55 (V1)
   54:  LW            RA, 10 (SP)
   58:  ADDIU        V0, R0, 2
   5C:  JR            RA
   60:  ADDIU        SP, SP, 18
}

#new:Function $Function_SetMagentaBlastPalette        
{
    0:  ADDIU        SP, SP, FFE8
    4:  SW            RA, 10 (SP)
    8:  LW            V0, C (A0)
    C:  JAL            ~Func:get_variable
   10:  LW            A1, 0 (V0)
   14:  LW            V1, C (V0)
   18:  ADDIU        A0, R0, FF                %R
   1C:  SB            A0, 50 (V1)
   20:  LW            V1, C (V0)
        ADDIU        A0, R0, 80                %G
   24:  SB            A0, 51 (V1)
   28:  LW            V1, C (V0)
   2C:  ADDIU        A1, R0, FF                %B
   30:  SB            A1, 52 (V1)
   34:  LW            A0, C (V0)
   38:  ADDIU        V1, R0, FF                %R 2
   3C:  SB            V1, 53 (A0)
   40:  LW            A0, C (V0)
   44:  ADDIU        V1, R0, D0                %G 2
   48:  SB            V1, 54 (A0)
   4C:  LW            V1, C (V0)
        ADDIU        A1, R0, FF                %B 2
   50:  SB            A1, 55 (V1)
   54:  LW            RA, 10 (SP)
   58:  ADDIU        V0, R0, 2
   5C:  JR            RA
   60:  ADDIU        SP, SP, 18
}

#new:Script $Script_TakeTurn_QueenOfLight 
{
	Call 	GetActorVar ( .Actor:Self 00000001 *Var3 )
	Add *Var3 1
	Mod *Var3 3
	Call 	SetActorVar ( .Actor:Self 00000001 *Var3 )
	Call 	GetActorHP ( .Actor:Self *VarA )
	Call 	GetEnemyMaxHP ( .Actor:Self *VarB )
	Mul *VarA 3`
	Div *VarA *VarB
	If *VarA >= 3`
		Set *VarA 2`
	EndIf
	Switch *VarA
		Case == 2`		%Phase 1
			Switch *Var3
				Case == 0`
					ExecWait $KissAttack
				Case == 1`
					ExecWait $PrismaticLightning1
				Case == 2`
					ExecWait $PrismaticBeam1
			EndSwitch
		Case == 1`		%Phase 2
			Call 	GetActorVar ( .Actor:Self 00000004 *VarD )
			If *VarD < 1`
				Call 	SetActorVar ( .Actor:Self 00000004 00000001 )			
				%Summon one guardian
				Call     GetActorVar 	( .Actor:Self 00000002 *VarF )
				Call	 ActorExists	( *VarF *VarE )
				If *VarE == 00000000
					Call     SummonEnemy 	( $SpecialFormation_LightGuardian 00000000 )
					Call     SetActorVar 	( .Actor:Self 00000002 *VarF )
					ExecWait $Script_LightGuardianSummonA
				EndIf
			EndIf
			Call 	GetActorVar ( .Actor:Self 00000001 *Var3 )
			Switch *Var3
				Case == 0`
					ExecWait $WhiteFire
				Case == 1`
					ExecWait $PrismaticLightning2
				Case == 2`
					ExecWait $PrismaticBeam2
			EndSwitch
		Case == 0`		%Phase 3
			Call 	GetActorVar ( .Actor:Self 00000004 *VarD )
			If *VarD < 2`
				Call 	SetActorVar ( .Actor:Self 00000004 00000002 )			
				%Summon two guardians
				Call     GetActorVar 	( .Actor:Self 00000002 *VarF )
				Call	 ActorExists	( *VarF *VarE )
				If *VarE == 00000000
					Call     SummonEnemy 	( $SpecialFormation_LightGuardian 00000000 )
					Call     SetActorVar 	( .Actor:Self 00000002 *VarF )
					ExecWait $Script_LightGuardianSummonA
				EndIf
				Call     GetActorVar 	( .Actor:Self 00000003 *VarF )
				Call	 ActorExists	( *VarF *VarE )
				If *VarE == 00000000
					Call     SummonEnemy 	( $SpecialFormation_LightGuardian 00000000 )
					Call     SetActorVar 	( .Actor:Self 00000003 *VarF )
					ExecWait $Script_LightGuardianSummonB
				EndIf
				ExecWait $Script_IShouldTryHarder
				Call 	SetActorVar ( .Actor:Self 00000001 00000000 )	%choose Prismatic Lightning next turn
				Return
			EndIf
			Call 	GetActorVar ( .Actor:Self 00000001 *Var3 )
			Switch *Var3
				Case == 0`
					ExecWait $PrismaticFire
				Case == 1`
					Call     GetStatusFlags ( .Actor:Player *Var[0] )
					If  *Var[0]  &  0035D000 
						ExecWait $PrismaticLightning3NoStatus
					Else
						ExecWait $PrismaticLightning3
					EndIf
				Case == 2`
					ExecWait $PrismaticBeam3
			EndSwitch
	EndSwitch
	Return
	End
}

#new:Vector3D $Vector3D_Low
{
	0` -1000` 0`
}

%bit stuff
#new:SpecialFormation $SpecialFormation_LightGuardian
{
$LightGuardian $Vector3D_Low 00000000 00000000 00000000 00000000 00000000 
}

#new:Script $Script_LightGuardianSummonA
{
	Call  GetActorPos	( .Actor:Self *Var7 *Var8 *Var9 )
	Sub *Var9 10`
	Call  SetActorPos	( *VarF *Var7 *Var8 *Var9 )
	%
	Call  SetGoalPos ( *VarF 45` 0` 10` )					%hope hardcoding is ok
	Call  GetGoalPos    ( *VarF *Var3 *Var4 *Var5 )
	Call  SetActorJumpGravity   ( *VarF *Fixed[0.8] )	
	Call  SetGoalPos    ( *VarF *Var3 *Var4 *Var5 )
	Call  JumpToGoal    ( *VarF 00000014 .False .False .False )
	Call  ForceHomePos  ( *VarF *Var3 *Var4 *Var5 )
	Call  HPBarToHome   ( *VarF )	
	Return
	End
}

#new:Script $Script_LightGuardianSummonB
{
	Call  GetActorPos	( .Actor:Self *Var7 *Var8 *Var9 )
	Sub *Var9 10`
	Call  SetActorPos	( *VarF *Var7 *Var8 *Var9 )
	%
	Call  SetGoalPos ( *VarF 125` 0` 10` )
	Call  GetGoalPos    ( *VarF *Var3 *Var4 *Var5 )
	Call  SetActorJumpGravity   ( *VarF *Fixed[0.8] )
	Call  SetGoalPos    ( *VarF *Var3 *Var4 *Var5 )
	Call  JumpToGoal    ( *VarF 00000014 .False .False .False )
	Call  ForceHomePos  ( *VarF *Var3 *Var4 *Var5 )
	Call  HPBarToHome   ( *VarF )	
	Return
	End
}


#new:Script $KissAttack
{
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self .False )
	Call	 SetTargetActor 	( .Actor:Self .Actor:Player )
    Call     SetGoalToTarget 	( .Actor:Self )
	Call     SetAnimation 	( .Actor:Self 00000001 .AnimWalk )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     AddGoalPos 	( .Actor:Self 00000010 00000000 00000005 )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
	Call     RunToGoal   	( .Actor:Self 00000000 .False )	
	Call     SetAnimation 	( .Actor:Self 00000001 .AnimKissB )
	Wait 	 8`
	Call     EnemyTestTarget ( .Actor:Self *Var[F] 00000000 00000000 00000001 00000010 )
	Switch *Var[F]
		Case == 5`
			Call     EnemyTestTarget ( .Actor:Self *Var[A] 80000000 00000000 00000000 00000000 )
		Case == 6`		
		Default
			Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000008 00000020 )
	EndSwitch
	Call     SetAnimation 	( .Actor:Self 00000001 .AnimKissC )
	Wait 	 6`
	Call     SetGoalToHome 	( .Actor:Self )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
	Call     SetAnimation 	( .Actor:Self 00000001 .AnimWalk )
	Call     RunToGoal   	( .Actor:Self 00000000 .False )	
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Call     EnableIdleScript 	( .Actor:Self .True )
	Return
	End
}

#new:Script $WhiteFire
{
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self .False )
	Call	 SetTargetActor 	( .Actor:Self .Actor:Player )
    Call     SetGoalToTarget 	( .Actor:Self )
	Call     SetAnimation 	( .Actor:Self 00000001 .AnimKissB )
	Wait 	 8`	
	%Big fire cloud
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[0]  -20`
	Add  *Var[1]  28`
	Add  *Var[2]  2` 
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Sub  *Var[3]  00000064 
	Add  *Var[5]  00000002 
	Call     PlayEffect  	( ~FX:FireBreath:Tiny *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] 00000018 00000001 00000018 00000000 00000000 00000000 )
	Call     $Function_WhiteFire ( *Var[F] )		
	Wait     0000000A
	Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 0000000C 00000020 )
	Call	PlaySoundAtActor	( .Actor:Player 000002D8 )
	Thread % added
		Call	8026BF48		( 00000001 )
		Call	BoostDefense	( .Actor:Player FFFFFFFE )
		Call	8026BF48		( 00000000 )
	EndThread % added
	Wait 	 27`
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Call     EnableIdleScript 	( .Actor:Self .True )
	Return
	End
}

#new:Script $PrismaticFire
{
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self .False )
	Call	 SetTargetActor 	( .Actor:Self .Actor:Player )
    Call     SetGoalToTarget 	( .Actor:Self )
	Call     SetAnimation 	( .Actor:Self 00000001 .AnimKissB )
	Wait 	 8`	
	%Big fire cloud
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[0]  -20`
	Add  *Var[1]  28`
	Add  *Var[2]  2` 
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Sub  *Var[3]  00000064 
	Add  *Var[5]  00000002 
	Call     PlayEffect  	( ~FX:FireBreath:Tiny *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] 00000018 00000001 00000018 00000000 00000000 00000000 )
	Call	 SetActorVar ( .Actor:Self 0000000F *VarF )
	Call	 GetActorVar ( .Actor:Self 0000000F *VarF )
	Call     $Function_PrismaticFireA ( *Var[F] )			%Unfortunately it only keeps one of the colors for some reason?
		%these functions only seem to modify one particles colors, the others just kind of copy from somewhere more static?
	Thread
		Wait 1`
		Call	 GetActorVar ( .Actor:Self 0000000F *VarF )
		Call     $Function_PrismaticFireB ( *Var[F] )		
		Wait 1`
		Call	 GetActorVar ( .Actor:Self 0000000F *VarF )
		Call     $Function_PrismaticFireC ( *Var[F] )		
		Wait 1`
		Call	 GetActorVar ( .Actor:Self 0000000F *VarF )
		Call     $Function_PrismaticFireD ( *Var[F] )		
		Wait 1`
		Call	 GetActorVar ( .Actor:Self 0000000F *VarF )
		Call     $Function_PrismaticFireE ( *Var[F] )		
		Wait 1`
		Call	 GetActorVar ( .Actor:Self 0000000F *VarF )
		Call     $Function_PrismaticFireF ( *Var[F] )		
		Wait 1`
		Call	 GetActorVar ( .Actor:Self 0000000F *VarF )
		Call     $Function_PrismaticFireG ( *Var[F] )		
		Wait 1`
		Call	 GetActorVar ( .Actor:Self 0000000F *VarF )
		Call     $Function_PrismaticFireH ( *Var[F] )		
		Wait 1`
	EndThread
	Wait     0000000A
	Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000010 00000020 )
	Call	PlaySoundAtActor	( .Actor:Player 000002D8 )
	Thread % added
		Call	8026BF48		( 00000001 )
		Call	BoostAttack		( .Actor:Player FFFFFFFE )
		Call	BoostDefense	( .Actor:Player FFFFFFFE )
		Call	8026BF48		( 00000000 )
	EndThread % added
	Wait 	 27`
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Call     EnableIdleScript 	( .Actor:Self .True )
	Return
	End
}

#new:Function $Function_WhiteFire
{
    0:  ADDIU		SP, SP, FFE8
    4:  SW			RA, 10 (SP)
    8:  LW			V0, C (A0)
    C:  JAL			~Func:get_variable
   10:  LW			A1, 0 (V0)
   14:  LW			V1, C (V0)
   18:  LIO			AT, 3D23D70A
   20:  MTC1		AT, F0
   24:  NOP
   28:  SWC1		F0, 38 (V1)
   2C:  SWC1		F0, 30 (V1)
   30:  LW			V1, C (V0)
   34:  LIF			F0, 1.0			%1.875 -> 1.0
   3C:  NOP
   40:  SWC1		F0, 34 (V1)
   44:  LW			V1, C (V0)
   48:  LIO			AT, 3D4CCCCD	%= 0.05
   50:  MTC1		AT, F0
   54:  NOP
   58:  SWC1		F0, 3C (V1)
		.pink
		%offsets 64, 68, 6C control a different color (the middle color?)		(original = 000000FF 000000AA 0000002A)		Note that these colors sometimes influence the colors of the other fireballs
		LI			AT, FF
		SW			AT, 64 (V1)
		LI			AT, FF
		SW			AT, 68 (V1)
		LI			AT, FF
		SW			AT, 6C (V1)
		%offsets 70, 74, 78 for r g and b (of the boundary color?)	(original = 000000F3 00000030 00000000)
		LI			AT, D0
		SW			AT, 70 (V1)
		LI			AT, D0
		SW			AT, 74 (V1)
		LI			AT, FF
		SW			AT, 78 (V1)
		.end
   5C:  LW			RA, 10 (SP)
   60:  ADDIU		V0, R0, 2
   64:  JR			RA
   68:  ADDIU		SP, SP, 18
}

#new:Function $Function_PrismaticFireA
{
    0:  ADDIU		SP, SP, FFE8
    4:  SW			RA, 10 (SP)
    8:  LW			V0, C (A0)
    C:  JAL			~Func:get_variable
   10:  LW			A1, 0 (V0)
   14:  LW			V1, C (V0)
   18:  LIO			AT, 3D23D70A
   20:  MTC1		AT, F0
   24:  NOP
   28:  SWC1		F0, 38 (V1)
   2C:  SWC1		F0, 30 (V1)
   30:  LW			V1, C (V0)
   34:  LIF			F0, 1.3			%1.875 -> 1.0
   3C:  NOP
   40:  SWC1		F0, 34 (V1)
   44:  LW			V1, C (V0)
   48:  LIO			AT, 3D4CCCCD	%= 0.05
   50:  MTC1		AT, F0
   54:  NOP
   58:  SWC1		F0, 3C (V1)
		.pink
		%offsets 64, 68, 6C control a different color (the middle color?)		(original = 000000FF 000000AA 0000002A)		Note that these colors sometimes influence the colors of the other fireballs
		LI			AT, FF
		SW			AT, 64 (V1)
		LI			AT, 80
		SW			AT, 68 (V1)
		LI			AT, 80
		SW			AT, 6C (V1)
		%offsets 70, 74, 78 for r g and b (of the boundary color?)	(original = 000000F3 00000030 00000000)
		LI			AT, FF
		SW			AT, 70 (V1)
		LI			AT, D0
		SW			AT, 74 (V1)
		LI			AT, D0
		SW			AT, 78 (V1)
		.end
   5C:  LW			RA, 10 (SP)
   60:  ADDIU		V0, R0, 2
   64:  JR			RA
   68:  ADDIU		SP, SP, 18
}

#new:Function $Function_PrismaticFireB
{
    0:  ADDIU		SP, SP, FFE8
    4:  SW			RA, 10 (SP)
    8:  LW			V0, C (A0)
    C:  JAL			~Func:get_variable
   10:  LW			A1, 0 (V0)
   14:  LW			V1, C (V0)
   18:  LIO			AT, 3D23D70A
   20:  MTC1		AT, F0
   24:  NOP
   28:  SWC1		F0, 38 (V1)
   2C:  SWC1		F0, 30 (V1)
   30:  LW			V1, C (V0)
   34:  LIF			F0, 1.3			%1.875 -> 1.0
   3C:  NOP
   40:  SWC1		F0, 34 (V1)
   44:  LW			V1, C (V0)
   48:  LIO			AT, 3D4CCCCD	%= 0.05
   50:  MTC1		AT, F0
   54:  NOP
   58:  SWC1		F0, 3C (V1)
		.pink
		%offsets 64, 68, 6C control a different color (the middle color?)		(original = 000000FF 000000AA 0000002A)		Note that these colors sometimes influence the colors of the other fireballs
		LI			AT, FF
		SW			AT, 64 (V1)
		LI			AT, E0
		SW			AT, 68 (V1)
		LI			AT, 80
		SW			AT, 6C (V1)
		%offsets 70, 74, 78 for r g and b (of the boundary color?)	(original = 000000F3 00000030 00000000)
		LI			AT, FF
		SW			AT, 70 (V1)
		LI			AT, F4
		SW			AT, 74 (V1)
		LI			AT, D0
		SW			AT, 78 (V1)
		.end
   5C:  LW			RA, 10 (SP)
   60:  ADDIU		V0, R0, 2
   64:  JR			RA
   68:  ADDIU		SP, SP, 18
}

#new:Function $Function_PrismaticFireC
{
    0:  ADDIU		SP, SP, FFE8
    4:  SW			RA, 10 (SP)
    8:  LW			V0, C (A0)
    C:  JAL			~Func:get_variable
   10:  LW			A1, 0 (V0)
   14:  LW			V1, C (V0)
   18:  LIO			AT, 3D23D70A
   20:  MTC1		AT, F0
   24:  NOP
   28:  SWC1		F0, 38 (V1)
   2C:  SWC1		F0, 30 (V1)
   30:  LW			V1, C (V0)
   34:  LIF			F0, 1.3			%1.875 -> 1.0
   3C:  NOP
   40:  SWC1		F0, 34 (V1)
   44:  LW			V1, C (V0)
   48:  LIO			AT, 3D4CCCCD	%= 0.05
   50:  MTC1		AT, F0
   54:  NOP
   58:  SWC1		F0, 3C (V1)
		.pink
		%offsets 64, 68, 6C control a different color (the middle color?)		(original = 000000FF 000000AA 0000002A)		Note that these colors sometimes influence the colors of the other fireballs
		LI			AT, C0
		SW			AT, 64 (V1)
		LI			AT, FF
		SW			AT, 68 (V1)
		LI			AT, 80
		SW			AT, 6C (V1)
		%offsets 70, 74, 78 for r g and b (of the boundary color?)	(original = 000000F3 00000030 00000000)
		LI			AT, E8
		SW			AT, 70 (V1)
		LI			AT, FF
		SW			AT, 74 (V1)
		LI			AT, D0
		SW			AT, 78 (V1)
		.end
   5C:  LW			RA, 10 (SP)
   60:  ADDIU		V0, R0, 2
   64:  JR			RA
   68:  ADDIU		SP, SP, 18
}

#new:Function $Function_PrismaticFireD
{
    0:  ADDIU		SP, SP, FFE8
    4:  SW			RA, 10 (SP)
    8:  LW			V0, C (A0)
    C:  JAL			~Func:get_variable
   10:  LW			A1, 0 (V0)
   14:  LW			V1, C (V0)
   18:  LIO			AT, 3D23D70A
   20:  MTC1		AT, F0
   24:  NOP
   28:  SWC1		F0, 38 (V1)
   2C:  SWC1		F0, 30 (V1)
   30:  LW			V1, C (V0)
   34:  LIF			F0, 1.3			%1.875 -> 1.0
   3C:  NOP
   40:  SWC1		F0, 34 (V1)
   44:  LW			V1, C (V0)
   48:  LIO			AT, 3D4CCCCD	%= 0.05
   50:  MTC1		AT, F0
   54:  NOP
   58:  SWC1		F0, 3C (V1)
		.pink
		%offsets 64, 68, 6C control a different color (the middle color?)		(original = 000000FF 000000AA 0000002A)		Note that these colors sometimes influence the colors of the other fireballs
		LI			AT, 80
		SW			AT, 64 (V1)
		LI			AT, FF
		SW			AT, 68 (V1)
		LI			AT, A0
		SW			AT, 6C (V1)
		%offsets 70, 74, 78 for r g and b (of the boundary color?)	(original = 000000F3 00000030 00000000)
		LI			AT, D0
		SW			AT, 70 (V1)
		LI			AT, FF
		SW			AT, 74 (V1)
		LI			AT, DC
		SW			AT, 78 (V1)
		.end
   5C:  LW			RA, 10 (SP)
   60:  ADDIU		V0, R0, 2
   64:  JR			RA
   68:  ADDIU		SP, SP, 18
}

#new:Function $Function_PrismaticFireE
{
    0:  ADDIU		SP, SP, FFE8
    4:  SW			RA, 10 (SP)
    8:  LW			V0, C (A0)
    C:  JAL			~Func:get_variable
   10:  LW			A1, 0 (V0)
   14:  LW			V1, C (V0)
   18:  LIO			AT, 3D23D70A
   20:  MTC1		AT, F0
   24:  NOP
   28:  SWC1		F0, 38 (V1)
   2C:  SWC1		F0, 30 (V1)
   30:  LW			V1, C (V0)
   34:  LIF			F0, 1.3			%1.875 -> 1.0
   3C:  NOP
   40:  SWC1		F0, 34 (V1)
   44:  LW			V1, C (V0)
   48:  LIO			AT, 3D4CCCCD	%= 0.05
   50:  MTC1		AT, F0
   54:  NOP
   58:  SWC1		F0, 3C (V1)
		.pink
		%offsets 64, 68, 6C control a different color (the middle color?)		(original = 000000FF 000000AA 0000002A)		Note that these colors sometimes influence the colors of the other fireballs
		LI			AT, 80
		SW			AT, 64 (V1)
		LI			AT, FF
		SW			AT, 68 (V1)
		LI			AT, FF
		SW			AT, 6C (V1)
		%offsets 70, 74, 78 for r g and b (of the boundary color?)	(original = 000000F3 00000030 00000000)
		LI			AT, D0
		SW			AT, 70 (V1)
		LI			AT, FF
		SW			AT, 74 (V1)
		LI			AT, FF
		SW			AT, 78 (V1)
		.end
   5C:  LW			RA, 10 (SP)
   60:  ADDIU		V0, R0, 2
   64:  JR			RA
   68:  ADDIU		SP, SP, 18
}

#new:Function $Function_PrismaticFireF
{
    0:  ADDIU		SP, SP, FFE8
    4:  SW			RA, 10 (SP)
    8:  LW			V0, C (A0)
    C:  JAL			~Func:get_variable
   10:  LW			A1, 0 (V0)
   14:  LW			V1, C (V0)
   18:  LIO			AT, 3D23D70A
   20:  MTC1		AT, F0
   24:  NOP
   28:  SWC1		F0, 38 (V1)
   2C:  SWC1		F0, 30 (V1)
   30:  LW			V1, C (V0)
   34:  LIF			F0, 1.3			%1.875 -> 1.0
   3C:  NOP
   40:  SWC1		F0, 34 (V1)
   44:  LW			V1, C (V0)
   48:  LIO			AT, 3D4CCCCD	%= 0.05
   50:  MTC1		AT, F0
   54:  NOP
   58:  SWC1		F0, 3C (V1)
		.pink
		%offsets 64, 68, 6C control a different color (the middle color?)		(original = 000000FF 000000AA 0000002A)		Note that these colors sometimes influence the colors of the other fireballs
		LI			AT, 80
		SW			AT, 64 (V1)
		LI			AT, A0
		SW			AT, 68 (V1)
		LI			AT, FF
		SW			AT, 6C (V1)
		%offsets 70, 74, 78 for r g and b (of the boundary color?)	(original = 000000F3 00000030 00000000)
		LI			AT, D0
		SW			AT, 70 (V1)
		LI			AT, DC
		SW			AT, 74 (V1)
		LI			AT, FF
		SW			AT, 78 (V1)
		.end
   5C:  LW			RA, 10 (SP)
   60:  ADDIU		V0, R0, 2
   64:  JR			RA
   68:  ADDIU		SP, SP, 18
}

#new:Function $Function_PrismaticFireG
{
    0:  ADDIU		SP, SP, FFE8
    4:  SW			RA, 10 (SP)
    8:  LW			V0, C (A0)
    C:  JAL			~Func:get_variable
   10:  LW			A1, 0 (V0)
   14:  LW			V1, C (V0)
   18:  LIO			AT, 3D23D70A
   20:  MTC1		AT, F0
   24:  NOP
   28:  SWC1		F0, 38 (V1)
   2C:  SWC1		F0, 30 (V1)
   30:  LW			V1, C (V0)
   34:  LIF			F0, 1.3			%1.875 -> 1.0
   3C:  NOP
   40:  SWC1		F0, 34 (V1)
   44:  LW			V1, C (V0)
   48:  LIO			AT, 3D4CCCCD	%= 0.05
   50:  MTC1		AT, F0
   54:  NOP
   58:  SWC1		F0, 3C (V1)
		.pink
		%offsets 64, 68, 6C control a different color (the middle color?)		(original = 000000FF 000000AA 0000002A)		Note that these colors sometimes influence the colors of the other fireballs
		LI			AT, C0
		SW			AT, 64 (V1)
		LI			AT, 80
		SW			AT, 68 (V1)
		LI			AT, FF
		SW			AT, 6C (V1)
		%offsets 70, 74, 78 for r g and b (of the boundary color?)	(original = 000000F3 00000030 00000000)
		LI			AT, E8
		SW			AT, 70 (V1)
		LI			AT, D0
		SW			AT, 74 (V1)
		LI			AT, FF
		SW			AT, 78 (V1)
		.end
   5C:  LW			RA, 10 (SP)
   60:  ADDIU		V0, R0, 2
   64:  JR			RA
   68:  ADDIU		SP, SP, 18
}

#new:Function $Function_PrismaticFireH
{
    0:  ADDIU		SP, SP, FFE8
    4:  SW			RA, 10 (SP)
    8:  LW			V0, C (A0)
    C:  JAL			~Func:get_variable
   10:  LW			A1, 0 (V0)
   14:  LW			V1, C (V0)
   18:  LIO			AT, 3D23D70A
   20:  MTC1		AT, F0
   24:  NOP
   28:  SWC1		F0, 38 (V1)
   2C:  SWC1		F0, 30 (V1)
   30:  LW			V1, C (V0)
   34:  LIF			F0, 1.3			%1.875 -> 1.0
   3C:  NOP
   40:  SWC1		F0, 34 (V1)
   44:  LW			V1, C (V0)
   48:  LIO			AT, 3D4CCCCD	%= 0.05
   50:  MTC1		AT, F0
   54:  NOP
   58:  SWC1		F0, 3C (V1)
		.pink
		%offsets 64, 68, 6C control a different color (the middle color?)		(original = 000000FF 000000AA 0000002A)		Note that these colors sometimes influence the colors of the other fireballs
		LI			AT, FF
		SW			AT, 64 (V1)
		LI			AT, 80
		SW			AT, 68 (V1)
		LI			AT, E0
		SW			AT, 6C (V1)
		%offsets 70, 74, 78 for r g and b (of the boundary color?)	(original = 000000F3 00000030 00000000)
		LI			AT, FF
		SW			AT, 70 (V1)
		LI			AT, D0
		SW			AT, 74 (V1)
		LI			AT, F4
		SW			AT, 78 (V1)
		.end
   5C:  LW			RA, 10 (SP)
   60:  ADDIU		V0, R0, 2
   64:  JR			RA
   68:  ADDIU		SP, SP, 18
}


#new:Script $PrismaticLightning1
{
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self .False )
	Call	 SetTargetActor 	( .Actor:Self .Actor:Player )
    Call     SetGoalToTarget 	( .Actor:Self )
	Wait     00000003 
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Call     PlayEffect  	( ~FX:Lightning *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 )
	Call	$Function_SetYellowLightningPalette ( *VarF )		
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add 	 *Var1 350`
	Add 	 *Var0 200`
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Call     PlayEffect  	( ~FX:Lightning *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 )
	Call	$Function_SetCyanLightningPalette ( *VarF )		
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add 	 *Var1 200`
	Sub 	 *Var0 300`
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Call     PlayEffect  	( ~FX:Lightning *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 )
	Call	$Function_SetMagentaLightningPalette ( *VarF )		
	Wait     00000009
	Call	 SetTargetActor 	( .Actor:Self .Actor:Player )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     EnemyTestTarget ( .Actor:Self *Var[F] 00000000 00000000 00000001 00000010 )
	Switch *Var[F]
		Case == 5`
			Call     EnemyTestTarget ( .Actor:Self *Var[A] 80000000 00000000 00000000 00000000 )
		Case == 6`		
		Default
			Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000020 00000000 00000000 00000007 00000020 )
	EndSwitch
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Call     EnableIdleScript 	( .Actor:Self .True )
	Return
	End
}

#new:Script $PrismaticLightning2
{
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self .False )
	Call	 SetTargetActor 	( .Actor:Self .Actor:Player )
    Call     SetGoalToTarget 	( .Actor:Self )
	Wait     00000003 
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Call     PlayEffect  	( ~FX:Lightning *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 )
	Call	$Function_SetYellowLightningPalette ( *VarF )		
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add 	 *Var1 350`
	Add 	 *Var0 200`
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Call     PlayEffect  	( ~FX:Lightning *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 )
	Call	$Function_SetYellowLightningPalette ( *VarF )		
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add 	 *Var1 200`
	Sub 	 *Var0 300`
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Call     PlayEffect  	( ~FX:Lightning *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 )
	Call	$Function_SetYellowLightningPalette ( *VarF )		
	Wait     00000009 	
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     EnemyTestTarget ( .Actor:Self *Var[F] 00000000 00000000 00000001 00000010 )
	Switch *Var[F]
		Case == 5`
			Call     EnemyTestTarget ( .Actor:Self *Var[A] 80000000 00000000 00000000 00000000 )
		Case == 6`		
		Default
			Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000020 00000000 00000000 00000006 00000020 )
	EndSwitch
	%
	Wait 	 5`
    Call     SetGoalToTarget 	( .Actor:Self )
	Wait     00000003 
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Call     PlayEffect  	( ~FX:Lightning *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 )
	Call	$Function_SetCyanLightningPalette ( *VarF )		
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add 	 *Var1 350`
	Add 	 *Var0 200`
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Call     PlayEffect  	( ~FX:Lightning *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 )
	Call	$Function_SetCyanLightningPalette ( *VarF )		
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add 	 *Var1 200`
	Sub 	 *Var0 300`
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Call     PlayEffect  	( ~FX:Lightning *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 )
	Call	$Function_SetCyanLightningPalette ( *VarF )		
	Wait     00000009 	
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     EnemyTestTarget ( .Actor:Self *Var[F] 00000000 00000000 00000001 00000010 )
	Switch *Var[F]
		Case == 5`
			Call     EnemyTestTarget ( .Actor:Self *Var[A] 80000000 00000000 00000000 00000000 )
		Case == 6`		
		Default
			Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000020 00000000 00000000 00000006 00000020 )
	EndSwitch
	%
	Wait 	 5`
    Call     SetGoalToTarget 	( .Actor:Self )
	Wait     00000003 
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Call     PlayEffect  	( ~FX:Lightning *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 )
	Call	$Function_SetMagentaLightningPalette ( *VarF )		
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add 	 *Var1 350`
	Add 	 *Var0 200`
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Call     PlayEffect  	( ~FX:Lightning *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 )
	Call	$Function_SetMagentaLightningPalette ( *VarF )		
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add 	 *Var1 200`
	Sub 	 *Var0 300`
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Call     PlayEffect  	( ~FX:Lightning *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 )
	Call	$Function_SetMagentaLightningPalette ( *VarF )		
	Wait     00000009 	
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     EnemyTestTarget ( .Actor:Self *Var[F] 00000000 00000000 00000001 00000010 )
	Switch *Var[F]
		Case == 5`
			Call     EnemyTestTarget ( .Actor:Self *Var[A] 80000000 00000000 00000000 00000000 )
		Case == 6`		
		Default
			Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000020 00000000 00000000 00000006 00000020 )
	EndSwitch
	%
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Call     EnableIdleScript 	( .Actor:Self .True )
	Return
	End
}

#new:Script $PrismaticLightning3
{
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self .False )
	%
	Call	 SetTargetActor 	( .Actor:Self .Actor:Player )
    Call     SetGoalToTarget 	( .Actor:Self )
	Wait     00000003 
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Call     PlayEffect  	( ~FX:Lightning *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 )
	Call	$Function_SetRedLightningPalette ( *VarF )		
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add 	 *Var1 350`
	Add 	 *Var0 200`
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Call     PlayEffect  	( ~FX:Lightning *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 )
	Call	$Function_SetRedLightningPalette ( *VarF )		
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add 	 *Var1 200`
	Sub 	 *Var0 300`
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Call     PlayEffect  	( ~FX:Lightning *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 )
	Call	$Function_SetRedLightningPalette ( *VarF )		
	Wait     00000009 	
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     EnemyTestTarget ( .Actor:Self *Var[F] 00000000 00000000 00000001 00000010 )
	Switch *Var[F]
		Case == 5`
			Call     EnemyTestTarget ( .Actor:Self *Var[A] 80000000 00000000 00000000 00000000 )
		Case == 6`		
		Default
			Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 80200264 00000005 00000020 )
	EndSwitch
	%
	%Wait 	 4`
    Call     SetGoalToTarget 	( .Actor:Self )
	Wait     00000003 
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Call     PlayEffect  	( ~FX:Lightning *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 )
	Call	$Function_SetYellowLightningPalette ( *VarF )		
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add 	 *Var1 350`
	Add 	 *Var0 200`
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Call     PlayEffect  	( ~FX:Lightning *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 )
	Call	$Function_SetYellowLightningPalette ( *VarF )		
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add 	 *Var1 200`
	Sub 	 *Var0 300`
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Call     PlayEffect  	( ~FX:Lightning *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 )
	Call	$Function_SetYellowLightningPalette ( *VarF )		
	Wait     00000009 	
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     EnemyTestTarget ( .Actor:Self *Var[F] 00000000 00000000 00000001 00000010 )
	Switch *Var[F]
		Case == 5`
			Call     EnemyTestTarget ( .Actor:Self *Var[A] 80000000 00000000 00000000 00000000 )
		Case == 6`		
		Default
			Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 80010264 00000005 00000020 )
	EndSwitch
	%
	%Wait 	 4`
    Call     SetGoalToTarget 	( .Actor:Self )
	Wait     00000003 
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Call     PlayEffect  	( ~FX:Lightning *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 )
	Call	$Function_SetGreenLightningPalette ( *VarF )		
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add 	 *Var1 350`
	Add 	 *Var0 200`
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Call     PlayEffect  	( ~FX:Lightning *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 )
	Call	$Function_SetGreenLightningPalette ( *VarF )		
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add 	 *Var1 200`
	Sub 	 *Var0 300`
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Call     PlayEffect  	( ~FX:Lightning *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 )
	Call	$Function_SetGreenLightningPalette ( *VarF )		
	Wait     00000009 	
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     EnemyTestTarget ( .Actor:Self *Var[F] 00000000 00000000 00000001 00000010 )
	Switch *Var[F]
		Case == 5`
			Call     EnemyTestTarget ( .Actor:Self *Var[A] 80000000 00000000 00000000 00000000 )
		Case == 6`		
		Default
			Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 80020264 00000005 00000020 )
	EndSwitch
	%
	%Wait 	 4`
    Call     SetGoalToTarget 	( .Actor:Self )
	Wait     00000003 
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Call     PlayEffect  	( ~FX:Lightning *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 )
	Call	$Function_SetCyanLightningPalette ( *VarF )		
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add 	 *Var1 350`
	Add 	 *Var0 200`
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Call     PlayEffect  	( ~FX:Lightning *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 )
	Call	$Function_SetCyanLightningPalette ( *VarF )		
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add 	 *Var1 200`
	Sub 	 *Var0 300`
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Call     PlayEffect  	( ~FX:Lightning *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 )
	Call	$Function_SetCyanLightningPalette ( *VarF )		
	Wait     00000009 	
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     EnemyTestTarget ( .Actor:Self *Var[F] 00000000 00000000 00000001 00000010 )
	Switch *Var[F]
		Case == 5`
			Call     EnemyTestTarget ( .Actor:Self *Var[A] 80000000 00000000 00000000 00000000 )
		Case == 6`		
		Default
			Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 80004264 00000005 00000020 )
	EndSwitch
	%
	%Wait 	 4`
    Call     SetGoalToTarget 	( .Actor:Self )
	Wait     00000003 
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Call     PlayEffect  	( ~FX:Lightning *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 )
	Call	$Function_SetBlueLightningPalette ( *VarF )		
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add 	 *Var1 350`
	Add 	 *Var0 200`
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Call     PlayEffect  	( ~FX:Lightning *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 )
	Call	$Function_SetBlueLightningPalette ( *VarF )		
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add 	 *Var1 200`
	Sub 	 *Var0 300`
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Call     PlayEffect  	( ~FX:Lightning *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 )
	Call	$Function_SetBlueLightningPalette ( *VarF )		
	Wait     00000009 	
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     EnemyTestTarget ( .Actor:Self *Var[F] 00000000 00000000 00000001 00000010 )
	Switch *Var[F]
		Case == 5`
			Call     EnemyTestTarget ( .Actor:Self *Var[A] 80000000 00000000 00000000 00000000 )
		Case == 6`		
		Default
			Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 80001264 00000005 00000020 )
	EndSwitch
	%
	%Wait 	 4`
    Call     SetGoalToTarget 	( .Actor:Self )
	Wait     00000003 
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Call     PlayEffect  	( ~FX:Lightning *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 )
	Call	$Function_SetMagentaLightningPalette ( *VarF )		
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add 	 *Var1 350`
	Add 	 *Var0 200`
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Call     PlayEffect  	( ~FX:Lightning *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 )
	Call	$Function_SetMagentaLightningPalette ( *VarF )		
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add 	 *Var1 200`
	Sub 	 *Var0 300`
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Call     PlayEffect  	( ~FX:Lightning *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 )
	Call	$Function_SetMagentaLightningPalette ( *VarF )		
	Wait     00000009 	
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     EnemyTestTarget ( .Actor:Self *Var[F] 00000000 00000000 00000001 00000010 )
	Switch *Var[F]
		Case == 5`
			Call     EnemyTestTarget ( .Actor:Self *Var[A] 80000000 00000000 00000000 00000000 )
		Case == 6`		
		Default
			Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 80040264 00000005 00000020 )
	EndSwitch
	%
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Call     EnableIdleScript 	( .Actor:Self .True )
	Return
	End
}

#new:Script $PrismaticLightning3NoStatus
{
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self .False )
	%
	Call	 SetTargetActor 	( .Actor:Self .Actor:Player )
    Call     SetGoalToTarget 	( .Actor:Self )
	Wait     00000003 
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Call     PlayEffect  	( ~FX:Lightning *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 )
	Call	$Function_SetRedLightningPalette ( *VarF )		
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add 	 *Var1 350`
	Add 	 *Var0 200`
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Call     PlayEffect  	( ~FX:Lightning *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 )
	Call	$Function_SetRedLightningPalette ( *VarF )		
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add 	 *Var1 200`
	Sub 	 *Var0 300`
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Call     PlayEffect  	( ~FX:Lightning *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 )
	Call	$Function_SetRedLightningPalette ( *VarF )		
	Wait     00000009 	
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     EnemyTestTarget ( .Actor:Self *Var[F] 00000000 00000000 00000001 00000010 )
	Switch *Var[F]
		Case == 5`
			Call     EnemyTestTarget ( .Actor:Self *Var[A] 80000000 00000000 00000000 00000000 )
		Case == 6`		
		Default
			Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000005 00000020 )
	EndSwitch
	%
	%Wait 	 4`
    Call     SetGoalToTarget 	( .Actor:Self )
	Wait     00000003 
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Call     PlayEffect  	( ~FX:Lightning *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 )
	Call	$Function_SetYellowLightningPalette ( *VarF )		
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add 	 *Var1 350`
	Add 	 *Var0 200`
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Call     PlayEffect  	( ~FX:Lightning *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 )
	Call	$Function_SetYellowLightningPalette ( *VarF )		
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add 	 *Var1 200`
	Sub 	 *Var0 300`
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Call     PlayEffect  	( ~FX:Lightning *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 )
	Call	$Function_SetYellowLightningPalette ( *VarF )		
	Wait     00000009 	
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     EnemyTestTarget ( .Actor:Self *Var[F] 00000000 00000000 00000001 00000010 )
	Switch *Var[F]
		Case == 5`
			Call     EnemyTestTarget ( .Actor:Self *Var[A] 80000000 00000000 00000000 00000000 )
		Case == 6`		
		Default
			Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000005 00000020 )
	EndSwitch
	%
	%Wait 	 4`
    Call     SetGoalToTarget 	( .Actor:Self )
	Wait     00000003 
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Call     PlayEffect  	( ~FX:Lightning *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 )
	Call	$Function_SetGreenLightningPalette ( *VarF )		
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add 	 *Var1 350`
	Add 	 *Var0 200`
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Call     PlayEffect  	( ~FX:Lightning *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 )
	Call	$Function_SetGreenLightningPalette ( *VarF )		
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add 	 *Var1 200`
	Sub 	 *Var0 300`
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Call     PlayEffect  	( ~FX:Lightning *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 )
	Call	$Function_SetGreenLightningPalette ( *VarF )		
	Wait     00000009 	
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     EnemyTestTarget ( .Actor:Self *Var[F] 00000000 00000000 00000001 00000010 )
	Switch *Var[F]
		Case == 5`
			Call     EnemyTestTarget ( .Actor:Self *Var[A] 80000000 00000000 00000000 00000000 )
		Case == 6`		
		Default
			Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000005 00000020 )
	EndSwitch
	%
	%Wait 	 4`
    Call     SetGoalToTarget 	( .Actor:Self )
	Wait     00000003 
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Call     PlayEffect  	( ~FX:Lightning *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 )
	Call	$Function_SetCyanLightningPalette ( *VarF )		
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add 	 *Var1 350`
	Add 	 *Var0 200`
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Call     PlayEffect  	( ~FX:Lightning *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 )
	Call	$Function_SetCyanLightningPalette ( *VarF )		
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add 	 *Var1 200`
	Sub 	 *Var0 300`
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Call     PlayEffect  	( ~FX:Lightning *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 )
	Call	$Function_SetCyanLightningPalette ( *VarF )		
	Wait     00000009 	
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     EnemyTestTarget ( .Actor:Self *Var[F] 00000000 00000000 00000001 00000010 )
	Switch *Var[F]
		Case == 5`
			Call     EnemyTestTarget ( .Actor:Self *Var[A] 80000000 00000000 00000000 00000000 )
		Case == 6`		
		Default
			Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000005 00000020 )
	EndSwitch
	%
	%Wait 	 4`
    Call     SetGoalToTarget 	( .Actor:Self )
	Wait     00000003 
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Call     PlayEffect  	( ~FX:Lightning *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 )
	Call	$Function_SetBlueLightningPalette ( *VarF )		
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add 	 *Var1 350`
	Add 	 *Var0 200`
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Call     PlayEffect  	( ~FX:Lightning *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 )
	Call	$Function_SetBlueLightningPalette ( *VarF )		
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add 	 *Var1 200`
	Sub 	 *Var0 300`
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Call     PlayEffect  	( ~FX:Lightning *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 )
	Call	$Function_SetBlueLightningPalette ( *VarF )		
	Wait     00000009 	
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     EnemyTestTarget ( .Actor:Self *Var[F] 00000000 00000000 00000001 00000010 )
	Switch *Var[F]
		Case == 5`
			Call     EnemyTestTarget ( .Actor:Self *Var[A] 80000000 00000000 00000000 00000000 )
		Case == 6`		
		Default
			Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000005 00000020 )
	EndSwitch
	%
	%Wait 	 4`
    Call     SetGoalToTarget 	( .Actor:Self )
	Wait     00000003 
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Call     PlayEffect  	( ~FX:Lightning *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 )
	Call	$Function_SetMagentaLightningPalette ( *VarF )		
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add 	 *Var1 350`
	Add 	 *Var0 200`
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Call     PlayEffect  	( ~FX:Lightning *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 )
	Call	$Function_SetMagentaLightningPalette ( *VarF )		
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add 	 *Var1 200`
	Sub 	 *Var0 300`
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Call     PlayEffect  	( ~FX:Lightning *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 )
	Call	$Function_SetMagentaLightningPalette ( *VarF )		
	Wait     00000009 	
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     EnemyTestTarget ( .Actor:Self *Var[F] 00000000 00000000 00000001 00000010 )
	Switch *Var[F]
		Case == 5`
			Call     EnemyTestTarget ( .Actor:Self *Var[A] 80000000 00000000 00000000 00000000 )
		Case == 6`		
		Default
			Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000005 00000020 )
	EndSwitch
	%
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Call     EnableIdleScript 	( .Actor:Self .True )
	Return
	End
}

#new:Function $Function_SetGreenLightningPalette
{
		PUSH		RA, S0
    8:  LW			V0, C (A0)
    C:  JAL			~Func:get_variable
   10:  LW			A1, 0 (V0)
   14:  LW			V1, C (V0)
   18:  ADDIU		A1, R0, A0			%R
   1C:  SW			A1, 30 (V1)
   20:  LW			V1, C (V0)
   18:  ADDIU		A1, R0, FF			%G
   24:  SW			A1, 34 (V1)
   28:  LW			V1, C (V0)
   18:  ADDIU		A1, R0, A0			%B
   2C:  SW			A1, 38 (V1)
   30:  LW			A0, C (V0)
   34:  ADDIU		V1, R0, 77			%R 2
   38:  SW			V1, 40 (A0)
   3C:  LW			A0, C (V0)
   40:  ADDIU		V1, R0, FF			%G 2
   44:  SW			V1, 44 (A0)
   48:  LW			V1, C (V0)
   18:  ADDIU		A1, R0, 77			%B 2
   4C:  SW			A1, 48 (V1)
   54:  ADDIU		V0, R0, 2
		JPOP		RA, S0
}

#new:Function $Function_SetCyanLightningPalette
{
		PUSH		RA, S0
    8:  LW			V0, C (A0)
    C:  JAL			~Func:get_variable
   10:  LW			A1, 0 (V0)
   14:  LW			V1, C (V0)
   18:  ADDIU		A1, R0, A0			%R
   1C:  SW			A1, 30 (V1)
   20:  LW			V1, C (V0)
   18:  ADDIU		A1, R0, FF			%G
   24:  SW			A1, 34 (V1)
   28:  LW			V1, C (V0)
   18:  ADDIU		A1, R0, FF			%B
   2C:  SW			A1, 38 (V1)
   30:  LW			A0, C (V0)
   34:  ADDIU		V1, R0, 77			%R 2
   38:  SW			V1, 40 (A0)
   3C:  LW			A0, C (V0)
   40:  ADDIU		V1, R0, FF			%G 2
   44:  SW			V1, 44 (A0)
   48:  LW			V1, C (V0)
   18:  ADDIU		A1, R0, FF			%B 2
   4C:  SW			A1, 48 (V1)
   54:  ADDIU		V0, R0, 2
		JPOP		RA, S0
}

#new:Function $Function_SetMagentaLightningPalette
{
		PUSH		RA, S0
    8:  LW			V0, C (A0)
    C:  JAL			~Func:get_variable
   10:  LW			A1, 0 (V0)
   14:  LW			V1, C (V0)
   18:  ADDIU		A1, R0, FF			%R
   1C:  SW			A1, 30 (V1)
   20:  LW			V1, C (V0)
   18:  ADDIU		A1, R0, A0			%G
   24:  SW			A1, 34 (V1)
   28:  LW			V1, C (V0)
   18:  ADDIU		A1, R0, FF			%B
   2C:  SW			A1, 38 (V1)
   30:  LW			A0, C (V0)
   34:  ADDIU		V1, R0, FF			%R 2
   38:  SW			V1, 40 (A0)
   3C:  LW			A0, C (V0)
   40:  ADDIU		V1, R0, 77			%G 2
   44:  SW			V1, 44 (A0)
   48:  LW			V1, C (V0)
   18:  ADDIU		A1, R0, FF			%B 2
   4C:  SW			A1, 48 (V1)
   54:  ADDIU		V0, R0, 2
		JPOP		RA, S0
}

#new:Script $PrismaticBeam1
{
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self .False )
	Call     SetAnimation 	( .Actor:Self 00000001 .AnimKissB )
	Wait 	 8`	
	%Big fire cloud
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[0]  -20`
	Add  *Var[1]  28`
	Add  *Var[2]  2` 
	Call	 SetGoalToTarget ( .Actor:Self )
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Sub 	*Var0 1`
	Add		*Var1 5`
	Call     PlayEffect  	( ~FX:Squirt:Waterbeam *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] 00000001 0000000A 00000000 00000000 00000000 00000000 )
	Call	 $Function_WhiteBeam ( *VarF )
	Wait     0000000A
	Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 0000000C 00000020 )
	Call     SetAnimation 	( .Actor:Self 00000001 .AnimKissC )
	Wait 	 4`
	Call     SetAnimation 	( .Actor:Self 00000001 .AnimIdle )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Call     EnableIdleScript 	( .Actor:Self .True )
	Return
	End
}

#new:Script $PrismaticBeam2
{
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self .False )
	Call     SetAnimation 	( .Actor:Self 00000001 .AnimKissB )
	Wait 	 8`	
	%Big fire cloud
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[0]  -20`
	Add  *Var[1]  28`
	Add  *Var[2]  2` 
	Call	 SetGoalToTarget ( .Actor:Self )
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Sub 	*Var3 0`
	Add		*Var4 5`
	Call     PlayEffect  	( ~FX:Squirt:Waterbeam *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] 00000001 0000000A 00000000 00000000 00000000 00000000 )
	Call	 $Function_RedBeam ( *VarF )
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Sub 	*Var3 2`
	Add		*Var4 3`
	Call     PlayEffect  	( ~FX:Squirt:Waterbeam *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] 00000001 0000000A 00000000 00000000 00000000 00000000 )
	Call	 $Function_YellowBeam ( *VarF )
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Sub 	*Var3 3`
	Add		*Var4 2`
	Call     PlayEffect  	( ~FX:Squirt:Waterbeam *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] 00000001 0000000A 00000000 00000000 00000000 00000000 )
	Call	 $Function_GreenBeam ( *VarF )
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Sub 	*Var3 3`
	Sub		*Var4 2`
	Call     PlayEffect  	( ~FX:Squirt:Waterbeam *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] 00000001 0000000A 00000000 00000000 00000000 00000000 )
	Call	 $Function_CyanBeam ( *VarF )
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Sub 	*Var3 2`
	Sub		*Var4 3`
	Call     PlayEffect  	( ~FX:Squirt:Waterbeam *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] 00000001 0000000A 00000000 00000000 00000000 00000000 )
	Call	 $Function_BlueBeam ( *VarF )
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Sub 	*Var3 0`
	Sub		*Var4 5`
	Call     PlayEffect  	( ~FX:Squirt:Waterbeam *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] 00000001 0000000A 00000000 00000000 00000000 00000000 )
	Call	 $Function_MagentaBeam ( *VarF )
	Wait     0000000A
	Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000010 00000020 )
	Call     SetAnimation 	( .Actor:Self 00000001 .AnimKissC )
	Wait 	 4`
	Call     SetAnimation 	( .Actor:Self 00000001 .AnimIdle )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Call     EnableIdleScript 	( .Actor:Self .True )
	Return
	End
}

#new:Script $PrismaticBeam3
{
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self .False )
	Call     SetAnimation 	( .Actor:Self 00000001 .AnimKissB )
	Wait 	 8`	
	%Big fire cloud
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[0]  -20`
	Add  *Var[1]  28`
	Add  *Var[2]  2` 
	Call	 SetGoalToTarget ( .Actor:Self )
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Sub 	*Var3 0`
	Add		*Var4 12`
	Call     PlayEffect  	( ~FX:Squirt:Waterbeam *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] 00000006 0000000A 00000000 00000000 00000000 00000000 )
	Call	 $Function_RedBeam ( *VarF )
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Sub 	*Var3 6`
	Add		*Var4 9`
	Call     PlayEffect  	( ~FX:Squirt:Waterbeam *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] 00000006 0000000A 00000000 00000000 00000000 00000000 )
	Call	 $Function_YellowBeam ( *VarF )
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Sub 	*Var3 9`
	Add		*Var4 6`
	Call     PlayEffect  	( ~FX:Squirt:Waterbeam *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] 00000006 0000000A 00000000 00000000 00000000 00000000 )
	Call	 $Function_GreenBeam ( *VarF )
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Sub 	*Var3 9`
	Sub		*Var4 6`
	Call     PlayEffect  	( ~FX:Squirt:Waterbeam *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] 00000006 0000000A 00000000 00000000 00000000 00000000 )
	Call	 $Function_CyanBeam ( *VarF )
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Sub 	*Var3 6`
	Sub		*Var4 9`
	Call     PlayEffect  	( ~FX:Squirt:Waterbeam *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] 00000006 0000000A 00000000 00000000 00000000 00000000 )
	Call	 $Function_BlueBeam ( *VarF )
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Sub 	*Var3 0`
	Sub		*Var4 12`
	Call     PlayEffect  	( ~FX:Squirt:Waterbeam *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] 00000006 0000000A 00000000 00000000 00000000 00000000 )
	Call	 $Function_MagentaBeam ( *VarF )
	Wait     0000000A
	Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000014 00000020 )
	Call     SetAnimation 	( .Actor:Self 00000001 .AnimKissC )
	Wait 	 4`
	Call     SetAnimation 	( .Actor:Self 00000001 .AnimIdle )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Call     EnableIdleScript 	( .Actor:Self .True )
	Return
	End
}

#new:Function $Function_WhiteBeam  
{
    0:  ADDIU        SP, SP, FFE8
    4:  SW            RA, 10 (SP)
    8:  LW            V0, C (A0)
    C:  JAL            ~Func:get_variable
   10:  LW            A1, 0 (V0)
   14:  LW            V1, C (V0)
   18:  ADDIU        A0, R0, FF                %R
   1C:  SW            A0, 34 (V1)
   20:  LW            V1, C (V0)
        ADDIU        A0, R0, FF                %G
   24:  SW            A0, 38 (V1)
   28:  LW            V1, C (V0)
   2C:  ADDIU        A1, R0, FF                %B
   30:  SW            A1, 3C (V1)
   34:  LW            A0, C (V0)
   38:  ADDIU        V1, R0, D0                %R 2
   3C:  SW            V1, 44 (A0)
   40:  LW            A0, C (V0)
   44:  ADDIU        V1, R0, D0                %G 2
   48:  SW            V1, 48 (A0)
   4C:  LW            V1, C (V0)
        ADDIU        A1, R0, D0                %B 2
   50:  SW            A1, 4C (V1)
   54:  LW            RA, 10 (SP)
   58:  ADDIU        V0, R0, 2
   5C:  JR            RA
   60:  ADDIU        SP, SP, 18
}

#new:Function $Function_RedBeam  
{
    0:  ADDIU        SP, SP, FFE8
    4:  SW            RA, 10 (SP)
    8:  LW            V0, C (A0)
    C:  JAL            ~Func:get_variable
   10:  LW            A1, 0 (V0)
   14:  LW            V1, C (V0)
   18:  ADDIU        A0, R0, FF                %R
   1C:  SW            A0, 34 (V1)
   20:  LW            V1, C (V0)
        ADDIU        A0, R0, D0                %G
   24:  SW            A0, 38 (V1)
   28:  LW            V1, C (V0)
   2C:  ADDIU        A1, R0, D0                %B
   30:  SW            A1, 3C (V1)
   34:  LW            A0, C (V0)
   38:  ADDIU        V1, R0, FF                %R 2
   3C:  SW            V1, 44 (A0)
   40:  LW            A0, C (V0)
   44:  ADDIU        V1, R0, 80                %G 2
   48:  SW            V1, 48 (A0)
   4C:  LW            V1, C (V0)
        ADDIU        A1, R0, 80                %B 2
   50:  SW            A1, 4C (V1)
   54:  LW            RA, 10 (SP)
   58:  ADDIU        V0, R0, 2
   5C:  JR            RA
   60:  ADDIU        SP, SP, 18
}

#new:Function $Function_YellowBeam  
{
    0:  ADDIU        SP, SP, FFE8
    4:  SW            RA, 10 (SP)
    8:  LW            V0, C (A0)
    C:  JAL            ~Func:get_variable
   10:  LW            A1, 0 (V0)
   14:  LW            V1, C (V0)
   18:  ADDIU        A0, R0, FF                %R
   1C:  SW            A0, 34 (V1)
   20:  LW            V1, C (V0)
        ADDIU        A0, R0, FF                %G
   24:  SW            A0, 38 (V1)
   28:  LW            V1, C (V0)
   2C:  ADDIU        A1, R0, D0                %B
   30:  SW            A1, 3C (V1)
   34:  LW            A0, C (V0)
   38:  ADDIU        V1, R0, FF                %R 2
   3C:  SW            V1, 44 (A0)
   40:  LW            A0, C (V0)
   44:  ADDIU        V1, R0, FF                %G 2
   48:  SW            V1, 48 (A0)
   4C:  LW            V1, C (V0)
        ADDIU        A1, R0, 80                %B 2
   50:  SW            A1, 4C (V1)
   54:  LW            RA, 10 (SP)
   58:  ADDIU        V0, R0, 2
   5C:  JR            RA
   60:  ADDIU        SP, SP, 18
}

#new:Function $Function_GreenBeam  
{
    0:  ADDIU        SP, SP, FFE8
    4:  SW            RA, 10 (SP)
    8:  LW            V0, C (A0)
    C:  JAL            ~Func:get_variable
   10:  LW            A1, 0 (V0)
   14:  LW            V1, C (V0)
   18:  ADDIU        A0, R0, D0                %R
   1C:  SW            A0, 34 (V1)
   20:  LW            V1, C (V0)
        ADDIU        A0, R0, FF                %G
   24:  SW            A0, 38 (V1)
   28:  LW            V1, C (V0)
   2C:  ADDIU        A1, R0, D0                %B
   30:  SW            A1, 3C (V1)
   34:  LW            A0, C (V0)
   38:  ADDIU        V1, R0, 80                %R 2
   3C:  SW            V1, 44 (A0)
   40:  LW            A0, C (V0)
   44:  ADDIU        V1, R0, FF                %G 2
   48:  SW            V1, 48 (A0)
   4C:  LW            V1, C (V0)
        ADDIU        A1, R0, 80                %B 2
   50:  SW            A1, 4C (V1)
   54:  LW            RA, 10 (SP)
   58:  ADDIU        V0, R0, 2
   5C:  JR            RA
   60:  ADDIU        SP, SP, 18
}

#new:Function $Function_BlueBeam  
{
    0:  ADDIU        SP, SP, FFE8
    4:  SW            RA, 10 (SP)
    8:  LW            V0, C (A0)
    C:  JAL            ~Func:get_variable
   10:  LW            A1, 0 (V0)
   14:  LW            V1, C (V0)
   18:  ADDIU        A0, R0, D0                %R
   1C:  SW            A0, 34 (V1)
   20:  LW            V1, C (V0)
        ADDIU        A0, R0, D0                %G
   24:  SW            A0, 38 (V1)
   28:  LW            V1, C (V0)
   2C:  ADDIU        A1, R0, FF                %B
   30:  SW            A1, 3C (V1)
   34:  LW            A0, C (V0)
   38:  ADDIU        V1, R0, 80                %R 2
   3C:  SW            V1, 44 (A0)
   40:  LW            A0, C (V0)
   44:  ADDIU        V1, R0, 80                %G 2
   48:  SW            V1, 48 (A0)
   4C:  LW            V1, C (V0)
        ADDIU        A1, R0, FF                %B 2
   50:  SW            A1, 4C (V1)
   54:  LW            RA, 10 (SP)
   58:  ADDIU        V0, R0, 2
   5C:  JR            RA
   60:  ADDIU        SP, SP, 18
}

#new:Function $Function_CyanBeam  
{
    0:  ADDIU        SP, SP, FFE8
    4:  SW            RA, 10 (SP)
    8:  LW            V0, C (A0)
    C:  JAL            ~Func:get_variable
   10:  LW            A1, 0 (V0)
   14:  LW            V1, C (V0)
   18:  ADDIU        A0, R0, D0                %R
   1C:  SW            A0, 34 (V1)
   20:  LW            V1, C (V0)
        ADDIU        A0, R0, FF                %G
   24:  SW            A0, 38 (V1)
   28:  LW            V1, C (V0)
   2C:  ADDIU        A1, R0, FF                %B
   30:  SW            A1, 3C (V1)
   34:  LW            A0, C (V0)
   38:  ADDIU        V1, R0, 80                %R 2
   3C:  SW            V1, 44 (A0)
   40:  LW            A0, C (V0)
   44:  ADDIU        V1, R0, FF                %G 2
   48:  SW            V1, 48 (A0)
   4C:  LW            V1, C (V0)
        ADDIU        A1, R0, FF                %B 2
   50:  SW            A1, 4C (V1)
   54:  LW            RA, 10 (SP)
   58:  ADDIU        V0, R0, 2
   5C:  JR            RA
   60:  ADDIU        SP, SP, 18
}

#new:Function $Function_MagentaBeam  
{
    0:  ADDIU        SP, SP, FFE8
    4:  SW            RA, 10 (SP)
    8:  LW            V0, C (A0)
    C:  JAL            ~Func:get_variable
   10:  LW            A1, 0 (V0)
   14:  LW            V1, C (V0)
   18:  ADDIU        A0, R0, FF                %R
   1C:  SW            A0, 34 (V1)
   20:  LW            V1, C (V0)
        ADDIU        A0, R0, D0                %G
   24:  SW            A0, 38 (V1)
   28:  LW            V1, C (V0)
   2C:  ADDIU        A1, R0, FF                %B
   30:  SW            A1, 3C (V1)
   34:  LW            A0, C (V0)
   38:  ADDIU        V1, R0, FF                %R 2
   3C:  SW            V1, 44 (A0)
   40:  LW            A0, C (V0)
   44:  ADDIU        V1, R0, 80                %G 2
   48:  SW            V1, 48 (A0)
   4C:  LW            V1, C (V0)
        ADDIU        A1, R0, FF                %B 2
   50:  SW            A1, 4C (V1)
   54:  LW            RA, 10 (SP)
   58:  ADDIU        V0, R0, 2
   5C:  JR            RA
   60:  ADDIU        SP, SP, 18
}



%Light guardians
%Only spawned by Queen of Light (requires some vars to store some values)
%They don't move on their own
%Counter script is invoked in QoL handle event script (use same logic as chomp counter)

%They act like Robotoad


#define .GuardianStopR	00870600
#define .GuardianIdleR	00870601
#define .GuardianPainR	00870608
#define .GuardianDeadR	0087060C
#define .GuardianBurnR  00870608
#define .GuardianBurn2R  00870608
#define .GuardianStabR  00870607 	%equivalent to original yellow attack
#define .GuardianSpearOutR 0087060A
#define .GuardianRunR	00870603

#define .GuardianStopB	00870800
#define .GuardianIdleB	00870801
#define .GuardianPainB	00870808
#define .GuardianDeadB	0087080C
#define .GuardianBurnB  00870808
#define .GuardianBurn2B 00870808
#define .GuardianStabB  00870807 	%equivalent to original yellow attack
#define .GuardianSpearOutB 0087080A
#define .GuardianRunB	00870803

#define .GuardianStopY	00870700
#define .GuardianIdleY	00870701
#define .GuardianPainY	00870708
#define .GuardianDeadY	0087070C
#define .GuardianBurnY  00870708
#define .GuardianBurn2Y 00870708
#define .GuardianStabY  00870707 %spear slap
#define .GuardianSpearOutY 0087070A
#define .GuardianRunY	00870703

#new:Actor $LightGuardian
{
% stats
[Index]         EAb % index from ActorTable.xml
[Level]        50`b %give you some sp 
[MaxHP]        50`b %big robot 
[Coins]         1`b 
[Flags]       00000000 
[StatusTable] $StatusTable_LightGuardian 
% ai
[PartsCount]   1`s 
[PartsTable] $PartsTable_LightGuardian 
[Script]      $Script_Init_LightGuardian
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]   3`b 
[SpinSmash]     4`b % weight (0-4)
% ui positions
[Size]         24`b  24`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

%immune to element it's colored after
%weak to the next element it's colored after

#new:DefenseTable $DefenseTable_LightGuardian_Red
{
.Element:Normal 00000001
.Element:Fire   00000063
.Element:Water  FFFFFFFE
.Element:End
}

#new:DefenseTable $DefenseTable_LightGuardian_Blue
{
.Element:Normal 00000006
.Element:Water  00000063
.Element:Shock  FFFFFFFE
.Element:End
}

#new:DefenseTable $DefenseTable_LightGuardian_Yellow
{
.Element:Normal 00000001
.Element:Shock   00000063
.Element:Fire  FFFFFFFE
.Element:End
}

#new:StatusTable $StatusTable_LightGuardian
{
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy       0`	%only once though
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink      0`
.Status:Stop        0` %for easier access after chapter 6
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End
}

#new:PartsTable $PartsTable_LightGuardian
{
00800000 01000000 001400FF $IdleAnimations_LightGuardian_Red $DefenseTable_LightGuardian_Red 00000000 00000000 00F60000 00000000 
}

#new:IdleAnimations $IdleAnimations_LightGuardian_Red
{
.Status:Normal    .GuardianIdleR
.Status:Stone     .GuardianStopR
.Status:Sleep     .GuardianStopR
.Status:Poison    .GuardianStopR
.Status:Stop      .GuardianStopR
.Status:Static    .GuardianIdleR
.Status:Paralyze  .GuardianStopR
.Status:Dizzy     .GuardianStopR
.Status:Fear      .GuardianStopR
.Status:End
}

#new:IdleAnimations $IdleAnimations_LightGuardian_Blue
{
.Status:Normal    .GuardianIdleB
.Status:Stone     .GuardianStopB
.Status:Sleep     .GuardianStopB
.Status:Poison    .GuardianStopB
.Status:Stop      .GuardianStopB
.Status:Static    .GuardianIdleB
.Status:Paralyze  .GuardianStopB
.Status:Dizzy     .GuardianStopB
.Status:Fear      .GuardianStopB
.Status:End
}

#new:IdleAnimations $IdleAnimations_LightGuardian_Yellow
{
.Status:Normal    .GuardianIdleY
.Status:Stone     .GuardianStopY
.Status:Sleep     .GuardianStopY
.Status:Poison    .GuardianStopY
.Status:Stop      .GuardianStopY
.Status:Static    .GuardianIdleY
.Status:Paralyze  .GuardianStopY
.Status:Dizzy     .GuardianStopY
.Status:Fear      .GuardianStopY
.Status:End
}

#new:Script $Script_Init_LightGuardian
{
	Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_LightGuardian_Real )
	%Not binding a TakeTurn results in strange behavior
	%To do: Find out where this default script is?
	Call     BindIdle    	( .Actor:Self $Script_Idle_LightGuardian )
    Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_LightGuardian )
    Call     BindNextTurn 	( .Actor:Self $Script_NextTurn_LightGuardian )
	Call	 SetActorVar (.Actor:Self 00000001 00000000) %current color (0 = red, 2 = blue, 3 = yellow)
	Call	 SetActorVar (.Actor:Self 00000002 00000000) %last color
	Call	 SetActorVar (.Actor:Self 00000003 00000000) %is moving
	Call	$Function_SetName_C ( EA 002900F4 )
	Call	$Function_SetTattle_C ( EA 001C0161 )
    Return
    End
}

#new:Script $Script_TakeTurn_LightGuardian_Real
{
	Return
	End
}

#new:Script $Script_ChangeColor %I think we can change it immediately, without doing the same stuff as the spy guys
{
	Call	 GetActorVar (.Actor:Self 00000001 *Var[0])
	Switch *Var[0]
		Case == 00000001
			Call	 SetActorVar (.Actor:Self 00000001 00000000) %current color (0 = red, 2 = blue, 1 = yellow)
			Goto 0
		Case == 00000002
			Call	 SetActorVar (.Actor:Self 00000001 00000001) %current color (0 = red, 2 = blue, 1 = yellow)
			Goto 0
		Case == 00000000
			Call	 SetActorVar (.Actor:Self 00000001 00000002) %current color (0 = red, 2 = blue, 1 = yellow)
			Goto 0
	EndSwitch
	Label 0
	%Label    00000000 
	%Call     GetBattleFlags ( *Var[0] )
	%If  *Var[0]  &  00000100 
	%	Wait     00000001 
	%	Goto     00000000 
	%EndIf
	Call	 GetActorVar (.Actor:Self 00000001 *Var[F] ) 
	Switch *Var[F]
		Case == 00000000
			Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_LightGuardian_Red )
			Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_LightGuardian_Red )
			Call	 SetActorVar (.Actor:Self 00000002 *Var[F]) 
		Case == 00000002
			Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_LightGuardian_Blue )
			Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_LightGuardian_Blue )
			Call	 SetActorVar (.Actor:Self 00000002 *Var[F]) 
		Case == 00000001
			Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_LightGuardian_Yellow )
			Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_LightGuardian_Yellow )
			Call	 SetActorVar (.Actor:Self 00000002 *Var[F]) 
	EndSwitch
	Return
	End
}
	
#new:Script $Script_UpdateColor
{
	Call	 GetActorVar (.Actor:Self 00000001 *Var[F] ) 
	Switch *Var[F]
		Case == 00000000
			Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_LightGuardian_Red )
			Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_LightGuardian_Red )
			Call	 SetActorVar (.Actor:Self 00000002 *Var[F]) 
		Case == 00000002
			Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_LightGuardian_Blue )
			Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_LightGuardian_Blue )
			Call	 SetActorVar (.Actor:Self 00000002 *Var[F]) 
		Case == 00000001
			Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_LightGuardian_Yellow )
			Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_LightGuardian_Yellow )
			Call	 SetActorVar (.Actor:Self 00000002 *Var[F]) 
	EndSwitch
	Return
	End
}

%This is very hacky but if it works it works
%It does not 
%Panik
#new:Script $Script_Idle_LightGuardian
{
	Return
	End
}

#new:Script $Script_HandleEvent_LightGuardian %to do: find out how certain events are handles (i.e. fan smack only changes color once instead of 5 times)
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   44:  Call     GetLastEvent 	( .Actor:Self *Var[0] )
   58:  Switch  *Var[0] 
   64:  	CaseOR  ==  .Event:HitCombo
   70:  	CaseOR  ==  .Event:Hit
				ExecWait $Script_ChangeColor
   7C:  		SetConst  *Var[0]  00000001 
   8C:  		SetConst  *Var[1]  .GuardianPainR
				Call	 GetActorVar (.Actor:Self 00000001 *Var[2] )
				Mul *Var[2] 100
				Add *Var[1] *Var[2]
   9C:  		ExecWait DoNormalHit 
				ExecWait $Script_InvokeCounterSelf
   A8:  	EndCaseGroup
   B0:  	Case  ==  .Event:BurnHit
				ExecWait $Script_ChangeColor
   BC:  		SetConst  *Var[0]  00000001 
   CC:  		SetConst  *Var[1]  .GuardianBurnR
   DC:  		SetConst  *Var[2]  .GuardianBurn2R 
				Call	 GetActorVar (.Actor:Self 00000001 *Var[3] )
				Mul *Var[3] 100
				Add *Var[1] *Var[3]
				Add *Var[2] *Var[3]
   EC:  		ExecWait DoBurnHit 
				ExecWait $Script_InvokeCounterSelf
   F8:  	Case  ==  .Event:BurnDeath
  104:  		SetConst  *Var[0]  00000001 
  114:  		SetConst  *Var[1]  .GuardianBurnR
  124:  		SetConst  *Var[2]  .GuardianBurn2R 
				Call	 GetActorVar (.Actor:Self 00000001 *Var[3] )
				Mul *Var[3] 100
				Add *Var[1] *Var[3]
				Add *Var[2] *Var[3]
  134:  		ExecWait DoBurnHit 
  140:  		SetConst  *Var[0]  00000001 
  150:  		SetConst  *Var[1]  .GuardianBurn2R
				Call	 GetActorVar (.Actor:Self 00000001 *Var[3] )
				Mul *Var[3] 100
				Add *Var[1] *Var[3]
  160:  		ExecWait DoDeath 
  16C:  		Return
  174:  	Case  ==  .Event:SpinSmashHit
				ExecWait $Script_ChangeColor
  180:  		SetConst  *Var[0]  00000001 
  190:  		SetConst  *Var[1]  .GuardianPainR
				Call	 GetActorVar (.Actor:Self 00000001 *Var[2] )
				Mul *Var[2] 100
				Add *Var[1] *Var[2]
  1A0:  		ExecWait 8029B998 
				ExecWait $Script_InvokeCounterSelf
  1AC:  	Case  ==  .Event:SpinSmashDeath
  1B8:  		SetConst  *Var[0]  00000001 
  1C8:  		SetConst  *Var[1]  .GuardianPainR
				Call	 GetActorVar (.Actor:Self 00000001 *Var[3] )
				Mul *Var[3] 100
				Add *Var[1] *Var[3]
  1D8:  		ExecWait 8029B998 
  1E4:  		SetConst  *Var[0]  00000001 
  1F4:  		SetConst  *Var[1]  .GuardianDeadR
				Call	 GetActorVar (.Actor:Self 00000001 *Var[3] )
				Mul *Var[3] 100
				Add *Var[1] *Var[3]
  204:  		ExecWait DoDeath 
  210:  		Return
  218:  	Case  ==  .Event:ShockHit
				ExecWait $Script_ChangeColor
  224:  		SetConst  *Var[0]  00000001 
  234:  		SetConst  *Var[1]  .GuardianPainR 
				Call	 GetActorVar (.Actor:Self 00000001 *Var[2] )
				Mul *Var[2] 100
				Add *Var[1] *Var[2]
  244:  		ExecWait DoShockHit 
  250:  		SetConst  *Var[0]  00000001 
  260:  		SetConst  *Var[1]  .GuardianPainR
				Call	 GetActorVar (.Actor:Self 00000001 *Var[2] )
				Mul *Var[2] 100
				Add *Var[1] *Var[2]
  270:  		ExecWait 8029BD70 
  27C:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  29C:  		Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[2.0] )
  2B4:  		Call     SetAnimation 	( .Actor:Self 00000001 .GuardianRunR )
  2CC:  		Call     SetGoalToHome 	( .Actor:Self )
  2DC:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  2F0:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  308:  		Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[1.0] )
  320:  		Wait     00000005 
  32C:  		Call     SetAnimation 	( .Actor:Self 00000001 .GuardianIdleR )
  344:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.6005859] )
  358:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  378:  	Case  ==  .Event:ShockDeath
  384:  		SetConst  *Var[0]  00000001 
  394:  		SetConst  *Var[1]  .GuardianPainR
				Call	 GetActorVar (.Actor:Self 00000001 *Var[3] )
				Mul *Var[3] 100
				Add *Var[1] *Var[3]
  3A4:  		ExecWait DoShockHit 
  3B0:  		SetConst  *Var[0]  00000001 
  3C0:  		SetConst  *Var[1]  .GuardianDeadR
				Call	 GetActorVar (.Actor:Self 00000001 *Var[3] )
				Mul *Var[3] 100
				Add *Var[1] *Var[3]
  3D0:  		ExecWait DoDeath 
  3DC:  		Return
  3E4:  	Case  ==  .Event:StarBeam
  3F0:  	CaseOR  ==  00000017
  3FC:  	CaseOR  ==  .Event:Immune
  408:  	CaseOR  ==  .Event:AirLiftFailed
  414:  		SetConst  *Var[0]  00000001 
  424:  		SetConst  *Var[1]  .GuardianIdleR
				Call	 GetActorVar (.Actor:Self 00000001 *Var[3] )
				Mul *Var[3] 100
				Add *Var[1] *Var[3]
  434:  		ExecWait DoImmune 
  440:  	EndCaseGroup
  448:  	Case  ==  .Event:Death
  454:  		SetConst  *Var[0]  00000001 
  464:  		SetConst  *Var[1]  .GuardianPainR
				Call	 GetActorVar (.Actor:Self 00000001 *Var[3] )
				Mul *Var[3] 100
				Add *Var[1] *Var[3]
  474:  		ExecWait DoNormalHit 
  480:  		Wait     0000000A 
  48C:  		SetConst  *Var[0]  00000001 
  49C:  		SetConst  *Var[1]  .GuardianDeadR
				Call	 GetActorVar (.Actor:Self 00000001 *Var[3] )
				Mul *Var[3] 100
				Add *Var[1] *Var[3]
  4AC:  		ExecWait DoDeath 
  4B8:  		Return
  4C0:  	Case  ==  .Event:EndFirstStrike
  4CC:  		Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[2.0] )
  4E4:  		Call     SetAnimation 	( .Actor:Self 00000001 .GuardianRunR )
  4FC:  		Call     SetGoalToHome 	( .Actor:Self )
  50C:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  520:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  538:  		Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[1.0] )
  550:  		Call     HPBarToHome 	( .Actor:Self )
  560:  	Case  ==  .Event:RecoverStatus
  56C:  		SetConst  *Var[0]  00000001 
  57C:  		SetConst  *Var[1]  .GuardianIdleR
				Call	 GetActorVar (.Actor:Self 00000001 *Var[3] )
				Mul *Var[3] 100
				Add *Var[1] *Var[3]
  58C:  		ExecWait DoRecover 
  598:  	Case  ==  .Event:ScareAway
  5A4:  		SetConst  *Var[0]  00000001 
  5B4:  		SetConst  *Var[1]  .GuardianRunR 
  5C4:  		SetConst  *Var[2]  .GuardianPainR
				Call	 GetActorVar (.Actor:Self 00000001 *Var[3] )
				Mul *Var[3] 100
				Add *Var[1] *Var[3]
				Add *Var[2] *Var[3]
  5D4:  		ExecWait DoScareAway 
  5E0:  		Return
  5E8:  	Case  ==  .Event:BeginAirLift
  5F4:  		SetConst  *Var[0]  00000001 
  604:  		SetConst  *Var[1]  .GuardianRunR 
				Call	 GetActorVar (.Actor:Self 00000001 *Var[3] )
				Mul *Var[3] 100
				Add *Var[1] *Var[3]
  614:  		ExecWait DoAirLift 
  620:  	Case  ==  .Event:BlowAway
  62C:  		SetConst  *Var[0]  00000001 
  63C:  		SetConst  *Var[1]  .GuardianPainR
				Call	 GetActorVar (.Actor:Self 00000001 *Var[3] )
				Mul *Var[3] 100
				Add *Var[1] *Var[3] 
  64C:  		ExecWait DoBlowAway 
  658:  		Return
  660:  	Default
  668:  EndSwitch
  %670:  Call     SetAnimation 	( .Actor:Self 00000001 .GuardianIdleR )
  688:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  69C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  6B0:  Return
  6B8:  End
}

#new:Script $Script_NextTurn_LightGuardian
{
	Call	GetBattlePhase ( *Var[0] )
	If  *Var[0] ==  .Phase:EnemyEnd
		Call	 GetActorVar (.Actor:Self 00000001 *Var[1] )
		If *Var[1] == 1`
			Call	PlaySoundAtActor	( .Actor:Self 000002D8 )
			%Thread
			Call	 8026BF48	( 00000001 )
			Call	 BoostAttack 	( .Actor:Self 00000001 )
			Call	 BoostDefense 	( .Actor:Self 00000001 )
			Call 	 8026BF48 ( 00000000 )
			%EndThread
		EndIf
	EndIf
	Return
	End
}

/%
#new:Script $Script_TakeTurn_LightGuardian % here's the hard part - the attack itself (or AI if you have more than one)
{
	%Might need to get rid of the Idle script thing later
	Call 	EnableIdleScript 	(.Actor:Self 00000000 )
	Call    UseIdleAnimation 	( .Actor:Self .False )
	Call	 SetActorVar ( .Actor:Self 00000003 00000001 ) %Am I moving? (0 = false, 1 = true)
	Call	 GetActorVar ( .Actor:Self 00000001 *Var[3] )
    Switch (*Var[3])
		Case == 00000000
			ExecWait $Script_TripleStab
		Case == 00000002
			ExecWait $Script_SingleStab
		Case == 00000001
			ExecWait $Script_RangeBeam
	EndSwitch
	Call	 SetActorVar ( .Actor:Self 00000003 00000000 ) %Am I moving? (0 = false, 1 = true)
	Call 	EnableIdleScript 	(.Actor:Self 00000001 )
	Call    UseIdleAnimation 	( .Actor:Self .True )
	Return
    End
}

#new:Script $Script_TripleStab
{
	Call	PlaySoundAtActor	( .Actor:Self 000002D8 )
	Wait 	 00000008
	Call     SetAnimation 	( .Actor:Self 00000002 .GuardianStabR )
	Call     SetAnimation 	( .Actor:Self 00000002 .GuardianSpearOutR )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     GetStatusFlags ( .Actor:Self *Var[3] )
	If  *Var[3]  !&  00080000 
		Add  *Var[0]  FFFFFFE9 
		Add  *Var[1]  00000014 
  	Else
		Add  *Var[0]  FFFFFFF6 
		Add  *Var[1]  00000008 
	EndIf
    Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Wait     00000003 
	Call     PlayEffect  	( ~FX:Lightning *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 )
	Call	$Function_SetRedLightningPalette ( *VarF )		
	Wait     00000009 
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     EnemyTestTarget ( .Actor:Self *Var[F] 00000000 00000000 00000001 00000010 )
	Switch *Var[F]
		Case == 00000005
			Call     EnemyTestTarget ( .Actor:Self *Var[A] 80000000 00000000 00000000 00000000 )
		Case == 00000006
		Default
			Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000020 00000000 00000000 00000007 00000020 )
			Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
			Call     GetStatusFlags ( .Actor:Self *Var[3] )
			If  *Var[3]  !&  00080000 
				Add  *Var[0]  FFFFFFE9 
				Add  *Var[1]  00000014 
			Else
				Add  *Var[0]  FFFFFFF6 
				Add  *Var[1]  00000008 
			EndIf
			Call     SetGoalToTarget 	( .Actor:Self )
			Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
			Wait     00000003 
			Call     PlayEffect  	( ~FX:Lightning *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 )
			Call	$Function_SetRedLightningPalette ( *VarF )		
			Wait     00000009 
			Call     SetGoalToTarget 	( .Actor:Self )
			Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000020 00000000 00000000 00000007 00000020 )
			Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
			Call     GetStatusFlags ( .Actor:Self *Var[3] )
			If  *Var[3]  !&  00080000 
				Add  *Var[0]  FFFFFFE9 
				Add  *Var[1]  00000014 
			Else
				Add  *Var[0]  FFFFFFF6 
				Add  *Var[1]  00000008 
			EndIf
			Call     SetGoalToTarget 	( .Actor:Self )
			Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
			Wait     00000003 
			Call     PlayEffect  	( ~FX:Lightning *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 )
			Call	$Function_SetRedLightningPalette ( *VarF )		
			Wait     00000009 
			Call     SetGoalToTarget 	( .Actor:Self )
			Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000020 00000000 00000000 00000007 00000020 )
	EndSwitch
	Return
	End
}

#new:Script $Script_SingleStab
{
	Call	PlaySoundAtActor	( .Actor:Self 000002D8 )
	Wait 	 00000008
	Call     SetAnimation 	( .Actor:Self 00000002 .GuardianStabB )
	Call     SetAnimation 	( .Actor:Self 00000002 .GuardianSpearOutB )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     GetStatusFlags ( .Actor:Self *Var[3] )
	If  *Var[3]  !&  00080000 
		Add  *Var[0]  FFFFFFE9 
		Add  *Var[1]  00000014 
  	Else
		Add  *Var[0]  FFFFFFF6 
		Add  *Var[1]  00000008 
	EndIf
    Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Wait     00000003 
	Call     PlayEffect  	( ~FX:Lightning *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 )
	Call	$Function_SetBlueLightningPalette ( *VarF )		
	Wait     00000009 
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     EnemyTestTarget ( .Actor:Self *Var[F] 00000000 00000000 00000001 00000010 )
	Switch *Var[F]
		Case == 00000005
			Call     EnemyTestTarget ( .Actor:Self *Var[A] 80000000 00000000 00000000 00000000 )
		Case == 00000006
		Default
			Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000020 00000000 80010164 0000000B 00000020 )
	EndSwitch
	Return
	End
}

#new:Script $Script_RangeBeam
{
	Call	PlaySoundAtActor	( .Actor:Self 000002D8 )
	Wait 	 00000008
	Call     SetAnimation 	( .Actor:Self 00000002 .GuardianStabY )
	Call     SetAnimation 	( .Actor:Self 00000002 .GuardianSpearOutY )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     GetStatusFlags ( .Actor:Self *Var[3] )
	If  *Var[3]  !&  00080000 
		Add  *Var[0]  FFFFFFE9 
		Add  *Var[1]  00000014 
  	Else
		Add  *Var[0]  FFFFFFF6 
		Add  *Var[1]  00000008 
	EndIf
    Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Wait     00000003 
	Call     PlayEffect  	( ~FX:Lightning *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 )
	Call	$Function_SetYellowLightningPalette ( *VarF )		
	Wait     00000009 
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     EnemyTestTarget ( .Actor:Self *Var[F] 00000000 00000000 00000001 00000010 )
	Switch *Var[F]
		Case == 00000005
			Call     EnemyTestTarget ( .Actor:Self *Var[A] 80000000 00000000 00000000 00000000 )
		Case == 00000006
		Default
			Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000020 00000000 00000000 00000008 00000020 )
	EndSwitch
	Wait	0000000B
	Call     SetTargetActor ( .Actor:Self .Actor:Partner )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     EnemyTestTarget ( .Actor:Self *Var[F] 00000000 00000000 00000001 00000010 )
	Switch *Var[F]
		Case == 00000006
		Default
			Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000020 00000000 00000000 00000002 00000020 )
	EndSwitch
	Return
	End
}
%/


#new:Script $Script_TakeTurn_LightGuardian % here's the hard part - the attack itself (or AI if you have more than one)
{
	Call	 SetActorVar ( *Var[D] 00000003 00000001 ) %is moving
	%Might need to get rid of the Idle script thing later
	Call 	EnableIdleScript 	(*Var[D] 00000000 )
	Call    UseIdleAnimation 	( *Var[D] .False )
	%ExecWait $Script_UpdateColor					Unsafe, do not call this here
	Call	 GetActorVar ( *Var[D] 00000001 *Var[3] )
    Switch (*Var[3])
		Case == 00000000
			ExecWait $Script_TripleStab
		Case == 00000002
			ExecWait $Script_SingleStab
		Case == 00000001
			ExecWait $Script_RangeBeam
	EndSwitch
	Call 	EnableIdleScript 	(*Var[D] 00000001 )
	Call    UseIdleAnimation 	( *Var[D] .True )
	Call	 SetActorVar ( *Var[D] 00000003 00000000) %is moving
	Return
    End
}

#new:Script $Script_TripleStab
{
	Call	PlaySoundAtActor	( *Var[D] 000002D8 )
	Wait 	 00000008
	Call     SetAnimation 	( *Var[D] 00000002 .GuardianStabR )
	Call     SetAnimation 	( *Var[D] 00000002 .GuardianSpearOutR )
	Call     SetTargetActor ( *Var[D] .Actor:Player )
	Call     GetActorPos 	( *Var[D] *Var[0] *Var[1] *Var[2] )
	Call     GetStatusFlags ( *Var[D] *Var[3] )
	If  *Var[3]  !&  00080000 
		Add  *Var[0]  FFFFFFE9 
		Add  *Var[1]  00000014 
  	Else
		Add  *Var[0]  FFFFFFF6 
		Add  *Var[1]  00000008 
	EndIf
    Call     SetGoalToTarget 	( *Var[D] )
	Call     GetGoalPos  	( *Var[D] *Var[3] *Var[4] *Var[5] )
	Wait     00000003 
	Call     PlayEffect  	( ~FX:Lightning *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 )
	Call	$Function_SetRedLightningPalette ( *VarF )		
	Wait     00000009 
	Call     SetGoalToTarget 	( *Var[D] )
	Call     EnemyTestTarget ( *Var[D] *Var[F] 00000000 00000000 00000001 00000010 )
	Switch *Var[F]
		Case == 00000005
			Call     EnemyTestTarget ( *Var[D] *Var[A] 80000000 00000000 00000000 00000000 )
		Case == 00000006
		Default
			Call     EnemyDamageTarget 	( *Var[D] *Var[0] 10000002 00000000 00000000 00000007 00000020 )
			Call     GetActorPos 	( *Var[D] *Var[0] *Var[1] *Var[2] )
			Call     GetStatusFlags ( *Var[D] *Var[3] )
			If  *Var[3]  !&  00080000 
				Add  *Var[0]  FFFFFFE9 
				Add  *Var[1]  00000014 
			Else
				Add  *Var[0]  FFFFFFF6 
				Add  *Var[1]  00000008 
			EndIf
			Call     SetGoalToTarget 	( *Var[D] )
			Call     GetGoalPos  	( *Var[D] *Var[3] *Var[4] *Var[5] )
			Wait     00000003 
			Call     PlayEffect  	( ~FX:Lightning *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 )
			Call	$Function_SetRedLightningPalette ( *VarF )		
			Wait     00000009 
			Call     SetGoalToTarget 	( *Var[D] )
			Call     EnemyDamageTarget 	( *Var[D] *Var[0] 10000002 00000000 00000000 00000007 00000020 )
			Call     GetActorPos 	( *Var[D] *Var[0] *Var[1] *Var[2] )
			Call     GetStatusFlags ( *Var[D] *Var[3] )
			If  *Var[3]  !&  00080000 
				Add  *Var[0]  FFFFFFE9 
				Add  *Var[1]  00000014 
			Else
				Add  *Var[0]  FFFFFFF6 
				Add  *Var[1]  00000008 
			EndIf
			Call     SetGoalToTarget 	( *Var[D] )
			Call     GetGoalPos  	( *Var[D] *Var[3] *Var[4] *Var[5] )
			Wait     00000003 
			Call     PlayEffect  	( ~FX:Lightning *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 )
			Call	$Function_SetRedLightningPalette ( *VarF )		
			Wait     00000009 
			Call     SetGoalToTarget 	( *Var[D] )
			Call     EnemyDamageTarget 	( *Var[D] *Var[0] 10000002 00000000 00000000 00000007 00000020 )
	EndSwitch
	Return
	End
}

#new:Script $Script_SingleStab
{
	Call	PlaySoundAtActor	( *Var[D] 000002D8 )
	Wait 	 00000008
	Call     SetAnimation 	( *Var[D] 00000002 .GuardianStabB )
	Call     SetAnimation 	( *Var[D] 00000002 .GuardianSpearOutB )
	Call     SetTargetActor ( *Var[D] .Actor:Player )
	Call     GetActorPos 	( *Var[D] *Var[0] *Var[1] *Var[2] )
	Call     GetStatusFlags ( *Var[D] *Var[3] )
	If  *Var[3]  !&  00080000 
		Add  *Var[0]  FFFFFFE9 
		Add  *Var[1]  00000014 
  	Else
		Add  *Var[0]  FFFFFFF6 
		Add  *Var[1]  00000008 
	EndIf
    Call     SetGoalToTarget 	( *Var[D] )
	Call     GetGoalPos  	( *Var[D] *Var[3] *Var[4] *Var[5] )
	Wait     00000003 
	Call     PlayEffect  	( ~FX:Lightning *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 )
	Call	$Function_SetBlueLightningPalette ( *VarF )		
	Wait     00000009 
	Call     SetGoalToTarget 	( *Var[D] )
	Call     EnemyTestTarget ( *Var[D] *Var[F] 00000000 00000000 00000001 00000010 )
	Switch *Var[F]
		Case == 00000005
			Call     EnemyTestTarget ( *Var[D] *Var[A] 80000000 00000000 00000000 00000000 )
		Case == 00000006
		Default
			Call     EnemyDamageTarget 	( *Var[D] *Var[0] 10000008 00000000 80004164 0000000B 00000020 )
	EndSwitch
	Return
	End
}

#new:Script $Script_RangeBeam
{
	Call	PlaySoundAtActor	( *Var[D] 000002D8 )
	Wait 	 00000008
	Call     SetAnimation 	( *Var[D] 00000002 .GuardianStabY )
	Call     SetAnimation 	( *Var[D] 00000002 .GuardianSpearOutY )
	Call     SetTargetActor ( *Var[D] .Actor:Player )
	Call     GetActorPos 	( *Var[D] *Var[0] *Var[1] *Var[2] )
	Call     GetStatusFlags ( *Var[D] *Var[3] )
	If  *Var[3]  !&  00080000 
		Add  *Var[0]  FFFFFFE9 
		Add  *Var[1]  00000014 
  	Else
		Add  *Var[0]  FFFFFFF6 
		Add  *Var[1]  00000008 
	EndIf
    Call     SetGoalToTarget 	( *Var[D] )
	Call     GetGoalPos  	( *Var[D] *Var[3] *Var[4] *Var[5] )
	Wait     00000003 
	Call     PlayEffect  	( ~FX:Lightning *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 )
	Call	$Function_SetYellowLightningPalette ( *VarF )		
	Wait     00000009 
	Call     SetGoalToTarget 	( *Var[D] )
	Call     EnemyTestTarget ( *Var[D] *Var[F] 00000000 00000000 00000001 00000010 )
	Switch *Var[F]
		Case == 00000005
			Call     EnemyTestTarget ( *Var[D] *Var[A] 80000000 00000000 00000000 00000000 )
		Case == 00000006
		Default
			Call     EnemyDamageTarget 	( *Var[D] *Var[0] 10000020 00000000 00000000 00000008 00000020 )
	EndSwitch
	Wait	0000000B
	Call     SetTargetActor ( *Var[D] .Actor:Partner )
	Call     SetGoalToTarget 	( *Var[D] )
	Call     EnemyTestTarget ( *Var[D] *Var[F] 00000000 00000000 00000001 00000010 )
	Switch *Var[F]
		Case == 00000006
		Default
			Call     EnemyDamageTarget 	( *Var[D] *Var[0] 10000020 00000000 00000000 00000002 00000020 )
	EndSwitch
	Return
	End
}



#new:Function $Function_SetRedLightningPalette
{
		PUSH		RA, S0
    8:  LW			V0, C (A0)
    C:  JAL			~Func:get_variable
   10:  LW			A1, 0 (V0)
   14:  LW			V1, C (V0)
   18:  ADDIU		A1, R0, FF			%R
   1C:  SW			A1, 30 (V1)
   20:  LW			V1, C (V0)
   18:  ADDIU		A1, R0, A0			%G
   24:  SW			A1, 34 (V1)
   28:  LW			V1, C (V0)
   18:  ADDIU		A1, R0, A0			%B
   2C:  SW			A1, 38 (V1)
   30:  LW			A0, C (V0)
   34:  ADDIU		V1, R0, FF			%R 2
   38:  SW			V1, 40 (A0)
   3C:  LW			A0, C (V0)
   40:  ADDIU		V1, R0, 77			%G 2
   44:  SW			V1, 44 (A0)
   48:  LW			V1, C (V0)
   18:  ADDIU		A1, R0, 77			%B 2
   4C:  SW			A1, 48 (V1)
   54:  ADDIU		V0, R0, 2
		JPOP		RA, S0
}

#new:Function $Function_SetYellowLightningPalette
{
		PUSH		RA, S0
    8:  LW			V0, C (A0)
    C:  JAL			~Func:get_variable
   10:  LW			A1, 0 (V0)
   14:  LW			V1, C (V0)
   18:  ADDIU		A1, R0, FF			%R
   1C:  SW			A1, 30 (V1)
   20:  LW			V1, C (V0)
   18:  ADDIU		A1, R0, FF			%G
   24:  SW			A1, 34 (V1)
   28:  LW			V1, C (V0)
   18:  ADDIU		A1, R0, A0			%B
   2C:  SW			A1, 38 (V1)
   30:  LW			A0, C (V0)
   34:  ADDIU		V1, R0, FF			%R 2
   38:  SW			V1, 40 (A0)
   3C:  LW			A0, C (V0)
   40:  ADDIU		V1, R0, FF			%G 2
   44:  SW			V1, 44 (A0)
   48:  LW			V1, C (V0)
   18:  ADDIU		A1, R0, 77			%B 2
   4C:  SW			A1, 48 (V1)
   54:  ADDIU		V0, R0, 2
		JPOP		RA, S0
}

#new:Function $Function_SetBlueLightningPalette
{
		PUSH		RA, S0
    8:  LW			V0, C (A0)
    C:  JAL			~Func:get_variable
   10:  LW			A1, 0 (V0)
   14:  LW			V1, C (V0)
   18:  ADDIU		A1, R0, A0			%R
   1C:  SW			A1, 30 (V1)
   20:  LW			V1, C (V0)
   18:  ADDIU		A1, R0, A0			%G
   24:  SW			A1, 34 (V1)
   28:  LW			V1, C (V0)
   18:  ADDIU		A1, R0, FF			%B
   2C:  SW			A1, 38 (V1)
   30:  LW			A0, C (V0)
   34:  ADDIU		V1, R0, 77			%R 2
   38:  SW			V1, 40 (A0)
   3C:  LW			A0, C (V0)
   40:  ADDIU		V1, R0, 77			%G 2
   44:  SW			V1, 44 (A0)
   48:  LW			V1, C (V0)
   18:  ADDIU		A1, R0, FF			%B 2
   4C:  SW			A1, 48 (V1)
   54:  ADDIU		V0, R0, 2
		JPOP		RA, S0
}


#new:Script $Script_IShouldTryHarder
{
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self .False )
	%Lol
	Call     ActorSpeak  	( $IShouldTryHarder .Actor:Self 00000001 .AnimTalk .AnimTalk ) %message
	Wait     0000000A
	Call     SetAnimation 	( .Actor:Self 00000001 .AnimBow )
	Wait 	 4`
	%monstar attack
	Call     UseBattleCamPreset 	( 00000013 )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add *Var1 20`
	Call     SetBattleCamTarget 	( *Var[0] *Var[1] *Var[2] )
	Call     SetBattleCamOffsetZ 	( 00000010 )
	Call     BattleCamTargetActor ( .Actor:Self )
	Call     MoveBattleCamOver 	( 0000001E )
	Wait 0000001E 
	Thread
		Call     $Function_80218458_DG ( )
		Call     MakeLerp    	( 00000000 000000C8 0000003C 00000001 )
		Label    00000000 
		Call     UpdateLerp  	( )
		Call     $Function_8021849C_DG ( *Var[0] )
		Wait     00000001 
		If  *Var[1]  ==  00000001 
			Goto     00000000 
		EndIf
	EndThread
	Call     PlaySoundAtActor 	( .Actor:Self .Sound:BigPowerUp )
	Call     $Function_802184D4_DG ( 00000050 00000078 )
	Call     UseBattleCamPreset 	( 00000013 )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add *Var1 20`
	Call     SetBattleCamTarget 	( *Var[0] *Var[1] *Var[2] )
	Call     SetBattleCamZoom  	( 00000064 )
	Call     SetBattleCamOffsetZ 	( 00000020 )
	Call     BattleCamTargetActor ( .Actor:Self )
	Call     MoveBattleCamOver 	( 0000003C )
	Wait     0000003C 
	Call     PlaySoundAtActor 	( .Actor:Self 000002EA )
	Call     PlaySoundAtActor 	( .Actor:Self 0000036E )
	Thread
		Wait     0000000A 
		Loop     00000012 
			Call     RandInt     	( 00000096 *Var[0] )
			Add  *Var[0]  00000064 
			Call     $Function_802184D4_DG ( *Var[0] 00000014 )
			Wait     0000000A 
		EndLoop
	EndThread
	Wait     00000008 
	Call     UseBattleCamPreset 	( 00000002 )
	Call     MoveBattleCamOver 	( 0000000A )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add *Var1 20`
	Add  *Var[2]  00000005 
	Call     PlayEffect  	( ~FX:RadialFlowOut:BlueSpikes *Var[0] *Var[1] *Var[2] *Fixed[0.80078125] 000000A0 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	Call	 $Function_SetRadialPalette ( *VarF )
	%
	Call  PlaySound     ( 000000A4 )
	Call  PlayEffect    ( ~FX:LightRays:SharpA *Var0 *Var1 *Var2 *Fixed[1.5] *VarF 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	Set *VarE *VarF
	Thread
		Wait  AA
		Call  StopSound     ( 000000A4 )
		Call  RemoveEffect      ( *VarE )
	EndThread
	%
	%Call     SetAnimation 	( .Actor:Self 00000001 0062050D )
	Thread
		%Shaky cam
		Wait 30`		
		Call	ShakeCam ( 00000001 00000000 00000014 *Fixed[1.0] )
		Call	ShakeCam ( 00000001 00000000 00000014 *Fixed[1.5] )
		Call	ShakeCam ( 00000001 00000000 00000014 *Fixed[2.0] )
		Call	ShakeCam ( 00000001 00000000 00000014 *Fixed[2.5] )
		Call	ShakeCam ( 00000001 00000000 00000014 *Fixed[3.0] )
		Call	ShakeCam ( 00000001 00000000 00000014 *Fixed[4.0] )
		Call	ShakeCam ( 00000001 00000000 00000014 *Fixed[5.0] )
	EndThread
	Wait     000000AA %170 frames
	Wait     00000002 
	Call 	 SetTargetActor  ( .Actor:Self .Actor:Player )
	Call     SetGoalToTarget 	( .Actor:Self )
	%TIME TO DIE!!!	(*actually no)
	Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 12020000 00000000 80200164 00000063 00000020 )
	Call 	 SetTargetActor  ( .Actor:Self .Actor:Partner )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 12020000 00000000 00000000 00000001 00000020 )
	Call 	 SetTargetActor  ( .Actor:Self .Actor:Player )
	Call     MakeLerp    	( 000000C8 00000000 0000003C 00000000 )
	Label    00000002 
	Call     UpdateLerp  	( )
	Call     $Function_8021849C_DG ( *Var[0] )
	Wait     00000001 
	If  *Var[1]  ==  00000001 
		Goto     00000002 
	EndIf
	Wait     00000014 
	Call     SetAnimation 	( .Actor:Self 00000001 .AnimIdle )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Call     EnableIdleScript 	( .Actor:Self .True )
	Return
	End
}


#new:Function $Function_80218458_DG
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  JAL       8011D82C
    C:  ADDIU     A0, R0, 1
   10:  DADDU     A0, R0, R0
   14:  ADDIU     V0, R0, 1
   18:  DADDU     A1, A0, R0
   1C:  DADDU     A2, A0, R0
   20:  LAW       V1, 801512F0
   28:  DADDU     A3, A0, R0
   2C:  JAL       8011BE5C
   30:  SB        V0, 0 (V1)
   34:  LW        RA, 10 (SP)
   38:  ADDIU     V0, R0, 2
   3C:  JR        RA
   40:  ADDIU     SP, SP, 18
}

#new:Function $Function_8021849C_DG
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  LW        V0, C (A0)
    C:  JAL       ~Func:get_variable
   10:  LW        A1, 0 (V0)
   14:  DADDU     A0, R0, R0
   18:  DADDU     A1, A0, R0
   1C:  DADDU     A2, A0, R0
   20:  JAL       8011BE5C
   24:  ANDI      A3, V0, FF
   28:  LW        RA, 10 (SP)
   2C:  ADDIU     V0, R0, 2
   30:  JR        RA
   34:  ADDIU     SP, SP, 18
}

#new:Function $Function_802184D4_DG
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  DADDU     A0, S1, R0
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  DADDU     S0, V0, R0
   34:  DADDU     A0, S0, R0
   38:  JAL       80028F08
   3C:  DADDU     A1, V0, R0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  ADDIU     V0, R0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20
}

%FFFFF3F3 FFFF00FF = pure white
#new:Function $Function_SetRadialPalette
{
		PUSH		RA, S0
    8:  LW			V0, C (A0)
    C:  JAL			~Func:get_variable
   10:  LW			A1, 0 (V0)
   14:  LW			V1, C (V0)
   18:  ADDIU		A1, R0, FFFF		%R + G
   1C:  SH			A1, 68 (V1)
   20:  LW			V1, C (V0)
   18:  ADDIU		A1, R0, F3F3		%B + R2?
   24:  SH			A1, 6A (V1)
   28:  LW			V1, C (V0)
   18:  ADDIU		A1, R0, FFFF		%G2 + B2?
   2C:  SH			A1, 6C (V1)
   30:  LW			A0, C (V0)
   34:  ADDIU		V1, R0, 00FF		%supplemental data
   38:  SH			V1, 6E (A0)
		.end
   54:  ADDIU		V0, R0, 2
		JPOP		RA, S0
}


#new:String $IShouldTryHarder
{
[STYLE:Right]It seems... [PAUSE:0A]I should try[BR]
a bit harder.[BR]
[Wait][END]
}