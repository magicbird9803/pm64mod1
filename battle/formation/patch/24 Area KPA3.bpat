%this formation has duplighosts
%time to copy and paste all my duplighost changes again :/

%BUT now let's give dupli-bow outta sight :)

@ $StatusTable_8021B230
{
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      35`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      50`
.Status:Fear        0`
.Status:Static     50`
.Status:Paralyze   50`
.Status:Shrink     50`
.Status:Stop       80`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   1`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End
}

@ $Duplighost
{
[MaxHP]        20`b %hp buff
[Escape]       40`b 
[Item]         50`b 
[AirLift]      50`b %a sheet isn't that heavy 
[Hurricane]    30`b % Bow's "Spook" as well
[UpAndAway]    80`b 
}

@ $Script_Init_8021B328
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80227F70 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_8021B440 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021B48C )
   3C:  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_8021B3A0 )
   50:  Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
		Call  SetActorVar   ( .Actor:Self 00000009 00000004 )	%attack power
   68:  Return
   70:  End
}

@ $Script_HandleEvent_8021B48C
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001
   70:  		SetConst  *Var1  004E000A
   80:  		ExecWait  DoNormalHit
				Call      GetLastDamage ( .Actor:Self *Var2 )
				Call  	  SetActorVar   ( .Actor:Self 00000009 *Var2 )	%attack power
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit % E
   A0:  		SetConst  *Var0  00000001
   B0:  		SetConst  *Var1  004E000C
   C0:  		SetConst  *Var2  FFFFFFFF
   D0:  		ExecWait  DoBurnHit
				Call      GetLastDamage ( .Actor:Self *Var2 )
				Call  	  SetActorVar   ( .Actor:Self 00000009 *Var2 )	%attack power
   DC:  	Case  ==  .Event:BurnDeath % 24
   E8:  		SetConst  *Var0  00000001
   F8:  		SetConst  *Var1  004E000C
  108:  		SetConst  *Var2  FFFFFFFF
  118:  		ExecWait  DoBurnHit
  124:  		SetConst  *Var0  00000001
  134:  		SetConst  *Var1  004E000C
  144:  		ExecWait  DoDeath
  150:  		Return
  158:  	Case  ==  .Event:SpinSmashHit % B
  164:  		SetConst  *Var0  00000001
  174:  		SetConst  *Var1  004E000A
  184:  		ExecWait  DoSpinSmashHit
				Call      GetLastDamage ( .Actor:Self *Var2 )
				Call  	  SetActorVar   ( .Actor:Self 00000009 *Var2 )	%attack power
  190:  	Case  ==  .Event:SpinSmashDeath % 21
  19C:  		SetConst  *Var0  00000001
  1AC:  		SetConst  *Var1  004E000A
  1BC:  		ExecWait  DoSpinSmashHit
  1C8:  		SetConst  *Var0  00000001
  1D8:  		SetConst  *Var1  004E000A
  1E8:  		ExecWait  DoDeath
  1F4:  		Return
  1FC:  	Case  ==  .Event:ShockHit % 2F
  208:  		Call  ResetAllActorSounds   ( .Actor:Self )
  218:  		SetConst  *Var0  00000001
  228:  		SetConst  *Var1  004E000A
  238:  		ExecWait  DoShockHit
  244:  		SetConst  *Var0  00000001
  254:  		SetConst  *Var1  004E000A
  264:  		ExecWait  DoJumpBack
  270:  		ExecWait  $Script_8021B450
  27C:  	Case  ==  .Event:ShockDeath % 26
  288:  		SetConst  *Var0  00000001
  298:  		SetConst  *Var1  004E000A
  2A8:  		ExecWait  DoShockHit
  2B4:  		SetConst  *Var0  00000001
  2C4:  		SetConst  *Var1  004E000A
  2D4:  		ExecWait  DoDeath
  2E0:  		Return
  2E8:  	CaseOR  ==  00000017 % 17
  2F4:  	CaseOR  ==  .Event:Immune % 19
  300:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  30C:  		SetConst  *Var0  00000001
  31C:  		SetConst  *Var1  004E0002
  32C:  		ExecWait  DoImmune
  338:  	EndCaseGroup
  340:  	Case  ==  .Event:Death % 20
  34C:  		SetConst  *Var0  00000001
  35C:  		SetConst  *Var1  004E000A
  36C:  		ExecWait  DoNormalHit
  378:  		Wait  10`
  384:  		SetConst  *Var0  00000001
  394:  		SetConst  *Var1  004E000A
  3A4:  		ExecWait  DoDeath
  3B0:  		Return
  3B8:  	Case  ==  .Event:RecoverStatus % 31
  3C4:  		SetConst  *Var0  00000001
  3D4:  		SetConst  *Var1  004E0002
  3E4:  		ExecWait  DoRecover
  3F0:  	Case  ==  .Event:ScareAway % 39
  3FC:  		SetConst  *Var0  00000001
  40C:  		SetConst  *Var1  004E0004
  41C:  		SetConst  *Var2  004E000A
  42C:  		ExecWait  DoScareAway
  438:  		Return
  440:  	Case  ==  .Event:BeginAirLift % 3A
  44C:  		SetConst  *Var0  00000001
  45C:  		SetConst  *Var1  004E0004
  46C:  		ExecWait  DoAirLift
  478:  	Case  ==  .Event:BlowAway % 16
  484:  		SetConst  *Var0  00000001
  494:  		SetConst  *Var1  004E000A
  4A4:  		ExecWait  DoBlowAway
  4B0:  		Return
  4B8:  	Default
  4C0:  EndSwitch
  4C8:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  4DC:  Call  UseIdleAnimation  ( .Actor:Self .True )
  4F0:  Return
  4F8:  End
}


%need to add stuff for another dupli partner
#new:SpecialFormation $SpecialFormation_Buzzatrice
{
	$DupliBuzzatrice $Vector3D_8021CE18 00000000 00000000 00000000 00000000 00000000
}

#new:IdleAnimations $IdleAnimations_Buzzatrice
{
	.Status:Normal    00FC0001
	.Status:Stone     00FC0000
	.Status:Sleep     00FC000C
	.Status:Poison    00FC0001
	.Status:Stop      00FC0000
	.Status:Static    00FC0001
	.Status:Paralyze  00FC0000
	.Status:Dizzy     00FC000B
	.Status:Fear      00FC0001
	.Status:End
}

#new:DefenseTable $DefenseTable_Buzzatrice
{
	.Element:Normal 00000002	%you don't get the full 9 defense dark beetles usually have (otherwise she would be way too hard to kill)
	.Element:Fire   00000063	%heh heh
	.Element:Throw FFFFFFFF
	.Element:End
}

#new:PartsTable $PartsTable_Buzzatrice
{
	00020000 01000000 FD2000FF $IdleAnimations_Buzzatrice $DefenseTable_Buzzatrice 000C0000 00000000 00F00000 00000000
	00800001 02003200 FDEE00FF 00000000 $DefenseTable_Buzzatrice 00000000 000C0000 00F00000 00000000
}

#new:Actor $DupliBuzzatrice
{
	% stats
	[Index]        98b
	[Level]         0`b
	[MaxHP]        20`b
	[Coins]         0`b
	[Flags]       00000200
	[StatusTable] $StatusTable_8021B230
	% ai
	[PartsCount]    2`s
	[PartsTable]  $PartsTable_Buzzatrice
	[Script]      $Script_Init_Buzzatrice
	% move effectiveness
	[Escape]       40`b
	[Item]         50`b
	[AirLift]      32`b
	[Hurricane]    30`b % Bow's "Spook" as well
	[UpAndAway]    80`b
	[PowerBounce]   3`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         38`b  38`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_Buzzatrice
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_Buzzatrice )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_Buzzatrice )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_Buzzatrice )
   50:  Call  SetActorVar   ( .Actor:Self 00000002 00000001 )
   68:  Return
   70:  End
}

#new:Script $Script_Idle_Buzzatrice
{
    0:  Return
    8:  End
}

#new:Script $Script_HandleEvent_Buzzatrice
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		Call  GetLastElement    ( *Var1 )
   70:  		If  *Var1  &  00000020
   80:  			SetConst  *Var0  00000001
   90:  			SetConst  *Var1  00FC0006
   A0:  			ExecWait  $Script_8021BF64
   AC:  			Return
   B4:  		Else
   BC:  			SetConst  *Var0  00000001
   CC:  			SetConst  *Var1  00FC0006
   DC:  			ExecWait  DoNormalHit
   E8:  		EndIf
   F0:  	EndCaseGroup
   F8:  	Case  ==  .Event:BurnHit % E
  104:  		SetConst  *Var0  00000001
  114:  		SetConst  *Var1  00FC0005
  124:  		SetConst  *Var2  00FC0005
  134:  		ExecWait  DoBurnHit
  140:  	Case  ==  .Event:BurnDeath % 24
  14C:  		SetConst  *Var0  00000001
  15C:  		SetConst  *Var1  00FC0005
  16C:  		SetConst  *Var2  00FC0005
  17C:  		ExecWait  DoBurnHit
  188:  		ExecWait  $Script_8021BF2C
  194:  		Wait  10`
  1A0:  		SetConst  *Var0  00000001
  1B0:  		SetConst  *Var1  00FC0005
  1C0:  		ExecWait  DoDeath
  1CC:  		Return
  1D4:  	Case  ==  .Event:SpinSmashHit % B
  1E0:  		SetConst  *Var0  00000001
  1F0:  		SetConst  *Var1  00FC0006
  200:  		ExecWait  DoSpinSmashHit
  20C:  	Case  ==  .Event:SpinSmashDeath % 21
  218:  		ExecWait  $Script_8021BF2C
  224:  		SetConst  *Var0  00000001
  234:  		SetConst  *Var1  00FC0006
  244:  		ExecWait  DoSpinSmashHit
  250:  		SetConst  *Var0  00000001
  260:  		SetConst  *Var1  00FC0005
  270:  		ExecWait  DoDeath
  27C:  		Return
  284:  	Case  ==  .Event:ShockHit % 2F
  290:  		SetConst  *Var0  00000001
  2A0:  		SetConst  *Var1  00FC0006
  2B0:  		ExecWait  $Script_8021C428
  2BC:  		Return
  2C4:  	Case  ==  .Event:ShockDeath % 26
  2D0:  		ExecWait  $Script_8021BF2C
  2DC:  		SetConst  *Var0  00000001
  2EC:  		SetConst  *Var1  000C0006
  2FC:  		Set   *Var2  00000016
  30C:  		ExecWait  $Script_8021CAB4
  318:  		SetConst  *Var0  00000001
  328:  		SetConst  *Var1  00FC0005
  338:  		ExecWait  DoDeath
  344:  		Return
  34C:  	CaseOR  ==  00000017 % 17
  358:  	CaseOR  ==  .Event:Immune % 19
  364:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  370:  		SetConst  *Var0  00000001
  380:  		SetConst  *Var1  00FC0001
  390:  		ExecWait  DoImmune
  39C:  	EndCaseGroup
  3A4:  	Case  ==  .Event:Death % 20
  3B0:  		ExecWait  $Script_8021BF2C
  3BC:  		SetConst  *Var0  00000001
  3CC:  		SetConst  *Var1  00FC0006
  3DC:  		ExecWait  DoNormalHit
  3E8:  		Wait  10`
  3F4:  		SetConst  *Var0  00000001
  404:  		SetConst  *Var1  00FC0006
  414:  		ExecWait  DoDeath
  420:  		Return
  428:  	Case  ==  .Event:RecoverStatus % 31
  434:  		SetConst  *Var0  00000001
  444:  		SetConst  *Var1  00FC0001
  454:  		ExecWait  DoRecover
  460:  	Case  ==  .Event:ScareAway % 39
  46C:  		SetConst  *Var0  00000001
  47C:  		SetConst  *Var1  00FC0003
  48C:  		SetConst  *Var2  00FC0006
  49C:  		ExecWait  DoScareAway
  4A8:  		Return
  4B0:  	Case  ==  .Event:BeginAirLift % 3A
  4BC:  		SetConst  *Var0  00000001
  4CC:  		SetConst  *Var1  00FC0003
  4DC:  		ExecWait  DoAirLift
  4E8:  	Case  ==  .Event:BlowAway % 16
  4F4:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  508:  		If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  518:  			If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  528:  				Call  SetActorDispOffset    ( .Actor:Self 00000000 00000001 00000000 )
  544:  			Else
  54C:  				Call  SetActorDispOffset    ( .Actor:Self 00000000 00000003 00000000 )
  568:  			EndIf
  570:  		EndIf
  578:  		SetConst  *Var0  00000001
  588:  		SetConst  *Var1  00FC0006
  598:  		ExecWait  DoBlowAway
  5A4:  		Return
  5AC:  	Default
  5B4:  EndSwitch
  5BC:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  5D0:  Call  UseIdleAnimation  ( .Actor:Self .True )
  5E4:  Return
  5EC:  End
}

%varE = damage
%uses Var0, VarC, VarD, VarB
#new:Script $Script_DamageCalc
{
	Call	 GetOwnerTarget ( *VarD *VarB )
	Call     GetActorHP  	( *VarD *Var[0] ) %this works
	Call	 GetEnemyMaxHP	( *VarD *VarC )
	If *Var[0] > *VarC
		Set *Var[0] *VarC 
	EndIf
	Set *Var[B] *Var[0]
	Mul *Var[B] -1`
	Add *Var[B] *VarC
	Add *Var[B] *VarC
	Mul *Var[E] *Var[B]
	Div *Var[E] *VarC
	Return
	End
}

#new:Script $Script_MagicBlast
{
	Call	EnableIdleScript ( .Actor:Self .False )
	Call	UseIdleAnimation ( .Actor:Self .False )
	Call	SetTargetActor ( .Actor:Self .Actor:Player )
	   1C:  Call  SetAnimation  ( .Actor:Self FFFFFFFF 00FC0003 )
   34:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   50:  Add   *Var0  -40`
   60:  Add   *Var1  20`
   70:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
		Call  FlyToGoal     ( .Actor:Self 0000000F 00000000 .Easing:CosInOut )
   A8:  Call  SetAnimation  ( .Actor:Self FFFFFFFF 00FC0001 )
   CC:  Call  SetGoalToTarget       ( .Actor:Self )
		Call  UseBattleCamPreset    ( 0000003F )
		Call     BattleCamTargetActor ( .Actor:Self )
  134:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  150:  Add   *Var0  -3`
  160:  Add   *Var1  0000000A
  170:  Add   *Var2  00000005
  1A0:  Wait  1`
  1E0:  Call  SetAnimation  ( .Actor:Self FFFFFFFF 00FC0011 )
  234:  Wait  24`
  418:  Call  SetGoalToTarget   ( .Actor:Self )
  44C:  Call  SetAnimation      ( .Actor:Self FFFFFFFF 00FC0014 )
  464:  Wait  3`
		Call     EnemyTestTarget ( .Actor:Self *Var[1] 00000000 00000000 00000001 00000010 )
		Set *VarF 00000000
		Switch *Var[1]
			Case == 00000005
				Set *VarF FFFFFFFF
			Case == 00000006
				Set *VarF FFFFFFFF
		EndSwitch
  4D0:  Switch  *VarF
  4DC:  	Case  ==  FFFFFFFF		%miss
				Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast2 )
				Call     GetGoalPos  	( .Actor:Self *Var[4] *Var[5] *Var[6] )
				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
				Add  *Var[0]  -15`
				Add  *Var[1]  1` 
				Call     $Function_80218200 ( *Var[0] *Var[1] *Var[2] *Var[4] *Var[5] *Var[6] 0000000A ) %shoot out magic that hits in 20 frames?
				Wait 	 10` %Wait for the actual blast
				Goto 	 1
  580:  	Case  ==  00000000
				Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast2 )
				Call     GetGoalPos  	( .Actor:Self *Var[4] *Var[5] *Var[6] )
				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
				Add  *Var[0]  -15`
				Add  *Var[1]  1` 
				Call     $Function_80218200 ( *Var[0] *Var[1] *Var[2] *Var[4] *Var[5] *Var[6] 0000000A ) %shoot out magic that hits in 20 frames?
				Wait 	 10` %Wait for the actual blast
  69C:  EndSwitch
		Call     GetActorVar 	( .Actor:Self 00000001 *Var[2] )
  744:  Switch  *Var2
  750:  	Case  ==  00000000
  75C:  		Set   *VarE  00000003
				ExecWait $Script_DamageCalc
  76C:  	Case  ==  00000001
  778:  		Set   *VarE  00000004
				ExecWait $Script_DamageCalc
  788:  	Case  ==  00000002
  794:  		Set   *VarE  00000005
				ExecWait $Script_DamageCalc
  7A4:  EndSwitch
		Call     EnemyDamageTarget 	( .Actor:Self *Var[0] ~Flags:DamageType:NoContact|Magic 00000000 00000000 *VarE 00000020 )
		Label 1
  808:  Switch  *VarF
  814:  	Case  ==  00000001
  820:  		Call  UseBattleCamPreset    ( 00000004 )
  830:  	Default
  838:  		Call  UseBattleCamPreset    ( 00000033 )
  848:  EndSwitch
  850:  Wait  15`
    C:  Call  UseBattleCamPreset    ( 00000002 )
   1C:  Call  SetGoalToHome ( .Actor:Self )
		Call  YieldTurn 	( )
   2C:  Call  SetAnimation  ( .Actor:Self FFFFFFFF 00FC0003 )
   44:  Call  FlyToGoal     ( .Actor:Self 0000000F 00000000 .Easing:CosInOut )
   60:  Call  SetAnimation  ( .Actor:Self FFFFFFFF 00FC0002 )
	Call	EnableIdleScript ( .Actor:Self .True )
	Call	UseIdleAnimation ( .Actor:Self .True )
	Return
	End
}

#new:Function $Function_80218200
{
    0:  ADDIU		SP, SP, FFA0
    4:  SW			S1, 24 (SP)
    8:  COPY		S1, A0
    C:  SW			RA, 28 (SP)
   10:  SW			S0, 20 (SP)
   14:  SDC1		F30, 58 (SP)
   18:  SDC1		F28, 50 (SP)
   1C:  SDC1		F26, 48 (SP)
   20:  SDC1		F24, 40 (SP)
   24:  SDC1		F22, 38 (SP)
   28:  SDC1		F20, 30 (SP)
   2C:  LW			S0, C (S1)
   30:  LW			A1, 0 (S0)
   34:  JAL			~Func:get_float_variable
   38:  ADDIU		S0, S0, 4
   3C:  LW			A1, 0 (S0)
   40:  ADDIU		S0, S0, 4
   44:  COPY		A0, S1
   48:  JAL			~Func:get_float_variable
   4C:  MOV.S		F30, F0
   50:  LW			A1, 0 (S0)
   54:  ADDIU		S0, S0, 4
   58:  COPY		A0, S1
   5C:  JAL			~Func:get_float_variable
   60:  MOV.S		F20, F0
   64:  LW			A1, 0 (S0)
   68:  ADDIU		S0, S0, 4
   6C:  COPY		A0, S1
   70:  JAL			~Func:get_float_variable
   74:  MOV.S		F28, F0
   78:  LW			A1, 0 (S0)
   7C:  ADDIU		S0, S0, 4
   80:  COPY		A0, S1
   84:  JAL			~Func:get_float_variable
   88:  MOV.S		F26, F0
   8C:  LW			A1, 0 (S0)
   90:  ADDIU		S0, S0, 4
   94:  COPY		A0, S1
   98:  JAL			~Func:get_float_variable
   9C:  MOV.S		F24, F0
   A0:  COPY		A0, S1
   A4:  LW			A1, 0 (S0)
   A8:  JAL			~Func:get_variable
   AC:  MOV.S		F22, F0
   B0:  LW			A0, 148 (S1)
   B4:  JAL			~Func:get_actor
   B8:  COPY		S0, V0
   BC:  CVT.D.S		F20, F20
   C0:  MFC1		A1, F30
   C4:  LIF			F1, 2.3125
   CC:  MTC1		R0, F0
   D0:  MFC1		A3, F28
   D4:  ADD.D		F20, F20, F0
   D8:  CLEAR		A0
		LI			A0, 50
   DC:  SW			S0, 1C (SP)
   E0:  CVT.S.D		F20, F20
   E4:  MFC1		A2, F20
   E8:  COPY		S0, V0
   EC:  SWC1		F26, 10 (SP)
   F0:  SWC1		F24, 14 (SP)
   F4:  JAL			8006FF50 %internal playeffect function?
   F8:  SWC1		F22, 18 (SP)
   FC:  COPY		A0, V0
  100:  LB			V1, 210 (S0)
  104:  ADDIU		V0, R0, A
  108:  BNE			V1, V0, .o128
  10C:  NOP
  110:  LW			V0, C (A0)
  114:  LIO			AT, 3ECCCCCD
  11C:  MTC1		AT, F0
  120:  NOP
  124:  SWC1		F0, 28 (V0)
        .o128
  128:  LW			RA, 28 (SP)
  12C:  LW			S1, 24 (SP)
  130:  LW			S0, 20 (SP)
  134:  LDC1		F30, 58 (SP)
  138:  LDC1		F28, 50 (SP)
  13C:  LDC1		F26, 48 (SP)
  140:  LDC1		F24, 40 (SP)
  144:  LDC1		F22, 38 (SP)
  148:  LDC1		F20, 30 (SP)
  14C:  ADDIU		V0, R0, 2
  150:  JR			RA
  154:  ADDIU		SP, SP, 60
}

#new:Script $Script_MagicBeam
{
		Call	EnableIdleScript ( .Actor:Self .False )
		Call	UseIdleAnimation ( .Actor:Self .False )
		Call	SetTargetActor ( .Actor:Self .Actor:Player )
		Call	SetGoalToTarget ( .Actor:Self )
		Call     UseBattleCamPreset 	( 0000003F )
		Call     BattleCamTargetActor ( .Actor:Self )
   14:  Call  SetAnimation      ( .Actor:Self FFFFFFFF 00FC0012 )
   2C:  Wait  15`
   44:  Call  SetAnimation      ( .Actor:Self FFFFFFFF 00FC0013 )
		Wait  30`
   78:  Call  PlaySoundAtActor  ( .Actor:Self 00002006 )
		Call     EnemyTestTarget ( .Actor:Self *Var[1] 00000000 00000000 00000001 00000010 )
		Switch *Var[1]
			Case == 00000005
				Set *VarF 00000000
			Case == 00000006
				Set *VarF 00000001
			Default
				Set *VarF 00000001
		EndSwitch
   E8:  Switch  *VarF
   F4:  	Case  ==  00000001		%the only successful one
				Call	SetTargetActor ( .Actor:Self .Actor:Player )
  134:  		Call  	 SetGoalToTarget   ( .Actor:Self )
  144:  		Call 	 SetAnimation      ( .Actor:Self FFFFFFFF 00FC0015 )
				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
				Add		*Var1  2`
				Add 	*Var0 -14`
				Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
				/%	probably shouldn't need to fine tune this
				Sub	*Var[3] 15
				Add *Var[4] 15
				%/
				Add 	 *Var3 3
				Add	     *Var4 3
				Call     PlayEffect  	( ~FX:Squirt:Waterbeam *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] 00000001 0000000A 00000000 00000000 00000000 00000000 )
				Call	 $Function_PinkWaterBeam ( *VarF )
				Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
				Add 	 *Var3 3
				Sub	     *Var4 3
				Call     PlayEffect  	( ~FX:Squirt:Waterbeam *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] 00000001 0000000A 00000000 00000000 00000000 00000000 )
				Call	 $Function_CyanWaterBeam ( *VarF )
				Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
				Call     PlayEffect  	( ~FX:Squirt:Waterbeam *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] 00000001 0000000A 00000000 00000000 00000000 00000000 )
				Call	 $Function_YellowWaterBeam ( *VarF )
				Wait     0000000A
  240:  	Default 	%too high
				Call	SetTargetActor ( .Actor:Self .Actor:Player )
  280:  		Call  SetGoalToTarget   ( .Actor:Self )
  290:  		Call  AddGoalPos        ( .Actor:Self 00000032 00000032 00000000 )
  134:  		Call  SetGoalToTarget   ( .Actor:Self )
  144:  		Call  SetAnimation      ( .Actor:Self FFFFFFFF 00FC0016 )
				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
				Add		*Var1  2`
				Add 	*Var0 -14`
				Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
				Add 	*Var3 30`
				Add 	*Var4 30`
				/%	probably shouldn't need to fine tune this
				Sub	*Var[3] 15
				Add *Var[4] 15
				%/
				Add 	 *Var3 3
				Add	     *Var4 3
				Call     PlayEffect  	( ~FX:Squirt:Waterbeam *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] 00000001 00000006 00000000 00000000 00000000 00000000 )
				Call	 $Function_PinkWaterBeam ( *VarF )
				Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
				Add 	*Var3 30`
				Add 	*Var4 30`
				Add 	 *Var3 3
				Sub	     *Var4 3
				Call     PlayEffect  	( ~FX:Squirt:Waterbeam *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] 00000001 00000006 00000000 00000000 00000000 00000000 )
				Call	 $Function_CyanWaterBeam ( *VarF )
				Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
				Add 	*Var3 30`
				Add 	*Var4 30`
				Call     PlayEffect  	( ~FX:Squirt:Waterbeam *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] 00000001 00000006 00000000 00000000 00000000 00000000 )
				Call	 $Function_YellowWaterBeam ( *VarF )
				Wait     00000004
				Goto 	 A
  3A8:  EndSwitch
		Call     GetActorVar 	( .Actor:Self 00000001 *Var[2] )
		%calculate damage by level
		Call  GetActorLevel     ( .Actor:Self *VarE )
		Switch *VarE
			Case == 00000000
				Set *VarF 4
			Case == 00000001
				Set *VarF 5
			Case == 00000002
				Set *VarF 6
			Default
				Set *VarF 7
		EndSwitch
		%
		Call  GetOwnerTarget ( *VarB *VarC )
		Call  GetActorAttackBoost	( *VarB *VarD )
		If *VarD > 0
			Add   *VarF *VarD
		EndIf
		Call  GetActorDefenseBoost	( *VarB *VarD )
		If *VarD > 0
			Add   *VarF *VarD
		EndIf
		%Add in mario's charge too
		Call	$Function_ChargeCheck ( *Var6 *Var7 )
		Add *VarF *Var6
		Add *VarF *Var7
		Call	SetTargetActor ( .Actor:Self .Actor:Player )
  3D4:  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] ~Flags:DamageType:NoContact|Magic 00000000 00000000 *VarF 00000020 )
  3F8:  Call  PlaySoundAtActor      ( .Actor:Self 00000110 )
  42C:  Call  PlaySoundAtActor  ( .Actor:Self 00000000 )
  440:  Label  A
  850:  Wait  15`
    C:  Call  UseBattleCamPreset    ( 00000002 )
   1C:  Call  SetGoalToHome ( .Actor:Self )
		Call  YieldTurn 	( )
   2C:  Call  SetAnimation  ( .Actor:Self FFFFFFFF 00FC0003 )
   44:  Call  FlyToGoal     ( .Actor:Self 0000000F 00000000 .Easing:CosInOut )
   60:  Call  SetAnimation  ( .Actor:Self FFFFFFFF 00FC0002 )
	Call	EnableIdleScript ( .Actor:Self .True )
	Call	UseIdleAnimation ( .Actor:Self .True )
	Return
	End
}

#new:Function $Function_ChargeCheck
{
    0:  ADDIU		SP, SP, FFE0
    4:  SW			S1, 14 (SP)
    8:  COPY		S1, A0
    C:  SW			S2, 18 (SP)
   10:  LIA			S2, 800DC070
   18:  SW			RA, 1C (SP)
   1C:  SW			S0, 10 (SP)
   20:  LW			S0, C (S1)
   24:  LB			A2, 97 (S2)
   28:  LW			A1, 0 (S0)
   2C:  JAL			~Func:set_variable
   30:  ADDIU		S0, S0, 4
   34:  LW			A1, 0 (S0)
   38:  LB			A2, 96 (S2)
   3C:  JAL			~Func:set_variable
   40:  COPY		A0, S1
   44:  LW			RA, 1C (SP)
   48:  LW			S2, 18 (SP)
   4C:  LW			S1, 14 (SP)
   50:  LW			S0, 10 (SP)
   54:  ADDIU		V0, R0, 2
   58:  JR			RA
   5C:  ADDIU		SP, SP, 20
}

%effect colors
%FF, FF, 80
%FF, FF, 00
#new:Function $Function_YellowWaterBeam    
{
    0:  ADDIU        SP, SP, FFE8
    4:  SW            RA, 10 (SP)
    8:  LW            V0, C (A0)
    C:  JAL            ~Func:get_variable
   10:  LW            A1, 0 (V0)
   14:  LW            V1, C (V0)
   18:  ADDIU        A0, R0, FF                %R
   1C:  SW            A0, 34 (V1)
   20:  LW            V1, C (V0)
        ADDIU        A0, R0, FF                %G
   24:  SW            A0, 38 (V1)
   28:  LW            V1, C (V0)
   2C:  ADDIU        A1, R0, 80                %B
   30:  SW            A1, 3C (V1)
   34:  LW            A0, C (V0)
   38:  ADDIU        V1, R0, FF                %R 2
   3C:  SW            V1, 44 (A0)
   40:  LW            A0, C (V0)
   44:  ADDIU        V1, R0, FF                %G 2
   48:  SW            V1, 48 (A0)
   4C:  LW            V1, C (V0)
        ADDIU        A1, R0, 00                %B 2
   50:  SW            A1, 4C (V1)
   54:  LW            RA, 10 (SP)
   58:  ADDIU        V0, R0, 2
   5C:  JR            RA
   60:  ADDIU        SP, SP, 18
}

%FF, 80, FF
%FF, 00, FF
#new:Function $Function_PinkWaterBeam    
{
    0:  ADDIU        SP, SP, FFE8
    4:  SW            RA, 10 (SP)
    8:  LW            V0, C (A0)
    C:  JAL            ~Func:get_variable
   10:  LW            A1, 0 (V0)
   14:  LW            V1, C (V0)
   18:  ADDIU        A0, R0, FF                %R
   1C:  SW            A0, 34 (V1)
   20:  LW            V1, C (V0)
        ADDIU        A0, R0, 80                %G
   24:  SW            A0, 38 (V1)
   28:  LW            V1, C (V0)
   2C:  ADDIU        A1, R0, FF                %B
   30:  SW            A1, 3C (V1)
   34:  LW            A0, C (V0)
   38:  ADDIU        V1, R0, FF                %R 2
   3C:  SW            V1, 44 (A0)
   40:  LW            A0, C (V0)
   44:  ADDIU        V1, R0, 00                %G 2
   48:  SW            V1, 48 (A0)
   4C:  LW            V1, C (V0)
        ADDIU        A1, R0, FF                %B 2
   50:  SW            A1, 4C (V1)
   54:  LW            RA, 10 (SP)
   58:  ADDIU        V0, R0, 2
   5C:  JR            RA
   60:  ADDIU        SP, SP, 18
}

%80, FF, FF
%00, FF, FF
#new:Function $Function_CyanWaterBeam    
{
    0:  ADDIU        SP, SP, FFE8
    4:  SW            RA, 10 (SP)
    8:  LW            V0, C (A0)
    C:  JAL            ~Func:get_variable
   10:  LW            A1, 0 (V0)
   14:  LW            V1, C (V0)
   18:  ADDIU        A0, R0, 80                %R
   1C:  SW            A0, 34 (V1)
   20:  LW            V1, C (V0)
        ADDIU        A0, R0, FF                %G
   24:  SW            A0, 38 (V1)
   28:  LW            V1, C (V0)
   2C:  ADDIU        A1, R0, FF                %B
   30:  SW            A1, 3C (V1)
   34:  LW            A0, C (V0)
   38:  ADDIU        V1, R0, 00                %R 2
   3C:  SW            V1, 44 (A0)
   40:  LW            A0, C (V0)
   44:  ADDIU        V1, R0, FF                %G 2
   48:  SW            V1, 48 (A0)
   4C:  LW            V1, C (V0)
        ADDIU        A1, R0, FF                %B 2
   50:  SW            A1, 4C (V1)
   54:  LW            RA, 10 (SP)
   58:  ADDIU        V0, R0, 2
   5C:  JR            RA
   60:  ADDIU        SP, SP, 18
}



#new:Script $Script_TakeTurn_Buzzatrice
{
		Call 	 RandInt ( 100` *Var[0] )
		If *Var0 < 50`
			Set *Var[A] 0
		Else
			Set *Var[A] 1
		EndIf
		If *VarA == 0
			ExecWait  $Script_MagicBlast
		Else
			ExecWait  $Script_MagicBeam
		EndIf
    C:  Return
   14:  End
}


%fix stats and unify status tables
@ $GhostGoombario
{
[MaxHP]        20`b 
[StatusTable] $StatusTable_8021B230
[Escape]       40`b 
[Item]         50`b 
[AirLift]      32`b % standard for dupli-partners 
[Hurricane]    30`b % Bow's "Spook" as well
[UpAndAway]    80`b 
}

@ $GhostKooper
{
[MaxHP]        20`b 
[StatusTable] $StatusTable_8021B230
[Escape]       40`b 
[Item]         50`b 
[AirLift]      32`b % standard for dupli-partners
[Hurricane]    30`b % Bow's "Spook" as well
[UpAndAway]    80`b 
}

@ $GhostBombette
{
[MaxHP]        20`b 
[StatusTable] $StatusTable_8021B230
[Escape]       40`b 
[Item]         50`b 
[AirLift]      32`b % standard for dupli-partners
[Hurricane]    30`b % Bow's "Spook" as well
[UpAndAway]    80`b 
}

@ $DefenseTable_8022190C
{
.Element:Normal 00000001
.Element:Throw 00000000
.Element:End
}

@ $GhostParakarry
{
[MaxHP]        20`b 
[StatusTable] $StatusTable_8021B230
[Escape]       40`b 
[Item]         50`b 
[AirLift]       0`b % ironic, he can lift others from battle, but not himself
[Hurricane]    30`b % Bow's "Spook" as well
[UpAndAway]    80`b 
}

@ $DefenseTable_80222898
{
.Element:Normal 00000000
.Element:Throw FFFFFFFF
.Element:End
}

@ $GhostBow
{
[MaxHP]        20`b 
[StatusTable] $StatusTable_8021B230
[Escape]       40`b 
[Item]         50`b 
[AirLift]      20`b % how do you even lift a ghost
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]    80`b 
}

@ $DefenseTable_80223C68
{
.Element:Normal 00000000
.Element:Water FFFFFFFE
.Element:Shock  00000063
.Element:Throw FFFFFFFF
.Element:End
}

@ $GhostWatt
{
[MaxHP]        20`b 
[StatusTable] $StatusTable_8021B230
[Escape]       40`b 
[Item]         50`b 
[AirLift]      32`b % standard for dupli-partners
[Hurricane]    40`b % Bow's "Spook" as well
[UpAndAway]    80`b 
}

@ $GhostSushie
{
[MaxHP]        20`b 
[StatusTable] $StatusTable_8021B230
[Escape]       40`b 
[Item]         50`b 
[AirLift]      32`b % standard for dupli-partners
[Hurricane]    30`b % Bow's "Spook" as well
[UpAndAway]    80`b 
}

@ $DefenseTable_80226508
{
.Element:Normal 00000000
.Element:Throw FFFFFFFF
.Element:End
}

@ $GhostLakilester
{
[MaxHP]        20`b 
[StatusTable] $StatusTable_8021B230
[Escape]       40`b 
[Item]         50`b 
[AirLift]      32`b % standard for dupli-partners
[Hurricane]    30`b % Bow's "Spook" as well
[UpAndAway]    80`b 
}

@ $Function_GetPartner %get a random avaliable partner instead of just copying current one
{
	ADDIU	SP, SP, FFE0
	SW		S2, 18 (SP)
	DADDU	S2, A0, R0
	SW		S1, 14 (SP)
	SW		RA, 1C (SP)
	SW		S0, 10 (SP)
	LW		S0, C (S2)
	.TryRandom % Range [0-9]
   	JAL		800299FC
	ORI		A0, R0, A
	% Get 8010F2AC + 4*i
	LIA		S1, 8010F2A4
	SLL		A0, V0, 3
	DADDU	S1, S1, A0
	LB		A2, 0 (S1)
	BEQ		A2, R0, .TryRandom
	NOP
	DADDU	A2, V0, R0
	LW		A1, 0 (S0)
	JAL		~Func:set_variable
	DADDU	A0, S2, R0
	ADDIU	S0, S0, 4
	LB		A2, 1 (S1)
	LW		A1, 0 (S0)
	JAL		~Func:set_variable
	DADDU	A0, S2, R0
	LW		RA, 1C (SP)
	LW		S2, 18 (SP)
	LW		S1, 14 (SP)
	LW		S0, 10 (SP)
	ADDIU	V0, R0, 2
	JR		RA
	ADDIU SP, SP, 20
}

@ $Function_802195F4
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  SW        RA, 14 (SP)
   10:  LW        V0, C (S0)
   14:  JAL       ~Func:get_variable
   18:  LW        A1, 0 (V0)
   1C:  LW        A0, 148 (S0)
   20:  JAL       ~Func:get_actor
   24:  COPY      S0, V0
   28:  COPY      V1, V0
   2C:  ADDIU     S0, S0, FFFF
   30:  SLTIU     V0, S0, A
   34:  BEQ       V0, R0, .oB0
   38:  CLEAR     A0
   3C:  SLL       V0, S0, 2
   40:  LTW       V0, V0 ($JumpTable_80228450)
   4C:  JR        V0
   50:  NOP
	% LBL: from $JumpTable_80228450 , entry 0`
   54:  LA        A0, $SpecialFormation_8021E990
   58:  BEQ       R0, R0, .oB0
   5C:  RESERVED
	% LBL: from $JumpTable_80228450 , entry 1`
   60:  LA        A0, $SpecialFormation_80220644
   64:  BEQ       R0, R0, .oB0
   68:  RESERVED
	% LBL: from $JumpTable_80228450 , entry 2`
   6C:  LA        A0, $SpecialFormation_802218A4
   70:  BEQ       R0, R0, .oB0
   74:  RESERVED
	% LBL: from $JumpTable_80228450 , entry 3`
   78:  LA        A0, $SpecialFormation_80222830
   7C:  BEQ       R0, R0, .oB0
   80:  RESERVED
	% LBL: from $JumpTable_80228450 , entry 8`
   84:  LA        A0, $SpecialFormation_80223C00
   88:  BEQ       R0, R0, .oB0
   8C:  RESERVED
	% LBL: from $JumpTable_80228450 , entry 5`
   90:  LA        A0, $SpecialFormation_80224AFC
   94:  BEQ       R0, R0, .oB0
   98:  RESERVED
	% LBL: from $JumpTable_80228450 , entry 6`
   9C:  LA        A0, $SpecialFormation_80226494
   A0:  BEQ       R0, R0, .oB0
   A4:  RESERVED
	% LBL: from $JumpTable_80228450 , entry 7`
   A8:  LA        A0, $SpecialFormation_80227734
	% LBL: from $JumpTable_80228450 , entry 4`
   A8:  LA        A0, $SpecialFormation_Buzzatrice
        .oB0
   B0:  LB        V1, 1F1 (V1)
   B4:  SW        V1, 8 (A0)
   B8:  LW        RA, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  LI        V0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 18
}

@ $JumpTable_80228450
{
	$Function_802195F4[54] $Function_802195F4[60] $Function_802195F4[6C] $Function_802195F4[78]
	$Function_802195F4[B0] $Function_802195F4[90] $Function_802195F4[9C] $Function_802195F4[A8]
	$Function_802195F4[84] $Function_802195F4[B0]
}

% Immediately vanishes owner of calling script.
#new:Function $Function_Vanish % ( duration )
{
	ADDIU	SP, SP, FFE0
	SW		RA, 10 (SP)
	SW		S1, 14 (SP)
	SW		S2, 18 (SP)
	% get turn count
	LW		A1, 0 (S0)
	JAL		~Func:get_variable
	DADDU	S1, A0, R0
	ANDI	V0, V0, 00FF
	% add electify status
	LW		A0, 148 (S1)
	JAL		~Func:get_actor
	DADDU	S2, V0, R0
	ORI		S2, S2, 0E00
	SH		S2, 218 (V0)
	% return
	LW		RA, 10 (SP)
	LW		S1, 14 (SP)
	LW		S2, 18 (SP)
	ADDIU	V0, R0, 2
	JR		RA
	ADDIU SP, SP, 20
}

@ $Script_LungeAttack
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseBattleCamPreset 	( 0000003F )
   4C:  Call     BattleCamTargetActor ( .Actor:Self )
   5C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   74:  Call     SetAnimation 	( .Actor:Self 00000001 004E0007 )
   8C:  Wait     00000014 
   98:  Call     SetActorSounds ( FFFFFF81 00000002 000002CB 00000000 )
   B4:  Call     EnemyTestTarget ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
   D8:  Switch  *Var[0] 
   E4:  	CaseOR  ==  .HitResult:Miss % 6
   F0:  	CaseOR  ==  .HitResult:Lucky % 5
   FC:  		Set  *Var[A]  *Var[0] 
  10C:  		Call     UseBattleCamPreset 	( 00000002 )
  11C:  		Call     SetAnimation 	( .Actor:Self 00000001 004E0008 )
  134:  		Call     SetGoalToTarget 	( .Actor:Self )
  144:  		Call     AddGoalPos 	( .Actor:Self FFFFFF9C 00000000 00000000 )
  160:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[0.30078125] )
  174:  		Call     JumpToGoal  	( .Actor:Self 00000011 00000000 00000001 00000000 )
  194:  		If  *Var[A]  ==  00000005 
  1A4:  			Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  1C8:  		EndIf
  1D0:  		Wait     0000000A 
  1DC:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1F8:  		Call     SetActorPos 	( .Actor:Self *Var[0] 00000000 *Var[2] )
  214:  		Call     SetAnimation 	( .Actor:Self 00000001 004E0002 )
  22C:  		Call     8026F838 ( FFFFFF81 00000002 )
  240:  		Wait     0000000F 
  24C:  		Call     YieldTurn   	( )
  258:  		Call     SetActorYaw 	( .Actor:Self 000000B4 )
  26C:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  288:  		ExecWait $Script_8021B450 
  294:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  2AC:  		Call     SetActorYaw 	( .Actor:Self 00000000 )
  2C0:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  2D4:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  2E8:  		Return
  2F0:  	EndCaseGroup
  2F8:  EndSwitch
  300:  Call     SetAnimation 	( .Actor:Self 00000001 004E0008 )
  318:  Call     SetGoalToTarget 	( .Actor:Self )
  328:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
  33C:  If  *Var[A]  &  00080000 
  34C:  	Call     AddGoalPos 	( .Actor:Self *Fixed[4.0] *Fixed[-6.0] 00000000 )
  368:  Else
  370:  	Call     AddGoalPos 	( .Actor:Self 0000000A FFFFFFF1 00000000 )
  38C:  EndIf
  394:  Call     SetActorJumpGravity 	( .Actor:Self *Fixed[0.30078125] )
  3A8:  Call     JumpToGoal  	( .Actor:Self 0000000C 00000000 00000001 00000000 )
  3C8:  Wait     00000002 
		Call  	 GetActorVar   ( .Actor:Self 00000009 *Var2 )	%attack power
  3E4:  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 *Var2 00000020 )
		/%
		Call	PlaySoundAtActor	( .Actor:Player 000002D8 )
		Thread % added
			Call	8026BF48	( 00000001 )
			Call	BoostDefense	( .Actor:Player FFFFFFFF )
			Call	BoostAttack	( .Actor:Player FFFFFFFF )
			Call	8026BF48	( 00000000 )
		EndThread % added
		%/
  40C:  Switch  *Var[0] 
  418:  	CaseOR  ==  00000000 
  424:  	CaseOR  ==  00000002 
  430:  		Call     UseBattleCamPreset 	( 00000002 )
  440:  		Call     8026F838 ( FFFFFF81 00000002 )
  454:  		Call     SetAnimation 	( .Actor:Self 00000001 004E0009 )
  46C:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  488:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[0.5] )
  49C:  		Add  *Var[0]  0000001E 
  4AC:  		Call     SetGoalPos 	( .Actor:Self *Var[0] 00000000 *Var[2] )
  4C8:  		Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
  4E8:  		Add  *Var[0]  00000014 
  4F8:  		Call     SetGoalPos 	( .Actor:Self *Var[0] 00000000 *Var[2] )
  514:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  534:  		Wait     0000000A 
  540:  		Call     YieldTurn   	( )
  54C:  		ExecWait $Script_8021B450 
  558:  	EndCaseGroup
  560:  EndSwitch
  568:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  57C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  590:  Return
  598:  End
}

@ $Script_CopyPartner
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     UseBattleCamPreset 	( 0000000E )
   38:  Call     BattleCamTargetActor ( .Actor:Self )
   48:  Wait     0000000F 
   54:  Call     PlaySoundAtActor 	( .Actor:Self 000020B8 )
   68:  Call     SetAnimation 	( .Actor:Self 00000001 004E0006 )
   80:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   9C:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
   B0:  If  *Var[A]  &  00080000 
   C0:  	Add  *Var[1]  00000008 
   D0:  	SetF  *Var[3]  *Fixed[0.40039062] 
   E0:  Else
   E8:  	Add  *Var[1]  00000014 
   F8:  	SetF  *Var[3]  *Fixed[1.0] 
  108:  EndIf
  110:  Call     PlayEffect  	( 00000013 00000001 *Var[0] *Var[1] *Var[2] *Var[3] 00000028 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  154:  Call     $Function_8021950C ( )
  160:  Call     MakeLerp    	( 00000000 000000C8 00000014 00000000 )
  17C:  Label    00000000 
  188:  Call     UpdateLerp  	( )
  194:  Call     $Function_80219550 ( *Var[0] )
  1A4:  Wait     00000001 
  1B0:  If  *Var[1]  ==  00000001 
  1C0:  	Goto     00000000 
  1CC:  EndIf
  1D4:  Wait     0000000A 
  1E0:  Call     $Function_GetPartner ( *Var[5] *Var[6] )
  1F4:  Call     $Function_802195F4 ( *Var[5] )
		% Check other Duplighosts to avoid duplicates (hah)
		Call     EnemyCreateTargetList 	( 00008002 )
		Call     InitTargetIterator 	( )
		Label    00000002
			Call     GetOwnerTarget ( *Var[0] *Var[1] )
			Call     GetOriginalActorType 	( *Var[0] *Var[2] )
			Switch   *Var[2]
				Case  ==  3C	% GhostGoombario
					Set		*Var[1]		1
				Case  ==  3D	% GhostKooper
					Set		*Var[1]		2
				Case  ==  3E	% GhostBombette
					Set		*Var[1]		3
				Case  ==  3F	% GhostParakarry
					Set		*Var[1]		4
				Case  ==  40	% GhostBow
					Set		*Var[1]		9
				Case  ==  41	% GhostWatt
					Set		*Var[1]		6
				Case  ==  42	% GhostSushie
					Set		*Var[1]		7
				Case  ==  43	% GhostLakilester
					Set		*Var[1]		8
				Case  ==  98	% dupli buzzatrice
					Set		*Var[1]		A
				Default
					Set		*Var[1]		0
			EndSwitch
			If  *Var[2]  ==  *Var[5]
				Goto	00000003
			EndIf
		Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
		If       *Var[0] !=  FFFFFFFF 
			Goto     00000002 
		EndIf		
  204:  Switch  *Var[5] 
  210:  	Case  ==  00000001 
  21C:  		Call     SummonEnemy 	( $SpecialFormation_8021E990 00000000 )
  230:  	Case  ==  00000002 
  23C:  		Call     SummonEnemy 	( $SpecialFormation_80220644 00000000 )
  250:  	Case  ==  00000003 
  25C:  		Call     SummonEnemy 	( $SpecialFormation_802218A4 00000000 )
  270:  	Case  ==  00000004 
  27C:  		Call     SummonEnemy 	( $SpecialFormation_80222830 00000000 )
  290:  	Case  ==  00000009 
  29C:  		Call     SummonEnemy 	( $SpecialFormation_80223C00 00000000 )
  2B0:  	Case  ==  00000006 
  2BC:  		Call     SummonEnemy 	( $SpecialFormation_80224AFC 00000000 )
  2D0:  	Case  ==  00000007 
  2DC:  		Call     SummonEnemy 	( $SpecialFormation_80226494 00000000 )
  2F0:  	Case  ==  00000008 
  2FC:  		Call     SummonEnemy 	( $SpecialFormation_80227734 00000000 )
			Case  ==  0000000A
				Call     SummonEnemy 	( $SpecialFormation_Buzzatrice 00000000 )
  310:  EndSwitch
  318:  Set  *Var[A]  *Var[0] 
  328:  Call     8027DCBC ( FFFFFF81 *Var[A] )
  33C:  Call     SetBattleVar 	( 00000003 *Var[5] )
  350:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:SmokeBurst )
  364:  Thread
  36C:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  388:  	Add  *Var[1]  00000003 
  398:  	Add  *Var[2]  00000005 
  3A8:  	Loop     00000003 
  3B4:  		Call     PlayEffect  	( ~FX:BigSmokePuff *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  3F8:  		Wait     00000003 
  404:  	EndLoop
  40C:  EndThread
  414:  Wait     00000005 
  420:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  43C:  Call     SetActorPos 	( *Var[A] *Var[0] *Var[1] *Var[2] )
  458:  Call     SetPartFlagBits 	( .Actor:Self 00000001 00020001 .True )
  474:  Call     SetPartFlagBits 	( .Actor:Self 00000001 00800000 .False )
  490:  Call     SetActorFlagBits 	( .Actor:Self 00400004 .True )
  4A8:  Call     GetActorHP  	( .Actor:Self *Var[0] )
  4BC:  Call     SetEnemyHP  	( *Var[A] *Var[0] )
  4D0:  Call     CopyBuffs ( .Actor:Self *Var[A] )
  4E4:  Call     GetOwnerID  	( *Var[0] )
  4F4:  Call     SetActorVar 	( *Var[A] 00000000 *Var[0] )
  50C:  Call     SetActorVar 	( *Var[A] 00000001 *Var[6] )
  524:  Wait     00000014 
  530:  Call     UseBattleCamPreset 	( 00000002 )
  540:  Call     MoveBattleCamOver 	( 00000014 )
  550:  Thread
  558:  	Call     MakeLerp    	( 000000C8 00000000 00000014 00000000 )
  574:  	Label    00000001 
  580:  	Call     UpdateLerp  	( )
  58C:  	Call     $Function_80219550 ( *Var[0] )
  59C:  	Wait     00000001 
  5A8:  	If  *Var[1]  ==  00000001 
  5B8:  		Goto     00000001 
  5C4:  	EndIf
  5CC:  EndThread
  5D4:  Call     SetActorSounds ( *Var[A] 00000002 00000000 00000000 )
  5F0:  Switch  *Var[5] 
  5FC:  	Case  ==  00000008 
  608:  		Call     GetActorPos 	( *Var[A] *Var[0] *Var[1] *Var[2] )
  624:  		Call     SetActorJumpGravity 	( *Var[A] *Fixed[0.0107421875] )
  638:  		Call     SetGoalPos 	( *Var[A] *Var[0] 0000000A *Var[2] )
  654:  		Call     JumpToGoal  	( *Var[A] 0000000A 00000000 00000000 00000000 )
  674:  		Wait     0000000A 
  680:  	CaseOR  ==  00000006 
  68C:  	CaseOR  ==  00000009 
  698:  	CaseOR  ==  00000004 
  698:  	CaseOR  ==  0000000A
  6A4:  		Call     GetActorPos 	( *Var[A] *Var[0] *Var[1] *Var[2] )
  6C0:  		Call     SetActorJumpGravity 	( *Var[A] *Fixed[0.0107421875] )
  6D4:  		Call     SetGoalPos 	( *Var[A] *Var[0] 0000001E *Var[2] )
  6F0:  		Call     JumpToGoal  	( *Var[A] 00000014 00000000 00000000 00000000 )
  710:  	EndCaseGroup
  718:  EndSwitch
  720:  Call     GetActorPos 	( *Var[A] *Var[0] *Var[1] *Var[2] )
  73C:  Call     ForceHomePos 	( *Var[A] *Var[0] *Var[1] *Var[2] )
  758:  Call     HPBarToHome 	( *Var[A] )
  768:  Call     8026F838 ( *Var[A] 00000002 )
  77C:  Wait     00000014 
  788:  Call     SetActorPos 	( .Actor:Self 00000000 FFFFFC18 00000000 )
  7A4:  Call     ForceHomePos 	( .Actor:Self 00000000 FFFFFC18 00000000 )
  7C0:  Call     HPBarToHome 	( .Actor:Self )
  7D0:  Call     SetActorVar 	( .Actor:Self 00000008 00000001 )
  7E8:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  7FC:  Call     UseIdleAnimation 	( .Actor:Self .True )
  810:  Return
  818:  End
}

@ $Script_TakeTurn_8021F6A4
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     GetActorVar 	( .Actor:Self 00000003 *Var[0] )
   54:  If  *Var[0]  ==  00000001 
   64:  	Call     GetActorVar 	( .Actor:Self 00000004 *Var[0] )
   7C:  	Sub  *Var[0]  00000001 
   8C:  	If  *Var[0]  >  00000000 
   9C:  		Call     SetActorVar 	( .Actor:Self 00000004 *Var[0] )
   B4:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
   D0:  		Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[3.0] )
   E8:  		Wait     0000001E 
   F4:  		Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[1.0] )
  10C:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  124:  	Else
  12C:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  148:  		Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[3.0] )
  160:  		Wait     00000014 
  16C:  		Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[1.0] )
  184:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  19C:  		Call     SetAnimation 	( .Actor:Self 00000001 000A0019 )
  1B4:  		Set  *Var[0]  00000000 
  1C4:  		Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000C 00000000 )
  1E0:  		Thread
  1E8:  			Loop     00000005 
  1F4:  				Add  *Var[0]  0000000F 
  204:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  220:  				Wait     00000001 
  22C:  			EndLoop
  234:  		EndThread
  23C:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  258:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  274:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[3.0] )
  288:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  2A8:  		Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  2C4:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  2E0:  		Call     SetActorDispOffset ( FFFFFF81 00000000 00000000 00000000 )
  2FC:  		Call     SetAnimation 	( .Actor:Self 00000001 000A0004 )
  314:  		Call     SetActorVar 	( .Actor:Self 00000003 00000000 )
  32C:  		Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_8021EA44 )
  344:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021E9AC )
  35C:  		Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFE 00000026 )
  378:  		Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFD FFFFFFF7 )
				Goto 1 %get up and attack on same turn
  394:  	EndIf
  39C:  	Call     EnableIdleScript 	( .Actor:Self 00000001 )
  3B0:  	Call     UseIdleAnimation 	( .Actor:Self .True )
  3C4:  	Return
  3CC:  EndIf
		Label 1
  3D4:  Call     SetAnimation 	( .Actor:Self 00000001 000A000E )
  3EC:  Call     PlaySoundAtActor 	( .Actor:Self 00000000 )
  400:  Wait     0000000F 
  40C:  Call     SetAnimation 	( .Actor:Self 00000001 000A000A )
  424:  Call     PlaySoundAtActor 	( .Actor:Self 0000200C )
  438:  Call     UseBattleCamPreset 	( 0000000E )
  448:  Call     BattleCamTargetActor ( .Actor:Self )
  458:  Call     MoveBattleCamOver 	( 0000004B )
  468:  Call     8024ECF8 ( 00000001 00000001 00000001 )
  480:  Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  498:  Switch  *Var[0] 
  4A4:  	Case  ==  00000000 
  4B0:  		Set  *Var[0]  0000000A 
  4C0:  	Case  ==  00000001 
  4CC:  		Set  *Var[0]  00000014 
  4DC:  	Case  ==  00000002 
  4E8:  		Set  *Var[0]  0000001E 
  4F8:  EndSwitch
  500:  Set  *Var[9]  00000000 
  510:  Loop     *Var[0] 
  51C:  	Add  *Var[9]  00000001 
  52C:  	Switch  *Var[9] 
  538:  		Case  <  00000014 
  544:  			Call     SetAnimation 	( .Actor:Self 00000001 000A000A )
  55C:  			Call     SetActorSpeed 	( .Actor:Self *Fixed[10.0] )
  570:  		Case  ==  00000014 
  57C:  			Call     GetActorPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
  598:  			Call     PlayEffect  	( ~FX:SmokeImpact:Small *Var[4] *Var[5] *Var[6] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  5DC:  		Case  <  00000028 
  5E8:  			Call     SetAnimation 	( .Actor:Self 00000001 000A000B )
  600:  			Call     SetActorSpeed 	( .Actor:Self *Fixed[12.0] )
  614:  		Case  ==  00000028 
  620:  			Call     GetActorPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
  63C:  			Call     PlayEffect  	( ~FX:SmokeImpact:Small *Var[4] *Var[5] *Var[6] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  680:  		Case  <  00000032 
  68C:  			Call     SetAnimation 	( .Actor:Self 00000001 000A000C )
  6A4:  			Call     SetActorSpeed 	( .Actor:Self *Fixed[14.0] )
  6B8:  		Case  ==  00000032 
  6C4:  			Call     GetActorPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
  6E0:  			Call     PlayEffect  	( ~FX:SmokeImpact:Small *Var[4] *Var[5] *Var[6] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  724:  		Case  <  0000003C 
  730:  			Call     SetAnimation 	( .Actor:Self 00000001 000A000D )
  748:  			Call     SetActorSpeed 	( .Actor:Self *Fixed[16.0] )
  75C:  		Case  ==  0000003C 
  768:  			Call     GetActorPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
  784:  			Call     PlayEffect  	( ~FX:SmokeImpact:Small *Var[4] *Var[5] *Var[6] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  7C8:  	EndSwitch
  7D0:  	Wait     00000001 
  7DC:  EndLoop
  7E4:  Call     PlaySoundAtActor 	( .Actor:Self 0000200A )
  7F8:  Call     SetActorSounds ( FFFFFF81 00000000 00000000 00000000 )
  814:  Call     UseBattleCamPreset 	( 00000002 )
  824:  Call     MoveBattleCamOver 	( 0000000F )
  834:  Call     AddActorDecoration 	( .Actor:Self 00000000 00000000 .Decoration:GreySmokeTrail )
		Call 	 RandInt ( 100` *Var[0] )
		Switch (*Var[0])
			Case < 4B
				Set *Var[A] 0
			Default
				Set *Var[A] 1
		EndSwitch
  850:  Call     SetGoalToTarget 	( .Actor:Self )
  860:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  878:  Call     EnemyTestTarget ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  89C:  Switch  *Var[0] 
  8A8:  	CaseOR  ==  .HitResult:Miss % 6
  8B4:  	CaseOR  ==  .HitResult:Lucky % 5
  8C0:  		Set  *Var[A]  *Var[0] 
  8D0:  		Thread
  8D8:  			Call     $Function_80218D10 ( )
  8E4:  			Call     RemoveActorDecoration 	( .Actor:Self 00000000 00000000 )
  8FC:  		EndThread
  904:  		Wait     00000004 
  910:  		Call     SetAnimation 	( .Actor:Self 00000001 000A0009 )
  928:  		Call     SetActorRotationOffset 	( .Actor:Self FFFFFFF8 00000000 00000000 )
  944:  		Set  *Var[0]  00000000 
  954:  		Loop     00000002 
  960:  			Add  *Var[0]  0000001E 
  970:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  98C:  			Wait     00000001 
  998:  		EndLoop
  9A0:  		Wait     00000005 
  9AC:  		Call     GetActorPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
  9C8:  		Call     PlayEffect  	( ~FX:SmokeImpact:Small *Var[4] *Var[5] *Var[6] 00000010 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  A0C:  		Loop     00000005 
  A18:  			Add  *Var[0]  FFFFFFF4 
  A28:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  A44:  			Wait     00000001 
  A50:  		EndLoop
  A58:  		Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  A74:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000002 )
  A90:  		Wait     00000002 
  A9C:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 FFFFFFFE )
  AB8:  		Wait     00000002 
  AC4:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  AE0:  		If  *Var[A]  ==  00000005 
  AF0:  			Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  B14:  		EndIf
  B1C:  		Wait     0000000A 
  B28:  		Call     SetAnimation 	( .Actor:Self 00000001 000A000F )
  B40:  		Wait     0000000A 
  B4C:  		Call     UseBattleCamPreset 	( 00000002 )
  B5C:  		Call     YieldTurn   	( )
  B68:  		Call     8026F6EC ( FFFFFF81 )
  B78:  		Call     SetAnimation 	( .Actor:Self 00000001 000A0006 )
  B90:  		Call     SetGoalToHome 	( .Actor:Self )
  BA0:  		If *Var[A] == 0
					Call     SetActorSpeed 	( .Actor:Self *Fixed[4.5] )
				Else
					Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
				EndIf
  BB4:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  BCC:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  BE0:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  BF4:  		Return
  BFC:  	EndCaseGroup
  C04:  EndSwitch
  C0C:  Call     RemoveActorDecoration 	( .Actor:Self 00000000 00000000 )
  C24:  Call     GetActorVar 	( .Actor:Self 00000001 *Var[9] )
  C3C:  Switch  *Var[9] 
  C48:  	Case  ==  00000000 
  C54:  		Wait     00000002 
  C60:  		Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 0000FFFF 00000000 00000002 00000020 )
  C88:  	Case  ==  00000001 
  C94:  		Wait     00000002 
  CA0:  		Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 0000FFFF 00000000 00000003 00000020 )
  CC8:  	Case  ==  00000002 
  CD4:  		Wait     00000002 
  CE0:  		Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 0000FFFF 00000000 00000005 00000020 )
  D08:  EndSwitch
		If *Var[A] == 0 %shell toss, do normal stuff
			Call     RemoveActorDecoration 	( .Actor:Self 00000000 00000000 )
  D10:  	Switch  *Var[0] 
  D1C:  		CaseOR  ==  00000000 
  D28:  		CaseOR  ==  00000002 
  D34:  			Call     UseBattleCamPreset 	( 00000002 )
  D44:  			Call     MoveBattleCamOver 	( 00000008 )
  D54:  			Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  D70:  			Add  *Var[0]  0000003C 
  D80:  			Set  *Var[1]  00000000 
  D90:  			Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.4003906] )
  DA4:  			Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  DC0:  			Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
  DE0:  			Add  *Var[0]  0000001E 
  DF0:  			Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  E0C:  			Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  E2C:  			Add  *Var[0]  00000014 
  E3C:  			Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  E58:  			Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
  E78:  			Add  *Var[0]  0000000A 
  E88:  			Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  EA4:  			Call     JumpToGoal  	( .Actor:Self 00000004 00000000 00000001 00000000 )
  EC4:  			Call     SetAnimation 	( .Actor:Self 00000001 000A000F )
  EDC:  			Wait     0000000F 
  EE8:  			Call     YieldTurn   	( )
  EF4:  			Call     8026F6EC ( FFFFFF81 )
  F04:  			Call     SetAnimation 	( .Actor:Self 00000001 000A0006 )
  F1C:  			Call     SetGoalToHome 	( .Actor:Self )
  F2C:  			Call     SetActorSpeed 	( .Actor:Self *Fixed[4.5] )
  F40:  			Call     RunToGoal   	( .Actor:Self 00000000 .False )
  F58:  		EndCaseGroup
  F60:  	EndSwitch
		Else %power shell, keep going and hit partner
			Call     SetTargetActor ( .Actor:Self .Actor:Partner )
			Call     SetGoalToTarget 	( .Actor:Self )
			Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] ) %faster
			Call     RunToGoal   	( .Actor:Self 00000000 .False )
			Switch  *Var[9] %the partner hit isn't as strong for fairness
				Case  ==  00000000 
					Wait     00000002 
					Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 0000FFFF 00000000 00000001 00000020 )
				Case  ==  00000001 
					Wait     00000002 
					Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 0000FFFF 00000000 00000002 00000020 )
				Case  ==  00000002 
					Wait     00000002 
					Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 0000FFFF 00000000 00000003 00000020 )
			EndSwitch			
			Call	 AddGoalPos (.Actor:Self FFFFFF80 00000000 00000000 )
			Call     RunToGoal   	( .Actor:Self 00000000 .False )
			Call     RemoveActorDecoration 	( .Actor:Self 00000000 00000000 )
			Switch  *Var[0] 
				CaseOR  ==  00000000 
				CaseOR  ==  00000002 
					% Call     UseBattleCamPreset 	( 00000002 )
					% Call     MoveBattleCamOver 	( 00000008 )
					% Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
					% Add  *Var[0]  0000003C 
					% Set  *Var[1]  00000000 
					% Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.4003906] )
					% Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
					% Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
					% Add  *Var[0]  0000001E 
					% Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
					% Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
					% Add  *Var[0]  00000014 
					% Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
					% Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
					% Add  *Var[0]  0000000A 
					% Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
					% Call     JumpToGoal  	( .Actor:Self 00000004 00000000 00000001 00000000 )
					% Call     SetAnimation 	( .Actor:Self 00000001 000A000F )
					Wait     0000000F 
					Call     YieldTurn   	( )
					Call     8026F6EC ( FFFFFF81 )
					Call     SetAnimation 	( .Actor:Self 00000001 000A0006 )
					Call     SetGoalToHome 	( .Actor:Self )
					Call     SetActorSpeed 	( .Actor:Self *Fixed[4.5] )
					Call     RunToGoal   	( .Actor:Self 00000000 .False )
				EndCaseGroup
			EndSwitch
		EndIf
  F68:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  F7C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  F90:  Return
  F98:  End
}

@ $Script_HandleEvent_80220984
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetLastEvent 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	Case  ==  .Event:HitCombo % 9
   54:  		SetConst  *Var[0]  00000001 
   64:  		SetConst  *Var[1]  000B0012 
   74:  		ExecWait DoNormalHit 
   80:  	Case  ==  .Event:Hit % A
   8C:  		SetConst  *Var[0]  00000001 
   9C:  		SetConst  *Var[1]  000B0012 
   AC:  		ExecWait DoNormalHit 
   B8:  		Call     GetLastElement ( *Var[1] )
   C8:  		If  *Var[1]  &  00000020 
   D8:  			Call     SetAnimation 	( .Actor:Self 00000001 000B0013 )
   F0:  			Wait     00000014 
   /%
   FC:  			ExecWait $Script_8022080C 
  108:  			ExecWait $Script_8021BF2C 
  114:  			Call     UseBattleCamPreset 	( 00000002 )
  124:  			SetConst  *Var[0]  00000001 
  134:  			SetConst  *Var[1]  000B0014 
  144:  			Set  *Var[2]  FFFFCFC7 
  154:  			ExecWait DoDeath 
	%/
  160:  			Return
  168:  		EndIf
  170:  	Case  ==  .Event:BurnHit % E
  17C:  		SetConst  *Var[0]  00000001 
  18C:  		SetConst  *Var[1]  000B0013 
  19C:  		SetConst  *Var[2]  000B0014 
  1AC:  		ExecWait DoBurnHit 
/%
  1B8:  		ExecWait $Script_8022080C 
  1C4:  		ExecWait $Script_8021BF2C 
  1D0:  		SetConst  *Var[0]  00000001 
  1E0:  		SetConst  *Var[1]  000B0014 
  1F0:  		Set  *Var[2]  FFFFCFC7 
  200:  		ExecWait DoDeath 
%/
  20C:  		Return
  214:  	Case  ==  .Event:BurnDeath % 24
  220:  		SetConst  *Var[0]  00000001 
  230:  		SetConst  *Var[1]  000B0013 
  240:  		SetConst  *Var[2]  000B0014 
  250:  		ExecWait DoBurnHit 
  25C:  		ExecWait $Script_8022080C 
  268:  		ExecWait $Script_8021BF2C 
  274:  		SetConst  *Var[0]  00000001 
  284:  		SetConst  *Var[1]  000B0014 
  294:  		Set  *Var[2]  FFFFCFC7 
  2A4:  		ExecWait DoDeath 
  2B0:  		Return
  2B8:  	Case  ==  .Event:SpinSmashHit % B
  2C4:  		SetConst  *Var[0]  00000001 
  2D4:  		SetConst  *Var[1]  000B0012 
  2E4:  		ExecWait DoSpinSmashHit 
  2F0:  	Case  ==  .Event:SpinSmashDeath % 21
  2FC:  		ExecWait $Script_8021BF2C 
  308:  		SetConst  *Var[0]  00000001 
  318:  		SetConst  *Var[1]  000B0012 
  328:  		ExecWait DoSpinSmashHit 
  334:  		SetConst  *Var[0]  00000001 
  344:  		SetConst  *Var[1]  000B0012 
  354:  		ExecWait DoDeath 
  360:  		Return
  368:  	CaseOR  ==  .Event:ShockHit % 2F
  374:  	CaseOR  ==  .Event:ShockDeath % 26
  380:  		Call     HPBarToCurrent ( .Actor:Self )
  390:  		Call     SetAnimation 	( .Actor:Self 00000001 000B0013 )
  3A8:  		Wait     00000014 
  3B4:  		ExecWait $Script_8022080C 
  3C0:  		ExecWait $Script_8021BF2C 
  3CC:  		Call     UseBattleCamPreset 	( 00000002 )
  3DC:  		SetConst  *Var[0]  00000001 
  3EC:  		SetConst  *Var[1]  000B0014 
  3FC:  		Set  *Var[2]  FFFFCFC7 
  40C:  		ExecWait DoDeath 
  418:  		Return
  420:  	EndCaseGroup
  428:  	CaseOR  ==  00000017 % 17
  434:  	CaseOR  ==  .Event:Immune % 19
  440:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  44C:  		SetConst  *Var[0]  00000001 
  45C:  		SetConst  *Var[1]  000B0004 
  46C:  		ExecWait DoImmune 
  478:  	EndCaseGroup
  480:  	Case  ==  .Event:Death % 20
  48C:  		ExecWait $Script_8021BF2C 
  498:  		SetConst  *Var[0]  00000001 
  4A8:  		SetConst  *Var[1]  000B0012 
  4B8:  		ExecWait DoNormalHit 
  4C4:  		Wait     0000000A 
  4D0:  		SetConst  *Var[0]  00000001 
  4E0:  		SetConst  *Var[1]  000B0012 
  4F0:  		ExecWait DoDeath 
  4FC:  		Return
  504:  	Case  ==  .Event:RecoverStatus % 31
  510:  		SetConst  *Var[0]  00000001 
  520:  		SetConst  *Var[1]  000B0004 
  530:  		ExecWait DoRecover 
  53C:  	Case  ==  .Event:ScareAway % 39
  548:  		SetConst  *Var[0]  00000001 
  558:  		SetConst  *Var[1]  000B0008 
  568:  		SetConst  *Var[2]  000B0012 
  578:  		ExecWait DoScareAway 
  584:  		Return
  58C:  	Case  ==  .Event:BeginAirLift % 3A
  598:  		SetConst  *Var[0]  00000001 
  5A8:  		SetConst  *Var[1]  000B0008 
  5B8:  		ExecWait DoAirLift 
  5C4:  	Case  ==  .Event:BlowAway % 16
  5D0:  		SetConst  *Var[0]  00000001 
  5E0:  		SetConst  *Var[1]  000B0012 
  5F0:  		ExecWait DoBlowAway 
  5FC:  		Return
  604:  	Default
  60C:  EndSwitch
  614:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  628:  Call     UseIdleAnimation 	( .Actor:Self .True )
  63C:  Return
  644:  End
}

@ $Script_TakeTurn_80220FD0
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Wait     0000000A 
   34:  Call     UseBattleCamPreset 	( 0000003F )
   44:  Call     BattleCamTargetActor ( .Actor:Self )
   54:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   68:  Call     SetGoalToTarget 	( .Actor:Self )
   78:  Call     AddGoalPos 	( .Actor:Self 00000028 00000000 00000000 )
   94:  Call     MoveBattleCamOver 	( 0000001E )
		Call 	 RandInt ( 100` *Var[0] )
		Switch (*Var[0]) %1 = bomb
			Case < 50`
				Set *Var[A] 0
			Default
				Set *Var[A] 1
		EndSwitch
		If (*Var[A] == 1) %this is spliced from bombette.bscr mostly
			Call	 SetTargetActor ( .Actor:Self .Actor:Player )
			Call     SetGoalToTarget 	( .Actor:Self )
			Call     AddGoalPos 	( .Actor:Self 0000000C 00000000 00000000 )		
			Call     PlaySoundAtActor 	( .Actor:Self 00000287 ) %fuse
			Thread
				Call     SetAnimation 	( .Actor:Self FFFFFFFF 000B0009 )
				Call     RunToGoal   	( .Actor:Self 00000023 ) 
				Call     SetAnimation 	( .Actor:Self FFFFFFFF 000B001A )
			EndThread
			Call     EnemyTestTarget ( .Actor:Self *Var[C] 00000000 00000000 00000001 00000010 )
			If *Var[C] == 5 %lucky hit triggers a premature explosion
				Wait	1E
				Call     StopSound   	( 00000287 ) %no more fuse
				Call     80254218 ( 0000000B )
				Thread
					Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.75] )
					Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[3.0] )
					Call     ShakeCam    	( 00000001 00000000 0000000A *Fixed[4.5] )
					Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[3.0] )
				EndThread
				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
				Add  *Var[2]  00000002 
				Call     PlayEffect  	( ~FX:SmokeRing:Blast1 *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
				Add  *Var[1]  00000014 
				Add  *Var[2]  00000002 
				Call     PlayEffect  	( ~FX:Explosion1 *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
				Call     PlaySoundAtActor 	( .Actor:Self .Sound:BombBlast )
				Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
				Goto 	0
			EndIf
			Wait     2D %the regular partner move has a consistent timing, no matter where the enemy is 
			Call     StopSound   	( 00000287 ) %no more fuse
			Call     80254218 ( 0000000B )
			Thread
				Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.75] )
				Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[3.0] )
				Call     ShakeCam    	( 00000001 00000000 0000000A *Fixed[4.5] )
				Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[3.0] )
			EndThread
			Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
			Add  *Var[2]  00000002 
			Call     PlayEffect  	( ~FX:SmokeRing:Blast1 *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
			Add  *Var[1]  00000014 
			Add  *Var[2]  00000002 
			Call     PlayEffect  	( ~FX:Explosion1 *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
			Call     PlaySoundAtActor 	( .Actor:Self .Sound:BombBlast )
			If (*Var[C] == 6) %if mario is invisible, skip damage
				Goto 0
			Else
				Call     GetActorVar 	( .Actor:Self 00000001 *Var[9] )
				Switch  *Var[9] %i think it's 5-6-7 but i need to confirm
					Case  ==  00000000  
						Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000200 00000000 00000000 00000005 00000020 )
					Case  ==  00000001  
						Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000200 00000000 00000000 00000006 00000020 )
					Case  ==  00000002  
						Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000200 00000000 00000000 00000007 00000020 )
				EndSwitch
			EndIf
			Label 0 %fly up
			Call     UseBattleCamPreset 	( 00000002 ) %stop camera following
			Thread
				Set  *Var[0]  00000000 
				Loop     00000050 
					Wait     00000001 
					Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
					Add  *Var[0]  00000021 
				EndLoop
				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
			EndThread
			Call     SetAnimation 	( .Actor:Self FFFFFFFF 000B001B )
			Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
			Sub  *Var[0]  00000032 
			Add  *Var[1]  000000C8 
			Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
			Call     FlyToGoal  	( .Actor:Self 0000000A 00000000 .Easing:Linear )
			Wait     00000032 
			Call     80280818 ( )
			Call     SetGoalToHome 	( .Actor:Self )
			Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
			Add  *Var[0]  00000019 
			Add  *Var[1]  000000C8 
			Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
			Call     SetGoalToHome 	( .Actor:Self )
			Call     YieldTurn   	( ) %allows next enemy's turn script to start
			Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
			Call     SetActorJumpGravity 	( .Actor:Self *Fixed[0.60058594] )
			Call     SetAnimation 	( .Actor:Self FFFFFFFF 000B001B )
			Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
			Call     SetAnimation 	( .Actor:Self FFFFFFFF 000B0004 )
			Return
		EndIf
   A4:  Call     SetAnimation 	( .Actor:Self 00000001 000B0008 )
   BC:  Call     RunToGoal   	( .Actor:Self 0000001E .False )
   D4:  Call     SetAnimation 	( .Actor:Self 00000001 000B0004 )
   EC:  Call     SetAnimation 	( .Actor:Self 00000001 000B000F )
  104:  Wait     0000000F 
  110:  Call     SetActorSounds ( FFFFFF81 00000000 00000000 00000000 )
  12C:  Call     PlaySoundAtActor 	( .Actor:Self 00002020 )
  140:  Call     EnemyTestTarget ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  164:  Switch  *Var[0] 
  170:  	CaseOR  ==  .HitResult:Miss % 6
  17C:  	CaseOR  ==  .HitResult:Lucky % 5
  188:  		Set  *Var[A]  *Var[0] 
  198:  		Call     SetGoalToTarget 	( .Actor:Self )
  1A8:  		Call     AddGoalPos 	( .Actor:Self FFFFFFF6 00000000 00000000 )
  1C4:  		Call     SetAnimation 	( .Actor:Self 00000001 000B0010 )
  1DC:  		Call     RunToGoal   	( .Actor:Self 00000005 .False )
  1F4:  		Call     SetAnimation 	( .Actor:Self 00000001 000B0004 )
  20C:  		Thread
  214:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000F 00000000 )
  230:  			Set  *Var[0]  00000000 
  240:  			Loop     0000000A 
  24C:  				Add  *Var[0]  00000048 
  25C:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  278:  				Wait     00000001 
  284:  			EndLoop
  28C:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  2A8:  		EndThread
  2B0:  		Call     AddGoalPos 	( .Actor:Self FFFFFFC4 00000000 00000000 )
  2CC:  		Call     RunToGoal   	( .Actor:Self 0000000A .False )
  2E4:  		Call     SetAnimation 	( .Actor:Self 00000001 000B0004 )
  2FC:  		Thread
  304:  			Call     $Function_80218E34 ( )
  310:  		EndThread
  318:  		If  *Var[A]  ==  00000005 
  328:  			Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  34C:  		EndIf
  354:  		Wait     00000014 
  360:  		Call     UseBattleCamPreset 	( 00000002 )
  370:  		Call     YieldTurn   	( )
  37C:  		Call     SetAnimation 	( .Actor:Self 00000001 000B0008 )
  394:  		Call     SetGoalToHome 	( .Actor:Self )
  3A4:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
  3B8:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  3D0:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  3E4:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  3F8:  		Return
  400:  	EndCaseGroup
  408:  EndSwitch
  410:  Set  *Var[A]  *Var[0] 
  420:  Call     SetGoalToTarget 	( .Actor:Self )
  430:  Call     SetAnimation 	( .Actor:Self 00000001 000B0010 )
  448:  Call     RunToGoal   	( .Actor:Self 00000004 .False )
  460:  Call     GetActorVar 	( .Actor:Self 00000001 *Var[9] )
  478:  Switch  *Var[9] 
  484:  	Case  ==  00000000 
  490:  		Wait     00000002 
  49C:  		Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000002 00000020 )
  4C4:  	Case  ==  00000001 
  4D0:  		Wait     00000002 
  4DC:  		Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000003 00000020 )
  504:  	Case  ==  00000002 
  510:  		Wait     00000002 
  51C:  		Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000005 00000020 )
  544:  EndSwitch
  54C:  Switch  *Var[0] 
  558:  	CaseOR  ==  00000000 
  564:  	CaseOR  ==  00000002 
  570:  		Call     SetAnimation 	( .Actor:Self 00000001 000B0004 )
  588:  		Call     UseBattleCamPreset 	( 00000002 )
  598:  		Call     MoveBattleCamOver 	( 00000008 )
  5A8:  		Call     SetAnimation 	( .Actor:Self 00000001 000B0011 )
  5C0:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  5DC:  		Add  *Var[0]  00000028 
  5EC:  		Set  *Var[1]  00000000 
  5FC:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.4003906] )
  610:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  62C:  		Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
  64C:  		Call     SetAnimation 	( .Actor:Self 00000001 000B000E )
  664:  		Wait     00000001 
  670:  		Call     SetAnimation 	( .Actor:Self 00000001 000B0011 )
  688:  		Add  *Var[0]  00000028 
  698:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  6B4:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  6D4:  		Call     SetAnimation 	( .Actor:Self 00000001 000B000E )
  6EC:  		Wait     00000001 
  6F8:  		Call     SetAnimation 	( .Actor:Self 00000001 000B0011 )
  710:  		Add  *Var[0]  00000014 
  720:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  73C:  		Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
  75C:  		Call     SetAnimation 	( .Actor:Self 00000001 000B000E )
  774:  		Wait     00000001 
  780:  		Call     SetAnimation 	( .Actor:Self 00000001 000B0011 )
  798:  		Add  *Var[0]  0000000A 
  7A8:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  7C4:  		Call     JumpToGoal  	( .Actor:Self 00000004 00000000 00000001 00000000 )
  7E4:  		Call     SetAnimation 	( .Actor:Self 00000001 000B000E )
  7FC:  		Wait     00000001 
  808:  		Call     SetAnimation 	( .Actor:Self 00000001 000B0004 )
  820:  		Wait     00000008 
  82C:  		Call     YieldTurn   	( )
  838:  		Call     SetAnimation 	( .Actor:Self 00000001 000B0008 )
  850:  		Call     SetGoalToHome 	( .Actor:Self )
  860:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
  874:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  88C:  	EndCaseGroup
  894:  EndSwitch
  89C:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  8B0:  Call     UseIdleAnimation 	( .Actor:Self .True )
  8C4:  Return
  8CC:  End
}

@ $Script_TakeTurn_80222814
{
 		Call 	 RandInt ( 100` *Var[0] )
		Switch (*Var[0])
			Case < 50`
				Set *Var[A] 0
			Default
				Set *Var[A] 1
		EndSwitch
		If (*Var[A] == 0)  
	0:  	ExecWait $Script_80222084 
		Else
			ExecWait $Script_ShellShot
		EndIf
    C:  Return
   14:  End
}

#new:Script $Script_ShellShot
{
Call     UseIdleAnimation 	( .Actor:Self .False )
Call     EnableIdleScript 	( .Actor:Self 00000000 )
Call     SetAnimation 	( .Actor:Self FFFFFFFF 000C0007 )
Call     SetTargetActor ( .Actor:Self .Actor:Player )
Call     UseBattleCamPreset 	( 0000003F )
Call     BattleCamTargetActor ( .Actor:Self )
Wait     0000000F
Call     SetAnimation 	( .Actor:Self FFFFFFFF 000C0008 )
Wait	 00000020
Call     EnableActorBlur 	( .Actor:Self 00000001 )
Call     EnemyTestTarget ( .Actor:Self *Var[0] 10000000 00000000 00000001 00000010 )
Call     SetGoalToTarget 	( .Actor:Self )
Switch (*Var[0])
	Case == 00000005 %lucky: misses you
		Call     EnableActorBlur 	( .Actor:Self 00000001 )
		Call     SetGoalToTarget 	( .Actor:Self )
		Call     AddGoalPos 	( .Actor:Self 00000032 FFFFFFCE 00000000 )
		Call     SetAnimation 	( .Actor:Self FFFFFFFF 000C000A )
		Call     FlyToGoal  	( .Actor:Self 00000007 00000000 00000064 )
		Call     EnableActorBlur 	( .Actor:Self 00000000 )
		Wait 	 00000004
		Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
		Goto 0
	Case == 00000006 %invis: goes through you
		Call     EnableActorBlur 	( .Actor:Self 00000001 )
		Call     SetGoalToTarget 	( .Actor:Self )
		Call     AddGoalPos 	( .Actor:Self FFFFFFCE FFFFFFCE 00000000 )
		Call     SetAnimation 	( .Actor:Self FFFFFFFF 000C000A )
		Call     FlyToGoal  	( .Actor:Self 00000007 00000000 00000064 )
		Call     EnableActorBlur 	( .Actor:Self 00000000 )
		Wait 	 00000004
		Goto 0
	Default
EndSwitch
Call     SetAnimation 	( .Actor:Self FFFFFFFF 000C000A )
Call     FlyToGoal  	( .Actor:Self 00000007 00000000 .Easing:Linear )
Call     EnableActorBlur 	( .Actor:Self 00000000 )
Call     GetActorVar 	( .Actor:Self 00000001 *Var[9] )
Switch  *Var[9]  %5-6-7
	Case  ==  00000000  
		Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000005 00000020 )
	Case  ==  00000001  
		Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000006 00000020 )
	Case  ==  00000002  
		Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000007 00000020 )
EndSwitch
Call     PlaySoundAtActor 	( .Actor:Self 00000110 ) %the regular sound
%go home
Label 0
Call     UseBattleCamPreset 	( 00000002 ) %stop camera following
Call     SetAnimation 	( .Actor:Self FFFFFFFF 000C0017 )
Call     SetActorJumpGravity 	( .Actor:Self *Fixed[2.0] )
Call     AddGoalPos 	( .Actor:Self FFFFFFD8 00000000 00000000 )
Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000000 00000000 )
Call     SetAnimation 	( .Actor:Self FFFFFFFF 000C0000 )
ChildThread
	Wait     00000004 
	Call     SetAnimation 	( .Actor:Self FFFFFFFF 000C0003 )
EndChildThread
Call     AddGoalPos 	( .Actor:Self FFFFFFE8 00000000 00000000 )
Call     80279728 ( .Actor:Self 00000005 *Fixed[4.0] ) %also found in the kick move
Call     SetAnimation 	( .Actor:Self FFFFFFFF 000C0001 )
Wait     00000002 
Call     SetGoalToHome 	( .Actor:Self )
Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
Call     SetAnimation 	( .Actor:Self FFFFFFFF 000C0003 )
Call     FlyToGoal  	( .Actor:Self 00000000 FFFFFFFB .Easing:Linear )
Call     SetAnimation 	( .Actor:Self FFFFFFFF 000C0002 )
Call     EnableIdleScript 	( .Actor:Self 00000001 )
Call     UseIdleAnimation 	( .Actor:Self .True )
Return
End
}

@ $Script_Init_802229C0
{
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_80222FAC )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_80222A0C )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80222A1C )
		Call	 SetActorVar		( .Actor:Self 00000001 00000032 ) %outta sight probability
   3C:  Return
   44:  End
}

%remember how I said it would be annoying if duplibow had outta sight?
%well now it's time to do it anyway
@ $Script_TakeTurn_80222FAC
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
		Call 	 RandInt ( 100` *Var[0] )
		Call	 GetActorVar ( .Actor:Self 00000001 *Var[B] )
		Switch (*Var[0])
			Case < *Var[B]
				Set *Var[A] 1
				Sub *Var[B] A
				Call	 SetActorVar ( .Actor:Self 00000001 *Var[B] ) %outta sight probability
			Default
				Set *Var[A] 0
		EndSwitch
		If *Var[A] == 00000001
			ExecWait $Script_FindOuttaSightTarget
			If *Var[F] != FFFFFFFF
				ExecWait $Script_OuttaSight
				Return
			EndIf
		EndIf
   28:  Wait     0000000A 
   34:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:BooAppear )
   48:  Thread
   50:  	Set  *Var[0]  000000C8 
   60:  	Loop     00000014 
   6C:  		Sub  *Var[0]  0000000A 
   7C:  		Call     SetPartAlpha ( .Actor:Self 00000001 *Var[0] )
   94:  		Wait     00000001 
   A0:  	EndLoop
   A8:  EndThread
   B0:  Wait     0000000A 
   BC:  Call     UseBattleCamPreset 	( 00000001 )
   CC:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   E0:  Call     SetGoalToTarget 	( .Actor:Self )
   F0:  Thread
   F8:  	Call     SetAnimation 	( .Actor:Self 00000001 000D0003 )
  110:  	Call     GetStatusFlags ( .Actor:Self *Var[A] )
  124:  	If  *Var[A]  &  00080000 
  134:  		Call     AddGoalPos 	( .Actor:Self 00000004 FFFFFFFC 00000000 )
  150:  	Else
  158:  		Call     AddGoalPos 	( .Actor:Self 0000000A FFFFFFF6 00000000 )
  174:  	EndIf
  17C:  	Call     FlyToGoal  	( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
  198:  	Call     SetAnimation 	( .Actor:Self 00000001 000D0001 )
  1B0:  EndThread
  1B8:  Wait     0000000F 
  1C4:  Call     UseBattleCamPreset 	( 0000000F )
  1D4:  Call     BattleCamTargetActor ( .Actor:Self )
  1E4:  Call     MoveBattleCamOver 	( 0000001E )
  1F4:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
  20C:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:BooVanish )
  220:  Set  *Var[0]  00000037 
  230:  Loop     00000014 
  23C:  	Add  *Var[0]  0000000A 
  24C:  	Call     SetPartAlpha ( .Actor:Self 00000001 *Var[0] )
  264:  	Wait     00000001 
  270:  EndLoop
  278:  Call     SetPartAlpha ( .Actor:Self 00000001 000000FF )
  290:  Call     SetAnimation 	( .Actor:Self 00000001 000D0005 )
  2A8:  Wait     0000000A 
  2B4:  Call     SetGoalToTarget 	( .Actor:Self )
  2C4:  Wait     0000000F 
  2D0:  Call     EnemyTestTarget ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  2F4:  Switch  *Var[0] 
  300:  	CaseOR  ==  .HitResult:Miss % 6
  30C:  	CaseOR  ==  .HitResult:Lucky % 5
  318:  		Set  *Var[A]  *Var[0] 
  328:  		Call     UseBattleCamPreset 	( 00000002 )
  338:  		Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.4003906] *Fixed[1.4003906] *Fixed[1.0] )
  358:  		Call     SetAnimation 	( .Actor:Self 00000001 000D0007 )
  370:  		Wait     00000002 
  37C:  		Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  39C:  		Set  *Var[0]  00000000 
  3AC:  		Loop     00000014 
  3B8:  			Add  *Var[0]  FFFFFFD3 
  3C8:  			Call     SetActorYaw 	( .Actor:Self *Var[0] )
  3DC:  			Wait     00000001 
  3E8:  		EndLoop
  3F0:  		Call     SetActorYaw 	( .Actor:Self 00000000 )
  404:  		If  *Var[A]  ==  00000005 
  414:  			Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  438:  		EndIf
  440:  		Call     SetAnimation 	( .Actor:Self 00000001 000D001A )
  458:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:SeeingStars )
  474:  		Wait     0000001E 
  480:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  498:  		Call     SetAnimation 	( .Actor:Self 00000001 000D0001 )
  4B0:  		Wait     0000000A 
  4BC:  		Call     PlaySoundAtActor 	( .Actor:Self .Sound:BooAppear )
  4D0:  		Thread
  4D8:  			Set  *Var[0]  000000C8 
  4E8:  			Loop     00000014 
  4F4:  				Sub  *Var[0]  0000000A 
  504:  				Call     SetPartAlpha ( .Actor:Self 00000001 *Var[0] )
  51C:  				Wait     00000001 
  528:  			EndLoop
  530:  		EndThread
  538:  		Wait     0000000A 
  544:  		Call     UseBattleCamPreset 	( 00000002 )
  554:  		Call     SetGoalToHome 	( .Actor:Self )
  564:  		Call     SetAnimation 	( .Actor:Self 00000001 000D0003 )
  57C:  		Call     FlyToGoal  	( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
  598:  		Call     SetAnimation 	( .Actor:Self 00000001 000D0001 )
  5B0:  		Call     PlaySoundAtActor 	( .Actor:Self .Sound:BooVanish )
  5C4:  		Call     YieldTurn   	( )
  5D0:  		Set  *Var[0]  00000037 
  5E0:  		Loop     00000014 
  5EC:  			Add  *Var[0]  0000000A 
  5FC:  			Call     SetPartAlpha ( .Actor:Self 00000001 *Var[0] )
  614:  			Wait     00000001 
  620:  		EndLoop
  628:  		Call     SetPartAlpha ( .Actor:Self 00000001 000000FF )
  640:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  654:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  668:  		Return
  670:  	EndCaseGroup
  678:  EndSwitch
  680:  Set  *Var[A]  00000000 
  690:  Call     GetActorVar 	( .Actor:Self 00000001 *Var[8] )
  6A8:  Switch  *Var[8] 
  6B4:  	Case  ==  00000000 
  6C0:  		Set  *Var[8]  00000004 
  6D0:  	Case  ==  00000001 
  6DC:  		Set  *Var[8]  00000005 
  6EC:  	Case  ==  00000002 
  6F8:  		Set  *Var[8]  00000006 
  708:  EndSwitch
  710:  Set  *Var[7]  *Var[8] 
  720:  Loop     *Var[7] 
  72C:  	Call     PlaySoundAtActor 	( .Actor:Self 00002019 )
  740:  	Add  *Var[A]  00000001 
  750:  	Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.4003906] *Fixed[1.4003906] *Fixed[1.0] )
  770:  	If  *Flag[00]  ==  00000000 
  780:  		Call     SetAnimation 	( .Actor:Self 00000001 000D0007 )
  798:  		Set  *Flag[00]  00000001 
  7A8:  		If  *Var[A]  ==  *Var[8] 
  7B8:  			Call     80269EAC ( 0000000C )
  7C8:  		Else
  7D0:  			Call     80269EAC ( 0000000A )
  7E0:  		EndIf
  7E8:  	Else
  7F0:  		Call     SetAnimation 	( .Actor:Self 00000001 000D0008 )
  808:  		Set  *Flag[00]  00000000 
  818:  		If  *Var[A]  ==  *Var[8] 
  828:  			Call     80269EAC ( 0000000D )
  838:  		Else
  840:  			Call     80269EAC ( 0000000B )
  850:  		EndIf
  858:  	EndIf
  860:  	Wait     00000002 
  86C:  	Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  88C:  	Thread
  894:  		Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.5] )
  8B0:  		Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[1.5] )
  8CC:  		Call     ShakeCam    	( 00000001 00000000 00000001 *Fixed[0.5] )
  8E8:  		Call     ShakeCam    	( 00000001 00000000 00000001 *Fixed[0.20019531] )
  904:  	EndThread
  90C:  	Call     GetActorVar 	( .Actor:Self 00000001 *Var[9] )
  924:  	Switch  *Var[9] 
  930:  		Case  ==  00000000 
  93C:  			Wait     00000002 
  948:  			Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000001 00000010 )
  970:  		Case  ==  00000001 
  97C:  			Wait     00000002 
  988:  			Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000001 00000010 )
  9B0:  		Case  ==  00000002 
  9BC:  			Wait     00000002 
  9C8:  			Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000001 00000010 )
  9F0:  	EndSwitch
  9F8:  	Wait     00000008 
  A04:  	Call     SetAnimation 	( .Actor:Self 00000001 000D0001 )
  A1C:  	Call     GetActorHP  	( .Actor:Player *Var[1] )
  A30:  	If  *Var[1]  ==  00000000 
  A40:  		BreakLoop
  A48:  	EndIf
  A50:  EndLoop
  A58:  Switch  *Var[0] 
  A64:  	CaseOR  ==  00000000 
  A70:  	CaseOR  ==  00000002 
  A7C:  		Wait     0000000A 
  A88:  		Call     PlaySoundAtActor 	( .Actor:Self .Sound:BooAppear )
  A9C:  		Thread
  AA4:  			Set  *Var[0]  000000C8 
  AB4:  			Loop     00000014 
  AC0:  				Sub  *Var[0]  0000000A 
  AD0:  				Call     SetPartAlpha ( .Actor:Self 00000001 *Var[0] )
  AE8:  				Wait     00000001 
  AF4:  			EndLoop
  AFC:  		EndThread
  B04:  		Wait     0000000A 
  B10:  		Call     UseBattleCamPreset 	( 00000002 )
  B20:  		Call     SetGoalToHome 	( .Actor:Self )
  B30:  		Call     SetAnimation 	( .Actor:Self 00000001 000D0003 )
  B48:  		Call     FlyToGoal  	( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
  B64:  		Call     SetAnimation 	( .Actor:Self 00000001 000D0001 )
  B7C:  		Call     PlaySoundAtActor 	( .Actor:Self .Sound:BooVanish )
  B90:  		Call     YieldTurn   	( )
  B9C:  		Set  *Var[0]  00000037 
  BAC:  		Loop     00000014 
  BB8:  			Add  *Var[0]  0000000A 
  BC8:  			Call     SetPartAlpha ( .Actor:Self 00000001 *Var[0] )
  BE0:  			Wait     00000001 
  BEC:  		EndLoop
  BF4:  		Call     SetPartAlpha ( .Actor:Self 00000001 000000FF )
  C0C:  	EndCaseGroup
  C14:  EndSwitch
  C1C:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  C30:  Call     UseIdleAnimation 	( .Actor:Self .True )
  C44:  Return
  C4C:  End
}

#new:Script $Script_OuttaSight
{
	%*Var[8] has our target actor
	Thread
		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
		Add  *Var[1]  FFFFFFFB %-5
		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
    	Call     FlyToGoal  	( .Actor:Self 0000000A 00000000 .Easing:CosInOut )
	EndThread
	Set  *Var[0]  00000000 
	Loop     0000000A 
		Add  *Var[0]  00000012 
		Call     SetActorYaw 	( .Actor:Self *Var[0] )
    	Wait     00000001 
	EndLoop
	Wait     0000000A 
	Call     GetActorPos 	( *Var[8] *Var[0] *Var[1] *Var[2] )
    Add  *Var[0]  0000001E %FFFFFFE2 -> 1E
    Add  *Var[1]  0000001E 
    Call     SetGoalPos 	( *Var[8] *Var[0] *Var[1] *Var[2] )
    Call     FlyToGoal  	( *Var[8] 00000014 0000001E .Easing:CosInOut )
    Thread
    	Set  *Var[0]  000000B4 
    	Loop     0000000A 
    		Sub  *Var[0]  00000012 
    		Call     SetActorYaw 	( .Actor:Self *Var[0] )
    		Wait     00000001 
    	EndLoop
    EndThread
    Thread
    	Set  *Var[0]  000000FF 
    	Loop     0000001E 
    		Sub  *Var[0]  00000005 
    		Call     SetPartAlpha ( .Actor:Self FFFFFFFF *Var[0] )
    		Wait     00000001 
    	EndLoop
    EndThread
   	Wait     0000000A 
  	Call     PlaySoundAtActor 	( .Actor:Self .Sound:BooAppear )
    Thread
		Set  *Var[0]  000000C8 
    	Loop     00000014 
  			Sub  *Var[0]  0000000A 
			Call     SetPartAlpha ( .Actor:Self 00000001 *Var[0] )
			Wait     00000001 
		EndLoop
	EndThread
	Call     GetActorPos 	( *Var[8] *Var[0] *Var[1] *Var[2] )
	%Call     $Function_802380E4 ( FFFFFFF6 00000014 )
	Add  *Var[2]  00000005 
	Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     FlyToGoal  	( .Actor:Self 00000014 00000000 .Easing:Linear )
	Call     PlaySoundAtActor 	( .Actor:Self 0000200E )
    Thread
		%Call     8026BF48 ( 00000001 )
		Call     VanishActor 	( *Var[8] 00000001 )
		%Call     8026BF48 ( 00000000 )
	EndThread
	Wait     0000000A 
	Call     UseBattleCamPreset 	( 00000002 )
	Call     SetGoalToHome 	( .Actor:Self )
	Call     SetAnimation 	( .Actor:Self 00000001 000D0003 )
	Call     FlyToGoal  	( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
	Call     SetAnimation 	( .Actor:Self 00000001 000D0001 )
	Call     PlaySoundAtActor 	( .Actor:Self .Sound:BooVanish )
	Call     YieldTurn   	( )
	Set  *Var[0]  00000037 
	Loop     00000014 
		Add  *Var[0]  0000000A 
		Call     SetPartAlpha ( .Actor:Self 00000001 *Var[0] )
		Wait     00000001 
	EndLoop
	Call     SetPartAlpha ( .Actor:Self 00000001 000000FF )
	Call	 $Function_Vanish ( 1` )
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End
}

#new:Function $Function_TargetFinder %find something that isn't yourself
{
    0:  ADDIU		SP, SP, FFE0
    4:  SW			S1, 14 (SP)
    8:  COPY		S1, A0
    C:  SW			RA, 18 (SP)
   10:  SW			S0, 10 (SP)
   14:  LW			S0, C (S1)
   18:  LW			A1, 0 (S0)
   1C:  JAL			~Func:get_variable
   20:  ADDIU		S0, S0, 4
   24:  COPY		A0, V0
   28:  ADDIU		V0, R0, FF81
   2C:  BNE			A0, V0, .o38
   30:  NOP
   34:  LW			A0, 148 (S1)
        .o38
   38:  JAL			~Func:get_actor
   3C:  NOP
   40:  COPY		A0, V0
   44:  LBU			V1, 136 (A0)
   48:  ADDIU		V0, R0, 47
   4C:  BEQ			V1, V0, .o7C
   50:  SLT			V0, V1, V0
   54:  BNEL		V0, R0, .o9C
   58:  COPY		A0, S1
   5C:  SLTI		V0, V1, 65
   60:  BEQ			V0, R0, .o98
   64:  SLTI		V0, V1, 4D
   68:  BNE			V0, R0, .o9C
   6C:  COPY		A0, S1
   70:  LW			A1, 0 (S0)
   74:  BEQ			R0, R0, .oA4
   78:  ADDIU		A2, R0, FFFF
        .o7C
   7C:  LW			V1, A8 (A0)
   80:  ADDIU		V0, R0, 1
   84:  BNE			V1, V0, .o9C
   88:  COPY		A0, S1
   8C:  LW			A1, 0 (S0)
   90:  BEQ			R0, R0, .oA4
   94:  ADDIU		A2, R0, FFFF
        .o98
   98:  COPY		A0, S1
        .o9C
   9C:  LW			A1, 0 (S0)
   A0:  CLEAR		A2
        .oA4
   A4:  JAL			~Func:set_variable
   A8:  NOP
   AC:  LW			RA, 18 (SP)
   B0:  LW			S1, 14 (SP)
   B4:  LW			S0, 10 (SP)
   B8:  ADDIU		V0, R0, 2
   BC:  JR			RA
   C0:  ADDIU		SP, SP, 20
}

#new:Script $Script_FindOuttaSightTarget
{
    0:  Set  *Flag[00]  00000000 
		Set *Var[8] FFFFFFFF
   10:  Label    0000000A 
   1C:  Call     EnemyCreateTargetList 	( 00008002 )
   2C:  Call     InitTargetIterator 	( )
   38:  Label    00000000 
   44:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
   58:  Call     GetIndexFromHome 	( *Var[0] *Var[1] )
   6C:  Call     GetBattleVar 	( 00000002 *Var[2] )
   80:  If  *Var[1]  >  *Var[2] 
   90:  	Call     $Function_TargetFinder ( *Var[0] *Var[3] )
   A4:  	If  *Var[3]  ==  00000000 
   B4:  		Call     GetStatusFlags ( *Var[0] *Var[4] )
   C8:  		If  *Var[4]  !&  04000000 
					Call	GetOriginalActorType ( *Var[0] *Var[5]
					If *Var[5] != 40 %don't vanish bow
						Goto 2
					EndIf
   D8:  			Set  *Var[8]  *Var[0] 
   E8:  			Call     SetBattleVar 	( 00000002 *Var[1] )
   FC:  			Goto     00000064 
  108:  		EndIf
  110:  	EndIf
  118:  EndIf
		Label	2
  120:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  134:  If  *Var[0]  !=  FFFFFFFF 
  144:  	Goto     00000000 
  150:  EndIf
  158:  If  *Flag[00]  ==  00000000 
  168:  	Set  *Flag[00]  00000001 
  178:  	Call     SetBattleVar 	( 00000002 FFFFFFFF )
  18C:  	Goto     0000000A 
  198:  EndIf
		Label 64
		Return
		End
}

@ $Script_TakeTurn_80224280
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     UseBattleCamPreset 	( 00000013 )
   24:  Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
   40:  Call     SetBattleCamTarget 	( *Var[0] *Var[1] *Var[2] )
   58:  Call     SetBattleCamZoom  	( 0000015E )
   68:  Call     SetBattleCamOffsetZ 	( 00000028 )
   78:  Call     MoveBattleCamOver 	( 00000050 )
   88:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   A0:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   B4:  Call     SetGoalToTarget 	( .Actor:Self )
   C4:  Call     SetAnimation 	( .Actor:Self 00000001 000E0003 )
   DC:  Call     $Function_802194C0 ( 00000001 )
   EC:  Call     AddGoalPos 	( .Actor:Self 0000000F FFFFFFF6 00000005 )
  108:  Call     FlyToGoal  	( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
  124:  Call     SetAnimation 	( .Actor:Self 00000001 000E0001 )
  13C:  Call     $Function_802194C0 ( 00000000 )
  14C:  Wait     00000005 
  158:  Call     $Function_80219428 ( 00000000 )
  168:  Call     AddGoalPos 	( .Actor:Self 00000019 00000014 00000000 )
  184:  Call     FlyToGoal  	( .Actor:Self 0000000F FFFFFFEC .Easing:CosInOut )
  1A0:  Call     SetAnimation 	( .Actor:Self 00000001 000E0005 )
  1B8:  Call     SetGoalToTarget 	( .Actor:Self )
  1C8:  Call     FlyToGoal  	( .Actor:Self 00000005 00000000 .Easing:CosInOut )
  1E4:  Call     EnemyTestTarget ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  208:  Switch  *Var[0] 
  214:  	CaseOR  ==  .HitResult:Miss % 6
  220:  	CaseOR  ==  .HitResult:Lucky % 5
  22C:  		Set  *Var[A]  *Var[0] 
  23C:  		Thread
  244:  			Wait     00000005 
  250:  			Call     SetAnimation 	( .Actor:Self 00000001 000E0001 )
  268:  		EndThread
  270:  		Call     SetGoalToTarget 	( .Actor:Self )
  280:  		Call     AddGoalPos 	( .Actor:Self FFFFFFD8 0000000A 00000000 )
  29C:  		Call     FlyToGoal  	( .Actor:Self 0000000A FFFFFFEC .Easing:QuadraticOut )
  2B8:  		If  *Var[A]  ==  00000005 
  2C8:  			Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  2EC:  		EndIf
  2F4:  		Call     $Function_80219474 ( 00000001 )
  304:  		Call     $Function_80219428 ( 00000001 )
  314:  		Wait     00000014 
  320:  		Call     UseBattleCamPreset 	( 00000002 )
  330:  		Call     YieldTurn   	( )
  33C:  		Call     SetGoalToHome 	( .Actor:Self )
  34C:  		Call     SetAnimation 	( .Actor:Self 00000001 000E0003 )
  364:  		Call     FlyToGoal  	( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
  380:  		Call     SetAnimation 	( .Actor:Self 00000001 000E0001 )
  398:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  3AC:  		Return
  3B4:  	EndCaseGroup
  3BC:  EndSwitch
  3C4:  Call     $Function_80219474 ( 00000000 )
		Call 	 RandInt ( 100` *Var[0] ) 
		Switch (*Var[0])
			Case < 75`
				Set *Var[B] 0
				Set  *Var[A]  00000028
			Default
				Set *Var[B] 1
				Set  *Var[A]  0000004B
		EndSwitch
  %3D4:  Set  *Var[A]  00000028 
  3E4:  Call     AddBattleCamZoom  	( FFFFFFB5 )
  3F4:  Call     MoveBattleCamOver 	( *Var[A] )
  404:  Call     8024ECF8 ( 00000000 00000000 00000001 )
  41C:  Call     PlaySoundAtActor 	( .Actor:Self 00000289 )
  430:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
  444:  If  *Var[0]  &  00080000 
  454:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  470:  	Add  *Var[1]  00000004 
  480:  	Call     PlayEffect  	( ~FX:RadialFlowIn:ElectricalWaves *Var[0] *Var[1] *Var[2] *Fixed[0.5205078] *Var[A] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  4C4:  Else
  4CC:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4E8:  	Add  *Var[1]  0000000C 
  4F8:  	Call     PlayEffect  	( ~FX:RadialFlowIn:ElectricalWaves *Var[0] *Var[1] *Var[2] *Fixed[1.3007812] *Var[A] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  53C:  EndIf
  544:  Call     $Function_8021950C ( )
  550:  Set  *Var[9]  00000000 
		If (*Var[B] == 0) %normal attack
  560:  	Call     SetAnimation 	( .Actor:Self 00000001 000E0006 )
  578:  	Loop     *Var[A] 
  584:  		Add  *Var[9]  00000003 
  594:  		If  *Var[9]  >  000000C8 
  5A4:  			Set  *Var[9]  000000C8 
  5B4:  		EndIf
  5BC:  		Call     $Function_80219550 ( *Var[9] )
  5CC:  		Wait     00000001 
  5D8:  	EndLoop
  5E0:  	Call     SetAnimation 	( .Actor:Self 00000001 000E0001 )
  5F8:  	Call     8026EA7C ( FFFFFF81 00000001 00000009 )
  610:  	Call     AddBattleCamZoom  	( 0000004B )
  620:  	Call     MoveBattleCamOver 	( 00000005 )
  630:  	Thread
  638:  		Wait     00000002 
  644:  		Call     $Function_80219550 ( 00000000 )
  654:  	EndThread
  65C:  	Call     GetActorVar 	( .Actor:Self 00000001 *Var[9] )
  674:  	Switch  *Var[9] 
  680:  		Case  ==  00000000 
  68C:  			Wait     00000002 
  698:  			Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 08000020 0000FFFF 00000000 00000002 00000020 )
  6C0:  		Case  ==  00000001 
  6CC:  			Wait     00000002 
  6D8:  			Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 08000020 0000FFFF 00000000 00000003 00000020 )
  700:  		Case  ==  00000002 
  70C:  			Wait     00000002 
  718:  			Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 08000020 0000FFFF 00000000 00000004 00000020 )
  740:  	EndSwitch
  748:  	Switch  *Var[0] 
  754:  		CaseOR  ==  00000000 
  760:  		CaseOR  ==  00000002 
  76C:  			Call     UseBattleCamPreset 	( 00000002 )
  77C:  			Call     $Function_80219474 ( 00000001 )
  78C:  			Call     $Function_80219428 ( 00000001 )
  79C:  			Call     AddGoalPos 	( .Actor:Self 00000019 0000000A 00000000 )
  7B8:  			Call     FlyToGoal  	( .Actor:Self 0000000F FFFFFFF6 .Easing:CosInOut )
  7D4:  			Wait     0000000F 
  7E0:  			Call     YieldTurn   	( )
  7EC:  			Call     SetGoalToHome 	( .Actor:Self )
  7FC:  			Call     SetAnimation 	( .Actor:Self 00000001 000E0003 )
  814:  			Call     FlyToGoal  	( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
  830:  			Call     SetAnimation 	( .Actor:Self 00000001 000E0001 )
  848:  		EndCaseGroup
  850:  	EndSwitch
		Else
			Call     SetAnimation 	( .Actor:Self 00000001 000E0006 )
			Loop     4B 
				Add  *Var[9]  00000003 
				If  *Var[9]  >  000000C8 
					Set  *Var[9]  000000C8 
				EndIf
				Call     $Function_80219550 ( *Var[9] )
				Wait     00000001 
			EndLoop
			Call     PlaySoundAtActor 	( .Actor:Self 0000028A )
			Thread %make watt bigger
				SetF  *Var[0]  *Fixed[1.0] 
				Loop     00000003 
					AddF  *Var[0]  *Fixed[0.40039062] 
					Call     SetActorScale 	( .Actor:Self *Var[0] *Var[0] *Var[0] )
					Wait     00000001 
				EndLoop
				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
				Add  *Var[1]  00000008 
				Call     PlayEffect  	( ~FX:EnergyIn:LongStreaks1 *Var[0] *Var[1] *Var[2] *Fixed[1.8007812] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
			EndThread
			Wait     0000000A %??
			Call     EnemyDamageTarget 	( .Actor:Self *Var[D] 08000020 0000FFFF 80010364 00000000 00000020 ) %3 turn paralyze :)
			Thread %shrink watt back to normal
				Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000014 00000000 )
				SetF  *Var[0]  *Fixed[2.2001953] 
				Loop     0000000C 
					SubF  *Var[0]  *Fixed[0.10058594] 
					Call     SetActorScale 	( .Actor:Self *Var[0] *Var[0] *Var[0] )
					Wait     00000001 
				EndLoop
				Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
				Call     SetAnimation 	( .Actor:Self FFFFFFFF 000E0001 )
			EndThread
			Switch  *Var[D] 
				CaseOR  ==  00000000 
				CaseOR  ==  00000002 
					Call     UseBattleCamPreset 	( 00000002 )
					Call     $Function_80219474 ( 00000001 )
					Call     $Function_80219428 ( 00000001 )
					Call     AddGoalPos 	( .Actor:Self 00000019 0000000A 00000000 )
					Call     FlyToGoal  	( .Actor:Self 0000000F FFFFFFF6 .Easing:CosInOut )
					Wait     0000000F 
					Call     YieldTurn   	( )
					Call     SetGoalToHome 	( .Actor:Self )
					Call     SetAnimation 	( .Actor:Self 00000001 000E0003 )
					Call     FlyToGoal  	( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
					Call     SetAnimation 	( .Actor:Self 00000001 000E0001 )
				EndCaseGroup
			EndSwitch
			Thread %fix lighting
				Call     MakeLerp    	( 000000C8 00000000 00000014 00000000 )
				Label    00000002
				Call     UpdateLerp  	( )
				Call     $Function_80219550 ( *Var[9] )
				Wait     00000001 
				If  *Var[1]  ==  00000001 
					Goto     00000002 
				EndIf
			EndThread
		EndIf
  858:  Call     UseIdleAnimation 	( .Actor:Self .True )
  86C:  Return
  874:  End
}

@ $Script_TakeTurn_80225234
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     UseBattleCamPreset 	( 0000003F )
   38:  Call     BattleCamTargetActor ( .Actor:Self )
   48:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   60:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   74:  Call     SetGoalToTarget 	( .Actor:Self )
   		Call 	 RandInt ( 100` *Var[0] ) 
		Switch (*Var[0])
			Case < 50` 
				Set *Var[B] 0
			Default
				Set *Var[B] 1
		EndSwitch
		If (*Var[B] == 1)
			Call     SetAnimation 	( .Actor:Self FFFFFFFF 000F0009 )
			Call     AddBattleCamZoom  	( FFFFFFCE ) %zoom in
			Call     MoveBattleCamOver 	( 0000001E )
			Wait 	 5A
			Call     SetAnimation 	( .Actor:Self FFFFFFFF 000F000A ) %time to shoot water
			Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
			Add  *Var[0]  FFFFFFF6 %0000000A 
			Add  *Var[1]  FFFFFFF5 %0000000B
			Call     UseBattleCamPreset 	( 00000003 )
			Call     MoveBattleCamOver 	( 0000000A )
			Call     EnemyTestTarget ( .Actor:Self *Var[0] 10000004 00000000 00000001 00000010 )
			Switch (*Var[0])
				Case == 00000005 %lucky: water beam misses you
					Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
					Call     SetTargetActor ( .Actor:Self .Actor:Player )
					Call     SetGoalToTarget 	( .Actor:Self )
					Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
					%Call     $Function_802382A4 ( )
					Add	*Var[3] 15
					Call     PlaySoundAtActor 	( .Actor:Self 00000297 )
					Call     PlayEffect  	( ~FX:Squirt:Waterbeam *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] 00000001 0000000A 00000000 00000000 00000000 00000000 )
					Wait     00000014 
					Goto 3
				Case == 00000006 %invis: water beam goes past you
					Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
					Call     SetTargetActor ( .Actor:Self .Actor:Player )
					Call     SetGoalToTarget 	( .Actor:Self )
					Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
					%Call     $Function_802382A4 ( )
					Sub	*Var[3] 15
					Call     PlaySoundAtActor 	( .Actor:Self 00000297 )
					Call     PlayEffect  	( ~FX:Squirt:Waterbeam *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] 00000001 0000000A 00000000 00000000 00000000 00000000 )
					Wait     00000014
					Goto 3
			EndSwitch
			Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
			Call     SetTargetActor ( .Actor:Self .Actor:Player )
			Call     SetGoalToTarget 	( .Actor:Self )
			Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
			%Call     $Function_802382A4 ( )
			Call     PlaySoundAtActor 	( .Actor:Self 00000297 )
			Call     PlayEffect  	( ~FX:Squirt:Waterbeam *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] 00000001 0000000A 00000000 00000000 00000000 00000000 )
			Wait     0000000A
			Switch  *Var[9]  %5-6-7 i think
				Case  ==  00000000  
					Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000004 00000000 00000000 00000005 00000020 )
				Case  ==  00000001  
					Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000004 00000000 00000000 00000006 00000020 )
				Case  ==  00000002  
					Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000004 00000000 00000000 00000007 00000020 )
			EndSwitch
			Label	 3
			Call     UseBattleCamPreset 	( 00000002 ) %reset camera?
			Call     YieldTurn   	( )
		Else %wow belly flop is really complicated
   84:  	Call     AddGoalPos 	( .Actor:Self 00000046 00000000 00000000 )
   A0:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   BC:  	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
   D8:  	Sub  *Var[3]  *Var[0] 
   E8:  	Div  *Var[3]  *Fixed[3.0] 
   F8:  	Set  *Var[A]  *Var[3] 
  108:  	If  *Var[A]  <  00000000 
  118:  		Mul  *Var[A]  FFFFFFFF 
  128:  	EndIf
  130:  	Call     MoveBattleCamOver 	( *Var[A] )
  140:  	Call     SetAnimation 	( .Actor:Self 00000001 000F0003 )
  158:  	Call     RunToGoal   	( .Actor:Self *Var[A] .False )
  170:  	Call     SetAnimation 	( .Actor:Self 00000001 000F0001 )
  188:  	Wait     0000000A 
  194:  	Call     UseBattleCamPreset 	( 00000008 )
  1A4:  	Call     BattleCamTargetActor ( .Actor:Self )
  1B4:  	Call     AddBattleCamZoom  	( FFFFFFCE )
  1C4:  	Call     MoveBattleCamOver 	( 0000001E )
  1D4:  	Call     8024ECF8 ( 00000001 00000001 00000001 )
  1EC:  	Call     SetAnimation 	( .Actor:Self 00000001 000F0004 )
  204:  	Wait     0000000F 
  210:  	Call     SetAnimation 	( .Actor:Self 00000001 000F0008 )
  228:  	Wait     0000000F 
  234:  	Call     EnemyTestTarget ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  258:  	Switch  *Var[0] 
  264:  		CaseOR  ==  00000006 
  270:  		CaseOR  ==  00000005 
  27C:  			Set  *Var[A]  *Var[0] 
  28C:  			Call     UseBattleCamPreset 	( 00000002 )
  29C:  			Call     MoveBattleCamOver 	( 00000014 )
  2AC:  			Call     SetAnimation 	( .Actor:Self 00000001 000F0005 )
  2C4:  			Thread
  2CC:  				Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000C 00000000 )
  2E8:  				Set  *Var[0]  00000000 
  2F8:  				Loop     0000000A 
  304:  					Add  *Var[0]  00000024 
  314:  					Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  330:  					Wait     00000001 
  33C:  				EndLoop
  344:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000014 )
  360:  			EndThread
  368:  			Thread
  370:  				Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  388:  				Switch  *Var[0] 
  394:  					Case  ==  00000000 
  3A0:  						Wait     0000000D 
  3AC:  						Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  3CC:  						Wait     00000001 
  3D8:  						Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  3F8:  						Wait     00000001 
  404:  						Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  424:  						Wait     00000001 
  430:  						Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  450:  						Wait     00000001 
  45C:  						Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  47C:  					Case  ==  00000001 
  488:  						Wait     0000000D 
  494:  						Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.0507812] *Fixed[1.0507812] *Fixed[1.0507812] )
  4B4:  						Wait     00000001 
  4C0:  						Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.1005859] *Fixed[1.1005859] *Fixed[1.1005859] )
  4E0:  						Wait     00000001 
  4EC:  						Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.1503906] *Fixed[1.1503906] *Fixed[1.1503906] )
  50C:  						Wait     00000001 
  518:  						Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.2001953] *Fixed[1.2001953] *Fixed[1.2001953] )
  538:  						Wait     00000001 
  544:  						Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.25] *Fixed[1.25] *Fixed[1.25] )
  564:  					Case  ==  00000002 
  570:  						Wait     0000000D 
  57C:  						Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.1005859] *Fixed[1.1005859] *Fixed[1.1005859] )
  59C:  						Wait     00000001 
  5A8:  						Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.2001953] *Fixed[1.2001953] *Fixed[1.2001953] )
  5C8:  						Wait     00000001 
  5D4:  						Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.3007812] *Fixed[1.3007812] *Fixed[1.3007812] )
  5F4:  						Wait     00000001 
  600:  						Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.4003906] *Fixed[1.4003906] *Fixed[1.4003906] )
  620:  						Wait     00000001 
  62C:  						Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.5] *Fixed[1.5] *Fixed[1.5] )
  64C:  				EndSwitch
  654:  			EndThread
  65C:  			Call     SetActorSounds ( FFFFFF81 00000002 00000000 00000000 )
  678:  			Call     PlaySoundAtActor 	( .Actor:Self 00002034 )
  68C:  			Call     SetGoalToTarget 	( .Actor:Self )
  69C:  			Thread
  6A4:  				Call     SetAnimation 	( .Actor:Self 00000001 000F0005 )
  6BC:  				Wait     0000000A 
  6C8:  				Call     SetAnimation 	( .Actor:Self 00000001 000F0006 )
  6E0:  			EndThread
  6E8:  			Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.0] )
  6FC:  			Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
  71C:  			Call     SetAnimation 	( .Actor:Self 00000001 000F0007 )
  734:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  750:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  76C:  			Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  78C:  			Call     LandJump ( FFFFFF81 )
  79C:  			Call     PlaySoundAtActor 	( .Actor:Self 0000029A )
  7B0:  			Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  7CC:  			Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  7E8:  			Call     AddGoalPos 	( .Actor:Self FFFFFFF1 00000000 00000000 )
  804:  			Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
  824:  			Call     PlaySoundAtActor 	( .Actor:Self 0000029A )
  838:  			Call     AddGoalPos 	( .Actor:Self FFFFFFF6 00000000 00000000 )
  854:  			Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  874:  			Call     PlaySoundAtActor 	( .Actor:Self 0000029A )
  888:  			If  *Var[A]  ==  00000005 
  898:  				Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  8BC:  			EndIf
  8C4:  			Wait     0000000A 
  8D0:  			Call     UseBattleCamPreset 	( 00000002 )
  8E0:  			Call     YieldTurn   	( )
  8EC:  			Call     SetAnimation 	( .Actor:Self 00000001 000F0003 )
  904:  			Call     SetGoalToHome 	( .Actor:Self )
  914:  			Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  928:  			Call     RunToGoal   	( .Actor:Self 00000000 .False )
  940:  			Call     EnableIdleScript 	( .Actor:Self 00000001 )
  954:  			Call     UseIdleAnimation 	( .Actor:Self .True )
  968:  			Return
  970:  		EndCaseGroup
  978:  	EndSwitch
  980:  	Call     UseBattleCamPreset 	( 00000002 )
  990:  	Call     MoveBattleCamOver 	( 0000000A )
  9A0:  	Call     SetAnimation 	( .Actor:Self 00000001 000F0005 )
  9B8:  	Thread
  9C0:  		Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000C 00000000 )
  9DC:  		Set  *Var[0]  00000000 
  9EC:  		Loop     0000000A 
  9F8:  			Add  *Var[0]  00000024 
  A08:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  A24:  			Wait     00000001 
  A30:  		EndLoop
  A38:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000014 )
  A54:  	EndThread
  A5C:  	Thread
  A64:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  A7C:  		Switch  *Var[0] 
  A88:  			Case  ==  00000000 
  A94:  				Wait     0000000D 
  AA0:  				Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.1005859] *Fixed[1.1005859] *Fixed[1.1005859] )
  AC0:  				Wait     00000001 
  ACC:  				Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.1005859] *Fixed[1.1005859] *Fixed[1.1005859] )
  AEC:  				Wait     00000001 
  AF8:  				Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.2001953] *Fixed[1.2001953] *Fixed[1.2001953] )
  B18:  				Wait     00000001 
  B24:  				Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.2001953] *Fixed[1.2001953] *Fixed[1.2001953] )
  B44:  				Wait     00000001 
  B50:  				Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.3007812] *Fixed[1.3007812] *Fixed[1.3007812] )
  B70:  			Case  ==  00000001 
  B7C:  				Wait     0000000D 
  B88:  				Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.1503906] *Fixed[1.1503906] *Fixed[1.1503906] )
  BA8:  				Wait     00000001 
  BB4:  				Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.2001953] *Fixed[1.2001953] *Fixed[1.2001953] )
  BD4:  				Wait     00000001 
  BE0:  				Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.3505859] *Fixed[1.3505859] *Fixed[1.3505859] )
  C00:  				Wait     00000001 
  C0C:  				Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.4003906] *Fixed[1.4003906] *Fixed[1.4003906] )
  C2C:  				Wait     00000001 
  C38:  				Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.5507812] *Fixed[1.5507812] *Fixed[1.5507812] )
  C58:  			Case  ==  00000002 
  C64:  				Wait     0000000D 
  C70:  				Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.2001953] *Fixed[1.2001953] *Fixed[1.2001953] )
  C90:  				Wait     00000001 
  C9C:  				Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.3007812] *Fixed[1.3007812] *Fixed[1.3007812] )
  CBC:  				Wait     00000001 
  CC8:  				Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.5] *Fixed[1.5] *Fixed[1.5] )
  CE8:  				Wait     00000001 
  CF4:  				Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.6005859] *Fixed[1.6005859] *Fixed[1.6005859] )
  D14:  				Wait     00000001 
  D20:  				Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.8007812] *Fixed[1.8007812] *Fixed[1.8007812] )
  D40:  		EndSwitch
  D48:  	EndThread
  D50:  	Call     SetActorSounds ( FFFFFF81 00000002 00000000 00000000 )
  D6C:  	Call     PlaySoundAtActor 	( .Actor:Self 00002034 )
  D80:  	Call     SetGoalToTarget 	( .Actor:Self )
  D90:  	Thread
  D98:  		Call     SetAnimation 	( .Actor:Self 00000001 000F0005 )
  DB0:  		Wait     0000000A 
  DBC:  		Call     SetAnimation 	( .Actor:Self 00000001 000F0006 )
  DD4:  	EndThread
  DDC:  	Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.6005859] )
  DF0:  	Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
  E10:  	Call     SetAnimation 	( .Actor:Self 00000001 000F0007 )
  E28:  	Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  E44:  	Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  E60:  	Thread
  E68:  		Wait     00000003 
  E74:  		Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  E94:  	EndThread
  E9C:  	Call     GetActorVar 	( .Actor:Self 00000001 *Var[A] )
  EB4:  	Switch  *Var[A] 
  EC0:  		Case  ==  00000000 
  ECC:  			Wait     00000002 
  ED8:  			Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000003 00000020 )
  F00:  		Case  ==  00000001 
  F0C:  			Wait     00000002 
  F18:  			Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000004 00000020 )
  F40:  		Case  ==  00000002 
  F4C:  			Wait     00000002 
  F58:  			Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000005 00000020 )
  F80:  	EndSwitch
  F88:  	Switch  *Var[0] 
  F94:  		CaseOR  ==  00000000 
  FA0:  		CaseOR  ==  00000002 
  FAC:  			Call     SetAnimation 	( .Actor:Self 00000001 000F0006 )
  FC4:  			Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  FE0:  			Add  *Var[0]  0000003C 
  FF0:  			Set  *Var[1]  00000000 
 1000:  			Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.4003906] )
 1014:  			Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 1030:  			Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
 1050:  			Call     PlaySoundAtActor 	( .Actor:Self 0000029A )
 1064:  			Add  *Var[0]  0000001E 
 1074:  			Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 1090:  			Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
 10B0:  			Call     PlaySoundAtActor 	( .Actor:Self 0000029A )
 10C4:  			Add  *Var[0]  00000014 
 10D4:  			Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 10F0:  			Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
 1110:  			Call     PlaySoundAtActor 	( .Actor:Self 0000029A )
 1124:  			Add  *Var[0]  0000000A 
 1134:  			Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 1150:  			Call     JumpToGoal  	( .Actor:Self 00000004 00000000 00000001 00000000 )
 1170:  			Call     PlaySoundAtActor 	( .Actor:Self 0000029A )
 1184:  			Call     SetAnimation 	( .Actor:Self 00000001 000F0001 )
 119C:  			Wait     0000000F 
 11A8:  			Call     UseBattleCamPreset 	( 00000002 )
 11B8:  			Call     YieldTurn   	( )
 11C4:  			Call     SetAnimation 	( .Actor:Self 00000001 000F0003 )
 11DC:  			Call     SetGoalToHome 	( .Actor:Self )
 11EC:  			Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
 1200:  			Call     RunToGoal   	( .Actor:Self 00000000 .False )
 1218:  		EndCaseGroup
 1220:  	EndSwitch
		EndIf
 1228:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
 123C:  Call     UseIdleAnimation 	( .Actor:Self .True )
 1250:  Return
 1258:  End
}

%spiny surge is pretty weird

%it's "working" for now

%modify the script to fix the x pos and spiny velocity
%velocity works "properly", but still need to fix x pos
#new:Function $Function_SpinySpawn %this looks like something that spawns the spinies
{
    0:  ADDIU     SP, SP, FFA8
    4:  LAW       V1, 800DC14C
    C:  LIF       F0, 120.0 %x pos?
   14:  ADDIU     A0, R0, 8C
   18:  SW        RA, 28 (SP)
   1C:  SDC1      F28, 50 (SP)
   20:  SDC1      F26, 48 (SP)
   24:  SDC1      F24, 40 (SP)
   28:  SDC1      F22, 38 (SP)
   2C:  SDC1      F20, 30 (SP)
   30:  LWC1      F24, 144 (V1)
   34:  LBU       V0, 191 (V1)
   38:  ADD.S     F24, F24, F0
   3C:  LWC1      F22, 148 (V1)
   40:  MTC1      V0, F0
   44:  NOP
   48:  CVT.S.W   F0, F0
   4C:  ADD.S     F22, F22, F0
   50:  LIF       F26, 20.0
   58:  LWC1      F28, 14C (V1)
   5C:  JAL       ~Func:rand_int %determining spiny x vel?
   60:  ADD.S     F22, F22, F26
   64:  ADDIU      V0, V0, A %+ 10
   68:  MTC1      V0, F20
   6C:  NOP
   70:  CVT.S.W   F20, F20
   74:  JAL       ~Func:rand_int %spiny y vel?
   78:  ADDIU     A0, R0, 50
   7C:  DADDU     A0, R0, R0
   80:  ADDIU     V0, V0, A % + 10
   84:  MTC1      V0, F0
   88:  NOP
   8C:  CVT.S.W   F0, F0
   90:  SWC1      F0, 14 (SP)
   94:  LIF       F0, 1.5
   9C:  MFC1      A1, F24
   A0:  MFC1      A3, F28
   A4:  MFC1      A2, F22
   A8:  ADDI      V0, R0, FFED	%(used to be 1E)  it does weird stuff to velocity (don't set it to 0) high absolute values result in it going more vertically, lower abso values result in more horizontally, but lower values increase speed?
   AC:  SWC1      F20, 10 (SP)
   B0:  SWC1      F26, 18 (SP)
   B4:  SW        V0, 20 (SP)
   B8:  JAL       80071E10		%called once per spiny (I bet this is the actual spiny spawning function)
   BC:  SWC1      F0, 1C (SP)
   C0:  LW        RA, 28 (SP)
   C4:  LDC1      F28, 50 (SP)
   C8:  LDC1      F26, 48 (SP)
   CC:  LDC1      F24, 40 (SP)
   D0:  LDC1      F22, 38 (SP)
   D4:  LDC1      F20, 30 (SP)
   D8:  ADDIU     V0, R0, 2
   DC:  JR        RA
   E0:  ADDIU     SP, SP, 58
}

/%
	80071E10 is a weird function
	calls 8005A564 with increasing values of A0 (68 - 86)
	then calls a function from a pointer
%/

@ $Script_TakeTurn_80226C54
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseBattleCamPreset 	( 0000003F )
   4C:  Call     BattleCamTargetActor ( .Actor:Self )
   5C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   74:  Call     SetAnimation 	( .Actor:Self 00000001 00100003 )
   8C:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   A8:  Call     SetGoalPos 	( .Actor:Self 00000014 0000001E *Var[2] )
   C4:  Call     FlyToGoal  	( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
   E0:  Call     SetAnimation 	( .Actor:Self 00000001 00100001 )
       	Call 	 RandInt ( 100` *Var[D] ) 
		Switch (*Var[D])
			Case < 60` %spiny surge is not that strong of a move, so 40% chance
				Set *Var[B] 0
			Default
				Set *Var[B] 1
		EndSwitch
		If (*Var[B] == 1)
			%the action command time ~= 3C
			%60
			%(the time where the spinies are appearing)
			Loop F
				Call     SetPartFlagBits 	( .Actor:Self 00000003 00000001 .False )
				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
				Add  *Var[0]  00000003 
				Add  *Var[1]  00000022 
				Add  *Var[2]  00000005 
				Call     SetPartPos 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
				Call     SetAnimation 	( .Actor:Self 00000001 0010000F )
				Wait	 2
				Call     SetPartFlagBits 	( .Actor:Self 00000003 00000001 .True )
				Call     SetAnimation 	( .Actor:Self 00000001 00100001 )
				Call     $Function_SpinySpawn ( )
				Wait     2
			EndLoop
			Call	 SetTargetActor ( .Actor:Self .Actor:Player )
			Call	 SetGoalToTarget ( .Actor:Self )
			Set *Var[0] 0
			Call     EnemyTestTarget ( .Actor:Self *Var[1] 00000000 00000000 00000001 00000010 )
			Switch *Var[1]
				CaseOR == 00000005
				CaseOR == 00000006
					Goto 1
				EndCaseGroup
			EndSwitch
			Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10040000 00000000 00000000 00000004 00000020 ) %if this is the first attack you get hit by, it triggers a hp bug
			Label 1
			Wait	 10` %10 frames, why not
			Call	 SetTargetActor ( .Actor:Self .Actor:Partner )
			Call	 SetGoalToTarget ( .Actor:Self )
			Call     EnemyTestTarget ( .Actor:Self *Var[1] 00000000 00000000 00000001 00000010 )
			Switch *Var[1]
				CaseOR == 00000005
				CaseOR == 00000006
					Goto 2
				EndCaseGroup
			EndSwitch
			Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10040000 00000000 00000000 00000002 00000020 )
			Label 2
			Switch  *Var[0] 
				CaseOR  ==  00000000 
				CaseOR  ==  00000002 
					Wait     0000000F 
					Call     YieldTurn   	( )
					Call     UseBattleCamPreset 	( 00000002 )
					Call     MoveBattleCamOver 	( 00000008 )
					Call     SetAnimation 	( .Actor:Self 00000001 00100003 )
					Call     SetGoalToHome 	( .Actor:Self )
					Call     FlyToGoal  	( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
				EndCaseGroup
			EndSwitch		
		Else
   F8:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  114:  	Call     GetStatusFlags ( .Actor:Self *Var[A] )
  128:  	If  *Var[A]  &  00080000 
  138:  		Add  *Var[0]  FFFFFFFF 
  148:  		Add  *Var[1]  00000004 
  158:  		Add  *Var[2]  00000002 
  168:  		Call     SetPartScale ( .Actor:Self 00000003 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
  188:  	Else
  190:  		Add  *Var[0]  FFFFFFFD 
  1A0:  		Add  *Var[1]  0000000A 
  1B0:  		Add  *Var[2]  00000005 
  1C0:  		Call     SetPartScale ( .Actor:Self 00000003 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  1E0:  	EndIf
  1E8:  	Call     SetPartPos 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
  208:  	Wait     00000001 
  214:  	Call     SetPartFlagBits 	( .Actor:Self 00000003 00000001 .False )
  230:  	Call     SetAnimation 	( .Actor:Self 00000003 00100014 )
  248:  	Call     SetAnimation 	( .Actor:Self 00000001 0010000F )
  260:  	Loop     00000004 
  26C:  		Call     GetStatusFlags ( .Actor:Self *Var[A] )
  280:  		If  *Var[A]  &  00080000 
  290:  			AddF  *Var[1]  *Fixed[2.4003906] 
  2A0:  		Else
  2A8:  			Add  *Var[1]  00000006 
  2B8:  		EndIf
  2C0:  		Call     SetPartPos 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
  2E0:  		Wait     00000001 
  2EC:  	EndLoop
  2F4:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  310:  	Call     GetStatusFlags ( .Actor:Self *Var[A] )
  324:  	If  *Var[A]  &  00080000 
  334:  		Add  *Var[0]  FFFFFFFD 
  344:  		Add  *Var[1]  00000010 
  354:  		Add  *Var[2]  00000002 
  364:  		SetF  *Var[3]  *Fixed[0.40039062] 
  374:  	Else
  37C:  		Add  *Var[0]  FFFFFFF8 
  38C:  		Add  *Var[1]  00000028 
  39C:  		Add  *Var[2]  00000005 
  3AC:  		SetF  *Var[3]  *Fixed[1.0] 
  3BC:  	EndIf
  3C4:  	Call     PlayEffect  	( ~FX:EnergyIn:ShortStreaks *Var[0] *Var[1] *Var[2] *Var[3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  408:  	Call     PlaySoundAtActor 	( .Actor:Self 000002C5 )
  41C:  	Thread
  424: 	 		Loop     0000000F 
  430: 	 			Call     SetActorDispOffset ( FFFFFF81 00000001 00000000 00000000 )
  44C: 	 			Call     SetPartDispOffset 	( .Actor:Self 00000003 00000001 00000000 00000000 )
  46C: 	 			Wait     00000001 
  478: 	 			Call     SetActorDispOffset ( FFFFFF81 FFFFFFFF 00000000 00000000 )
  494:  			Call     SetPartDispOffset 	( .Actor:Self 00000003 FFFFFFFF 00000000 00000000 )
  4B4:  			Wait     00000001 
  4C0:  		EndLoop
  4C8:  		Call     SetActorDispOffset ( FFFFFF81 00000000 00000000 00000000 )
  4E4:  		Call     SetPartDispOffset 	( .Actor:Self 00000003 00000000 00000000 00000000 )
  504:  	EndThread
  50C:  	Call     SetGoalToTarget 	( .Actor:Self )
  51C:  	Wait     0000000A 
  528:  	Call     SetAnimation 	( .Actor:Self 00000001 00100010 )
  540:  	Wait     0000000A 
  54C:  	Call     SetAnimation 	( .Actor:Self 00000001 00100011 )
  564:  	Wait     0000000A 
  570:  	Call     SetAnimation 	( .Actor:Self 00000001 00100012 )
  588:  	Wait     00000003 
  594:  	Call     8026FA00 ( FFFFFF81 00000003 00000002 00000000 00000000 )
  5B4:  	Call     PlaySoundAtActor 	( .Actor:Self 0000201B )
  5C8:  	Call     EnemyTestTarget ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  5EC:  	Switch  *Var[0] 
  5F8:  		CaseOR  ==  00000006 
  604:  		CaseOR  ==  00000005 
  610:  			Set  *Var[A]  *Var[0] 
  620:  			Call     SetAnimation 	( .Actor:Self 00000003 00100015 )
  638:  			Call     SetPartJumpGravity 	( .Actor:Self 00000003 *Fixed[1.5] )
  650:  			Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  66C:  			Call     RandInt     	( 00000064 *Var[3] )
  680:  			Sub  *Var[3]  00000032 
  690:  			Add  *Var[0]  *Var[3] 
  6A0:  			Call     JumpPartTo 	( .Actor:Self 00000003 *Var[0] 00000000 *Var[2] 00000014 .True )
  6C8:  			Thread
  6D0:  				Add  *Var[0]  FFFFFFCE 
  6E0:  				Call     JumpPartTo 	( .Actor:Self 00000003 *Var[0] 00000000 *Var[2] 0000000F .True )
  708:  				Call     SetPartFlagBits 	( .Actor:Self 00000003 00000001 .True )
  724:  			EndThread
  72C:  			If  *Var[A]  ==  00000005 
  73C:  				Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  760:  			EndIf
  768:  			Wait     0000000F 
  774:  			Call     YieldTurn   	( )
  780:  			Call     UseBattleCamPreset 	( 00000002 )
  790:  			Call     MoveBattleCamOver 	( 0000003C )
  7A0:  			Call     SetAnimation 	( .Actor:Self 00000001 00100003 )
  7B8:  			Call     SetGoalToHome 	( .Actor:Self )
  7C8:  			Call     FlyToGoal  	( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
  7E4:  			Call     EnableIdleScript 	( .Actor:Self 00000001 )
  7F8:  			Call     UseIdleAnimation 	( .Actor:Self .True )
  80C:  			Return
  814:  		EndCaseGroup
  81C:  	EndSwitch
  824:  	Call     SetAnimation 	( .Actor:Self 00000003 00100015 )
  83C:  	Call     SetPartJumpGravity 	( .Actor:Self 00000003 *Fixed[1.5] )
  854:  	Call     SetGoalToTarget 	( .Actor:Self )
  864:  	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  880:  	Call     JumpPartTo 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] 00000014 .True )
  8A8:  	Thread
  8B0:  		Add  *Var[0]  FFFFFFCE 
  8C0:  		Call     JumpPartTo 	( .Actor:Self 00000003 *Var[0] 00000000 *Var[2] 0000000F .True )
  8E8:  		Call     SetPartFlagBits 	( .Actor:Self 00000003 00000001 .True )
  904:  	EndThread
  90C:  	Call     GetActorVar 	( .Actor:Self 00000001 *Var[9] )
  924:  	Switch  *Var[9] 
  930:  		Case  ==  00000000 
  93C:  			Wait     00000002 
  948:  			Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10040000 00000000 00000000 00000003 00000020 )
  970:  		Case  ==  00000001 
  97C:  			Wait     00000002 
  988:  			Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10040000 00000000 00000000 00000004 00000020 )
  9B0:  		Case  ==  00000002 
  9BC:  			Wait     00000002 
  9C8:  			Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10040000 00000000 00000000 00000005 00000020 )
  9F0:  	EndSwitch
  9F8:  	Switch  *Var[0] 
  A04:  		CaseOR  ==  00000000 
  A10:  		CaseOR  ==  00000002 
  A1C:  			Wait     0000000F 
  A28:  			Call     YieldTurn   	( )
  A34:  			Call     UseBattleCamPreset 	( 00000002 )
  A44:  			Call     MoveBattleCamOver 	( 00000008 )
  A54:  			Call     SetAnimation 	( .Actor:Self 00000001 00100003 )
  A6C:  			Call     SetGoalToHome 	( .Actor:Self )
  A7C:  			Call     FlyToGoal  	( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
  A98:  		EndCaseGroup
  AA0:  	EndSwitch
		EndIf
  AA8:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  ABC:  Call     UseIdleAnimation 	( .Actor:Self .True )
  AD0:  Return
  AD8:  End
}

%dse canon is that there's only one anti guy
%so no more anti guy unit

#delete $AntiGuy
#import newenemy/DarkKoopatrol.bpat

@ $Formation_00
{
$DarkKoopatrol 00000000 0000000A 00000000 00000000 00000000 00000000 
$DarkKoopatrol 00000001 00000009 00000000 00000000 00000000 00000000 
$DarkKoopatrol 00000002 00000008 00000000 00000000 00000000 00000000 
}

#new:Vector3D $Vector3D_Position1
{
5` 0` -20`
}

#new:Vector3D $Vector3D_Position2
{
17` 0` -16`
}

#new:Vector3D $Vector3D_Position3
{
29` 0` -12`
}

#new:Vector3D $Vector3D_Position4
{
41` 0` -8`
}

#new:Vector3D $Vector3D_Position5
{
53` 0` -4`
}

#new:Vector3D $Vector3D_Position6
{
65` 0`  0`
}

#new:Vector3D $Vector3D_Position7
{
77` 0`  4`
}

#new:Vector3D $Vector3D_Position8
{
89` 0`  8`
}

#new:Vector3D $Vector3D_Position9
{
101` 0` 12`
}

#new:Vector3D $Vector3D_Position10
{
113` 0` 16`
}

/%
#new:Vector3D $Vector3D_Position11
85` 0` 10`

#new:Vector3D $Vector3D_Position12
93` 0` 13`

#new:Vector3D $Vector3D_Position13
101` 0` 16`

#new:Vector3D $Vector3D_Position14
109` 0` 19`

#new:Vector3D $Vector3D_Position15
117` 0` 22`
%/

#new:Vector3D $Vector3D_Position1b
{
5` 0` -20`
}

#new:Vector3D $Vector3D_Position2b
{
28` 0` -12`
}

#new:Vector3D $Vector3D_Position3b
{
51` 0` -4`
}

#new:Vector3D $Vector3D_Position4b
{
74` 0` 4`
}

#new:Vector3D $Vector3D_Position5b
{
97` 0` 12`
}

#new:Vector3D $Vector3D_Position6b
{
120` 0`  20`
}


/%
@ $Formation_01 %why did i think this was a good idea?
{
$DarkKoopatrol $Vector3D_Position1 00000016 00000000 00000000 00000000 00000000 %i bet a lot of multi targetting attacks will crash
$DarkKoopatrol $Vector3D_Position2 00000015 00000000 00000000 00000000 00000000 %so you'll have to pick them off one by one :P
$DarkKoopatrol $Vector3D_Position3 00000014 00000000 00000000 00000000 00000000 %even then, that's a total of 500 hp
$DarkKoopatrol $Vector3D_Position4 00000013 00000000 00000000 00000000 00000000 %I could've made it like the shy squad to make it work better
$DarkKoopatrol $Vector3D_Position5 00000012 00000000 00000000 00000000 00000000 %but I was too lazy
$DarkKoopatrol $Vector3D_Position6 00000011 00000000 00000000 00000000 00000000 %plus, having 10 separate 50 hp targets is probably easier than one 500 hp target
$DarkKoopatrol $Vector3D_Position7 00000010 00000000 00000000 00000000 00000000 %thanks to multi target attacks, assuming they don't crash
$DarkKoopatrol $Vector3D_Position8 0000000F 00000000 00000000 00000000 00000000 
$DarkKoopatrol $Vector3D_Position9 0000000E 00000000 00000000 00000000 00000000 
$DarkKoopatrol $Vector3D_Position10 0000000D 00000000 00000000 00000000 00000000 
}
%/


/%
%ok, 15 was a bit too much and it crashed when trying to switch partners from mario's ability menu
%so I'm toning it down slightly
$DarkKoopatrol $Vector3D_Position11 0000000C 00000000 00000000 00000000 00000000 
$DarkKoopatrol $Vector3D_Position12 0000000B 00000000 00000000 00000000 00000000 
$DarkKoopatrol $Vector3D_Position13 0000000A 00000000 00000000 00000000 00000000 
$DarkKoopatrol $Vector3D_Position14 00000009 00000000 00000000 00000000 00000000 
$DarkKoopatrol $Vector3D_Position15 00000008 00000000 00000000 00000000 00000000 
%/


%^future shadeblade has mercy, now you just fight 6
%6 should not crash (as often)
@ $Formation_01 %why did i think this was a good idea?
{
$DarkKoopatrol $Vector3D_Position1b 00000016 00000000 00000000 00000000 00000000 
$DarkKoopatrol $Vector3D_Position2b 00000015 00000000 00000000 00000000 00000000 
$DarkKoopatrol $Vector3D_Position3b 00000014 00000000 00000000 00000000 00000000 
$DarkKoopatrol $Vector3D_Position4b 00000013 00000000 00000000 00000000 00000000 
$DarkKoopatrol $Vector3D_Position5b 00000012 00000000 00000000 00000000 00000000 
$DarkKoopatrol $Vector3D_Position6b 00000011 00000000 00000000 00000000 00000000 
}

#import newenemy/RedFuzzy.bpat %gg

#new:Formation $Formation_03
{
$RedFuzzy 00000001 0000000A 00000000 00000000 00000000 00000000 
$RedFuzzy 00000002 00000009 00000000 00000000 00000000 00000000 
}

@ $FormationTable
{
$SJIS_802284C0 00000003 $Formation_00 $Stage_80228274 00000000 
$SJIS_802284B4 00000006 $Formation_01 $Stage_80228274 00000000 % this is totally not excessive
$SJIS_802284A8 00000004 $Formation_02 $Stage_80228274 00000000 
00000000 00000002 $Formation_03 $Stage_LavaRoom 00000000 
00000000 00000000 00000000 00000000 00000000 % unused
}

@ $StageTable 
{
$ASCII_802284D4 $Stage_80228274 
"kpa_12" $Stage_LavaRoom
"pit_08" $Stage_Pit1
00000000 00000000 
}

#new:Stage $Stage_Pit1
{
"kpa_tex"
"pit_b01_shape"
"pit_b01_hit"
$Script_BeforeBattle_Pit
$Script_AfterBattle_Pit
00000000 
00000000 
00000000 
00000000 
00000000 
}

%to make things easier to add, I'm adding the pit scripts every time even when I don't need to
#new:Script $Script_BeforeBattle_Pit
{
	Return
	End
}

#new:Script $Script_AfterBattle_Pit
{
	Return
	End
}


#new:Script $Script_BeforeBattle_8022F5A8
{
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Set  *Var[0]  00000010 
   3C:  Set  *Var[1]  00000001 
   4C:  Set  *Var[2]  FFFFFE70 
   5C:  Set  *Var[3]  FFFFFCE0 
   6C:  Exec     $Script_8022F3D0 
   78:  Set  *Var[0]  00000013 
   88:  Set  *Var[1]  00000003 
   98:  Set  *Var[2]  FFFFFE70 
   A8:  Set  *Var[3]  FFFFFCE0 
   B8:  Exec     $Script_8022F3D0 
   C4:  Set  *Var[0]  00000011 
   D4:  Set  *Var[1]  00000000 
   E4:  Set  *Var[2]  FFFFFE70 
   F4:  Set  *Var[3]  FFFFFCE0 
  104:  Exec     $Script_8022F4BC 
  110:  Set  *Var[0]  00000012 
  120:  Set  *Var[1]  00000002 
  130:  Set  *Var[2]  FFFFFE70 
  140:  Set  *Var[3]  FFFFFCE0 
  150:  Exec     $Script_8022F4BC 
  15C:  Return
  164:  End
}

#new:Script $Script_8022F3D0
{
    0:  Set  *Var[A]  *Var[1] 
   10:  Set  *Var[B]  *Var[2] 
   20:  Set  *Var[C]  *Var[3] 
   30:  Call     SetTexPanner 	( *Var[0] *Var[1] )
   44:  Set  *Var[0]  00000000 
   54:  Set  *Var[1]  00000000 
   64:  Loop     
   70:  	Call     SetTexPanOffset 	( *Var[A] 00000000 *Var[0] 00000000 )
   8C:  	Call     SetTexPanOffset 	( *Var[A] 00000001 *Var[1] 00000000 )
   A8:  	Add  *Var[0]  *Var[B] 
   B8:  	Add  *Var[1]  *Var[C] 
   C8:  	Wait     00000001 
   D4:  EndLoop
   DC:  Return
   E4:  End
}

#new:Script $Script_8022F4BC
{
    0:  Set  *Var[A]  *Var[1] 
   10:  Set  *Var[B]  *Var[2] 
   20:  Set  *Var[C]  *Var[3] 
   30:  Call     SetTexPanner 	( *Var[0] *Var[1] )
   44:  Set  *Var[0]  00000000 
   54:  Set  *Var[1]  00000000 
   64:  Loop     
   70:  	Call     SetTexPanOffset 	( *Var[A] 00000000 00000000 *Var[0] )
   8C:  	Call     SetTexPanOffset 	( *Var[A] 00000001 00000000 *Var[1] )
   A8:  	Add  *Var[0]  *Var[B] 
   B8:  	Add  *Var[1]  *Var[C] 
   C8:  	Wait     00000001 
   D4:  EndLoop
   DC:  Return
   E4:  End
}

#new:Script $Script_AfterBattle_8022F714
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_8022F724
{
0000000D 00000000 
}

#new:Stage $Stage_LavaRoom
{
"kpa_tex"  % kpa_tex
"kpa_bt02_shape"  % kpa_bt02_shape
"kpa_bt02_hit"  % kpa_bt02_hit
$Script_BeforeBattle_8022F5A8 
$Script_AfterBattle_8022F714 
00000000 
$ForegroundModelList_8022F724 
00000000 
00000000 
00000000 
}