
%goodbye old bony beetle and dry bones
%you're being banished to chapter 3
#delete $IdleAnimations_80218830
#delete $IdleAnimations_8021887C
#delete $IdleAnimations_802188C8
#delete $IdleAnimations_80218914
#delete $DefenseTable_80218960
#delete $DefenseTable_8021896C
#delete $StatusTable_80218978
#delete $PartsTable_80218A24
#delete $BonyBeetle
#delete $Script_Init_80218A70
#delete $Script_Idle_80218D6C
#delete $Script_HandleEvent_80218D7C
#delete $Script_80218EE8
#delete $Script_TakeTurn_80219110
#delete $IntTable_802191AC
#delete $Script_802191FC
#delete $Script_Tackle
#delete $Script_8021A060
#delete $Script_Tackle_Spikes
#delete $Script_8021B7C8
#delete $Script_8021BA6C
#delete $Script_FlipOver
#delete $Script_8021C234
#delete $Script_FlipOver_Spikes

#delete $IdleAnimations_8021CA20
#delete $IdleAnimations_8021CA6C
#delete $IdleAnimations_8021CA78
#delete $DefenseTable_8021CA84
#delete $DefenseTable_8021CAA0
#delete $StatusTable_8021CABC
#delete $StatusTable_8021CB68
#delete $PartsTable_8021CC14
#delete $DryBones
#delete $Script_Init_8021CC84
#delete $Script_NextTurn_8021CCFC
#delete $Script_Idle_8021CF2C
#delete $Script_8021D0E8
#delete $Script_HandleEvent_8021D404
#delete $Script_8021DAC4
#delete $Script_TakeTurn_8021DB48

%vanilla magikoopas get banished to previous chapters
#delete $DefenseTable_80224F20
#delete $DefenseTable_80224F2C
#delete $StatusTable_80224F38
#delete $StatusTable_80224FE4
#delete $PartsTable_80225090
#delete $PartsTable_802250B4
#delete $Magikoopa
#delete $FlyingMagikoopa
#delete $IdleAnimations_80225170
#delete $IdleAnimations_802251BC
#delete $IdleAnimations_80225208
#delete $Script_Idle_80225214
#delete $Script_802253E4
#delete $Script_802254F0
#delete $Script_RunAway
#delete $Script_NextTurn_80225D10
#delete $Script_Init_80225D60
#delete $Script_Init_80225F20
#delete $Script_802260CC
#delete $Script_HandleEvent_80226338
#delete $Script_HandleEvent_80226A50
#delete $Script_HealOne
#delete $Script_HealAll
#delete $Script_ShapeSpell
#delete $Script_80228DA4
#delete $Script_HandleEvent_8022908C
#delete $Script_Init_8022909C
#delete $Script_Init_802290D8
#delete $DefenseTable_80229114
#delete $DefenseTable_80229120
#delete $StatusTable_8022912C
#delete $StatusTable_802291D8
#delete $PartsTable_80229284
#delete $PartsTable_802292A8
#delete $Magiclone
#delete $FlyingMagiclone
#delete $Vector3D_8022931C
#delete $SpecialFormation_80229328
#delete $SpecialFormation_80229344
#delete $Script_MakeCopy
#delete $Script_BoostAttack
#delete $Script_BoostDefense
#delete $Script_Electrify
#delete $Script_Vanish
#delete $Script_TakeTurn_8022B784

#delete $Function_80218638
#delete $Function_802185E0
#delete $Function_80218514
#delete $Function_802184E8

#delete $Function_80218000
#delete $Function_80218200
#delete $Function_80218358





%i made the changes in omo3 first, so I'm just importing them
@ $HammerBros 
{
[MaxHP]        13`b %beefy bros
[Escape]       30`b 
[AirLift]      55`b %pretty lightweight though 
[Hurricane]    40`b % Bow's "Spook" as well
[UpAndAway]    80`b 
}

@ $Script_Init_8021E6A0
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8022028C )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_8021E704 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021E860 )
   28:  Call  BindNextTurn   ( .Actor:Self $Script_NextTurn_HammerBros )
   3C:  Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
   54:  Return
   5C:  End
}

%For some reason, they use MulF and DivF which I don't think is correct
%Use mul and div instead
@ $Script_TakeTurn_8022028C
{
    0:  Call  GetActorHP    ( .Actor:Self *Var0 )
   14:  Call  GetEnemyMaxHP ( .Actor:Self *Var1 )
   28:  Mul   *Var0  100`
   38:  Div   *Var0  *Var1
   48:  If  *Var0  >  50`	%34% -> 50%
   58:  	ExecWait  $Script_8021ED74
   64:  Else
   6C:  	ExecWait  $Script_8021FA30
   78:  EndIf
   80:  Return
   88:  End
}

#new:Script $Script_NextTurn_HammerBros
{
	Call	GetBattlePhase ( *Var[0] )
	If  *Var[0] ==  .Phase:EnemyEnd
		Call	PlaySoundAtActor	( .Actor:Self 000002D8 )
		%Thread
		Call	 8026BF48	( 00000001 )
		Call	 BoostAttack 	( .Actor:Self 00000001 )
		Call 	 8026BF48 ( 00000000 )
		%EndThread
	EndIf
	Return
	End
}


@ $Script_8021ED74 %single hammer
{
[6D8]  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 80080332 0000000A 00000020 ) %10 damage
}

/%
@ $Script_8021FA30 %Multi-attack
{
[698]  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000001 00000010 )
[6D8]  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000002 00000040 )
[718]  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000003 00000040 )
[770]  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000004 00000040 )
[7B0]  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000005 00000020 ) %hope you're wearing defensive badges or you'll take a full 15 damage
}
%/
@ $Script_8021FA30
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Thread
   44:  	Set   *Var0  00000000
   54:  	Loop  00000064
   60:  		Add   *Var0  00000014
   70:  		Mod   *Var0  00000168
   80:  		Call  SetPartRotation   ( .Actor:Self 00000002 00000000 00000000 *Var0 )
   A0:  		Call  SetPartRotation   ( .Actor:Self 00000003 00000000 00000000 *Var0 )
   C0:  		Call  SetPartRotation   ( .Actor:Self 00000004 00000000 00000000 *Var0 )
   E0:  		Call  SetPartRotation   ( .Actor:Self 00000005 00000000 00000000 *Var0 )
  100:  		Call  SetPartRotation   ( .Actor:Self 00000006 00000000 00000000 *Var0 )
  120:  		Wait  1`
  12C:  	EndLoop
  134:  EndThread
  13C:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  158:  Sub   *Var0  00000017
  168:  Add   *Var1  00000017
  178:  Sub   *Var2  00000002
  188:  Call  SetPartPos    ( .Actor:Self 00000002 *Var0 *Var1 *Var2 )
  1A8:  Call  SetPartPos    ( .Actor:Self 00000003 *Var0 *Var1 *Var2 )
  1C8:  Call  SetPartPos    ( .Actor:Self 00000004 *Var0 *Var1 *Var2 )
  1E8:  Call  SetPartPos    ( .Actor:Self 00000005 *Var0 *Var1 *Var2 )
  208:  Call  SetPartPos    ( .Actor:Self 00000006 *Var0 *Var1 *Var2 )
  228:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
  23C:  If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  24C:  	Call  SetPartScale  ( .Actor:Self 00000002 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
  26C:  	Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
  28C:  	Call  SetPartScale  ( .Actor:Self 00000004 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
  2AC:  	Call  SetPartScale  ( .Actor:Self 00000005 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
  2CC:  	Call  SetPartScale  ( .Actor:Self 00000006 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
  2EC:  Else
  2F4:  	Call  SetPartScale  ( .Actor:Self 00000002 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  314:  	Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  334:  	Call  SetPartScale  ( .Actor:Self 00000004 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  354:  	Call  SetPartScale  ( .Actor:Self 00000005 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  374:  	Call  SetPartScale  ( .Actor:Self 00000006 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  394:  EndIf
  39C:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  3C0:  Switch  *Var0
  3CC:  	CaseOR  ==  .HitResult:Miss % 6
  3D8:  	CaseOR  ==  .HitResult:Lucky % 5
  3E4:  		Set   *VarA  *Var0
  3F4:  		Set   *Var0  00000002
  404:  		Exec  $Script_8021F5EC
  410:  		Wait  5`
  41C:  		Set   *Var0  00000003
  42C:  		Exec  $Script_8021F5EC
  438:  		Wait  5`
  444:  		Set   *Var0  00000004
  454:  		Exec  $Script_8021F5EC
  460:  		Wait  5`
  46C:  		Set   *Var0  00000005
  47C:  		Exec  $Script_8021F5EC
  488:  		Wait  5`
  494:  		Set   *Var0  00000006
  4A4:  		Exec  $Script_8021F5EC
  4B0:  		Wait  5`
  4BC:  		Wait  20`
  4C8:  		Call  SetAnimation  ( .Actor:Self 00000001 005A0002 )
  4E0:  		If  *VarA  ==  00000005
  4F0:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  514:  		EndIf
  51C:  		Wait  15`
  528:  		Call  YieldTurn ( )
  534:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  550:  		Wait  20`
  55C:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  574:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  588:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  59C:  		Return
  5A4:  	EndCaseGroup
  5AC:  EndSwitch
  5B4:  Thread
  5BC:  	Set   *Var0  00000002
  5CC:  	Exec  $Script_8021F838
  5D8:  	Wait  7`
  5E4:  	Set   *Var0  00000003
  5F4:  	Exec  $Script_8021F838
  600:  	Wait  7`
  60C:  	Set   *Var0  00000004
  61C:  	Exec  $Script_8021F838
  628:  	Wait  7`
  634:  	Set   *Var0  00000005
  644:  	Exec  $Script_8021F838
  650:  	Wait  7`
  65C:  	Set   *Var0  00000006
  66C:  	Exec  $Script_8021F838
  678:  EndThread
  680:  Wait  21`
  68C:  Wait  2`
  698:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000001 00000010 )
  6C0:  Wait  5`
  6CC:  Wait  2`
  6D8:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000002 00000040 )
  700:  Wait  5`
  70C:  Wait  2`
  718:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000003 00000040 )
  740:  Wait  5`
  74C:  Call  SetAnimation      ( .Actor:Self 00000001 005A0002 )
  764:  Wait  2`
  770:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000004 00000040 )
  798:  Wait  5`
  7A4:  Wait  2`
  7B0:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000005 00000020 )
  7D8:  Switch  *Var0
  7E4:  	CaseOR  ==  .HitResult:Hit % 0
  7F0:  	CaseOR  ==  00000002 % 2
  7FC:  		Wait  20`
  808:  		Call  YieldTurn ( )
  814:  	EndCaseGroup
  81C:  EndSwitch
  824:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  838:  Call  UseIdleAnimation  ( .Actor:Self .True )
  84C:  Return
  854:  End
}


@ $Koopatrol 
{
[MaxHP]        14`b %8 -> 14
[Escape]       40`b 
[Item]         50`b 
[AirLift]      20`b %heavy armor 
[Hurricane]    40`b % Bow's "Spook" as well
[UpAndAway]    80`b 
[SpinSmash]     3`b % weight (0-4)
}

%so koopatrols have 3 defense tables for some reason
@ $DefenseTable_80220450 
{
.Element:Normal 00000003
.Element:End
}

@ $DefenseTable_80220464 %1 flip def
{
.Element:Normal 00000001
.Element:End
}

@ $DefenseTable_80220470
{
.Element:Normal 00000003
.Element:End
}

@ $StatusTable_80220484
{
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      90`
.Status:Poison     60`
.Status:Frozen      0`
.Status:Dizzy      40`
.Status:Fear        0`
.Status:Static     50`
.Status:Paralyze   50`
.Status:Shrink     60`
.Status:Stop       80`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End
}

@ $Script_ShellToss
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     GetBattlePhase ( *Var[0] )
   4C:  If  *Var[0]  ==  .Phase:FirstStrike % 1
   5C:  	Call     SetAnimation 	( .Actor:Self 00000001 00590006 )
   74:  Else
   7C:  	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   94:  	If  *Var[0]  ==  00000001 
   A4:  		Call     GetActorVar 	( .Actor:Self 00000009 *Var[0] )
   BC:  		Sub  *Var[0]  00000001 
   CC:  		If  *Var[0]  >  00000000 
   DC:  			Call     SetActorVar 	( .Actor:Self 00000009 *Var[0] )
   F4:  			Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  110:  			Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[3.0] )
  128:  			Wait     0000000F 
  134:  			Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[1.0] )
  14C:  			Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  164:  		Else
  16C:  			Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  188:  			Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[3.0] )
  1A0:  			Wait     0000000A 
  1AC:  			Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[1.0] )
  1C4:  			Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  1DC:  			Call     SetActorSounds ( FFFFFF81 00000002 00000000 00000000 )
  1F8:  			Call     PlaySoundAtActor 	( .Actor:Self .Sound:Jump )
  20C:  			Call     SetAnimation 	( .Actor:Self 00000001 0059000F )
  224:  			Set  *Var[0]  00000000 
  234:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000C 00000000 )
  250:  			Thread
  258:  				Loop     00000005 
  264:  					Add  *Var[0]  0000000F 
  274:  					Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  290:  					Wait     00000001 
  29C:  				EndLoop
  2A4:  			EndThread
  2AC:  			Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2C8:  			Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2E4:  			Call     SetActorJumpGravity 	( .Actor:Self *Fixed[3.0] )
  2F8:  			Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  318:  			Call     PlaySoundAtActor 	( .Actor:Self 000020BA )
  32C:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  348:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  364:  			Call     SetActorDispOffset ( FFFFFF81 00000000 00000000 00000000 )
  380:  			Call     SetAnimation 	( .Actor:Self 00000001 00590001 )
  398:  			Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
  3B0:  			Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80220320 )
  3C8:  			Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_80220450 )
  3E0:  			Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFC 00000020 )
  3FC:  			Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFF FFFFFFFC )
  418:  			Call     SetPartEventBits 	( .Actor:Self 00000001 00000010 .True )
  434:  			Call     SetActorFlagBits 	( .Actor:Self 00000400 .False )
					%Increase attack by 1 :)
					Thread
						Call  8026BF48      ( 00000001 )
						Call  BoostAttack   ( .Actor:Self 00000001 )	%Regular koopatrols get a +1 buff
						Call  8026BF48      ( 00000000 )
					EndThread
					Wait  30`
					%Call  WaitForBuffDone ( )
					%
  44C:  		EndIf
  484:  	EndIf
  48C:  	Call     UseBattleCamPreset 	( 0000003F )
  49C:  	Call     BattleCamTargetActor ( .Actor:Self )
  4AC:  	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
  4C4:  	Wait     0000000A 
  4D0:  	Call     SetAnimation 	( .Actor:Self 00000001 00590007 )
  4E8:  	Wait     0000000A 
  4F4:  	Thread
  4FC:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  518:  		Add  *Var[1]  00000004 
  528:  		Call     PlayEffect  	( ~FX:SmokeImpact:Small *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  56C:  		Wait     00000003 
  578:  		Call     PlayEffect  	( ~FX:SmokeImpact:Small *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  5BC:  		Wait     00000002 
  5C8:  		Call     PlayEffect  	( ~FX:SmokeImpact:Small *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  60C:  	EndThread
  614:  	Call     PlaySoundAtActor 	( .Actor:Self 00002021 )
  628:  	Call     SetAnimation 	( .Actor:Self 00000001 00590006 )
  640:  	Wait     0000000A 
  64C:  	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
  664:  EndIf
  66C:  Call     PlaySoundAtActor 	( .Actor:Self 000020D3 )
  680:  Call     SetActorSounds ( FFFFFF81 00000000 00000000 00000000 )
  69C:  Call     EnemyTestTarget ( .Actor:Self *Var[0] 00000000 00000000 00000004 00000010 )
  6C0:  Switch  *Var[0] 
  6CC:  	CaseOR  ==  .HitResult:Miss % 6
  6D8:  	CaseOR  ==  .HitResult:Lucky % 5
  6E4:  		Set  *Var[A]  *Var[0] 
  6F4:  		Call     SetGoalToTarget 	( .Actor:Self )
  704:  		Call     AddGoalPos 	( .Actor:Self FFFFFFD8 00000000 00000000 )
  720:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[22.0] ) %16 -> 22
  734:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  74C:  		Call     GetBattlePhase ( *Var[0] )
  75C:  		If  *Var[0]  ==  .Phase:FirstStrike % 1
  76C:  			Call     UseBattleCamPreset 	( 00000005 )
  77C:  			Call     SetBattleCamZoom  	( 0000012C )
  78C:  			Call     SetBattleCamOffsetZ 	( 00000014 )
  79C:  			Call     MoveBattleCamOver 	( 0000000A )
  7AC:  			Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
  7C4:  		EndIf
  7CC:  		If  *Var[A]  ==  00000005 
  7DC:  			Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  800:  		EndIf
  808:  		Call     SetAnimation 	( .Actor:Self 00000001 00590008 )
  820:  		Wait     00000008 
  82C:  		Call     8026F6EC ( FFFFFF81 )
  83C:  		Call     SetActorYaw 	( .Actor:Self 000000B4 )
  850:  		Wait     00000004 
  85C:  		Call     SetAnimation 	( .Actor:Self 00000001 00590016 )
  874:  		Wait     00000001 
  880:  		Call     SetAnimation 	( .Actor:Self 00000001 00590016 )
  898:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  8B4:  		Add  *Var[1]  00000014 
  8C4:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  8E0:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[2.0] )
  8F4:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  914:  		Call     SetAnimation 	( .Actor:Self 00000001 00590016 )
  92C:  		Wait     00000006 
  938:  		Sub  *Var[1]  00000014 
  948:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  964:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  984:  		Call     UseBattleCamPreset 	( 00000002 )
  994:  		Call     YieldTurn   	( )
  9A0:  		Call     SetActorYaw 	( .Actor:Self 000000B4 )
  9B4:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  9D0:  		Call     SetAnimation 	( .Actor:Self 00000001 00590016 )
  9E8:  		Call     SetGoalToHome 	( .Actor:Self )
  9F8:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  A0C:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  A24:  		Call     SetAnimation 	( .Actor:Self 00000001 00590001 )
  A3C:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  A54:  		Call     8026B438 ( FFFFFF81 00000001 00000000 )
  A6C:  		Call     SetActorYaw 	( .Actor:Self 00000000 )
  A80:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  A94:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  AA8:  		Return
  AB0:  	EndCaseGroup
  AB8:  EndSwitch
  AC0:  Call     SetGoalToTarget 	( .Actor:Self )
  AD0:  Call     SetActorSpeed 	( .Actor:Self *Fixed[22.0] ) %16 -> 22
  AE4:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  AFC:  Call     8026F6EC ( FFFFFF81 )
  B0C:  Wait     00000002 
  B18:  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 0000FFFF 00000000 00000006 00000020 ) %4 -> 6
  B40:  Switch  *Var[0] 
  B4C:  	CaseOR  ==  00000000 
  B58:  	CaseOR  ==  00000002 
  B64:  		Call     UseBattleCamPreset 	( 00000002 )
  B74:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  B90:  		Add  *Var[0]  00000028 
  BA0:  		Set  *Var[1]  00000000 
  BB0:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.8007812] )
  BC4:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  BE0:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  C00:  		Add  *Var[0]  0000001E 
  C10:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  C2C:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  C4C:  		Add  *Var[0]  00000014 
  C5C:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  C78:  		Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
  C98:  		Call     SetAnimation 	( .Actor:Self 00000001 00590008 )
  CB0:  		Wait     00000008 
  CBC:  		Call     YieldTurn   	( )
  CC8:  		SetConst  *Var[0]  00000001 
  CD8:  		SetConst  *Var[1]  00590004 
  CE8:  		ExecWait DoReturnHome 
  CF4:  		Call     SetAnimation 	( .Actor:Self 00000001 00590001 )
  D0C:  	EndCaseGroup
  D14:  EndSwitch
  D1C:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  D30:  Call     UseIdleAnimation 	( .Actor:Self .True )
  D44:  Return
  D4C:  End
}
  
@ $Script_SuperShellToss
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     SetGoalToTarget 	( .Actor:Self )
   4C:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   64:  If  *Var[0]  ==  00000000 
   74:  	Call     UseBattleCamPreset 	( 0000000E )
   84:  	Call     BattleCamTargetActor ( .Actor:Self )
   94:  	Call     MoveBattleCamOver 	( 00000014 )
   A4:  	Call     PlaySoundAtActor 	( .Actor:Self .Sound:PowerUp )
   B8:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   D4:  	Add  *Var[1]  0000000A 
   E4:  	Call     PlayEffect  	( ~FX:EnergyIn:LongStreaks1 *Var[0] *Var[1] *Var[2] *Fixed[1.0] 0000002D 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  128:  	Call     SetAnimation 	( .Actor:Self 00000001 00590015 )
  140:  	Wait     0000001E 
  14C:  	Call     UseBattleCamPreset 	( 00000002 )
  15C:  	Call     MoveBattleCamOver 	( 00000014 )
  16C:  	Thread
  174:  		Wait     00000008 
  180:  		Call     SetAnimation 	( .Actor:Self 00000001 00590007 )
  198:  	EndThread
  1A0:  	Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.0] )
  1B4:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1D0:  	Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1EC:  	Call     JumpToGoal  	( .Actor:Self 00000010 00000000 00000001 00000000 )
  20C:  	Call     PlaySoundAtActor 	( .Actor:Self 000020BA )
  220:  	Call     $Function_8021819C_GK ( 00000080 0000000A )							%need to make some more space by combinining things
  234:  	Thread
  23C:  		Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[0.5] )
  258:  	EndThread
  260:  	Call     SetAnimation 	( .Actor:Self 00000001 00590006 )
  278:  	Call     SetStatusTable ( .Actor:Self $StatusTable_80220530 )
  28C:  	Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_80220470 )
  2A4:  	Call     SetPartEventBits 	( .Actor:Self 00000001 00001000 .False )
  2C0:  	Call     SetActorVar 	( .Actor:Self 00000000 00000002 )
  2D8:  	Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80220404 )
  2F0:  	Call     EnableActorGlow 	( .Actor:Self .True )
  304:  	Call     SetPartEventBits 	( .Actor:Self 00000001 00400000 .True )
  320:  	Wait     0000000A 
  32C:  	Call     UseIdleAnimation 	( .Actor:Self .True )
  340:  	Call     EnableIdleScript 	( .Actor:Self 00000001 )
  354:  	Return
  35C:  EndIf
  364:  Call     UseBattleCamPreset 	( 0000003F )
  374:  Call     BattleCamTargetActor ( .Actor:Self )
  384:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
  39C:  Loop     00000014 
  3A8:  	Call     SetActorDispOffset ( FFFFFF81 00000001 00000000 00000000 )
  3C4:  	Wait     00000001 
  3D0:  	Call     SetActorDispOffset ( FFFFFF81 FFFFFFFF 00000000 00000000 )
  3EC:  	Wait     00000001 
  3F8:  EndLoop
  400:  Call     SetActorDispOffset ( FFFFFF81 00000000 00000000 00000000 )
  41C:  Call     PlaySoundAtActor 	( .Actor:Self 0000037C )
  430:  Call     SetActorSounds ( FFFFFF81 00000000 00000000 00000000 )
  44C:  Call     EnemyTestTarget ( .Actor:Self *Var[0] 00000000 00000000 00000004 00000010 )
  470:  Switch  *Var[0] 
  47C:  	CaseOR  ==  .HitResult:Miss % 6
  488:  	CaseOR  ==  .HitResult:Lucky % 5
  494:  		Set  *Var[A]  *Var[0] 
  4A4:  		Thread
  4AC:  			Loop     
  4B8:  				Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  4D4:  				Add  *Var[0]  0000001E 
  4E4:  				Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  500:  				If  *Var[0]  >  *Var[3] 
  510:  					BreakLoop
  518:  				EndIf
  520:  				Wait     00000001 
  52C:  			EndLoop
  534:  			Call     UseBattleCamPreset 	( 00000001 )
  544:  			If  *Var[A]  ==  00000005 
  554:  				Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  578:  			EndIf
  580:  			Wait     0000000F 
  58C:  			Call     UseBattleCamPreset 	( 00000002 )
  59C:  		EndThread
  5A4:  		Thread
  5AC:  			Loop     0000001E 
  5B8:  				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  5D4:  				Call     PlayEffect  	( ~FX:Steam:Ring *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  618:  				Wait     00000001 
  624:  			EndLoop
  62C:  		EndThread
  634:  		Call     SetGoalToTarget 	( .Actor:Self )
  644:  		Call     AddGoalPos 	( .Actor:Self FFFFFF38 00000000 00000000 )
  660:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[32.0] ) %16 -> 32
  674:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  68C:  		Wait     0000000F 
  698:  		Call     GetStatusFlags ( .Actor:Self *Var[A] )
  6AC:  		If  *Var[A]  !&  18000000 
  6BC:  			Call     EnableActorGlow 	( .Actor:Self .False )
  6D0:  		EndIf
  6D8:  		Call     SetPartEventBits 	( .Actor:Self 00000001 00400000 .False )
  6F4:  		Call     YieldTurn   	( )
  700:  		Call     8026F6EC ( FFFFFF81 )
  710:  		Call     SetActorPos 	( .Actor:Self 0000012C 00000000 00000000 )
  72C:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  748:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[16.0] ) 
  75C:  		Call     SetGoalToHome 	( .Actor:Self )
  76C:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  784:  		Call     SetAnimation 	( .Actor:Self 00000001 00590008 )
  79C:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  7B4:  		Call     SetStatusTable ( .Actor:Self $StatusTable_80220484 )
  7C8:  		Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_80220450 )
  7E0:  		Call     SetPartEventBits 	( .Actor:Self 00000001 00001000 .True )
  7FC:  		Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
  814:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80220320 )
  82C:  		Wait     0000000A 
  838:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  84C:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  860:  		Return
  868:  	EndCaseGroup
  870:  EndSwitch
  878:  Thread
  880:  	Loop     0000001E 
  88C:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  8A8:  		Call     PlayEffect  	( ~FX:Steam:Ring *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  8EC:  		Wait     00000001 
  8F8:  	EndLoop
  900:  EndThread
  908:  Call     SetGoalToTarget 	( .Actor:Self )
  918:  Call     SetActorSpeed 	( .Actor:Self *Fixed[32.0] ) %16 -> 32
  92C:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  944:  Wait     00000002 
  950:  Call     EnemyDamageTarget 	( .Actor:Self *Var[A] 00000000 0000FFFF 00000000 00000010 00000020 ) %10 -> 16
  978:  Switch  *Var[A] 
  984:  	CaseOR  ==  00000000 
  990:  	CaseOR  ==  00000002 
  99C:  		Call     UseBattleCamPreset 	( 00000002 )
  9AC:  		Thread
  9B4:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000010 00000000 )
  9D0:  			Set  *Var[0]  00000000 
  9E0:  			Loop     0000003C 
  9EC:  				Add  *Var[0]  00000012 
  9FC:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  A18:  				Wait     00000001 
  A24:  			EndLoop
  A2C:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  A48:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  A64:  		EndThread
  A6C:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.0] )
  A80:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  A9C:  		Sub  *Var[0]  00000032 
  AAC:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  AC8:  		Call     JumpToGoal  	( .Actor:Self 0000001E 00000000 00000001 00000000 )
  AE8:  		Sub  *Var[0]  00000028 
  AF8:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  B14:  		Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
  B34:  		Sub  *Var[0]  0000001E 
  B44:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  B60:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  B80:  		Wait     00000014 
  B98:  		Call     GetStatusFlags ( .Actor:Self *Var[A] )
  BAC:  		If  *Var[A]  !&  18000000 
  BBC:  			Call     EnableActorGlow 	( .Actor:Self .False )
  BD0:  		EndIf
  BD8:  		Call     SetPartEventBits 	( .Actor:Self 00000001 00400000 .False )
  BF4:  		Call     8026F6EC ( FFFFFF81 )
  C04:  		Call     SetActorPos 	( .Actor:Self 0000012C 00000000 00000000 )
  B8C:  		Call     YieldTurn   	( )
  C20:  		SetConst  *Var[0]  00000001 
  C30:  		SetConst  *Var[1]  00590004 
  C40:  		ExecWait DoReturnHome 
  C4C:  		Call     SetAnimation 	( .Actor:Self 00000001 00590001 )
  C64:  		Call     SetStatusTable ( .Actor:Self $StatusTable_80220484 )
  C78:  		Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_80220450 )
  C90:  		Call     SetPartEventBits 	( .Actor:Self 00000001 00001000 .True )
  CAC:  		Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
  CC4:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80220320 )
  CDC:  	EndCaseGroup
  CE4:  EndSwitch
  CEC:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  D00:  Call     UseIdleAnimation 	( .Actor:Self .True )
  D14:  Return
  D1C:  End
}

@ $Ember
{
[MaxHP]        14`b %from 10
[Escape]       40`b 
[Item]         50`b 
[AirLift]      80`b 
[Hurricane]    60`b % Bow's "Spook" as well
[UpAndAway]    80`b 
}

@ $DefenseTable_8022C810
{
.Element:Normal 00000000
.Element:Water  FFFFFFFE
.Element:Ice    FFFFFFFE
.Element:Fire   00000063
.Element:Throw  FFFFFFFF
.Element:End
}


@ $StatusTable_8022C834
{
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep       0`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy     100`
.Status:Fear        0`
.Status:Static     40`
.Status:Paralyze    0`
.Status:Shrink     50`
.Status:Stop       80`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod    -1`
.Status:StopTurnMod       0`
.Status:End
}

%no split limit
@ $Script_Split
{
[B0]	If		*Var[0] >=  00000004
[2A8] Call SetActorVar ( .Actor:Self 00000001 *Var[1] ) 
}

@ $Script_TakeTurn_8022EDE4 %change AI to be more like lava bubble
{
    0:  Call     GetBattlePhase ( *Var[0] )
   10:  If  *Var[0]  ==  .Phase:FirstStrike % 1
   20:  	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   38:  	Switch  *Var[0] 
   44:  		Case  ==  00000001 
   50:  			ExecWait $Script_8022D9C4 %tackle
   5C:  		Case  ==  00000000 
   68:  			ExecWait $Script_8022E728 %player fireballs
   74:  	EndSwitch
   7C:  	Return
   84:  EndIf
   8C:  Call     GetActorVar 	( .Actor:Self 00000006 *Var[0] )
   A4:  Switch  *Var[0] 
   B0:  	Case  ==  00000001 
   BC:  		Call     GetStatusFlags ( .Actor:Partner *Var[0] )
   D0:  		If  *Var[0]  &  01000000 
					Call     RandInt     	( 000003E8 *Var[0] )
					If  *Var[0]  <=  00000200
						ExecWait $Script_8022E728 %player fireballs
					Else
   E0:  				ExecWait $Script_8022D9C4 
					EndIf
   EC:  		Else
   F4:  			Call     RandInt     	( 000003E8 *Var[0] )
  108:  			If  *Var[0]  <=  0000012C 
						Call     RandInt     	( 000003E8 *Var[1] )
						If *Var[1] <= 0000002E0
							ExecWait $Script_8022E728 %player fireballs
						Else
  118:  					ExecWait $Script_8022E1B4 %partner fireballs
						EndIf
  124:  			Else
  12C:  				ExecWait $Script_8022D9C4 
  138:  			EndIf
				EndIf
				Call	SetActorVar ( .Actor:Self 00000006 00000000 )
  148:  	Case  ==  00000000 
  154:  		Call     GetStatusFlags ( .Actor:Partner *Var[0] )
  168:  		If  *Var[0]  &  01000000 
  178:  			ExecWait $Script_8022E728 
  184:  		Else
  18C:  			Call     RandInt     	( 000003E8 *Var[0] )
  1A0:  			If  *Var[0]  <=  0000012C 
  1B0:  				ExecWait $Script_8022E1B4 
  1BC:  			Else
  1C4:  				ExecWait $Script_8022E728 
  1D0:  			EndIf
  1D8:  		EndIf
				Call	SetActorVar ( .Actor:Self 00000006 00000001 )
			Default
				Call     GetStatusFlags ( .Actor:Partner *Var[0] )
				If  *Var[0]  &  01000000 
					ExecWait $Script_8022E728 %player fireballs
				Else
					Call     RandInt     	( 000003E8 *Var[0] )
					If  *Var[0]  <=  000001F4
						ExecWait $Script_8022E1B4 %partner fireballs
					Else
						ExecWait $Script_8022E728 %player fireballs
					EndIf
				EndIf
				Call	SetActorVar ( .Actor:Self 00000006 00000001 )
  1E0:  EndSwitch
  1E8:  Return
  1F0:  End
}
  
@ $Script_8022D9C4
{
[508]  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000002 00000000 00000000 00000006 00000020 ) %4 -> 6
}
  
@ $Script_8022E728 %player fireballs
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseBattleCamPreset 	( 0000003F )
   4C:  Call     BattleCamTargetActor ( .Actor:Self )
   5C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   74:  Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
   90:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[A] )
   A8:  If  *Var[A]  ==  00000001 
   B8:  	Add  *Var[0]  00000064 
   C8:  	Set  *Var[1]  00000005 
   D8:  Else
   E0:  	Add  *Var[0]  0000001E 
   F0:  	Set  *Var[1]  00000032 
  100:  EndIf
  108:  Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  124:  Call     SetAnimation 	( .Actor:Self 00000001 00460103 )
  13C:  Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  150:  Thread
  158:  	Call     $Function_80218700 ( )
  164:  EndThread
  16C:  Call     FlyToGoal  	( .Actor:Self 00000000 FFFFFFFC .Easing:SinOut )
  188:  Call     SetAnimation 	( .Actor:Self 00000001 00460101 )
  1A0:  Wait     0000000A 
  1AC:  Call     SetAnimation 	( .Actor:Self 00000001 00460105 )
  1C4:  Wait     0000001E 
  1D0:  Call     EnemyTestTarget ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  1F4:  Switch  *Var[0] 
  200:  	CaseOR  ==  .HitResult:Miss % 6
  20C:  	CaseOR  ==  .HitResult:Lucky % 5
  218:  		Set  *Var[A]  *Var[0] 
  228:  		Call     SetAnimation 	( .Actor:Self 00000001 00460106 )
  240:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  25C:  		Sub  *Var[0]  00000005 
  26C:  		Add  *Var[1]  00000004 
  27C:  		Add  *Var[2]  00000002 
  28C:  		Call     SetGoalToTarget 	( .Actor:Self )
  29C:  		Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  2B8:  		Sub  *Var[3]  00000064 
  2C8:  		Add  *Var[5]  00000002 
  2D8:  		ExecWait $Script_8022E158 
  2E4:  		If  *Var[A]  ==  00000005 
  2F4:  			Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  318:  		EndIf
  320:  		Wait     00000014 
  32C:  		Call     UseBattleCamPreset 	( 00000002 )
  33C:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  358:  		Call     SetActorYaw 	( .Actor:Self 000000B4 )
  36C:  		ExecWait $Script_8022CE5C 
  378:  		Wait     00000014 
  384:  		Call     SetActorYaw 	( .Actor:Self 00000000 )
  398:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  3B0:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  3C4:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  3D8:  		Return
  3E0:  	EndCaseGroup
  3E8:  EndSwitch
  3F0:  Call     SetAnimation 	( .Actor:Self 00000001 00460106 )
  408:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  424:  Sub  *Var[0]  00000005 
  434:  Add  *Var[1]  00000004 
  444:  Add  *Var[2]  00000002 
  454:  Call     SetGoalToTarget 	( .Actor:Self )
  464:  Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  480:  Sub  *Var[4]  00000006 
  490:  Add  *Var[5]  00000002 
  4A0:  ExecWait $Script_8022E158 
  4AC:  Wait     00000002 
  4B8:  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000002 00000000 00000000 00000005 00000020 ) 
		Wait	 00000005
		Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000002 00000000 00000000 00000005 00000020 ) 
		Wait	 00000005		
		Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000002 00000000 00000000 00000005 00000020 ) 
  4E0:  Wait     00000014 
  4EC:  Switch  *Var[0] 
  4F8:  	CaseOR  ==  00000000 
  504:  	CaseOR  ==  00000002 
  510:  		Call     UseBattleCamPreset 	( 00000002 )
  520:  		ExecWait $Script_8022CE5C 
  52C:  	EndCaseGroup
  534:  EndSwitch
  53C:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  550:  Call     UseIdleAnimation 	( .Actor:Self .True )
  564:  Return
  56C:  End
}
  
@ $Script_8022E1B4 %partner fireballs
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Partner )
   3C:  Call     UseBattleCamPreset 	( 0000003F )
   4C:  Call     BattleCamTargetActor ( .Actor:Self )
   5C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   74:  Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
   90:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[A] )
   A8:  If  *Var[A]  ==  00000001 
   B8:  	Add  *Var[0]  00000064 
   C8:  	Set  *Var[1]  00000005 
   D8:  Else
   E0:  	Add  *Var[0]  0000001E 
   F0:  	Set  *Var[1]  00000032 
  100:  EndIf
  108:  Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  124:  Call     SetAnimation 	( .Actor:Self 00000001 00460103 )
  13C:  Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  150:  Thread
  158:  	Call     $Function_80218700 ( )
  164:  EndThread
  16C:  Call     FlyToGoal  	( .Actor:Self 00000000 FFFFFFFC .Easing:SinOut )
  188:  Call     SetAnimation 	( .Actor:Self 00000001 00460101 )
  1A0:  Wait     0000000A 
  1AC:  Call     SetAnimation 	( .Actor:Self 00000001 00460105 )
  1C4:  Wait     0000001E 
  1D0:  Call     EnemyTestTarget ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  1F4:  Switch  *Var[0] 
  200:  	CaseOR  ==  .HitResult:Miss % 6
  20C:  	CaseOR  ==  .HitResult:Lucky % 5
  218:  		Set  *Var[A]  *Var[0] 
  228:  		Call     SetAnimation 	( .Actor:Self 00000001 00460106 )
  240:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  25C:  		Sub  *Var[0]  00000005 
  26C:  		Add  *Var[1]  00000004 
  27C:  		Add  *Var[2]  00000002 
  28C:  		Call     SetGoalToTarget 	( .Actor:Self )
  29C:  		Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  2B8:  		Sub  *Var[3]  00000064 
  2C8:  		Add  *Var[5]  00000002 
  2D8:  		ExecWait $Script_8022E158 
  2E4:  		If  *Var[A]  ==  00000005 
  2F4:  			Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  318:  		EndIf
  320:  		Wait     00000014 
  32C:  		Call     UseBattleCamPreset 	( 00000002 )
  33C:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  358:  		Call     SetActorYaw 	( .Actor:Self 000000B4 )
  36C:  		ExecWait $Script_8022CE5C 
  378:  		Wait     00000014 
  384:  		Call     SetActorYaw 	( .Actor:Self 00000000 )
  398:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  3B0:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  3C4:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  3D8:  		Return
  3E0:  	EndCaseGroup
  3E8:  EndSwitch
  3F0:  Call     SetAnimation 	( .Actor:Self 00000001 00460106 )
  408:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  424:  Sub  *Var[0]  00000005 
  434:  Add  *Var[1]  00000004 
  444:  Add  *Var[2]  00000002 
  454:  Call     SetGoalToTarget 	( .Actor:Self )
  464:  Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  480:  Sub  *Var[4]  00000006 
  490:  Add  *Var[5]  00000002 
  4A0:  ExecWait $Script_8022E158 
  4AC:  Wait     00000002 
  4B8:  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000002 00000000 00000000 00000001 00000020 ) %it's a triple hit too :)
		Wait	 00000005
		Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000002 00000000 00000000 00000001 00000020 ) %good thing there's no partner with a fire weakness
		Wait	 00000005		
		Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000002 00000000 00000000 00000001 00000020 ) %or else this would absolutely destroy them
  4E0:  Wait     00000014 
  4EC:  Switch  *Var[0] 
  4F8:  	CaseOR  ==  00000000 
  504:  	CaseOR  ==  00000002 
  510:  		Call     UseBattleCamPreset 	( 00000002 )
  520:  		ExecWait $Script_8022CE5C 
  52C:  	EndCaseGroup
  534:  EndSwitch
  53C:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  550:  Call     UseIdleAnimation 	( .Actor:Self .True )
  564:  Return
  56C:  End
}

%this area has a LOT of formations and enemies
%let's add more :)


%can this file fit this stuff?

#import newenemy/DarkMagikoopas.bpat		%need to combine the two magikoopa variants in one file
#import newenemy/RedBones.bpat

#import newenemy/PractitionerGuy.bpat
#import newenemy/EmberGuy.bpat

#import newenemy/BloodyBeetle.bpat
#import newenemy/GoldKoopatrol.bpat


%the final anti variant 
%...is in another file
%#import newenemy/NuclearGuy.bpat


%shave off a little more space
#delete $Function_802180D0
#delete $Function_8021819C

@ $Script_802207D4
{
    0:  Switch  *Var[0] 
    C:  	Case  ==  00000000 
   18:  		If  *Var[1]  &  00041000 
   28:  			Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFB 0000000F )
   44:  			Call     8027D4C8 ( FFFFFF81 00000001 00000000 00000000 )
   60:  			Call     $Function_802180D0_GK ( FFFFFFF6 00000014 0000000A 00000014 )
   7C:  		Else
   84:  			Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFC 00000020 )
   A0:  			Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFF FFFFFFFC )
   BC:  			Call     $Function_802180D0_GK ( FFFFFFF1 00000020 00000005 00000020 )
   D8:  		EndIf
   E0:  	Case  ==  00000001 
   EC:  		Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFB 0000000F )
  108:  		Call     8027D4C8 ( FFFFFF81 00000001 00000000 00000000 )
  124:  		Call     $Function_802180D0_GK ( FFFFFFF6 00000014 0000000A 00000014 )
  140:  	Case  ==  00000002 
  14C:  		Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFC 00000014 )
  168:  		Call     8027D4C8 ( FFFFFF81 00000001 00000000 FFFFFFFA )
  184:  		Call     $Function_802180D0_GK ( FFFFFFF1 00000016 00000005 00000016 )
  1A0:  EndSwitch
  1A8:  Return
  1B0:  End
}


@ $Formation_00
{
$BloodyBeetle 00000001 0000000A 00000001 00000000 00000000 00000000 
$BloodyBeetle 00000002 00000009 00000000 00000000 00000000 00000000 
}

@ $Formation_01 %bony beetle -> prac guy
{
$BloodyBeetle 00000000 0000000A 00000001 00000000 00000000 00000000 
$BloodyBeetle 00000001 00000009 00000000 00000000 00000000 00000000 
$PractitionerGuy 00000006 00000008 00000000 00000000 00000000 00000000 
}


@ $Formation_02 %throw in an ember guy
{
$BloodyBeetle 00000000 0000000A 00000001 00000000 00000000 00000000 
$RedBones 00000001 00000009 00000000 00000000 00000000 00000000 
$EmberGuy 00000002 00000008 00000000 00000000 00000000 00000000 
}

@ $Formation_03
{
$BloodyBeetle 00000000 0000000A 00000001 00000000 00000000 00000000 
$BloodyBeetle 00000001 00000009 00000000 00000000 00000000 00000000 
$RedBones 00000002 00000008 00000000 00000000 00000000 00000000 
}

@ $Formation_04
{
$BloodyBeetle 00000000 0000000A 00000001 00000000 00000000 00000000 
$BloodyBeetle 00000001 00000009 00000000 00000000 00000000 00000000 
$DarkMagikoopa 00000002 00000008 00000000 00000000 00000000 00000000 
}

@ $Formation_05
{
$BloodyBeetle 00000000 0000000A 00000001 00000000 00000000 00000000 
$BloodyBeetle 00000001 00000009 00000000 00000000 00000000 00000000 
$BloodyBeetle 00000002 00000008 00000000 00000000 00000000 00000000 
$DarkMagikoopa 00000003 00000007 00000000 00000000 00000000 00000000 
}

@ $Formation_06
{
$BloodyBeetle 00000000 0000000A 00000001 00000000 00000000 00000000 
$RedBones 00000001 00000009 00000000 00000000 00000000 00000000 
$BloodyBeetle 00000002 00000008 00000000 00000000 00000000 00000000 
$DarkMagikoopa 00000003 00000007 00000000 00000000 00000000 00000000 
}

@ $Formation_07 %one dry bones -> + one ember, + 1 ember guy
{
$RedBones 00000001 0000000A 00000000 00000000 00000000 00000000 
$EmberGuy 00000002 00000009 00000000 00000000 00000000 00000000 
}

@ $Formation_08
{
$RedBones 00000000 0000000A 00000000 00000000 00000000 00000000 
$RedBones 00000001 00000009 00000000 00000000 00000000 00000000 
$RedBones 00000002 00000008 00000000 00000000 00000000 00000000 
}

@ $Formation_09
{
$RedBones 00000000 0000000A 00000000 00000000 00000000 00000000 
$RedBones 00000001 00000009 00000000 00000000 00000000 00000000 
$RedBones 00000002 00000008 00000000 00000000 00000000 00000000 
$RedBones 00000003 00000007 00000000 00000000 00000000 00000000 
}

@ $Formation_0A
{
$RedBones 00000000 0000000A 00000000 00000000 00000000 00000000 
$Ember 00000001 00000009 00000000 00000000 00000000 00000000 
$Ember 00000002 00000008 00000000 00000000 00000000 00000000 
$Ember 00000003 00000007 00000000 00000000 00000000 00000000 
}

@ $Formation_0B
{
$RedBones 00000000 0000000A 00000000 00000000 00000000 00000000 
$RedBones 00000001 00000009 00000000 00000000 00000000 00000000 
$DarkMagikoopa 00000002 00000008 00000000 00000000 00000000 00000000 
}

@ $Formation_0C
{
$RedBones 00000000 0000000A 00000000 00000000 00000000 00000000 
$Koopatrol 00000001 00000009 00000000 00000000 00000000 00000000 
$Koopatrol 00000002 00000008 00000000 00000000 00000000 00000000
}

@ $Formation_0D
{
$RedBones 00000000 0000000A 00000000 00000000 00000000 00000000 
$RedBones 00000001 00000009 00000000 00000000 00000000 00000000 
$BloodyBeetle 00000002 00000008 00000000 00000000 00000000 00000000 
}

@ $Formation_0E
{
$RedBones 00000000 0000000A 00000000 00000000 00000000 00000000 
$RedBones 00000001 00000009 00000000 00000000 00000000 00000000 
$BloodyBeetle 00000002 00000008 00000000 00000000 00000000 00000000 
$BloodyBeetle 00000003 00000007 00000000 00000000 00000000 00000000 
}

@ $Formation_0F %hammer bro -> ember guy
{
$HammerBros 00000001 0000000A 00000000 00000000 00000000 00000000 
$EmberGuy 00000002 00000009 00000000 00000000 00000000 00000000 
}

@ $Formation_10
{
$HammerBros 00000000 0000000A 00000000 00000000 00000000 00000000 
$HammerBros 00000001 00000009 00000000 00000000 00000000 00000000 
$HammerBros 00000002 00000008 00000000 00000000 00000000 00000000 
}

@ $Formation_11
{
$HammerBros 00000001 0000000A 00000000 00000000 00000000 00000000 
$Koopatrol 00000002 00000009 00000000 00000000 00000000 00000000 
}

@ $Formation_12
{
$HammerBros 00000000 0000000A 00000000 00000000 00000000 00000000 
$HammerBros 00000001 00000009 00000000 00000000 00000000 00000000 
$Koopatrol 00000002 00000008 00000000 00000000 00000000 00000000 
}

@ $Formation_13
{
$HammerBros 00000000 0000000A 00000000 00000000 00000000 00000000 
$Koopatrol 00000001 00000009 00000000 00000000 00000000 00000000 
$Koopatrol 00000002 00000008 00000000 00000000 00000000 00000000 
}


@ $Formation_14
{
$HammerBros 00000000 0000000A 00000000 00000000 00000000 00000000 
$RedBones 00000001 00000009 00000000 00000000 00000000 00000000 
$HammerBros 00000002 00000008 00000000 00000000 00000000 00000000 
$DarkMagikoopa 00000003 00000009 00000000 00000000 00000000 00000000 
}

@ $Formation_15
{
$HammerBros 00000000 0000000A 00000000 00000000 00000000 00000000 
$HammerBros 00000001 00000009 00000000 00000000 00000000 00000000 
$DarkMagikoopaFlying 00000006 00000008 00000000 00000000 00000000 00000000 
}

@ $Formation_16
{
$HammerBros 00000000 0000000A 00000000 00000000 00000000 00000000 
$HammerBros 00000001 00000009 00000000 00000000 00000000 00000000 
$HammerBros 00000002 00000008 00000000 00000000 00000000 00000000 
$DarkMagikoopaFlying 00000007 00000007 00000000 00000000 00000000 00000000 
}

@ $Formation_17
{
$Koopatrol 00000001 0000000A 00000000 00000000 00000000 00000000 
}

@ $Formation_18 %koopatrol -> gold koopatrol
{
$Koopatrol 00000001 0000000A 00000000 00000000 00000000 00000000 
$GoldKoopatrol 00000002 00000009 00000000 00000000 00000000 00000000 
}


@ $Formation_19
{
$Koopatrol 00000000 0000000A 00000000 00000000 00000000 00000000 
$Koopatrol 00000001 00000009 00000000 00000000 00000000 00000000 
$Koopatrol 00000002 00000008 00000000 00000000 00000000 00000000 
}

@ $Formation_1A %koopatrol => prac guy
{
$Koopatrol 00000000 0000000A 00000000 00000000 00000000 00000000 
$Koopatrol 00000001 00000009 00000000 00000000 00000000 00000000 
$Koopatrol 00000002 00000008 00000000 00000000 00000000 00000000 
$PractitionerGuy 00000007 00000007 00000000 00000000 00000000 00000000 
}


@ $Formation_1B
{
$Koopatrol 00000001 0000000A 00000000 00000000 00000000 00000000 
$HammerBros 00000002 00000009 00000000 00000000 00000000 00000000 
}

@ $Formation_1C
{
$Koopatrol 00000000 0000000A 00000000 00000000 00000000 00000000 
$HammerBros 00000001 00000009 00000000 00000000 00000000 00000000 
$Koopatrol 00000002 00000008 00000000 00000000 00000000 00000000 
$HammerBros 00000003 00000007 00000000 00000000 00000000 00000000 
}

/%
#new:Vector3D $Vector3D_80231040
{
5` 0` -20`
}

#new:Vector3D $Vector3D_8023104C
{
45` 0` -10`
}

#new:Vector3D $Vector3D_80231058
{
85` 0` 0`
}

#new:Vector3D $Vector3D_80231064
{
125` 0` 5`
}
%/

%No
@ $Formation_1D %miniboss?
{
$Koopatrol $Vector3D_80231040 0000000A 00000000 00000000 00000000 00000000 
$Koopatrol $Vector3D_8023104C 00000009 00000000 00000000 00000000 00000000 
$Koopatrol $Vector3D_80231058 00000008 00000000 00000000 00000000 00000000 
$DarkMagikoopa $Vector3D_80231064 00000007 00000000 00000000 00000000 00000000 
}

@ $Formation_1E
{
$Koopatrol 00000000 0000000A 00000000 00000000 00000000 00000000 
$Koopatrol 00000001 00000009 00000000 00000000 00000000 00000000 
$DarkMagikoopa 00000002 00000008 00000000 00000000 00000000 00000000 
$DarkMagikoopa 00000003 00000007 00000000 00000000 00000000 00000000 
}

@ $Formation_1F
{
$Koopatrol 00000001 0000000A 00000000 00000000 00000000 00000000 
$BloodyBeetle 00000002 00000009 00000000 00000000 00000000 00000000 
}

@ $Formation_20 %one of them is gold now
{
$Koopatrol 00000000 0000000A 00000000 00000000 00000000 00000000 
$GoldKoopatrol 00000001 00000009 00000000 00000000 00000000 00000000 
$BloodyBeetle 00000002 00000008 00000000 00000000 00000000 00000000 
}

@ $Formation_21
{
$Koopatrol 00000000 0000000A 00000000 00000000 00000000 00000000 
$BloodyBeetle 00000001 00000009 00000000 00000000 00000000 00000000 
$BloodyBeetle 00000002 00000008 00000000 00000000 00000000 00000000 
}

@ $Formation_22 %back koopatrol => ember guy
{
$Koopatrol 00000000 0000000A 00000000 00000000 00000000 00000000 
$BloodyBeetle 00000001 00000009 00000000 00000000 00000000 00000000 
$EmberGuy 00000002 00000008 00000000 00000000 00000000 00000000 
}

@ $Formation_23 % red bones => ember guy
{
$Koopatrol 00000000 0000000A 00000000 00000000 00000000 00000000 
$RedBones 00000001 00000009 00000000 00000000 00000000 00000000 
$EmberGuy 00000002 00000007 00000000 00000000 00000000 00000000 
}

@ $Formation_24
{
$Koopatrol 00000000 0000000A 00000000 00000000 00000000 00000000 
$Koopatrol 00000001 00000009 00000000 00000000 00000000 00000000 
$DarkMagikoopa 00000002 00000008 00000000 00000000 00000000 00000000 
$DarkMagikoopaFlying 00000007 00000007 00000000 00000000 00000000 00000000 
}

@ $Formation_25
{
$Koopatrol 00000000 0000000A 00000000 00000000 00000000 00000000 
$DarkMagikoopa 00000001 00000009 00000000 00000000 00000000 00000000 
$Koopatrol 00000002 00000008 00000000 00000000 00000000 00000000 
$DarkMagikoopa 00000003 00000007 00000000 00000000 00000000 00000000 
}

@ $Formation_26
{
$DarkMagikoopa 00000001 0000000A 00000000 00000000 00000000 00000000 
$DarkMagikoopa 00000002 00000009 00000000 00000000 00000000 00000000 
}

@ $Formation_27 %+ prac guy, this is gonna be a buff party
{
$DarkMagikoopa 00000000 0000000A 00000000 00000000 00000000 00000000 
$DarkMagikoopa 00000001 00000009 00000000 00000000 00000000 00000000 
$PractitionerGuy 00000007 00000008 00000000 00000000 00000000 00000000 
}

@ $Formation_28
{
$DarkMagikoopa 00000000 0000000A 00000000 00000000 00000000 00000000 
$DarkMagikoopaFlying 00000005 00000009 00000000 00000000 00000000 00000000 
$DarkMagikoopaFlying 00000006 00000008 00000000 00000000 00000000 00000000 
}

@ $Formation_29
{
$DarkMagikoopa 00000000 0000000A 00000000 00000000 00000000 00000000 
$DarkMagikoopa 00000001 00000009 00000000 00000000 00000000 00000000 
$DarkMagikoopaFlying 00000006 00000008 00000000 00000000 00000000 00000000 
$DarkMagikoopaFlying 00000007 00000007 00000000 00000000 00000000 00000000 
}

@ $Formation_2A
{
$DarkMagikoopa 00000000 0000000A 00000000 00000000 00000000 00000000 
$Koopatrol 00000001 00000009 00000000 00000000 00000000 00000000 
$Koopatrol 00000002 00000008 00000000 00000000 00000000 00000000 
$Koopatrol 00000003 00000007 00000000 00000000 00000000 00000000 
}

@ $Formation_2B
{
$DarkMagikoopa 00000000 0000000A 00000000 00000000 00000000 00000000 
$DarkMagikoopa 00000001 00000009 00000000 00000000 00000000 00000000 
$RedBones 00000002 00000008 00000000 00000000 00000000 00000000 
}

@ $Formation_2C
{
$DarkMagikoopa 00000000 0000000A 00000000 00000000 00000000 00000000 
$BloodyBeetle 00000001 00000009 00000000 00000000 00000000 00000000 
$DarkMagikoopa 00000002 00000008 00000000 00000000 00000000 00000000 
}

@ $Formation_2D
{
$DarkMagikoopa 00000000 0000000A 00000000 00000000 00000000 00000000 
$BloodyBeetle 00000001 00000009 00000000 00000000 00000000 00000000 
$BloodyBeetle 00000002 00000008 00000000 00000000 00000000 00000000 
$DarkMagikoopa 00000003 00000007 00000000 00000000 00000000 00000000 
}

@ $Formation_2E
{
$DarkMagikoopa 00000000 0000000A 00000000 00000000 00000000 00000000 
$DarkMagikoopa 00000001 00000009 00000000 00000000 00000000 00000000 
$DarkMagikoopaFlying 00000006 00000008 00000000 00000000 00000000 00000000 
}

@ $Formation_2F %magikoopa -> prac guy
{
$DarkMagikoopa 00000000 0000000A 00000000 00000000 00000000 00000000 
$Koopatrol 00000001 00000009 00000000 00000000 00000000 00000000 
$Koopatrol 00000002 00000008 00000000 00000000 00000000 00000000 
$PractitionerGuy 00000007 00000007 00000000 00000000 00000000 00000000 
}

@ $Formation_30
{
$DarkMagikoopaFlying 00000005 0000000A 00000000 00000000 00000000 00000000 
$DarkMagikoopaFlying 00000006 00000009 00000000 00000000 00000000 00000000 
}

@ $Formation_31
{
$DarkMagikoopaFlying 00000004 0000000A 00000000 00000000 00000000 00000000 
$DarkMagikoopaFlying 00000005 00000009 00000000 00000000 00000000 00000000 
$DarkMagikoopaFlying 00000006 00000008 00000000 00000000 00000000 00000000 
}

@ $Formation_32
{
$DarkMagikoopaFlying 00000004 0000000A 00000000 00000000 00000000 00000000 
$DarkMagikoopa 00000001 00000009 00000000 00000000 00000000 00000000 
$DarkMagikoopaFlying 00000006 00000008 00000000 00000000 00000000 00000000 
$DarkMagikoopa 00000003 00000007 00000000 00000000 00000000 00000000 
}

@ $Formation_33 %front koopatrol is gold now
{
$DarkMagikoopaFlying 00000004 0000000A 00000000 00000000 00000000 00000000 
$GoldKoopatrol 00000001 00000009 00000000 00000000 00000000 00000000 
$Koopatrol 00000002 00000008 00000000 00000000 00000000 00000000 
}

@ $Formation_34
{
$DarkMagikoopaFlying 00000005 0000000A 00000000 00000000 00000000 00000000 
$HammerBros 00000002 00000009 00000000 00000000 00000000 00000000 
}


@ $Formation_35
{
$DarkMagikoopaFlying 00000004 0000000A 00000000 00000000 00000000 00000000 
$RedBones 00000001 00000009 00000000 00000000 00000000 00000000 
$RedBones 00000002 00000008 00000000 00000000 00000000 00000000 
}

@ $Formation_36
{
$DarkMagikoopaFlying 00000004 0000000A 00000000 00000000 00000000 00000000 
$Koopatrol 00000001 0000000A 00000000 00000000 00000000 00000000 
$DarkMagikoopaFlying 00000006 00000009 00000000 00000000 00000000 00000000 
}

@ $Formation_37
{
$DarkMagikoopaFlying 00000004 0000000A 00000000 00000000 00000000 00000000 
$HammerBros 00000001 00000009 00000000 00000000 00000000 00000000 
$HammerBros 00000002 00000008 00000000 00000000 00000000 00000000 
$DarkMagikoopaFlying 00000007 00000007 00000000 00000000 00000000 00000000 
}

%replace this with a placeholder guy, I moved nuclear guy over to 25 KPA to save space
#new:Formation $Formation_38
{
$HammerBros 00000001 00000009 00000000 00000000 00000000 00000000 
}


@ $FormationTable
{
$SJIS_8023274C 00000002 $Formation_00 $Stage_8022F154 00000000 
$SJIS_8023273C 00000003 $Formation_01 $Stage_8022F154 00000000 
$SJIS_80232724 00000003 $Formation_02 $Stage_8022F154 00000000 % unused			try deleting stuff?		%size 3 formations -> formation 01
$SJIS_8023270C 00000003 $Formation_03 $Stage_8022F154 00000000 % unused
$SJIS_802326F4 00000003 $Formation_04 $Stage_8022F154 00000000 
$SJIS_802326DC 00000004 $Formation_05 $Stage_8022F154 00000000 % unused
$SJIS_802326B4 00000004 $Formation_06 $Stage_8022F154 00000000 
$SJIS_802326A8 00000002 $Formation_07 $Stage_8022F154 00000000 
$SJIS_8023269C 00000003 $Formation_08 $Stage_8022F154 00000000 % unused
$SJIS_80232690 00000004 $Formation_09 $Stage_8022F154 00000000 % unused
$SJIS_8023267C 00000004 $Formation_0A $Stage_8022F154 00000000 % unused
$SJIS_80232668 00000003 $Formation_0B $Stage_8022F154 00000000 
$SJIS_80232654 00000003 $Formation_0C $Stage_8022F154 00000000 
$SJIS_8023263C 00000003 $Formation_0D $Stage_8022F154 00000000 % unused
$SJIS_80232624 00000004 $Formation_0E $Stage_8022F154 00000000 % unused
$SJIS_80232610 00000002 $Formation_0F $Stage_8022F154 00000000 
$SJIS_802325FC 00000003 $Formation_10 $Stage_8022F154 00000000 % unused
$SJIS_802325E4 00000002 $Formation_11 $Stage_8022F154 00000000 % unused
$SJIS_802325C8 00000003 $Formation_12 $Stage_8022F154 00000000 % unused
$SJIS_802325AC 00000003 $Formation_13 $Stage_8022F154 00000000 
$SJIS_8023257C 00000004 $Formation_14 $Stage_8022F154 00000000 
$SJIS_80232554 00000003 $Formation_15 $Stage_8022F154 00000000 
$SJIS_8023252C 00000004 $Formation_16 $Stage_8022F154 00000000 
$SJIS_80232520 00000001 $Formation_17 $Stage_8022F154 00000000
$SJIS_80232514 00000002 $Formation_18 $Stage_8022F154 00000000 
$SJIS_80232508 00000003 $Formation_19 $Stage_8022F154 00000000 
$SJIS_802324FC 00000004 $Formation_1A $Stage_8022F154 00000000 
$SJIS_802324E4 00000002 $Formation_1B $Stage_8022F154 00000000 % unused
$SJIS_802324B4 00000004 $Formation_1C $Stage_8022F154 00000000 % unused
$SJIS_8023249C 00000004 $Formation_1D $Stage_8022F154 00000000 
$SJIS_80232484 00000004 $Formation_1E $Stage_8022F154 00000000 % unused
$SJIS_80232470 00000002 $Formation_1F $Stage_8022F154 00000000 
$SJIS_80232458 00000003 $Formation_20 $Stage_8022F154 00000000 
$SJIS_80232440 00000003 $Formation_21 $Stage_8022F154 00000000 
$SJIS_80232420 00000003 $Formation_22 $Stage_8022F154 00000000 % unused
$SJIS_8023240C 00000003 $Formation_23 $Stage_8022F154 00000000 
$SJIS_802323E4 00000004 $Formation_24 $Stage_8022F154 00000000 
$SJIS_802323C0 00000004 $Formation_25 $Stage_8022F154 00000000 % unused
$SJIS_802323B4 00000002 $Formation_26 $Stage_8022F154 00000000 % unused
$SJIS_802323A8 00000003 $Formation_27 $Stage_8022F154 00000000 % unused
$SJIS_80232388 00000003 $Formation_28 $Stage_8022F154 00000000 % unused
$SJIS_80232364 00000004 $Formation_29 $Stage_8022F154 00000000 
$SJIS_8023234C 00000004 $Formation_2A $Stage_8022F154 00000000 % unused
$SJIS_80232338 00000003 $Formation_2B $Stage_8022F154 00000000 
$SJIS_80232318 00000003 $Formation_2C $Stage_8022F154 00000000 
$SJIS_802322F8 00000004 $Formation_2D $Stage_8022F154 00000000 % unused
$SJIS_802322D8 00000003 $Formation_2E $Stage_8022F154 00000000 % unused
$SJIS_802322B4 00000004 $Formation_2F $Stage_8022F154 00000000 
$SJIS_8023229C 00000002 $Formation_30 $Stage_8022F154 00000000 % unused
$SJIS_80232284 00000003 $Formation_31 $Stage_8022F154 00000000 % unused
$SJIS_8023224C 00000004 $Formation_32 $Stage_8022F154 00000000 
$SJIS_8023222C 00000003 $Formation_33 $Stage_8022F154 00000000 
$SJIS_80232208 00000002 $Formation_34 $Stage_8022F154 00000000 % unused
$SJIS_802321E8 00000003 $Formation_35 $Stage_8022F154 00000000 
$SJIS_802321B8 00000003 $Formation_36 $Stage_8022F154 00000000 % unused
$SJIS_80232180 00000004 $Formation_37 $Stage_8022F154 00000000 % unused
00000000 00000001 $Formation_38 $Stage_8022F154 00000000	 	% (MOVED TO 25 KPA) nuclear guy
00000000 00000003 $Formation_39 $Stage_Pit1 00000000 % floor 71
00000000 00000003 $Formation_3A $Stage_Pit1 00000000 % floor 72
00000000 00000004 $Formation_3B $Stage_Pit1 00000000 % floor 73
00000000 00000004 $Formation_3C $Stage_Pit1 00000000 % floor 75
00000000 00000004 $Formation_3D $Stage_Pit1 00000000 % floor 76
00000000 00000004 $Formation_3E $Stage_Pit1 00000000 % floor 77
00000000 00000004 $Formation_3F $Stage_Pit1 00000000 % floor 78
00000000 00000000 00000000 00000000 00000000 % unused
}

#new:Formation $Formation_39
{
$Ember 00000001 0000000A 00000000 00000000 00000000 00000000 
$Ember 00000002 00000009 00000000 00000000 00000000 00000000 
$EmberGuy 00000003 00000008 00000000 00000000 00000000 00000000 
}

#new:Formation $Formation_3A
{
$Ember 00000001 0000000A 00000000 00000000 00000000 00000000 
$EmberGuy 00000002 00000009 00000000 00000000 00000000 00000000 
$Koopatrol 00000003 00000008 00000000 00000000 00000000 00000000 
}

#new:Formation $Formation_3B
{
$BloodyBeetle 00000001 0000000A 00000000 00000000 00000000 00000000 
$BloodyBeetle 00000002 00000009 00000000 00000000 00000000 00000000 
$BloodyBeetle 00000003 00000008 00000000 00000000 00000000 00000000 
$PractitionerGuy 00000007 00000007 00000000 00000000 00000000 00000000 
}

#new:Formation $Formation_3C
{
$HammerBros 00000001 0000000A 00000000 00000000 00000000 00000000 
$HammerBros 00000002 00000009 00000000 00000000 00000000 00000000 
$BloodyBeetle 00000003 00000008 00000000 00000000 00000000 00000000 
$PractitionerGuy 00000007 00000007 00000000 00000000 00000000 00000000 
}

#new:Formation $Formation_3D
{
$HammerBros 00000000 0000000A 00000000 00000000 00000000 00000000 
$RedBones 00000001 00000009 00000000 00000000 00000000 00000000 
$RedBones 00000002 00000008 00000000 00000000 00000000 00000000 
$BloodyBeetle 00000003 00000007 00000000 00000000 00000000 00000000 
}

#new:Formation $Formation_3E
{
$Koopatrol 00000001 0000000A 00000000 00000000 00000000 00000000 
$Koopatrol 00000002 00000009 00000000 00000000 00000000 00000000 
$DarkMagikoopa 00000003 00000008 00000000 00000000 00000000 00000000 
$PractitionerGuy 00000007 00000007 00000000 00000000 00000000 00000000 
}

#new:Formation $Formation_3F
{
$Koopatrol 00000000 0000000A 00000000 00000000 00000000 00000000 
$HammerBros 00000001 00000009 00000000 00000000 00000000 00000000 
$DarkMagikoopa 00000002 00000008 00000000 00000000 00000000 00000000 
$DarkMagikoopa 00000003 00000007 00000000 00000000 00000000 00000000 
}

@ $StageTable
{
$ASCII_802327C4 $Stage_8022F154 
$ASCII_802327BC $Stage_8022F2D8 
$ASCII_802327B4 $Stage_8022F72C 
$ASCII_802327AC $Stage_8022F7C4 
$ASCII_802327A4 $Stage_8022F9E0 
$ASCII_8023279C $Stage_8022FBEC 
$ASCII_80232794 $Stage_8022FE04 
$ASCII_8023278C $Stage_8022FE84 
$ASCII_80232784 $Stage_80230290 
$ASCII_8023277C $Stage_80230314 
$ASCII_80232774 $Stage_80230394 
$ASCII_8023276C $Stage_80230414 
$ASCII_80232764 $Stage_8023053C 
$ASCII_8023275C $Stage_8023066C 
"pit_08" $Stage_Pit1
00000000 00000000 
}

#new:Stage $Stage_Pit1
{
"kpa_tex"
"pit_b01_shape"
"pit_b01_hit"
$Script_BeforeBattle_Pit
$Script_AfterBattle_Pit
00000000 
00000000 
00000000 
00000000 
00000000 
}

%to make things easier to add, I'm adding the pit scripts every time even when I don't need to
#new:Script $Script_BeforeBattle_Pit
{
	Return
	End
}

#new:Script $Script_AfterBattle_Pit
{
	Return
	End
}