%lava piranha in the base game wasn't that hard
%let's fix that

%normal form
%negates the -1 def / 2 turns (or else you'll get completely destroyed in phase 2)
%main head does 8/turn!
%buds do 6/turn

%fiery form
%does -3 def / turn (down to -12), -1 def / turn to partner (to -2) (*note that quick change resets partner statuses including defense down)
%can attack partner
%main head does 9/turn (but that -3 def/turn is gonna make it a lot worse)
%petit piranhas do 12 damage (but you can just kill them)
%copied the MQ defense setting (lava piranha gets defense based on active buds)
%	otherwise it would be way too easy with regular jump doing 12 damage (6x6)
%Buds are immune to crumpling above 1/3 health (*though most ice and water attacks surpass this)
%Buds heal lava piranha for 4 hp when they move

#new:Script $Script_HealLava
{
		Set *Var3 2
    0:  Call     GetActorPos 	( .Actor:Enemy0 *Var[0] *Var[1] *Var[2] )
   1C:  Call     PlayEffect  	( ~FX:Sparkles:Star *Var[0] *Var[1] *Var[2] *Fixed[1.0] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   60:  Add  *Var[0]  00000014 
   84:  Call     PlayEffect  	( ~FX:Recover:HP *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   C8:  Call     GetActorHP  	( .Actor:Enemy0 *Var[0] )
   DC:  Add  *Var[0]  *Var[3] 
   EC:  Call     GetEnemyMaxHP 	( .Actor:Enemy0 *Var[1] )
  100:  If  *Var[0]  >  *Var[1] 
  110:  	Set  *Var[0]  *Var[1] 
  120:  EndIf
  128:  Call     SetEnemyHP  	( .Actor:Enemy0 *Var[0] )
  13C:  Return
  144:  End
}

@ $IdleAnimations_8021D064
{
.Status:Normal    00790104
.Status:Stone     00790100
.Status:Sleep     00790104
.Status:Poison    00790104
.Status:Stop      00790100
.Status:Static    00790100
.Status:Paralyze  00790100
.Status:Paralyze  00790100
.Status:Dizzy     0079010C
.Status:End
}

@ $IdleAnimations_802250D4
{
.Status:Normal    007B0104
.Status:Stop      007B0102
.Status:End
}

@ $LavaPiranha
{
[PowerBounce]  3`b 
}

@ $StatusTable_8021D148 %statuses won't really work
{
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep     100`	%sleep is really terrible so this is not unbalanced(?)
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy       0`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink      0`
.Status:Stop       30`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod    -1`
.Status:StopTurnMod      -2`
.Status:End
}

@ $Script_Init_8021D264
{
		Set *EnviroEffectsAux 1 %disable effects for now
    0:  UseArray  $End[788]
    C:  Call  EnableGroup       ( 00000017 .True )
   20:  Call  EnableGroup       ( 0000001C .False )
   34:  Call  SetActorVar       ( .Actor:Self 00000000 00000000 )
   4C:  Call  SetActorVar       ( .Actor:Self 00000005 00000000 )
   64:  Call  SetActorVar       ( .Actor:Self 00000006 00000000 )
   7C:  Call  SetActorVar       ( .Actor:Self 0000000B 00000000 )
   94:  Call  SetActorVar       ( .Actor:Self 0000000D 00000000 )
   AC:  Call  SetActorVar       ( .Actor:Self 00000001 00000000 )
   C4:  Call  SetActorVar       ( .Actor:Self 00000002 00000000 )
   DC:  Set   *Var0  0000001E
   EC:  Call  SetActorVar       ( .Actor:Self 0000000D *Var0 )
  104:  Call  SetActorVar       ( .Actor:Self 00000007 00790003 )
  11C:  Call  SetActorVar       ( .Actor:Self 00000008 00790009 )
  134:  Call  ForceHomePos      ( .Actor:Self 0000003D 0000003D 00000000 )
  150:  Call  LoadAnimatedModel ( 00000000 $AnimatedModelTree_8021C4C0 )
  164:  Call  OverrideBattleDmaDest ( $End[9230] )
  174:  Call  LoadBattleDmaData ( 00000000 )
  184:  Call  PlayModelAnimation    ( 00000000 $End[9230] )
  198:  Call  SetAnimatedModelRootPosition  ( 00000000 00000000 00000000 00000000 )
  1B4:  Call  SetAnimatorFlags  ( 00000000 00000080 00000001 )
  1CC:  Call  LoadAnimatedModel ( 00000001 $AnimatedModelTree_8021C650 )
  1E0:  Call  OverrideBattleDmaDest ( $End[6230] )
  1F0:  Call  LoadBattleDmaData ( 0000001F )
  200:  Call  PlayModelAnimation    ( 00000001 $End[6230] )
  214:  Call  SetAnimatedModelRootPosition  ( 00000001 00000000 00000000 00000000 )
  230:  Call  SetAnimatorFlags  ( 00000001 00000080 00000001 )
  248:  Call  LoadAnimatedModel ( 00000002 $AnimatedModelTree_8021C650 )
  25C:  Call  OverrideBattleDmaDest ( $End[3230] )
  26C:  Call  LoadBattleDmaData ( 0000001F )
  27C:  Call  PlayModelAnimation    ( 00000002 $End[3230] )
  290:  Call  SetAnimatedModelRootPosition  ( 00000002 00000032 0000000E 00000014 )
  2AC:  Call  SetAnimatorFlags  ( 00000002 00000080 00000001 )
  2C4:  Call  LoadAnimatedModel ( 00000003 $AnimatedModelTree_8021C780 )
  2D8:  Call  OverrideBattleDmaDest ( $End[1230] )
  2E8:  Call  LoadBattleDmaData ( 00000022 )
  2F8:  Call  PlayModelAnimation    ( 00000003 $End[1230] )
  30C:  Call  SetAnimatedModelRootPosition  ( 00000003 00000000 00000000 00000003 )
  328:  Call  SetAnimatorFlags  ( 00000003 00000080 00000001 )
  340:  Call  SummonEnemy       ( $SpecialFormation_8021FF04 00000000 )
  354:  Call  SummonEnemy       ( $SpecialFormation_8021FF20 00000000 )
  368:  Wait  2`
  374:  Exec  $Script_8021DEEC
  380:  Call  CreateNpc ( 00000000 00B70000 )
  394:  Call  SetNpcYaw ( 00000000 0000005A )
  3A8:  Call  SetNpcPos ( 00000000 FFFFFED4 00000000 00000000 )
  3C4:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021FC10 )
  3D8:  Call  BindIdle  ( .Actor:Self $Script_Idle_8021D6EC )
  3EC:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021F5A4 )
  400:  Call  BindNextTurn      ( .Actor:Self $Script_NextTurn_8021D8EC )
  414:  Call  ForceHomePos      ( .Actor:Enemy1 00000039 00000039 00000000 )
  430:  Call  ForceHomePos      ( .Actor:Enemy2 0000006B 00000047 00000014 )
  44C:  Call  HPBarToHome       ( .Actor:Enemy1 )
  45C:  Call  HPBarToHome       ( .Actor:Enemy2 )
  46C:  Call  $Function_802188FC ( )
  478:  Return
  480:  End
}

@ $Script_8021FF3C
{
[43C]  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000002 0000FFFF 00000000 00000008 00000020 ) %decent attack power (5 -> 8)
}

@ $Script_802204B0
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   28:  Thread
   30:  	Wait     00000008 
   3C:  	Call     UseBattleCamPreset 	( 00000013 )
   4C:  	Call     SetBattleCamTarget 	( 00000050 00000046 00000000 )
   64:  	Call     SetBattleCamZoom  	( 0000012C )
   74:  	Call     SetBattleCamOffsetZ 	( 0000001E )
   84:  	Call     MoveBattleCamOver 	( 0000002D )
   94:  	Wait     00000036 
   A0:  	Call     UseBattleCamPreset 	( 00000002 )
   B0:  	Call     MoveBattleCamOver 	( 0000000F )
   C0:  EndThread
   C8:  Call     OverrideBattleDmaDest 	( $End[9230] )
   D8:  Call     LoadBattleDmaData 	( 00000002 )
   E8:  Call     PlayModelAnimation 	( 00000000 $End[9230] )
   FC:  Wait     0000000E 
  108:  Call     SetAnimation 	( .Actor:Self 00000001 0079010E )
  120:  Wait     0000000A 
  12C:  Call     PlaySoundAtActor 	( .Actor:Self 000003C1 )
  140:  Wait     0000002D 
  14C:  Call     SetAnimation 	( .Actor:Self 00000001 00790108 )
  164:  Call     GetPartOffset 	( .Actor:Self 00000001 *Var[0] *Var[1] *Var[2] )
  184:  Sub  *Var[0]  00000028 
  194:  Set  *Var[1]  FFFFFFF6 
  1A4:  Call     SetGoalToTarget 	( .Actor:Self )
  1B4:  Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  1D0:  Call     PlayEffect  	( 00000063 00000000 *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.0] 00000010 00000028 00000000 00000000 00000000 )
  214:  Call     PlaySoundAtActor 	( .Actor:Self 000003C4 )
  228:  Wait     0000000F 
  234:  Thread
  23C:  	Wait     00000018 
  248:  	Call     PlayEffect  	( ~FX:EmitterVolume:Embers *Var[3] 00000000 *Var[5] 00000032 00000032 *Fixed[1.0] 00000028 00000037 *Fixed[1.0] *Fixed[1.0] 00000000 00000000 )
  28C:  EndThread
  294:  Call     EnemyTestTarget ( .Actor:Self *Var[A] 00000002 00000000 00000001 00000010 )
  2B8:  Switch  *Var[A] 
  2C4:  	CaseOR  ==  .HitResult:Miss % 6
  2D0:  	CaseOR  ==  .HitResult:Lucky % 5
  2DC:  		Wait     00000014 
  2E8:  		Call     OverrideBattleDmaDest 	( $End[9230] )
  2F8:  		Call     LoadBattleDmaData 	( 00000003 )
  308:  		Call     PlayModelAnimation 	( 00000000 $End[9230] )
  31C:  		Call     SetAnimation 	( .Actor:Self 00000001 00790107 )
  334:  		Wait     00000013 
  340:  		Call     SetAnimation 	( .Actor:Self 00000001 00790104 )
  358:  		Call     OverrideBattleDmaDest 	( $End[9230] )
  368:  		Call     LoadBattleDmaData 	( 00000000 )
  378:  		Call     PlayModelAnimation 	( 00000000 $End[9230] )
  38C:  		If  *Var[A]  ==  00000005 
  39C:  			Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  3C0:  		EndIf
  3C8:  		Wait     0000000F 
  3D4:  		Call     UseBattleCamPreset 	( 00000002 )
  3E4:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  3F8:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  40C:  		Return
  414:  	EndCaseGroup
  41C:  EndSwitch
  424:  Wait     00000002 
  430:  Call     SetGoalToTarget 	( .Actor:Self )
  440:  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000002 0000FFFF 00000000 00000009 00000020 ) %only 1 damage more, but watch out for that -3 def/turn!
    	Wait     0000000B 
  		Call     SetTargetActor ( .Actor:Self .Actor:Partner )
   		Call     SetGoalToTarget 	( .Actor:Self )
		Call     GetStatusFlags ( .Actor:Partner *Var[0] )
		If  *Var[0]  !&  01000000 
			Call 	 EnemyDamageTarget ( .Actor:Self *Var[0] 20000110 0000FFFF 00000000 00000001 00000020 ) %this increases due to partner defense decreases (-1/turn)
		EndIf
  468:  Wait     00000014 
  474:  Call     OverrideBattleDmaDest 	( $End[9230] )
  484:  Call     LoadBattleDmaData 	( 00000003 )
  494:  Call     PlayModelAnimation 	( 00000000 $End[9230] )
  4A8:  Call     SetAnimation 	( .Actor:Self 00000001 00790107 )
  4C0:  Wait     00000013 
  4CC:  Call     SetAnimation 	( .Actor:Self 00000001 00790104 )
  4E4:  Call     OverrideBattleDmaDest 	( $End[9230] )
  4F4:  Call     LoadBattleDmaData 	( 00000000 )
  504:  Call     PlayModelAnimation 	( 00000000 $End[9230] )
  518:  If  *Var[F]  ==  0000000A 
  528:  	Return
  530:  EndIf
  538:  Call     UseBattleCamPreset 	( 00000002 )
  548:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  55C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  570:  Return
  578:  End
}

%update defense table correctly
@ $Script_80223780
{
    0:  Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
   18:  Call  SetAnimation  ( .Actor:Self 00000001 *Var0 )
   30:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   48:  If  *Var0  ==  00000000
   58:  	Call  GetLastDamage ( .Actor:Self *Var0 )
   6C:  	If  *Var0  <  00000004
   7C:  		Call  OverrideBattleDmaDest ( $End[9230] )
   8C:  		Call  LoadBattleDmaData     ( 00000007 )
   9C:  	Else
   A4:  		Call  OverrideBattleDmaDest ( $End[9230] )
   B4:  		Call  LoadBattleDmaData     ( 00000006 )
   C4:  	EndIf
   CC:  	Call  PlayModelAnimation    ( 00000000 $End[9230] )
   E0:  	Wait  29`
   EC:  	Wait  14`
   F8:  	Return
  100:  EndIf
  108:  If  *VarE  &  0000000C
  118:  	Call  GetActorVar   ( .Actor:Self 00000005 *Var0 )
  130:  	If  *Var0  ==  00000000
  140:  		Call  GetLastDamage ( .Actor:Self *Var0 )
  154:  		If  *Var0  <  00000004
  164:  			Call  OverrideBattleDmaDest ( $End[9230] )
  174:  			Call  LoadBattleDmaData     ( 00000005 )
  184:  		Else
  18C:  			Call  OverrideBattleDmaDest ( $End[9230] )
  19C:  			Call  LoadBattleDmaData     ( 00000004 )
  1AC:  		EndIf
  1B4:  		Call  PlayModelAnimation    ( 00000000 $End[9230] )
  1C8:  		Wait  29`
  1D4:  		Wait  14`
  1E0:  	Else
  1E8:  		Call  SetActorVar   ( .Actor:Self 0000000B 00000002 )
  200:  		Call  OverrideBattleDmaDest ( $End[9230] )
  210:  		Call  LoadBattleDmaData     ( 00000006 )
  220:  		Call  PlayModelAnimation    ( 00000000 $End[9230] )
  234:  		Call  GetActorVar   ( .Actor:Self 00000006 *Var0 )
  24C:  		If  *Var0  !=  00000000
  25C:  			Call  RemoveEffect  ( *Var0 )
  26C:  			Call  SetActorVar   ( .Actor:Self 00000006 00000000 )
  284:  			Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  2A0:  			Call  PlayEffect    ( ~FX:ColdBreath:PuffUp *Var0 *Var1 *Var2 *Fixed[3.0] 00000032 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  2E4:  		EndIf
  2EC:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021D0B0 )
  304:  		Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_High )
  31C:  		Call  SetDefenseTable   ( .Actor:Self 00000002 $DefenseTable_High )
				ExecWait $Script_UpdateDefenseTable
  334:  		Call  SetActorVar       ( .Actor:Self 00000007 0079000A )
  34C:  		Call  SetActorVar       ( .Actor:Self 00000008 00790009 )
  364:  		Call  SetPartEventBits  ( .Actor:Self 00000001 00000002 .False )
  380:  		Call  SetPartEventBits  ( .Actor:Self 00000002 00000002 .False )
  39C:  		Wait  29`
  3A8:  		Call  PlaySoundAtActor  ( .Actor:Self 000003C8 )
  3BC:  		Call  OverrideBattleDmaDest ( $End[9230] )
  3CC:  		Call  LoadBattleDmaData ( 0000000D )
  3DC:  		Call  PlayModelAnimation    ( 00000000 $End[9230] )
  3F0:  		Wait  14`
  3FC:  		Call  SetActorVar       ( .Actor:Self 00000005 00000000 )
  414:  	EndIf
  41C:  Else
  424:  	Call  GetActorVar   ( .Actor:Self 00000005 *Var0 )
  43C:  	If  *Var0  ==  00000000
  44C:  		Call  GetLastDamage ( .Actor:Self *Var0 )
  460:  		If  *Var0  <  00000004
  470:  			Call  OverrideBattleDmaDest ( $End[9230] )
  480:  			Call  LoadBattleDmaData     ( 00000005 )
  490:  		Else
  498:  			Call  OverrideBattleDmaDest ( $End[9230] )
  4A8:  			Call  LoadBattleDmaData     ( 00000004 )
  4B8:  		EndIf
  4C0:  		Call  PlayModelAnimation    ( 00000000 $End[9230] )
  4D4:  		Wait  29`
  4E0:  		Wait  14`
  4EC:  	Else
  4F4:  		Call  GetLastDamage ( .Actor:Self *Var0 )
  508:  		If  *Var0  <  00000004
  518:  			Call  OverrideBattleDmaDest ( $End[9230] )
  528:  			Call  LoadBattleDmaData     ( 00000007 )
  538:  		Else
  540:  			Call  OverrideBattleDmaDest ( $End[9230] )
  550:  			Call  LoadBattleDmaData     ( 00000006 )
  560:  		EndIf
  568:  		Call  PlayModelAnimation    ( 00000000 $End[9230] )
  57C:  		Call  PlayEffect    ( ~FX:EmitterVolume:Embers 00000050 00000032 00000000 0000003C 00000032 *Fixed[1.5] 00000024 0000002A *Fixed[0.8] *Fixed[0.8] 00000000 00000000 )
  5C0:  		Wait  29`
  5CC:  		Wait  14`
  5D8:  	EndIf
  5E0:  EndIf
  5E8:  Return
  5F0:  End
}

@ $Script_HandleEvent_8021F5A4
{
		ExecWait $Script_UpdateDefenseTable
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetAnimatorFlags  ( 00000000 00040000 00000000 )
   40:  Call  GetLastElement    ( *VarE )
   50:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   64:  Switch  *Var0
   70:  	Case  ==  .Event:BeginFirstStrike % 38
   7C:  	Case  ==  .Event:HitCombo % 9
   88:  		ExecWait  $Script_802235AC
   94:  		ExecWait  $Script_80223D78
   A0:  	Case  ==  .Event:Hit % A
   AC:  		ExecWait  $Script_80223764
   B8:  		ExecWait  $Script_80223D78
   C4:  	Case  ==  .Event:Death % 20
   D0:  		ExecWait  $Script_DoDeath
   DC:  		Return
   E4:  	Case  ==  .Event:BurnHit % E
   F0:  		If  *VarE  &  00000002
  100:  			ExecWait  $Script_8021F9E8
  10C:  		Else
  114:  			ExecWait  $Script_80223764
  120:  			ExecWait  $Script_80223D78
  12C:  		EndIf
  134:  	Case  ==  .Event:BurnDeath % 24
  140:  		ExecWait  $Script_DoDeath
  14C:  		Return
  154:  	Case  ==  .Event:SpinSmashHit % B
  160:  		ExecWait  $Script_80223764
  16C:  		ExecWait  $Script_80223D78
  178:  	Case  ==  .Event:SpinSmashDeath % 21
  184:  		ExecWait  $Script_DoDeath
  190:  		Return
  198:  	Case  ==  .Event:ShockHit % 2F
  1A4:  		SetConst  *Var0  00000001
  1B4:  		SetConst  *Var1  00790009
  1C4:  		ExecWait  DoShockHit
  1D0:  	Case  ==  .Event:ShockDeath % 26
  1DC:  		ExecWait  $Script_DoDeath
  1E8:  		Return
  1F0:  	Case  ==  00000017 % 17
  1FC:  		If  *VarE  !&  00000002
  20C:  			ExecWait  $Script_802235AC
  218:  			ExecWait  $Script_80223D78
  224:  		EndIf
  22C:  	Case  ==  .Event:Immune % 19
  238:  		If  *VarE  !&  00000002
  248:  			ExecWait  $Script_80223764
  254:  			ExecWait  $Script_80223D78
  260:  		EndIf
  268:  	Case  ==  .Event:AirLiftFailed % 1F
  274:  	Case  ==  .Event:SpikeTaunt % 1B
  280:  	Case  ==  .Event:EndFirstStrike % 35
  28C:  	Case  ==  .Event:RecoverStatus % 31
  298:  		Call  SetAnimatorFlags  ( 00000000 00040000 00000000 )
  2B0:  	Case  ==  00000030 % 30
  2BC:  		SetConst  *Var0  00000001
  2CC:  		SetConst  *Var1  00790009
  2DC:  		ExecWait  DoNormalHit
  2E8:  		Wait  1000`
  2F4:  	Default
  2FC:  EndSwitch
  304:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  31C:  If  *Var0  ==  00000000
  32C:  	Call  ForceHomePos  ( .Actor:Self 0000003D 0000003D 00000000 )
  348:  Else
  350:  	Call  GetActorVar   ( .Actor:Self 00000005 *Var1 )
  368:  	If  *Var1  ==  00000001
  378:  		Call  ForceHomePos  ( .Actor:Self 0000003D 0000003D 00000000 )
  394:  	Else
  39C:  		Call  ForceHomePos  ( .Actor:Self 00000053 00000043 00000000 )
  3B8:  	EndIf
  3C0:  EndIf
  3C8:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
  3DC:  If  *Var0  &  ~Flags:StatusFlags:Stop % 200000
  3EC:  	Call  SetAnimatorFlags  ( 00000000 00040000 00000001 )
  404:  EndIf
  40C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  420:  Call  UseIdleAnimation  ( .Actor:Self .True )
  434:  Return
  43C:  End
}

@ $Script_DoDeath
{
    0:  Call  SetActorVar       ( .Actor:Self 00000001 00000001 )
   18:  ExecWait  $Script_80223764
   24:  Label  0
   30:  Call  GetBattleFlags    ( *Var0 )
   40:  If  *Var0  &  00000100
   50:  	Wait  1`
   5C:  	Goto  0
   68:  EndIf
   70:  Call  GetActorVar   ( .Actor:Self 00000000 *Var2 )
   88:  If  *Var2  ==  00000000
			Set *EnviroEffectsAux 4 %turn on defense decreases :)
   98:  	Call  ClearStatusEffects    ( .Actor:Self )
   A8:  	Call  ClearStatusEffects    ( .Actor:Enemy1 )
   B8:  	Call  ClearStatusEffects    ( .Actor:Enemy2 )
   C8:  	Call  SetAnimatorFlags      ( 00000000 00040000 00000000 )
   E0:  	Call  GetActorVar   ( .Actor:Enemy1 00000000 *Var0 )
   F8:  	Call  SetAnimatorFlags      ( *Var0 00040000 00000000 )
  110:  	Call  GetActorVar   ( .Actor:Enemy2 00000000 *Var0 )
  128:  	Call  SetAnimatorFlags      ( *Var0 00040000 00000000 )
  140:  	Call  CancelEnemyTurn       ( 00000001 )
  150:  	Call  UseBattleCamPreset    ( 00000013 )
  160:  	Call  SetBattleCamTarget    ( 0000005A 0000005A 00000000 )
  178:  	Call  SetBattleCamZoom      ( 00000168 )
  188:  	Call  SetBattleCamOffsetZ   ( 00000000 )
  198:  	Call  MoveBattleCamOver     ( 000000F0 )
  1A8:  	Call  OverrideBattleDmaDest ( $End[9230] )
  1B8:  	Call  LoadBattleDmaData     ( 00000009 )
  1C8:  	Call  PlayModelAnimation    ( 00000000 $End[9230] )
  1DC:  	Call  OverrideBattleDmaDest ( $End[1230] )
  1EC:  	Call  LoadBattleDmaData     ( 00000023 )
  1FC:  	Call  PlayModelAnimation    ( 00000003 $End[1230] )
  210:  	Wait  10`
  21C:  	Call  OverrideBattleDmaDest ( $End[6230] )
  22C:  	Call  LoadBattleDmaData     ( 00000018 )
  23C:  	Call  PlayModelAnimation    ( 00000001 $End[6230] )
  250:  	Wait  5`
  25C:  	Call  OverrideBattleDmaDest ( $End[3230] )
  26C:  	Call  LoadBattleDmaData     ( 00000018 )
  27C:  	Call  PlayModelAnimation    ( 00000002 $End[3230] )
  290:  	Wait  4`
  29C:  	Thread
  2A4:  		Call  PlaySound ( 000003BC )
  2B4:  		Call  ShakeCam  ( .Cam:Battle 00000000 00000077 *Fixed[0.3] )
  2D0:  		Call  PlaySound ( 000007BC )
  2E0:  	EndThread
  2E8:  	Call  $Function_80218000    ( 00000050 000000EA )
  2FC:  	Call  8027D32C  ( FFFFFF81 )
  30C:  	Call  8027D32C  ( 00000201 )
  31C:  	Call  8027D32C  ( 00000202 )
  32C:  	Call  SetAnimation      ( .Actor:Self 00000001 0079000D )
  344:  	Call  OverrideBattleDmaDest ( $End[9230] )
  354:  	Call  LoadBattleDmaData ( 0000000A )
  364:  	Call  PlayModelAnimation    ( 00000000 $End[9230] )
  378:  	Thread
  380:  		Call  PlaySoundAtActor  ( .Actor:Self 000003C6 )
  394:  		Wait  35`
  3A0:  		Set   *Var0  00000000
  3B0:  		Set   *Var1  00000000
  3C0:  		Loop
  3CC:  			Call  GetAnimatedModelRootPosition  ( 00000000 *Var2 *Var3 *Var4 )
  3E8:  			Add   *Var3  *Var1
  3F8:  			Call  SetAnimatedModelRootPosition  ( 00000000 *Var2 *Var3 *Var4 )
  414:  			Call  $Function_80218B38    ( *Var0 *Var1 )
  428:  			Add   *Var0  00000001
  438:  			Wait  1`
  444:  			If  *Var1  ==  00000063
  454:  				BreakLoop
  45C:  			EndIf
  464:  		EndLoop
  46C:  	EndThread
  474:  	Wait  10`
  480:  	Call  SetAnimation  ( .Actor:Enemy1 00000001 007B000D )
  498:  	Call  OverrideBattleDmaDest ( $End[6230] )
  4A8:  	Call  LoadBattleDmaData     ( 00000019 )
  4B8:  	Call  PlayModelAnimation    ( 00000001 $End[6230] )
  4CC:  	Thread
  4D4:  		Wait  45`
  4E0:  		Set   *Var0  00000000
  4F0:  		Set   *Var1  00000000
  500:  		Loop
  50C:  			Call  GetAnimatedModelRootPosition  ( 00000001 *Var2 *Var3 *Var4 )
  528:  			Add   *Var3  *Var1
  538:  			Call  SetAnimatedModelRootPosition  ( 00000001 *Var2 *Var3 *Var4 )
  554:  			Call  $Function_80218B90    ( *Var0 *Var1 )
  568:  			Add   *Var0  00000001
  578:  			Wait  1`
  584:  			If  *Var1  ==  00000063
  594:  				BreakLoop
  59C:  			EndIf
  5A4:  		EndLoop
  5AC:  	EndThread
  5B4:  	Wait  5`
  5C0:  	Call  SetAnimation  ( .Actor:Enemy2 00000001 007B000D )
  5D8:  	Call  OverrideBattleDmaDest ( $End[3230] )
  5E8:  	Call  LoadBattleDmaData     ( 00000019 )
  5F8:  	Call  PlayModelAnimation    ( 00000002 $End[3230] )
  60C:  	Thread
  614:  		Wait  45`
  620:  		Set   *Var0  00000000
  630:  		Set   *Var1  00000000
  640:  		Loop
  64C:  			Call  GetAnimatedModelRootPosition  ( 00000002 *Var2 *Var3 *Var4 )
  668:  			Add   *Var3  *Var1
  678:  			Call  SetAnimatedModelRootPosition  ( 00000002 *Var2 *Var3 *Var4 )
  694:  			Call  $Function_80218B90    ( *Var0 *Var1 )
  6A8:  			Add   *Var0  00000001
  6B8:  			Wait  1`
  6C4:  			If  *Var1  ==  00000063
  6D4:  				BreakLoop
  6DC:  			EndIf
  6E4:  		EndLoop
  6EC:  	EndThread
  6F4:  	Wait  35`
  700:  	Call  UseBattleCamPreset    ( 00000013 )
  710:  	Call  SetBattleCamTarget    ( 0000005A 0000005A 00000000 )
  728:  	Call  SetBattleCamZoom      ( 00000168 )
  738:  	Call  SetBattleCamOffsetZ   ( FFFFFFD3 )
  748:  	Call  MoveBattleCamOver     ( 0000006E )
  758:  	Wait  60`
  764:  	Call  SetAnimatedModelRootPosition  ( 00000000 00000000 FFFFFF06 00000000 )
  780:  	Call  SetAnimatedModelRootPosition  ( 00000001 00000000 FFFFFF06 00000000 )
  79C:  	Call  SetAnimatedModelRootPosition  ( 00000002 00000000 FFFFFF06 00000000 )
  7B8:  	Call  SetActorPos   ( .Actor:Self 00000064 00000000 00000000 )
  7D4:  	Call  DropStarPoints        ( .Actor:Self )
  7E4:  	Call  PlaySoundAtActor      ( .Actor:Self .Sound:Death )
  7F8:  	Call  ForceHomePos  ( .Actor:Self 0000003D 0000003D 00000000 )
  814:  	Wait  65`
  820:  	Call  UseBattleCamPreset    ( 00000013 )
  830:  	Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
  84C:  	Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
  864:  	Call  SetBattleCamZoom      ( 000000F0 )
  874:  	Call  SetBattleCamOffsetZ   ( 00000028 )
  884:  	Call  MoveBattleCamOver     ( 00000014 )
  894:  	Wait  20`
  8A0:  	Thread
  8A8:  		Call  $Function_80218A98 ( )
  8B4:  	EndThread
  8BC:  	Wait  80`
  8C8:  	Thread
  8D0:  		Call  PlaySound ( 000003BC )
  8E0:  		Call  ShakeCam  ( .Cam:Battle 00000000 000000A5 *Fixed[1.2] )
  8FC:  		Call  PlaySound ( 000007BC )
  90C:  	EndThread
  914:  	Call  $Function_80218000    ( 00000050 0000012C )
  928:  	Call  UseIdleAnimation  ( .Actor:Player .False )
  93C:  	Call  SetAnimation      ( .Actor:Player 00000000 0001002A )
  954:  	Wait  20`
  960:  	Call  PlaySoundAtActor  ( .Actor:Player 00000263 )
  974:  	Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
  990:  	Add   *Var1  00000014
  9A0:  	Call  PlayEffect        ( ~FX:EmoteIcon:Question 00000000 *Var0 *Var1 *Var2 00000014 0000013B 0000001E 00000000 00000000 00000000 00000000 00000000 )
  9E4:  	Call  GetActorPos       ( .Actor:Partner *Var0 *Var1 *Var2 )
  A00:  	Add   *Var1  0000000A
  A10:  	Call  PlayEffect        ( ~FX:EmoteIcon:Question 00000000 *Var0 *Var1 *Var2 00000014 0000013B 0000001E 00000000 00000000 00000000 00000000 00000000 )
  A54:  	Wait  50`
  A60:  	Call  UseBattleCamPreset    ( 00000013 )
  A70:  	Call  SetBattleCamTarget    ( 0000005A 0000005A 00000000 )
  A88:  	Call  SetBattleCamZoom  ( 00000168 )
  A98:  	Call  SetBattleCamOffsetZ   ( FFFFFFC4 )
  AA8:  	Call  MoveBattleCamOver ( 0000001E )
  AB8:  	Wait  40`
  AC4:  	Call  UseBattleCamPreset    ( 00000013 )
  AD4:  	Call  SetBattleCamTarget    ( 0000005A 0000005A 00000000 )
  AEC:  	Call  SetBattleCamZoom  ( 000000C8 )
  AFC:  	Call  SetBattleCamOffsetZ   ( FFFFFFC4 )
  B0C:  	Call  MoveBattleCamOver ( 00000028 )
  B1C:  	Wait  40`
  B28:  	Thread
  B30:  		Call  UseIdleAnimation  ( .Actor:Player .False )
  B44:  		Call  SetAnimation      ( .Actor:Player 00000000 0001002B )
  B5C:  		Wait  40`
  B68:  		Call  UseIdleAnimation  ( .Actor:Player .True )
  B7C:  	EndThread
  B84:  	Call  UseBattleCamPreset    ( 00000013 )
  B94:  	Call  SetBattleCamTarget    ( 0000001E 0000005A 00000000 )
  BAC:  	Call  SetBattleCamZoom      ( 000001CC )
  BBC:  	Call  SetBattleCamOffsetZ   ( 00000000 )
  BCC:  	Call  MoveBattleCamOver     ( 0000001E )
  BDC:  	Call  $Function_80218000    ( 000000B4 00000010 )
  BF0:  	Thread
  BF8:  		Call  ShakeCam  ( .Cam:Battle 00000000 00000004 *Fixed[3.0] )
  C14:  		Call  ShakeCam  ( .Cam:Battle 00000000 0000000A *Fixed[1.0] )
  C30:  	EndThread
  C38:  	ChildThread
  C40:  		Wait  50`
  C4C:  		Call  UseBattleCamPreset    ( 00000013 )
  C5C:  		Call  SetBattleCamTarget    ( 0000005A 0000005A 00000000 )
  C74:  		Call  SetBattleCamZoom      ( 00000168 )
  C84:  		Call  SetBattleCamOffsetZ   ( 00000000 )
  C94:  		Call  MoveBattleCamOver     ( 00000028 )
  CA4:  		Wait  85`
  CB0:  	EndChildThread
  CB8:  	Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
  CD0:  	Call  SetActorVar   ( .Actor:Self 00000007 00790004 )
  CE8:  	Call  SetActorVar   ( .Actor:Self 00000008 0079000A )
  D00:  	Call  SetActorVar   ( .Actor:Enemy1 00000007 007B0004 )
  D18:  	Call  SetActorVar   ( .Actor:Enemy1 00000008 007B000B )
  D30:  	Call  SetActorVar   ( .Actor:Enemy2 00000007 007B0004 )
  D48:  	Call  SetActorVar   ( .Actor:Enemy2 00000008 007B000B )
  D60:  	Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802250D4 )
  D78:  	Call  SetIdleAnimations ( .Actor:Enemy1 00000001 $IdleAnimations_802250D4 )
  D90:  	Call  SetIdleAnimations ( .Actor:Enemy2 00000001 $IdleAnimations_802250D4 )
  DA8:  	Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8021D0F0 )
  DC0:  	Call  SetDefenseTable   ( .Actor:Self 00000002 $DefenseTable_8021D0F0 )
  DD8:  	Call  SetDefenseTable   ( .Actor:Enemy1 00000001 $DefenseTable_80225128 )
  DF0:  	Call  SetDefenseTable   ( .Actor:Enemy1 00000002 $DefenseTable_80225128 )
  E08:  	Call  SetDefenseTable   ( .Actor:Enemy2 00000001 $DefenseTable_80225128 )
  E20:  	Call  SetDefenseTable   ( .Actor:Enemy2 00000002 $DefenseTable_80225128 )
  E38:  	Call  8026D5A4      ( FFFFFF81 00000001 00000002 00000001 )
  E54:  	Call  8026D5A4      ( FFFFFF81 00000002 00000002 00000001 )
  E70:  	Call  8026D5A4      ( 00000201 00000001 00000002 00000001 )
  E8C:  	Call  8026D5A4      ( 00000201 00000002 00000002 00000001 )
  EA8:  	Call  8026D5A4      ( 00000202 00000001 00000002 00000001 )
  EC4:  	Call  8026D5A4      ( 00000202 00000002 00000002 00000001 )
  EE0:  	Call  SetPartFlagBits   ( .Actor:Enemy1 00000002 00002000 .False )
  EFC:  	Call  SetPartFlagBits   ( .Actor:Enemy2 00000002 00002000 .False )
  F18:  	Set   *Var0  00000200
  F28:  	ExecWait  $Script_80222EF0
  F34:  	Call  SetAnimation  ( .Actor:Self 00000001 00790004 )
  F4C:  	Set   *Var0  00000201
  F5C:  	ExecWait  $Script_80222EF0
  F68:  	Call  SetAnimation  ( .Actor:Enemy1 00000001 007B0004 )
  F80:  	Set   *Var0  00000202
  F90:  	ExecWait  $Script_80222EF0
  F9C:  	Call  SetAnimation  ( .Actor:Enemy2 00000001 007B0004 )
  FB4:  	Call  SetActorType  ( .Actor:Self 000000B4 )
  FC8:  	Call  SetActorType  ( .Actor:Enemy1 000000B6 )
  FDC:  	Call  SetActorType  ( .Actor:Enemy2 000000B6 )
  FF0:  	Call  SetActorFlagBits  ( .Actor:Self 00001000 .True )
 1008:  	Call  SetActorFlagBits  ( .Actor:Enemy1 00001000 .True )
 1020:  	Call  SetActorFlagBits  ( .Actor:Enemy2 00001000 .True )
 1038:  	Call  GetEnemyMaxHP ( .Actor:Self *Var0 )
 104C:  	Call  SetEnemyHP    ( .Actor:Self *Var0 )
 1060:  	Call  GetEnemyMaxHP ( .Actor:Enemy1 *Var0 )
 1074:  	Call  SetEnemyHP    ( .Actor:Enemy1 *Var0 )
 1088:  	Call  GetEnemyMaxHP ( .Actor:Enemy2 *Var0 )
 109C:  	Call  SetEnemyHP    ( .Actor:Enemy2 *Var0 )
 10B0:  	Call  EnableModel   ( 0000004E .True )
 10C4:  	Call  EnableModel   ( 0000004F .True )
 10D8:  	Call  EnableModel   ( 00000050 .True )
 10EC:  	Call  EnableModel   ( 00000051 .True )
 1100:  	Call  EnableModel   ( 00000052 .True )
 1114:  	Call  EnableModel   ( 00000053 .True )
 1128:  	Call  EnableModel   ( 00000054 .True )
 113C:  	Call  EnableModel   ( 00000055 .True )
 1150:  	Call  EnableModel   ( 00000057 .True )
 1164:  	Call  EnableModel   ( 00000058 .True )
 1178:  	Call  PlaySoundAtActor  ( .Actor:Self 000003C5 )
 118C:  	Call  PlayEffect    ( ~FX:EmitterVolume:Embers 00000064 00000000 00000000 00000046 00000050 *Fixed[2.5] 00000050 00000037 *Fixed[2.0] *Fixed[2.0] 00000000 00000000 )
 11D0:  	Call  LoadAnimatedModel ( 00000004 $AnimatedModelTree_8021A330 )
 11E4:  	Call  PlayModelAnimation    ( 00000004 $ModelAnimation_8021A364 )
 11F8:  	Call  SetAnimatedModelRootPosition  ( 00000004 00000000 00000000 00000000 )
 1214:  	Call  EnableGroup   ( 00000017 .False )
 1228:  	Call  EnableGroup   ( 0000001C .True )
 123C:  	Thread
 1244:  		Wait  45`
 1250:  		Call  DeleteAnimatedModel   ( 00000004 )
 1260:  	EndThread
 1268:  	Call  OverrideBattleDmaDest ( $End[9230] )
 1278:  	Call  LoadBattleDmaData     ( 0000000C )
 1288:  	Call  PlayModelAnimation    ( 00000000 $End[9230] )
 129C:  	Call  SetAnimatedModelRootPosition  ( 00000000 00000000 00000000 00000000 )
 12B8:  	Wait  5`
 12C4:  	Call  SetAnimatedModelRootPosition  ( 00000002 00000032 0000000E 00000014 )
 12E0:  	Call  OverrideBattleDmaDest ( $End[3230] )
 12F0:  	Call  LoadBattleDmaData     ( 0000001C )
 1300:  	Call  PlayModelAnimation    ( 00000002 $End[3230] )
 1314:  	Wait  10`
 1320:  	Call  SetAnimatedModelRootPosition  ( 00000001 00000000 00000000 00000000 )
 133C:  	Call  OverrideBattleDmaDest ( $End[6230] )
 134C:  	Call  LoadBattleDmaData     ( 0000001C )
 135C:  	Call  PlayModelAnimation    ( 00000001 $End[6230] )
 1370:  	Wait  45`
 137C:  	Call  SetAnimatedModelRootPosition  ( 00000003 00000000 00000000 00000000 )
 1398:  	Call  OverrideBattleDmaDest ( $End[1230] )
 13A8:  	Call  LoadBattleDmaData     ( 00000024 )
 13B8:  	Call  PlayModelAnimation    ( 00000003 $End[1230] )
 13CC:  	Call  OverrideBattleDmaDest ( $End[9230] )
 13DC:  	Call  LoadBattleDmaData     ( 00000000 )
 13EC:  	Call  PlayModelAnimation    ( 00000000 $End[9230] )
 1400:  	Call  SetAnimation  ( .Actor:Self 00000001 0079000E )
 1418:  	Wait  5`
 1424:  	Call  OverrideBattleDmaDest ( $End[3230] )
 1434:  	Call  LoadBattleDmaData     ( 0000001F )
 1444:  	Call  PlayModelAnimation    ( 00000002 $End[3230] )
 1458:  	Wait  10`
 1464:  	Call  OverrideBattleDmaDest ( $End[6230] )
 1474:  	Call  LoadBattleDmaData     ( 0000001F )
 1484:  	Call  PlayModelAnimation    ( 00000001 $End[6230] )
 1498:  	Wait  30`
 14A4:  	Call  OverrideBattleDmaDest ( $End[1230] )
 14B4:  	Call  LoadBattleDmaData     ( 00000022 )
 14C4:  	Call  PlayModelAnimation    ( 00000003 $End[1230] )
 14D8:  	Call  GetEnemyMaxHP ( .Actor:Enemy1 *Var0 )
 14EC:  	Call  SetEnemyHP    ( .Actor:Enemy1 *Var0 )
 1500:  	Call  GetEnemyMaxHP ( .Actor:Enemy2 *Var0 )
 1514:  	Call  SetEnemyHP    ( .Actor:Enemy2 *Var0 )
			ExecWait $Script_UpdateDefenseTable
 1528:  	Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
 1540:  	Call  EnableIdleScript      ( .Actor:Self 00000001 )
 1554:  	Call  UseIdleAnimation      ( .Actor:Self .True )
 1568:  Else
 1570:  	Call  8027D32C  ( 00000201 )
 1580:  	Call  8027D32C  ( 00000202 )
 1590:  	Set   *Var0  00000203
 15A0:  	ExecWait  $Script_80222B6C
 15AC:  	Set   *Var0  00000204
 15BC:  	ExecWait  $Script_80222B6C
 15C8:  	Call  OverrideBattleDmaDest ( $End[1230] )
 15D8:  	Call  LoadBattleDmaData     ( 00000023 )
 15E8:  	Call  PlayModelAnimation    ( 00000003 $End[1230] )
 15FC:  	Thread
 1604:  		Call  PlaySound ( 000003BC )
 1614:  		Call  ShakeCam  ( .Cam:Battle 00000000 00000064 *Fixed[0.5] )
 1630:  		Call  ShakeCam  ( .Cam:Battle 00000000 00000008 *Fixed[0.2] )
 164C:  		Call  PlaySound ( 000007BC )
 165C:  	EndThread
 1664:  	Call  $Function_80218000    ( 00000050 000000D8 )
 1678:  	Thread
 1680:  		Call  PlaySoundAtActor  ( .Actor:Self 000003CC )
 1694:  		Call  GetActorVar       ( .Actor:Self 00000005 *Var0 )
 16AC:  		If  *Var0  ==  00000000
 16BC:  			Call  OverrideBattleDmaDest ( $End[9230] )
 16CC:  			Call  LoadBattleDmaData     ( 00000008 )
 16DC:  			Call  PlayModelAnimation    ( 00000000 $End[9230] )
 16F0:  		Else
 16F8:  			Call  OverrideBattleDmaDest ( $End[9230] )
 1708:  			Call  LoadBattleDmaData     ( 00000009 )
 1718:  			Call  PlayModelAnimation    ( 00000000 $End[9230] )
 172C:  		EndIf
 1734:  		Wait  19`
 1740:  		Call  8027D32C  ( FFFFFF81 )
 1750:  		Call  OverrideBattleDmaDest ( $End[9230] )
 1760:  		Call  LoadBattleDmaData     ( 0000000A )
 1770:  		Call  PlayModelAnimation    ( 00000000 $End[9230] )
 1784:  		Call  GetActorVar   ( .Actor:Self 00000005 *Var0 )
 179C:  		If  *Var0  ==  00000001
 17AC:  			Call  PlayEffect    ( ~FX:EmitterVolume:Embers 00000069 0000003C 00000002 00000050 0000003C *Fixed[1.8] 0000005A 00000064 *Fixed[1.5] *Fixed[1.5] 00000000 00000000 )
 17F0:  		EndIf
 17F8:  		Wait  121`
 1804:  		Call  PlaySoundAtActor  ( .Actor:Self 000003CD )
 1818:  		Call  SetAnimation      ( .Actor:Self 00000001 0079000A )
 1830:  		Call  OverrideBattleDmaDest ( $End[9230] )
 1840:  		Call  LoadBattleDmaData ( 0000000B )
 1850:  		Call  PlayModelAnimation    ( 00000000 $End[9230] )
 1864:  		Wait  30`
 1870:  		Call  GetActorVar       ( .Actor:Self 0000000A *Var0 )
 1888:  		Set   *Var1  00000064
 1898:  		Loop  00000032
 18A4:  			Sub   *Var1  00000002
 18B4:  			SetF  *Var2  *Var0
 18C4:  			MulF  *Var2  *Var1
 18D4:  			MulF  *Var2  *Fixed[0.01]
 18E4:  			Call  SetActorVar   ( .Actor:Self 0000000A *Var2 )
 18FC:  			Wait  1`
 1908:  		EndLoop
 1910:  	EndThread
 1918:  	Thread
 1920:  		Wait  12`
 192C:  		Call  GetActorVar   ( .Actor:Enemy1 00000005 *Var0 )
 1944:  		If  *Var0  ==  00000000
 1954:  			Call  OverrideBattleDmaDest ( $End[6230] )
 1964:  			Call  LoadBattleDmaData     ( 00000017 )
 1974:  			Call  PlayModelAnimation    ( 00000001 $End[6230] )
 1988:  		Else
 1990:  			Call  OverrideBattleDmaDest ( $End[6230] )
 19A0:  			Call  LoadBattleDmaData     ( 00000018 )
 19B0:  			Call  PlayModelAnimation    ( 00000001 $End[6230] )
 19C4:  		EndIf
 19CC:  		Wait  19`
 19D8:  		Call  OverrideBattleDmaDest ( $End[6230] )
 19E8:  		Call  LoadBattleDmaData     ( 00000019 )
 19F8:  		Call  PlayModelAnimation    ( 00000001 $End[6230] )
 1A0C:  		Call  GetActorVar   ( .Actor:Enemy1 00000005 *Var0 )
 1A24:  		If  *Var0  ==  00000001
 1A34:  			Call  PlayEffect    ( ~FX:EmitterVolume:Embers 00000043 0000001E 00000002 00000032 00000028 *Fixed[1.3] 0000001E 00000046 *Fixed[1.2] *Fixed[1.2] 00000000 00000000 )
 1A78:  		EndIf
 1A80:  		Wait  96`
 1A8C:  		Call  OverrideBattleDmaDest ( $End[6230] )
 1A9C:  		Call  LoadBattleDmaData     ( 0000001A )
 1AAC:  		Call  PlayModelAnimation    ( 00000001 $End[6230] )
 1AC0:  		Wait  30`
 1ACC:  		Call  GetActorVar   ( .Actor:Enemy1 0000000A *Var0 )
 1AE4:  		Set   *Var1  00000064
 1AF4:  		Loop  00000032
 1B00:  			Sub   *Var1  00000002
 1B10:  			SetF  *Var2  *Var0
 1B20:  			MulF  *Var2  *Var1
 1B30:  			MulF  *Var2  *Fixed[0.01]
 1B40:  			Call  SetActorVar   ( .Actor:Enemy1 0000000A *Var2 )
 1B58:  			Wait  1`
 1B64:  		EndLoop
 1B6C:  	EndThread
 1B74:  	Thread
 1B7C:  		Wait  5`
 1B88:  		Call  GetActorVar   ( .Actor:Enemy2 00000005 *Var0 )
 1BA0:  		If  *Var0  ==  00000000
 1BB0:  			Call  OverrideBattleDmaDest ( $End[3230] )
 1BC0:  			Call  LoadBattleDmaData     ( 00000017 )
 1BD0:  			Call  PlayModelAnimation    ( 00000002 $End[3230] )
 1BE4:  		Else
 1BEC:  			Call  OverrideBattleDmaDest ( $End[3230] )
 1BFC:  			Call  LoadBattleDmaData     ( 00000018 )
 1C0C:  			Call  PlayModelAnimation    ( 00000002 $End[3230] )
 1C20:  		EndIf
 1C28:  		Wait  19`
 1C34:  		Call  OverrideBattleDmaDest ( $End[3230] )
 1C44:  		Call  LoadBattleDmaData     ( 00000019 )
 1C54:  		Call  PlayModelAnimation    ( 00000002 $End[3230] )
 1C68:  		Call  GetActorVar   ( .Actor:Enemy2 00000005 *Var0 )
 1C80:  		If  *Var0  ==  00000001
 1C90:  			Call  PlayEffect    ( ~FX:EmitterVolume:Embers 00000078 00000023 00000005 00000032 00000028 *Fixed[1.3] 0000001E 00000046 *Fixed[1.2] *Fixed[1.2] 00000000 00000000 )
 1CD4:  		EndIf
 1CDC:  		Wait  96`
 1CE8:  		Call  OverrideBattleDmaDest ( $End[3230] )
 1CF8:  		Call  LoadBattleDmaData     ( 0000001A )
 1D08:  		Call  PlayModelAnimation    ( 00000002 $End[3230] )
 1D1C:  		Wait  30`
 1D28:  		Call  GetActorVar   ( .Actor:Enemy2 0000000A *Var0 )
 1D40:  		Set   *Var1  00000064
 1D50:  		Loop  00000032
 1D5C:  			Sub   *Var1  00000002
 1D6C:  			SetF  *Var2  *Var0
 1D7C:  			MulF  *Var2  *Var1
 1D8C:  			MulF  *Var2  *Fixed[0.01]
 1D9C:  			Call  SetActorVar   ( .Actor:Enemy2 0000000A *Var2 )
 1DB4:  			Wait  1`
 1DC0:  		EndLoop
 1DC8:  	EndThread
 1DD0:  	Thread
 1DD8:  		Wait  150`
 1DE4:  		Set   *Var0  0000000E
 1DF4:  		Loop  0000000E
 1E00:  			Sub   *Var0  00000001
 1E10:  			Call  SetAnimatedModelRootPosition  ( 00000002 00000032 *Var0 00000014 )
 1E2C:  			Wait  2`
 1E38:  		EndLoop
 1E40:  	EndThread
 1E48:  	Wait  212`
 1E54:  	Call  PlaySoundAtActor  ( .Actor:Self 000020EA )
 1E68:  	Call  SetAnimation  ( .Actor:Self 00000001 0079000F )
 1E80:  	Call  SetAnimation  ( .Actor:Enemy1 00000001 007B000F )
 1E98:  	Call  SetAnimation  ( .Actor:Enemy2 00000001 007B000F )
 1EB0:  	Call  PlayEffect    ( ~FX:ShockWave:White FFFFFFC4 00000000 00000002 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
 1EF4:  	Thread
 1EFC:  		Call  $Function_80218000    ( 000000B4 00000010 )
 1F10:  		Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[4.0] )
 1F2C:  	EndThread
 1F34:  	Wait  3`
 1F40:  	Call  SetActorPos       ( .Actor:Self FFFFFFC4 00000000 00000000 )
 1F5C:  	Call  DropStarPoints    ( .Actor:Self )
 1F6C:  	Call  PlaySoundAtActor  ( .Actor:Self .Sound:Death )
 1F80:  	Wait  15`
 1F8C:  	Call  GetActorVar       ( .Actor:Self 00000006 *Var0 )
 1FA4:  	If  *Var0  !=  00000000
 1FB4:  		Call  SetActorVar   ( .Actor:Self 00000006 00000000 )
 1FCC:  		Call  RemoveEffect  ( *Var0 )
 1FDC:  	EndIf
 1FE4:  	Call  GetActorVar   ( .Actor:Enemy1 00000006 *Var0 )
 1FFC:  	If  *Var0  !=  00000000
 200C:  		Call  SetActorVar   ( .Actor:Enemy1 00000006 00000000 )
 2024:  		Call  RemoveEffect  ( *Var0 )
 2034:  	EndIf
 203C:  	Call  GetActorVar   ( .Actor:Enemy2 00000006 *Var0 )
 2054:  	If  *Var0  !=  00000000
 2064:  		Call  SetActorVar   ( .Actor:Enemy2 00000006 00000000 )
 207C:  		Call  RemoveEffect  ( *Var0 )
 208C:  	EndIf
 2094:  	Wait  5`
 20A0:  	Call  SetActorFlagBits  ( .Actor:Enemy0 00400000 .True )
 20B8:  	Call  SetPartFlagBits   ( .Actor:Enemy0 00000001 00020000 .True )
 20D4:  	Call  SetPartFlagBits   ( .Actor:Enemy0 00000002 00020000 .True )
 20F0:  	Call  SetActorFlagBits  ( .Actor:Enemy1 00400000 .True )
 2108:  	Call  SetActorFlagBits  ( .Actor:Enemy2 00400000 .True )
 2120:  EndIf
 2128:  Return
 2130:  End
}

@ $Script_TakeTurn_8021FC10
{
    0:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
   14:  If  *Var[0]  &  00400000 
   24:  	Return
   2C:  EndIf
   34:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   4C:  Switch  *Var[0] 
   58:  	Case  ==  00000000 
   64:  		ExecWait $Script_8021FF3C 
   70:  	Default
				Set *EnviroEffectsAux 4 %turn on defense decreases :)
   78:  		Call     GetActorVar 	( .Actor:Self 00000005 *Var[0] )
   90:  		If  *Var[0]  ==  00000001 
   A0:  			ExecWait $Script_802204B0 
   AC:  		Else
   B4:  			Call     GetActorVar 	( .Actor:Self 0000000B *Var[0] )
   CC:  			Sub  *Var[0]  00000002 %faster recovery
   DC:  			Call     SetActorVar 	( .Actor:Self 0000000B *Var[0] )
   F4:  			If  *Var[0]  <=  00000000 
  104:  				Call     EnableIdleScript 	( .Actor:Self 00000000 )
  118:  				Call     UseBattleCamPreset 	( 00000013 )
  128:  				Call     SetBattleCamTarget 	( 00000050 00000046 00000000 )
  140:  				Call     SetBattleCamZoom  	( 0000012C )
  150:  				Call     SetBattleCamOffsetZ 	( 0000001E )
  160:  				Call     MoveBattleCamOver 	( 0000001E )
  170:  				Wait     0000001E 
  17C:  				Loop     0000000A 
  188:  					Call     OverrideBattleDmaDest 	( $End[9230] )
  198:  					Call     LoadBattleDmaData 	( 00000001 )
  1A8:  					Call     PlayModelAnimation 	( 00000000 $End[9230] )
  1BC:  					Wait     00000004 
  1C8:  				EndLoop
  1D0:  				Call     UseBattleCamPreset 	( 00000002 )
  1E0:  				Call     MoveBattleCamOver 	( 0000000F )
  1F0:  				Call     PlaySoundAtActor 	( .Actor:Self 000003BB )
  204:  				Set  *Var[0]  00000200 
  214:  				ExecWait $Script_80222EF0 
  220:  				Call     SetAnimation 	( .Actor:Self 00000001 00790004 )
  238:  				Call     OverrideBattleDmaDest 	( $End[9230] )
  248:  				Call     LoadBattleDmaData 	( 0000000E )
  258:  				Call     PlayModelAnimation 	( 00000000 $End[9230] )
  26C:  				Wait     0000000E 
  278:  				Call     OverrideBattleDmaDest 	( $End[9230] )
  288:  				Call     LoadBattleDmaData 	( 00000000 )
  298:  				Call     PlayModelAnimation 	( 00000000 $End[9230] )
  2AC:  				Call     EnableIdleScript 	( .Actor:Self 00000001 )
  2C0:  			EndIf
					ExecWait $Script_802204B0 %attack after recovering (no more stunlock for you :D )
  2C8:  		EndIf
  2D0:  EndSwitch
  2D8:  Return
  2E0:  End
}

%scrapped: giving petit piranhas more hp
%that would make the fight way harder, assuming you don't stunlock the buds
/%  
@ $PetitPiranha
{
% stats
[Index]        B7b 
[Level]         0`b 
[MaxHP]         3`b %
[Coins]         0`b 
}

@ $Script_Init_80224048
{
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_802246F4 )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_802240A8 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_802240DC )
   %remove redundant code ;)
   %3C:  Call     SetEnemyHP  	( .Actor:Self 00000001 )
   50:  Return
   58:  End
}
%/

@ $Script_TakeTurn_802246F4
{
[75C] Set *Var[8] 0000000C %kill them or else you're gonna have a bad time though
}

@ $LavaBud
{
[MaxHP] 8`b 
}

@ $StatusTable_80225180
{
.Status:Normal      0`
.Status:Default    0`
.Status:Sleep      0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      0`
.Status:Fear    0`
.Status:Static      0`
.Status:Paralyze   0`
.Status:Shrink      0`
.Status:Stop       50`
.Status:DefaultTurnMod   0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod   0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod    -1`
.Status:StopTurnMod      -2`
.Status:End
}

@ $Script_ShootBombs
{
[4E8]  Call     SetActorSpeed 	( *Var[5] *Fixed[18.0] )	% 13.0 -> 18.0
[56C] Call EnemyDamageTarget ( .Actor:Self *Var[9] 00000002 0000FFFF 00000000 00000006 00000020 )
}

%import stuff from MQ

@ $DefenseTable_8021D0C4 % default
{
.Element:Normal 00000004
.Element:Water  00000004
.Element:Ice    00000004
.Element:Fire   00000063
.Element:Blast  00000004
.Element:End
}

#alias $DefenseTable_8021D0F0	$DefenseTable_FieryHigh

@ $DefenseTable_FieryHigh
{
.Element:Normal 00000004
.Element:Water  00000002
.Element:Ice    00000002
.Element:Fire   00000063
.Element:Blast  00000004
.Element:End
}

#new:DefenseTable $DefenseTable_FieryMedium
{
.Element:Normal 00000002
.Element:Water  00000000
.Element:Ice    00000000
.Element:Fire   00000063
.Element:Blast  00000002
.Element:End
}

#new:DefenseTable $DefenseTable_FieryLow
{
.Element:Normal 00000000
.Element:Water  FFFFFFFE
.Element:Ice    FFFFFFFE
.Element:Fire   00000063
.Element:Blast  00000000
.Element:End
}

#alias $DefenseTable_8021D11C	$DefenseTable_High

@ $DefenseTable_High
{
.Element:Normal 00000004
.Element:Water  00000004
.Element:Ice    00000004
.Element:Fire   00000063
.Element:Blast  00000004
.Element:End
}

#new:DefenseTable $DefenseTable_Medium
{
.Element:Normal 00000002
.Element:Water  00000002
.Element:Ice    00000002
.Element:Fire   00000063
.Element:Blast  00000002
.Element:End
}

#new:DefenseTable $DefenseTable_Low
{
.Element:Normal 00000000
.Element:Water  00000000
.Element:Ice    00000000
.Element:Fire   00000063
.Element:Blast  00000000
.Element:End
}

@ $Script_HandleEvent_80225738
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   40:  Call     802CD418 ( *Var[0] 00040000 00000000 )
   58:  Call     GetLastElement ( *Var[E] )
   68:  Call     GetLastEvent 	( .Actor:Self *Var[0] )
   7C:  Switch  *Var[0] 
   88:  	Case  ==  .Event:BeginFirstStrike % 38
   94:  	Case  ==  .Event:HitCombo % 9
   A0:  		ExecWait $Script_802270B4 
   AC:  	Case  ==  .Event:Hit % A
   B8:  		ExecWait $Script_802275E4 
   C4:  	Case  ==  .Event:BurnHit % E
   D0:  		If  *Var[E]  &  00000002 
   E0:  			ExecWait $Script_80225AA8 
   EC:  		Else
   F4:  			ExecWait $Script_802275E4 
  100:  		EndIf
  108:  	Case  ==  .Event:BurnDeath % 24
  114:  		ExecWait $Script_80226B58 
  120:  	Case  ==  .Event:SpinSmashHit % B
  12C:  		ExecWait $Script_802275E4 
  138:  	Case  ==  .Event:SpinSmashDeath % 21
  144:  		ExecWait $Script_80226B58 
  150:  	Case  ==  .Event:ShockHit % 2F
  15C:  		SetConst  *Var[0]  00000001 
  16C:  		Call     GetActorVar 	( .Actor:Self 00000008 *Var[1] )
  184:  		ExecWait DoShockHit 
  190:  	Case  ==  .Event:ShockDeath % 26
  19C:  		ExecWait DoShockHit 
  1A8:  	Case  ==  00000017 % 17
  1B4:  		If  *Var[E]  !&  00000002 
  1C4:  			ExecWait $Script_802270B4 
  1D0:  		EndIf
  1D8:  	Case  ==  .Event:Immune % 19
  1E4:  		If  *Var[E]  !&  00000002 
  1F4:  			ExecWait $Script_802275E4 
  200:  		EndIf
  208:  	Case  ==  .Event:AirLiftFailed % 1F
  214:  	Case  ==  .Event:SpikeTaunt % 1B
  220:  	Case  ==  .Event:Death % 20
  22C:  		ExecWait $Script_80226B58 
  238:  	Case  ==  .Event:EndFirstStrike % 35
  244:  	Case  ==  .Event:RecoverStatus % 31
  250:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  268:  		Call     802CD418 ( *Var[0] 00040000 00000000 )
  280:  	Case  ==  00000030 % 30
  28C:  		SetConst  *Var[0]  00000001 
  29C:  		Call     GetActorVar 	( .Actor:Self 00000008 *Var[1] )
  2B4:  		ExecWait DoNormalHit 
  2C0:  		Wait     000003E8 
  2CC:  	Default
  2D4:  EndSwitch
  2DC:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
  2F0:  If  *Var[0]  &  00200000 
  300:  	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  318:  	Call     802CD418 ( *Var[0] 00040000 00000001 )
  330:  EndIf
		ExecWait $Script_UpdateDefenseTable
  338:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  34C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  360:  Return
  368:  End
}

@ $Script_802275E4
{
    0:  Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
   18:  Call  SetAnimation  ( .Actor:Self 00000001 *Var0 )
   30:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   48:  Call  GetActorVar   ( .Actor:Enemy0 00000000 *Var5 )
   60:  If  *Var5  ==  00000000
   70:  	Call  GetActorVar   ( .Actor:Self 00000005 *Var5 )
   88:  	If  *Var5  ==  00000000
   98:  		Call  GetLastDamage ( .Actor:Self *Var5 )
   AC:  		If  *Var5  <  00000004
   BC:  			If  *Var0  ==  00000001
   CC:  				Call  OverrideBattleDmaDest ( $End[6230] )
   DC:  			Else
   E4:  				Call  OverrideBattleDmaDest ( $End[3230] )
   F4:  			EndIf
   FC:  			Call  LoadBattleDmaData ( 00000016 )
  10C:  		Else
  114:  			If  *Var0  ==  00000001
  124:  				Call  OverrideBattleDmaDest ( $End[6230] )
  134:  			Else
  13C:  				Call  OverrideBattleDmaDest ( $End[3230] )
  14C:  			EndIf
  154:  			Call  LoadBattleDmaData ( 00000015 )
  164:  		EndIf
  16C:  		ExecWait  $Script_802256E0
  178:  		Wait  29`
  184:  	Else
  18C:  		Call  GetLastDamage ( .Actor:Self *Var5 )
  1A0:  		If  *Var5  <  00000004
  1B0:  			If  *Var0  ==  00000001
  1C0:  				Call  OverrideBattleDmaDest ( $End[6230] )
  1D0:  			Else
  1D8:  				Call  OverrideBattleDmaDest ( $End[3230] )
  1E8:  			EndIf
  1F0:  			Call  LoadBattleDmaData ( 00000014 )
  200:  		Else
  208:  			If  *Var0  ==  00000001
  218:  				Call  OverrideBattleDmaDest ( $End[6230] )
  228:  			Else
  230:  				Call  OverrideBattleDmaDest ( $End[3230] )
  240:  			EndIf
  248:  			Call  LoadBattleDmaData ( 00000013 )
  258:  		EndIf
  260:  		ExecWait  $Script_802256E0
  26C:  		Wait  29`
  278:  	EndIf
  280:  Else
			Call     GetActorHP  	( .Actor:Self *VarA )
			Mul *VarA 3`
			Call     GetEnemyMaxHP 	( .Actor:Self *VarB )
			If *VarA > *VarB
				ConstAND *VarE FFFFFFF3		%MQ does ConstAND *VarE FFFFFFF4 , which doesn't seem right here
				%9 = 1001
				%3 = 0011
				%C = 1100
			EndIf
  288:  	If  *VarE  &  0000000C
  298:  		Call  GetActorVar   ( .Actor:Self 00000005 *Var3 )
  2B0:  		If  *Var3  ==  00000002
  2C0:  			Call  GetLastDamage ( .Actor:Self *Var5 )
  2D4:  			If  *Var5  <  00000004
  2E4:  				If  *Var0  ==  00000001
  2F4:  					Call  OverrideBattleDmaDest ( $End[6230] )
  304:  				Else
  30C:  					Call  OverrideBattleDmaDest ( $End[3230] )
  31C:  				EndIf
  324:  				Call  LoadBattleDmaData ( 00000014 )
  334:  			Else
  33C:  				If  *Var0  ==  00000001
  34C:  					Call  OverrideBattleDmaDest ( $End[6230] )
  35C:  				Else
  364:  					Call  OverrideBattleDmaDest ( $End[3230] )
  374:  				EndIf
  37C:  				Call  LoadBattleDmaData ( 00000013 )
  38C:  			EndIf
  394:  			ExecWait  $Script_802256E0
  3A0:  			Wait  29`
  3AC:  		Else
  3B4:  			If  *Var0  ==  00000001
  3C4:  				Call  OverrideBattleDmaDest ( $End[6230] )
  3D4:  			Else
  3DC:  				Call  OverrideBattleDmaDest ( $End[3230] )
  3EC:  			EndIf
  3F4:  			Call  LoadBattleDmaData ( 00000015 )
  404:  			ExecWait  $Script_802256E0
  410:  			Call  SetActorVar       ( .Actor:Self 0000000B 00000002 )
  428:  			Call  GetActorVar       ( .Actor:Self 00000006 *Var0 )
  440:  			If  *Var0  !=  00000000
  450:  				Call  RemoveEffect  ( *Var0 )
  460:  				Call  SetActorVar   ( .Actor:Self 00000006 00000000 )
  478:  				Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  494:  				Call  PlayEffect    ( ~FX:ColdBreath:PuffUp *Var0 *Var1 *Var2 *Fixed[2.0] 0000002D 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  4D8:  			EndIf
  4E0:  			Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802250E8 )
  4F8:  			Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_80225154 )
  510:  			Call  SetDefenseTable   ( .Actor:Self 00000002 $DefenseTable_80225154 )
					ExecWait $Script_UpdateDefenseTable
  528:  			Call  SetActorVar       ( .Actor:Self 00000007 007B000F )
  540:  			Call  SetActorVar       ( .Actor:Self 00000008 007B0009 )
  558:  			Call  SetAnimation      ( .Actor:Self 00000001 007B000F )
  570:  			Call  SetPartEventBits  ( .Actor:Self 00000001 00000002 .False )
  58C:  			Call  SetPartEventBits  ( .Actor:Self 00000002 00000002 .False )
  5A8:  			Wait  29`
  5B4:  			Call  PlaySoundAtActor  ( .Actor:Self 000003C7 )
  5C8:  			Call  GetActorVar       ( .Actor:Self 00000000 *Var0 )
  5E0:  			If  *Var0  ==  00000001
  5F0:  				Call  OverrideBattleDmaDest ( $End[6230] )
  600:  			Else
  608:  				Call  OverrideBattleDmaDest ( $End[3230] )
  618:  			EndIf
  620:  			Call  LoadBattleDmaData ( 0000001B )
  630:  			ExecWait  $Script_802256E0
  63C:  			Wait  14`
  648:  			Call  SetActorVar       ( .Actor:Self 00000005 00000002 )
  660:  		EndIf
  668:  	Else
  670:  		Call  GetActorVar   ( .Actor:Self 00000005 *Var3 )
  688:  		If  *Var3  ==  00000002
  698:  			Call  GetLastDamage ( .Actor:Self *Var5 )
  6AC:  			If  *Var5  ==  00000000
  6BC:  				Return
  6C4:  			EndIf
  6CC:  			Call  GetLastDamage ( .Actor:Self *Var5 )
  6E0:  			If  *Var5  <  00000004
  6F0:  				If  *Var0  ==  00000001
  700:  					Call  OverrideBattleDmaDest ( $End[6230] )
  710:  				Else
  718:  					Call  OverrideBattleDmaDest ( $End[3230] )
  728:  				EndIf
  730:  				Call  LoadBattleDmaData ( 00000014 )
  740:  			Else
  748:  				If  *Var0  ==  00000001
  758:  					Call  OverrideBattleDmaDest ( $End[6230] )
  768:  				Else
  770:  					Call  OverrideBattleDmaDest ( $End[3230] )
  780:  				EndIf
  788:  				Call  LoadBattleDmaData ( 00000013 )
  798:  			EndIf
  7A0:  			ExecWait  $Script_802256E0
  7AC:  			Wait  29`
  7B8:  		Else
  7C0:  			Call  GetLastDamage ( .Actor:Self *Var5 )
  7D4:  			If  *Var5  <  00000004
  7E4:  				If  *Var0  ==  00000001
  7F4:  					Call  OverrideBattleDmaDest ( $End[6230] )
  804:  				Else
  80C:  					Call  OverrideBattleDmaDest ( $End[3230] )
  81C:  				EndIf
  824:  				Call  LoadBattleDmaData ( 00000016 )
  834:  			Else
  83C:  				If  *Var0  ==  00000001
  84C:  					Call  OverrideBattleDmaDest ( $End[6230] )
  85C:  				Else
  864:  					Call  OverrideBattleDmaDest ( $End[3230] )
  874:  				EndIf
  87C:  				Call  LoadBattleDmaData ( 00000015 )
  88C:  			EndIf
  894:  			ExecWait  $Script_802256E0
  8A0:  			Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var3 )
  8BC:  			Sub   *Var2  00000019
  8CC:  			Add   *Var3  00000002
  8DC:  			Call  PlayEffect    ( ~FX:EmitterVolume:Embers *Var1 *Var2 *Var3 00000028 00000032 *Fixed[1.2] 00000018 0000002A *Fixed[0.8] *Fixed[0.6] 00000000 00000000 )
  920:  			Wait  29`
  92C:  		EndIf
  934:  	EndIf
  93C:  EndIf
  944:  Call  GetActorVar   ( .Actor:Enemy0 00000001 *VarF )
  95C:  If  *VarF  ==  00000000
  96C:  	ExecWait  $Script_8022630C
  978:  EndIf
  980:  Return
  988:  End
}

@ $Script_80222EF0
{
    0:  Switch  *Var[0] 
    C:  	Case  ==  00000201 
   18:  		Call     SetActorVar 	( .Actor:Enemy1 0000000A 00000023 )
   30:  		Call     802CD7D8 ( 00000001 00000008 *Var[1] *Var[2] *Var[3] )
   50:  		Call     802CD8F8 ( 00000001 00000008 *Var[4] *Var[5] *Var[6] )
   70:  		Set  *Var[7]  0000000A 
   80:  		Set  *Var[8]  FFFFFFF1 
   90:  		Call     $Function_80218BE8 ( *Var[1] *Var[2] *Var[6] *Var[7] *Var[8] *Var[3] *Var[4] )
   B8:  		Call     GetPartOffset 	( .Actor:Enemy1 00000001 *Var[0] *Var[1] *Var[2] )
   D8:  		Sub  *Var[2]  00000003 
   E8:  		Call     PlayEffect  	( ~FX:Fire:LargeRed *Var[3] *Var[4] *Var[2] *Fixed[0.30078125] *Var[A] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  12C:  		Call     SetActorVar 	( .Actor:Enemy1 00000006 *Var[A] )
  144:  		Call     SetIdleAnimations 	( .Actor:Enemy1 00000001 $IdleAnimations_802250D4 )
  15C:  		Call     SetDefenseTable 	( .Actor:Enemy1 00000001 $DefenseTable_80225128 )
  174:  		Call     SetDefenseTable 	( .Actor:Enemy1 00000002 $DefenseTable_80225128 )
  18C:  		Call     SetPartEventBits 	( .Actor:Enemy1 00000001 00000002 .True )
  1A8:  		Call     SetPartEventBits 	( .Actor:Enemy1 00000002 00000002 .True )
  1C4:  		Call     SetActorVar 	( .Actor:Enemy1 00000007 007B0104 )
  1DC:  		Call     SetActorVar 	( .Actor:Enemy1 00000008 007B010B )
  1F4:  		Call     SetActorVar 	( .Actor:Enemy1 00000005 00000001 )
  20C:  		Call     SetPartFlagBits 	( .Actor:Enemy1 00000002 00020000 .False )
  228:  		Call     SetActorFlagBits 	( .Actor:Enemy1 00040000 .False )
  240:  	Case  ==  00000202 
  24C:  		Call     SetActorVar 	( .Actor:Enemy2 0000000A 00000023 )
  264:  		Call     802CD7D8 ( 00000002 00000008 *Var[1] *Var[2] *Var[3] )
  284:  		Call     802CD8F8 ( 00000002 00000008 *Var[4] *Var[5] *Var[6] )
  2A4:  		Set  *Var[7]  0000000A 
  2B4:  		Set  *Var[8]  FFFFFFF1 
  2C4:  		Call     $Function_80218BE8 ( *Var[1] *Var[2] *Var[6] *Var[7] *Var[8] *Var[3] *Var[4] )
  2EC:  		Call     GetPartOffset 	( .Actor:Enemy2 00000001 *Var[0] *Var[1] *Var[2] )
  30C:  		Sub  *Var[2]  00000003 
  31C:  		Call     PlayEffect  	( ~FX:Fire:LargeRed *Var[3] *Var[4] *Var[2] *Fixed[0.30078125] *Var[A] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  360:  		Call     SetActorVar 	( .Actor:Enemy2 00000006 *Var[A] )
  378:  		Call     SetIdleAnimations 	( .Actor:Enemy2 00000001 $IdleAnimations_802250D4 )
  390:  		Call     SetDefenseTable 	( .Actor:Enemy2 00000001 $DefenseTable_80225128 )
  3A8:  		Call     SetDefenseTable 	( .Actor:Enemy2 00000002 $DefenseTable_80225128 )
  3C0:  		Call     SetPartEventBits 	( .Actor:Enemy2 00000001 00000002 .True )
  3DC:  		Call     SetPartEventBits 	( .Actor:Enemy2 00000002 00000002 .True )
  3F8:  		Call     SetActorVar 	( .Actor:Enemy2 00000007 007B0104 )
  410:  		Call     SetActorVar 	( .Actor:Enemy2 00000008 007B010B )
  428:  		Call     SetActorVar 	( .Actor:Enemy2 00000005 00000001 )
  440:  		Call     SetPartFlagBits 	( .Actor:Enemy2 00000002 00020000 .False )
  45C:  		Call     SetActorFlagBits 	( .Actor:Enemy2 00040000 .False )
  474:  	Default
  47C:  		Call     SetActorVar 	( .Actor:Enemy0 0000000A 00000046 )
  494:  		Call     802CD7D8 ( 00000000 0000000A *Var[1] *Var[2] *Var[3] )
  4B4:  		Call     802CD8F8 ( 00000000 0000000A *Var[4] *Var[5] *Var[6] )
  4D4:  		Set  *Var[7]  0000001E 
  4E4:  		Set  *Var[8]  FFFFFFE2 
  4F4:  		Call     $Function_80218BE8 ( *Var[1] *Var[2] *Var[6] *Var[7] *Var[8] *Var[3] *Var[4] )
  51C:  		Call     GetPartOffset 	( .Actor:Enemy0 00000001 *Var[0] *Var[1] *Var[2] )
  53C:  		Sub  *Var[2]  00000003 
  54C:  		Call     PlayEffect  	( ~FX:Fire:LargeRed *Var[3] *Var[4] *Var[2] *Fixed[0.7001953] *Var[A] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  590:  		Call     SetActorVar 	( .Actor:Enemy0 00000006 *Var[A] )
  5A8:  		Call     SetIdleAnimations 	( .Actor:Enemy0 00000001 $IdleAnimations_8021D064 )
  5C0:  		Call     SetDefenseTable 	( .Actor:Enemy0 00000001 $DefenseTable_8021D0F0 )
  5D8:  		Call     SetDefenseTable 	( .Actor:Enemy0 00000002 $DefenseTable_8021D0F0 )
  5F0:  		Call     SetPartEventBits 	( .Actor:Enemy0 00000001 00000002 .True )
  60C:  		Call     SetPartEventBits 	( .Actor:Enemy0 00000002 00000002 .True )
  628:  		Call     SetActorVar 	( .Actor:Enemy0 00000007 00790104 )
  640:  		Call     SetActorVar 	( .Actor:Enemy0 00000008 0079010A )
  658:  		Call     SetActorVar 	( .Actor:Enemy0 00000005 00000001 )
  670:  		Call     ForceHomePos 	( .Actor:Self 0000003D 0000003D 00000000 )
  68C:  		Call     SetActorFlagBits 	( .Actor:Self 00040000 .False )
  6A4:  EndSwitch
		ExecWait $Script_UpdateDefenseTable
  6AC:  Return
  6B4:  End
}

@ $Script_TakeTurn_80225D98
{
    0:  Call  GetActorFlags ( .Actor:Self *Var0 )
   14:  If  *Var0  &  00400000
   24:  	Return
   2C:  EndIf
   34:  Call  GetActorVar   ( .Actor:Enemy0 00000000 *Var0 )
   4C:  If  *Var0  ==  00000000
   5C:  	Call  GetActorVar   ( .Actor:Self 00000005 *Var0 )
   74:  	If  *Var0  ==  00000002
   84:  		Return
   8C:  	EndIf
			Set *Var3 2
			ExecWait $Script_HealLava
   94:  	ExecWait  $Script_ShootBombs
   A0:  Else
   A8:  	Call  GetActorVar   ( .Actor:Self 00000004 *Var1 )
   C0:  	If  *Var1  !=  00000000
   D0:  		Sub   *Var1  00000001
   E0:  		Call  SetActorVar   ( .Actor:Self 00000004 *Var1 )
   F8:  		Return
  100:  	EndIf
  108:  	Call  GetActorVar   ( .Actor:Self 00000005 *Var0 )
  120:  	If  *Var0  ==  00000001
  130:  		If  *Var1  !=  00000000
  140:  			Return
  148:  		EndIf
				Set *Var3 2
				ExecWait $Script_HealLava
  150:  		Call  SetActorVar   ( .Actor:Self 00000004 00000001 )
  168:  		ExecWait  $Script_8022646C
  174:  	Else
  17C:  		Call  GetActorVar   ( .Actor:Self 0000000B *Var0 )
  194:  		Sub   *Var0  00000001
  1A4:  		Call  SetActorVar   ( .Actor:Self 0000000B *Var0 )
  1BC:  		If  *Var0  <=  00000000
  1CC:  			Call  EnableIdleScript  ( .Actor:Self 00000000 )
  1E0:  			Call  GetActorVar       ( .Actor:Self 00000000 *Var0 )
  1F8:  			If  *Var0  ==  00000001
  208:  				Call  UseBattleCamPreset    ( 00000013 )
  218:  				Call  SetBattleCamTarget    ( 00000028 0000001E 00000000 )
  230:  				Call  SetBattleCamZoom      ( 0000010E )
  240:  				Call  SetBattleCamOffsetZ   ( 00000014 )
  250:  				Call  MoveBattleCamOver     ( 0000001E )
  260:  			Else
  268:  				Call  UseBattleCamPreset    ( 00000013 )
  278:  				Call  SetBattleCamTarget    ( 0000006E 00000023 00000000 )
  290:  				Call  SetBattleCamZoom      ( 0000012C )
  2A0:  				Call  SetBattleCamOffsetZ   ( 00000014 )
  2B0:  				Call  MoveBattleCamOver     ( 0000001E )
  2C0:  			EndIf
  2C8:  			Wait  30`
  2D4:  			Loop  0000000A
  2E0:  				If  *Var0  ==  00000001
  2F0:  					Call  OverrideBattleDmaDest ( $End[6230] )
  300:  				Else
  308:  					Call  OverrideBattleDmaDest ( $End[3230] )
  318:  				EndIf
  320:  				Call  LoadBattleDmaData ( 0000001E )
  330:  				ExecWait  $Script_802256E0
  33C:  				Wait  4`
  348:  			EndLoop
  350:  			Call  UseBattleCamPreset    ( 00000002 )
  360:  			Call  MoveBattleCamOver     ( 0000000F )
  370:  			Call  GetEnemyMaxHP ( .Actor:Self *Var0 )
  384:  			Call  SetEnemyHP    ( .Actor:Self *Var0 )
  398:  			Call  SetAnimation  ( .Actor:Self 00000001 007B0004 )
  3B0:  			Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  3C8:  			If  *Var0  ==  00000001
  3D8:  				Set   *Var0  00000201
  3E8:  			Else
  3F0:  				Set   *Var0  00000202
  400:  			EndIf
  408:  			Call  PlaySoundAtActor  ( *Var0 000020BF )
  41C:  			ExecWait  $Script_80222EF0
  428:  			Call  GetActorVar       ( .Actor:Self 00000000 *Var0 )
  440:  			If  *Var0  ==  00000001
  450:  				Call  OverrideBattleDmaDest ( $End[6230] )
  460:  			Else
  468:  				Call  OverrideBattleDmaDest ( $End[3230] )
  478:  			EndIf
  480:  			Call  LoadBattleDmaData ( 0000001D )
  490:  			ExecWait  $Script_802256E0
  49C:  			Wait  14`
  4A8:  			If  *Var0  ==  00000001
  4B8:  				Call  OverrideBattleDmaDest ( $End[6230] )
  4C8:  			Else
  4D0:  				Call  OverrideBattleDmaDest ( $End[3230] )
  4E0:  			EndIf
  4E8:  			Call  LoadBattleDmaData ( 0000001F )
  4F8:  			ExecWait  $Script_802256E0
  504:  			Call  GetEnemyMaxHP     ( .Actor:Self *Var0 )
  518:  			Call  SetEnemyHP        ( .Actor:Self *Var0 )
  52C:  			Call  EnableIdleScript  ( .Actor:Self 00000001 )
  540:  		EndIf
  548:  	EndIf
  550:  EndIf
  558:  ExecWait  $Script_8022630C
  564:  Return
  56C:  End
}

#new:Script	$Script_UpdateDefenseTable
{
	Call	GetActorVar ( .Actor:Enemy0 00000000 *Var[0] )
	If *Var[0] == 0
		% Check Lava Buds
		Set  *Var[1]	0	% count number alive
		Call	GetActorHP 	( .Actor:Enemy1 *Var[0] )
		If	*Var[0] > 0
			Add  *Var[1]	1
		EndIf
		Call	GetActorHP 	( .Actor:Enemy2 *Var[0] )
		If	*Var[0] > 0
			Add  *Var[1]	1
		EndIf
		% Set Lava Piranha's defense tables
		Switch	*Var[1]
			Case  ==  2
				Call     SetDefenseTable 	( .Actor:Enemy0 00000001 $DefenseTable_High )
				Call     SetDefenseTable 	( .Actor:Enemy0 00000002 $DefenseTable_High )
			Case  ==  1
				Call     SetDefenseTable 	( .Actor:Enemy0 00000001 $DefenseTable_Medium )
				Call     SetDefenseTable 	( .Actor:Enemy0 00000002 $DefenseTable_Medium )
			Case  ==  0
				Call     SetDefenseTable 	( .Actor:Enemy0 00000001 $DefenseTable_Low )
				Call     SetDefenseTable 	( .Actor:Enemy0 00000002 $DefenseTable_Low )
			Default
		EndSwitch
	Else
		% Check Lava Buds
		Set  *Var[1]	0	% count number stunned
		Call	GetActorVar 	( .Actor:Enemy1 0000000B *Var[0] )
		If	*Var[0] > 0
			Add  *Var[1]	1
		Else
			Call	GetActorHP 	( .Actor:Enemy1 *Var[0] )
			If	*Var[0] <= 0
				Add  *Var[1]	1
			EndIf
		EndIf
		Call	GetActorVar 	( .Actor:Enemy2 0000000B *Var[0] )
		If	*Var[0] > 0
			Add  *Var[1]	1
		Else
			Call	GetActorHP 	( .Actor:Enemy2 *Var[0] )
			If	*Var[0] <= 0
				Add  *Var[1]	1
			EndIf
		EndIf
		% Set Lava Piranha's defense tables
		Call	GetActorVar ( .Actor:Enemy0 0000000B *Var[0] )	%obtain main stun state
		If *Var0 > 0
			% Set Lava Piranha's defense tables
			Switch	*Var[1]
				Case  ==  0
					Call     SetDefenseTable 	( .Actor:Enemy0 00000001 $DefenseTable_High )
					Call     SetDefenseTable 	( .Actor:Enemy0 00000002 $DefenseTable_High )
				Case  ==  1
					Call     SetDefenseTable 	( .Actor:Enemy0 00000001 $DefenseTable_Medium )
					Call     SetDefenseTable 	( .Actor:Enemy0 00000002 $DefenseTable_Medium )
				Case  ==  2
					Call     SetDefenseTable 	( .Actor:Enemy0 00000001 $DefenseTable_Low )
					Call     SetDefenseTable 	( .Actor:Enemy0 00000002 $DefenseTable_Low )
				Default
			EndSwitch
		Else
			% Set Lava Piranha's defense tables
			Switch	*Var[1]
				Case  ==  0
					Call     SetDefenseTable 	( .Actor:Enemy0 00000001 $DefenseTable_FieryHigh )
					Call     SetDefenseTable 	( .Actor:Enemy0 00000002 $DefenseTable_FieryHigh )
				Case  ==  1
					Call     SetDefenseTable 	( .Actor:Enemy0 00000001 $DefenseTable_FieryMedium )
					Call     SetDefenseTable 	( .Actor:Enemy0 00000002 $DefenseTable_FieryMedium )
				Case  ==  2
					Call     SetDefenseTable 	( .Actor:Enemy0 00000001 $DefenseTable_FieryLow )
					Call     SetDefenseTable 	( .Actor:Enemy0 00000002 $DefenseTable_FieryLow )
				Default
			EndSwitch
		EndIf
	EndIf
	Return
	End
}