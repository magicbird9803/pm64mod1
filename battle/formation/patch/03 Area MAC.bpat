%miraculously, i have enough space to change all of lee's forms
%and even make the master OP

%To do: fix kooper sprite event flags (Make sure 1 flag is not set? (Apparently that flag is used for stuff???))
%To do: Revisit these when you are strong enough to beat them
%Add more block or suck attacks

@ $DefenseTable_80219D50
{
.Element:Normal 00000003 %defense boost
.Element:Fire   00000063
.Element:Blast  00000063
.Element:End
}

@ $StatusTable_80219D78 %general status nerfs
{
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      30`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      20`
.Status:Fear        0`
.Status:Static     30`
.Status:Paralyze   40` 
.Status:Shrink     40`
.Status:Stop      100` %stop is rare early game, so it's unchanged
.Status:DefaultTurnMod    0` %all of these used to be 0
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -2`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod     1`
.Status:StopTurnMod       0`
.Status:End
}

@ $Chan 
{
[MaxHP]        25`b %hp boost
}

@ $Script_NextTurn_8021CD7C
{
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self .False )
	Call     GetBattlePhase ( *Var[0] )
	Switch   *Var[0] 
		Case     ==  .Phase:PlayerBegin
			Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
			If       *Var[0] ==  00000000 
				Call	UseBattleCamPreset 	( 00000002 )
				Call	MoveBattleCamOver 	( 0000000A )
				Call	ActorSpeak  	( 0002001F .Actor:Self 00000001 00A30004 00A30003 ) % Mario! Here comes Chan the man!
				Call	SetActorVar 	( .Actor:Self 00000000 00000001 )
			EndIf
		Case     ==  .Phase:EnemyBegin
			Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
			If       *Var[0] ==  00000002 
				BreakCase
			EndIf
			Call     GetStatusFlags ( .Actor:Self *Var[0] )
			If       *Var[0]  &  0037100A 
				BreakCase
			EndIf
			SetConst *Var[A] 00A30004 
			SetConst *Var[B] 00A30003 
			Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
			If       *Var[0] ==  00000002 
				SetConst *Var[A] 00A30007 
				SetConst *Var[B] 00A30002 
			EndIf
			Call     GetActorHP  	( .Actor:Self *Var[0] )
			Call     GetEnemyMaxHP 	( .Actor:Self *Var[1] )
			Div      *Var[1] 00000002 
			If       *Var[0] <=  *Var[1] 
				Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
				If       *Var[0] ==  00000000 
					Call     UseBattleCamPreset 	( 00000002 )
					Call     MoveBattleCamOver 	( 0000000A )
					Call     ActorSpeak  	( 00020021 .Actor:Self 00000001 *Var[A] *Var[B] ) % Hmmm... You have some skills.
					Call     SetActorVar 	( .Actor:Self 00000002 00000001 )
					BreakCase
				EndIf
			EndIf
			Call     GetPlayerHP 	( *Var[0] )
			Call	 $Function_HasGreedStone ( *Var[1] )
			If *Var[1] == 0 %if max hp = 5, don't spam the text
				If       *Var[0] <=  00000005 
					Call     UseBattleCamPreset 	( 00000002 )
					Call     MoveBattleCamOver 	( 0000000A )
					Call     ActorSpeak  	( 00020022 .Actor:Self 00000001 *Var[A] *Var[B] ) % Mario, prepare to be finished!
					BreakCase
				EndIf
			EndIf
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self .True )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
End
}

@ $Script_HandleEvent_8021AAB8
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetLastEvent 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	CaseOR  ==  .Event:HitCombo
   54:  	CaseOR  ==  .Event:Hit
   60:  		SetConst  *Var[0]  00000001 
   70:  		SetConst  *Var[1]  00A30006 
   80:  		SetConst  *Var[2]  00A30007 
   90:  		ExecWait $Script_8021AA1C 
   9C:  		ExecWait DoNormalHit 
   A8:  	EndCaseGroup
   B0:  	Case  ==  .Event:BurnHit
   BC:  		Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
   D4:  		If  *Var[0]  !=  00000002 
   E4:  			SetConst  *Var[0]  00000001 
   F4:  			SetConst  *Var[1]  00A30006 
  104:  			SetConst  *Var[2]  00A30006 
  114:  			ExecWait DoBurnHit 
  120:  		Else
  128:  			SetConst  *Var[0]  00000001 
  138:  			SetConst  *Var[1]  00A30014 
  148:  			SetConst  *Var[2]  00A30015 
  158:  			ExecWait DoBurnHit 
  164:  		EndIf
  16C:  	Case  ==  .Event:BurnDeath
  178:  		Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
  190:  		If  *Var[0]  !=  00000002 
  1A0:  			SetConst  *Var[0]  00000001 
  1B0:  			SetConst  *Var[1]  00A30006 
  1C0:  			SetConst  *Var[2]  00A30006 
  1D0:  			ExecWait DoBurnHit 
  1DC:  			SetConst  *Var[0]  00000001 
  1EC:  			SetConst  *Var[1]  00A30006 
  1FC:  			ExecWait DoDeath 
  208:  		Else
  210:  			SetConst  *Var[0]  00000001 
  220:  			SetConst  *Var[1]  00A30014 
  230:  			SetConst  *Var[2]  00A30015 
  240:  			ExecWait DoBurnHit 
  24C:  			SetConst  *Var[0]  00000001 
  25C:  			SetConst  *Var[1]  00A30015 
  26C:  			ExecWait DoDeath 
  278:  		EndIf
  280:  		Return
  288:  	Case  ==  .Event:SpinSmashHit
  294:  		SetConst  *Var[0]  00000001 
  2A4:  		SetConst  *Var[1]  00A30006 
  2B4:  		SetConst  *Var[2]  00A30007 
  2C4:  		ExecWait $Script_8021AA1C 
  2D0:  		ExecWait 8029B998 
  2DC:  	Case  ==  .Event:FlipTrigger
				%same flip resistance as regular buzzy beetle
				Call	 GetLastDamage ( .Actor:Self *Var[0] )
				If ( *Var[0] > 0 )
  2E8:  			Call     SetActorVar 	( .Actor:Self 00000008 00000002 )
  300:  			Call     SetTargetOffset 	( .Actor:Self 00000001 00000000 00000010 )
  31C:  			Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFF FFFFFFF7 )
  338:  			Call     SetActorVar 	( .Actor:Self 00000009 00000001 )
  350:  			Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_80219D6C )
  368:  			Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80219F08 )
  380:  			Call     SetActorFlagBits 	( .Actor:Self 00000400 .True )
  398:  			Call     SetAnimation 	( .Actor:Self 00000001 00A30006 )
  3B0:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000C 00000000 )
  3CC:  			Thread
  3D4:  				Wait     00000001 
  3E0:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  3FC:  				Wait     00000001 
  408:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 FFFFFFD3 )
  424:  				Wait     00000001 
  430:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 FFFFFFA6 )
  44C:  				Wait     00000001 
  458:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 FFFFFF79 )
  474:  				Wait     00000001 
  480:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 FFFFFF4C )
  49C:  				Wait     00000001 
  4A8:  			EndThread
  4B0:  			UseIntBuffer $IntTable_8021AA6C 
  4BC:  			Loop     00000013 
  4C8:  				Get1Int  *Var[0] 
  4D4:  				Call     SetActorDispOffset ( FFFFFF81 00000000 *Var[0] 00000000 )
  4F0:  				Wait     00000001 
  4FC:  			EndLoop
  504:  			Call     SetActorDispOffset ( FFFFFF81 00000000 00000000 00000000 )
  520:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  53C:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  558:  			Call     SetAnimation 	( .Actor:Self 00000001 00A30007 )
				EndIf
  570:  	Case  ==  .Event:ShockHit
  57C:  		SetConst  *Var[0]  00000001 
  58C:  		SetConst  *Var[1]  00A30006 
  59C:  		ExecWait DoShockHit 
  5A8:  		SetConst  *Var[0]  00000001 
  5B8:  		SetConst  *Var[1]  00A30006 
  5C8:  		ExecWait DoJumpBack 
  5D4:  		SetConst  *Var[0]  00000001 
  5E4:  		SetConst  *Var[1]  00A30004 
  5F4:  		ExecWait DoReturnHome 
  600:  	Case  ==  .Event:ShockDeath
  60C:  		SetConst  *Var[0]  00000001 
  61C:  		SetConst  *Var[1]  00A30006 
  62C:  		ExecWait DoShockHit 
  638:  		SetConst  *Var[0]  00000001 
  648:  		SetConst  *Var[1]  00A30006 
  658:  		ExecWait DoDeath 
  664:  		Return
  66C:  	Case  ==  00000017
  678:  		Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
  690:  		If  *Var[0]  ==  00000001 
  6A0:  			SetConst  *Var[0]  00000001 
  6B0:  			SetConst  *Var[1]  00A3000C 
  6C0:  			ExecWait DoImmune 
  6CC:  			Call     SetAnimation 	( .Actor:Self 00000001 00A3000D )
  6E4:  			Wait     00000008 
  6F0:  		Else
  6F8:  			SetConst  *Var[0]  00000001 
  708:  			SetConst  *Var[1]  00A30002 
  718:  			ExecWait DoImmune 
  724:  		EndIf
  72C:  	Case  ==  .Event:Immune
  738:  		Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
  750:  		If  *Var[0]  ==  00000001 
  760:  			SetConst  *Var[0]  00000001 
  770:  			SetConst  *Var[1]  00A3000C 
  780:  			ExecWait DoImmune 
  78C:  			Call     SetAnimation 	( .Actor:Self 00000001 00A3000D )
  7A4:  			Wait     00000008 
  7B0:  		Else
  7B8:  			SetConst  *Var[0]  00000001 
  7C8:  			SetConst  *Var[1]  00A30002 
  7D8:  			ExecWait DoImmune 
  7E4:  		EndIf
  7EC:  	Case  ==  .Event:SpikeTaunt
  7F8:  		Wait     0000000A 
  804:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  820:  		Call     GetStatusFlags ( .Actor:Self *Var[3] )
  834:  		If  *Var[3]  &  00080000 
  844:  			Add  *Var[1]  00000009 
  854:  		Else
  85C:  			Add  *Var[1]  00000018 
  86C:  		EndIf
  874:  		Call     PlayEffect  	( ~FX:LensFlare:Rotating *Var[0] *Var[1] *Var[2] 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  8B8:  		Wait     00000014 
  8C4:  	Case  ==  .Event:Death
  8D0:  		SetConst  *Var[0]  00000001 
  8E0:  		SetConst  *Var[1]  00A30006 
  8F0:  		SetConst  *Var[2]  00A30007 
  900:  		ExecWait $Script_8021AA1C 
  90C:  		ExecWait DoNormalHit 
  918:  		Wait     0000000A 
  924:  		SetConst  *Var[0]  00000001 
  934:  		SetConst  *Var[1]  00A30006 
  944:  		SetConst  *Var[2]  00A30007 
  954:  		ExecWait $Script_8021AA1C 
  960:  		ExecWait DoDeath 
  96C:  		Return
  974:  	Case  ==  .Event:SpinSmashDeath
  980:  		SetConst  *Var[0]  00000001 
  990:  		SetConst  *Var[1]  00A30006 
  9A0:  		SetConst  *Var[2]  00A30007 
  9B0:  		ExecWait $Script_8021AA1C 
  9BC:  		ExecWait 8029B998 
  9C8:  		SetConst  *Var[0]  00000001 
  9D8:  		SetConst  *Var[1]  00A30006 
  9E8:  		SetConst  *Var[2]  00A30007 
  9F8:  		ExecWait $Script_8021AA1C 
  A04:  		ExecWait DoDeath 
  A10:  		Return
  A18:  	Case  ==  .Event:RecoverStatus
  A24:  		Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
  A3C:  		If  *Var[0]  ==  00000001 
  A4C:  			SetConst  *Var[0]  00000001 
  A5C:  			SetConst  *Var[1]  00A30001 
  A6C:  			ExecWait DoRecover 
  A78:  		EndIf
  A80:  	Case  ==  .Event:ScareAway
  A8C:  		Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
  AA4:  		If  *Var[0]  ==  00000001 
  AB4:  			SetConst  *Var[0]  00000001 
  AC4:  			SetConst  *Var[1]  00A30004 
  AD4:  			SetConst  *Var[2]  00A30006 
  AE4:  			ExecWait DoScareAway 
  AF0:  			Return
  AF8:  		Else
  B00:  			SetConst  *Var[0]  00000001 
  B10:  			SetConst  *Var[1]  00A30002 
  B20:  			ExecWait DoImmune 
  B2C:  		EndIf
  B34:  	Case  ==  .Event:BeginAirLift
  B40:  		Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
  B58:  		If  *Var[0]  ==  00000001 
  B68:  			SetConst  *Var[0]  00000001 
  B78:  			SetConst  *Var[1]  00A30004 
  B88:  		Else
  B90:  			SetConst  *Var[0]  00000001 
  BA0:  			SetConst  *Var[1]  00A30002 
  BB0:  		EndIf
  BB8:  		ExecWait DoAirLift 
  BC4:  	Case  ==  .Event:BlowAway
  BD0:  		Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
  BE8:  		If  *Var[0]  ==  00000001 
  BF8:  			SetConst  *Var[0]  00000001 
  C08:  			SetConst  *Var[1]  00A30006 
  C18:  		Else
  C20:  			SetConst  *Var[0]  00000001 
  C30:  			SetConst  *Var[1]  00A30007 
  C40:  		EndIf
  C48:  		ExecWait DoBlowAway 
  C54:  		Return
  C5C:  	Case  ==  .Event:AirLiftFailed
  C68:  		Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
  C80:  		If  *Var[0]  ==  00000001 
  C90:  			SetConst  *Var[0]  00000001 
  CA0:  			SetConst  *Var[1]  00A3000C 
  CB0:  			ExecWait DoImmune 
  CBC:  			Call     SetAnimation 	( .Actor:Self 00000001 00A3000D )
  CD4:  			Wait     00000008 
  CE0:  		Else
  CE8:  			SetConst  *Var[0]  00000001 
  CF8:  			SetConst  *Var[1]  00A30002 
  D08:  			ExecWait DoImmune 
  D14:  		EndIf
  D1C:  	Default
  D24:  EndSwitch
  D2C:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  D40:  Call     UseIdleAnimation 	( .Actor:Self .True )
  D54:  Return
  D5C:  End
}

@ $Script_TakeTurn_Chan
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
   40:  If  *Var[0]  ==  00000002 
   50:  	Call     GetActorVar 	( .Actor:Self 00000009 *Var[0] )
   68:  	Sub  *Var[0]  00000001 
   78:  	If  *Var[0]  >  00000000 
   88:  		Call     SetActorVar 	( .Actor:Self 00000009 *Var[0] )
   A0:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
   BC:  		Wait     0000001E 
   C8:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
   E0:  		Call     UseBattleCamPreset 	( 00000002 )
   F0:  	Else
   F8:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  114:  		Wait     00000014 
  120:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  138:  		SetConst  *Var[0]  00000001 
  148:  		SetConst  *Var[1]  00A30002 
  158:  		SetConst  *Var[2]  00A30001 
  168:  		ExecWait 8029BBB4 
  174:  		Call     SetActorYaw 	( .Actor:Self 00000000 )
  188:  		Call     SetActorVar 	( .Actor:Self 00000008 00000001 )
  1A0:  		Call     SetTargetOffset 	( .Actor:Self 00000001 00000000 00000010 )
  1BC:  		Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFF FFFFFFF7 )
  1D8:  		Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_80219D50 )
  1F0:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80219E70 )
  208:  		Call     BindIdle    	( .Actor:Self $Script_Idle_8021A11C )
  21C:  		Call     SetActorFlagBits 	( .Actor:Self 00000400 .False )
  234:  	EndIf
  23C:  	%Call     EnableIdleScript 	( .Actor:Self 00000001 )
  250:  	%Call     UseIdleAnimation 	( .Actor:Self .True )
  264:  	%Return
  26C:  EndIf
  274:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
  288:  Call     UseBattleCamPreset 	( 0000003F )
  298:  Call     BattleCamTargetActor ( .Actor:Self )
  2A8:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
  2C0:  Call     SetAnimation 	( .Actor:Self 00000001 00A3000C )
  2D8:  Wait     0000000A 
  2E4:  Call     SetAnimation 	( .Actor:Self 00000001 00A30009 )
  2FC:  Thread
  304:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  320:  	Call     PlayEffect  	( ~FX:SmokeImpact:Small *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  364:  	Wait     0000000A 
  370:  	Call     PlayEffect  	( ~FX:SmokeImpact:Small *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  3B4:  	Wait     00000005 
  3C0:  	Call     PlayEffect  	( ~FX:SmokeImpact:Small *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  404:  EndThread
  40C:  Call     PlaySoundAtActor 	( .Actor:Self 00002021 )
  420:  Call     SetAnimation 	( .Actor:Self 00000001 00A30005 )
  438:  Wait     00000014 
  444:  Call     SetActorSounds ( FFFFFF81 00000000 00000000 00000000 )
  460:  Call     PlaySoundAtActor 	( .Actor:Self 000020D3 )
  474:  Call     EnemyTestTarget ( .Actor:Self *Var[0] 00000000 00000000 00000002 00000010 )
  498:  Switch  *Var[0] 
  4A4:  	CaseOR  ==  00000006 
  4B0:  	CaseOR  ==  00000005 
  4BC:  		Set  *Var[A]  *Var[0] 
  4CC:  		Thread
  4D4:  			Loop     
  4E0:  				Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  4FC:  				Add  *Var[0]  0000001E 
  50C:  				Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  528:  				If  *Var[0]  >  *Var[3] 
  538:  					BreakLoop
  540:  				EndIf
  548:  				Wait     00000001 
  554:  			EndLoop
  55C:  			Call     UseBattleCamPreset 	( 00000001 )
  56C:  			If  *Var[A]  ==  00000005 
  57C:  				Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  5A0:  			EndIf
  5A8:  			Wait     0000000F 
  5B4:  			Call     UseBattleCamPreset 	( 00000002 )
  5C4:  		EndThread
  5CC:  		Call     SetGoalToTarget 	( .Actor:Self )
  5DC:  		Call     AddGoalPos 	( .Actor:Self FFFFFF6A 00000000 00000000 )
  5F8:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[24.0] ) %14 -> 24
  60C:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  624:  		Wait     0000000F 
  630:  		Call     YieldTurn   	( )
  63C:  		Call     8026F6EC ( FFFFFF81 )
  64C:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  668:  		Call     SetGoalToHome 	( .Actor:Self )
  678:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  694:  		Add  *Var[0]  000000C8 
  6A4:  		Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  6C0:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[16.0] ) %10 -> 16
  6D4:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  6EC:  		Wait     0000000A 
  6F8:  		Call     SetAnimation 	( .Actor:Self 00000001 00A3000D )
  710:  		Wait     0000000A 
  71C:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  734:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  748:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  75C:  		Return
  764:  	EndCaseGroup
  76C:  EndSwitch
  774:  Call     SetGoalToTarget 	( .Actor:Self )
  784:  Call     SetActorSpeed 	( .Actor:Self *Fixed[14.0] )
  798:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  7B0:  Wait     00000002 
  7BC:  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 0000FFFF 00000000 00000005 00000020 )
  7E4:  Switch  *Var[0] 
  7F0:  	CaseOR  ==  00000000 
  7FC:  	CaseOR  ==  00000002 
  808:  		Call     UseBattleCamPreset 	( 00000002 )
  818:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  834:  		Add  *Var[0]  00000028 
  844:  		Set  *Var[1]  00000000 
  854:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.8007812] )
  868:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  884:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  8A4:  		Add  *Var[0]  0000001E 
  8B4:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  8D0:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  8F0:  		Add  *Var[0]  00000014 
  900:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  91C:  		Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
  93C:  		Call     SetAnimation 	( .Actor:Self 00000001 00A30001 )
  954:  		Wait     00000008 
  960:  		Call     YieldTurn   	( )
  96C:  		Call     8026F6EC ( FFFFFF81 )
  97C:  		SetConst  *Var[0]  00000001 
  98C:  		SetConst  *Var[1]  00A30004 
  99C:  		ExecWait DoReturnHome 
  9A8:  		Call     SetAnimation 	( .Actor:Self 00000001 00A30001 )
  9C0:  	EndCaseGroup
  9C8:  EndSwitch
  9D0:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  9E4:  Call     UseIdleAnimation 	( .Actor:Self .True )
  9F8:  Return
  A00:  End
}
  
@ $StatusTable_8021D3D0 %make lee almost un-statusable
{
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      20`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      20`
.Status:Fear        0`
.Status:Static     20`
.Status:Paralyze   40`
.Status:Shrink     20`
.Status:Stop       35`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -2`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -2`
.Status:FearTurnMod       0`
.Status:StaticTurnMod    -1`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End
}


%ok most of lees code was copied from mq source, deal with it
%but I'm gonna add more partner moves

#define .LeeMaxHP 50`b
#define .LeeLowHP 25`b

@ $Lee
{
[MaxHP]        .LeeMaxHP %20 -> 50
}

%unify all the status tables
%yes this does mean you can paralyze watt

@ $LeeGoombario
{
[Index]        3Cb
[MaxHP]	.LeeMaxHP
[PowerBounce]  3`b 
[StatusTable] $StatusTable_8021D3D0
}

@ $LeeKooper
{
[Index]        3Db
[MaxHP]	.LeeMaxHP
[PowerBounce]  3`b 
[StatusTable] $StatusTable_8021D3D0
}

@ $LeeBombette
{
[Index]        3Eb
[MaxHP]	.LeeMaxHP
[PowerBounce]  3`b 
[StatusTable] $StatusTable_8021D3D0
}

@ $LeeParakarry
{
[Index]        3Fb
[MaxHP]	.LeeMaxHP
[PowerBounce]  3`b 
[StatusTable] $StatusTable_8021D3D0
}

@ $DefenseTable_802233D4
{
.Element:Normal 00000001
.Element:Throw 00000000
.Element:End
}


@ $LeeBow
{
[Index]        40b
[MaxHP]	.LeeMaxHP
[PowerBounce]  3`b 
[StatusTable] $StatusTable_8021D3D0
}

@ $DefenseTable_8022445C
{
.Element:Normal 00000000
.Element:Throw FFFFFFFF
.Element:End
}


@ $LeeWatt
{
[Index]        41b
[MaxHP]	.LeeMaxHP
[PowerBounce]  3`b 
[StatusTable] $StatusTable_8021D3D0
}

@ $DefenseTable_802259C0
{
.Element:Normal 00000000
.Element:Water FFFFFFFE
.Element:Shock  00000063
.Element:Throw FFFFFFFF
.Element:End
}


@ $LeeSushie
{
[Index]        42b
[MaxHP]	.LeeMaxHP
[PowerBounce]  3`b 
[StatusTable] $StatusTable_8021D3D0
}

@ $LeeLakilester
{
[Index]        43b
[MaxHP]	.LeeMaxHP
[PowerBounce] 3`b 
[StatusTable] $StatusTable_8021D3D0
}

@ $DefenseTable_80228464
{
.Element:Normal 00000000
.Element:Throw FFFFFFFF
.Element:End
}

@ $Function_GetPartner %get a random avaliable partner instead of just copying current one
{
	ADDIU	SP, SP, FFE0
	SW		S2, 18 (SP)
	DADDU	S2, A0, R0
	SW		S1, 14 (SP)
	SW		RA, 1C (SP)
	SW		S0, 10 (SP)
	LW		S0, C (S2)
	.TryRandom % Range [0-9]
   	JAL		800299FC
	ORI		A0, R0, A
	% Get 8010F2AC + 4*i
	LIA		S1, 8010F2A4
	SLL		A0, V0, 3
	DADDU	S1, S1, A0
	LB		A2, 0 (S1)
	BEQ		A2, R0, .TryRandom
	NOP
	DADDU	A2, V0, R0
	LW		A1, 0 (S0)
	JAL		~Func:set_variable
	DADDU	A0, S2, R0
	ADDIU	S0, S0, 4
	LB		A2, 1 (S1)
	LW		A1, 0 (S0)
	JAL		~Func:set_variable
	DADDU	A0, S2, R0
	LW		RA, 1C (SP)
	LW		S2, 18 (SP)
	LW		S1, 14 (SP)
	LW		S0, 10 (SP)
	ADDIU	V0, R0, 2
	JR		RA
ADDIU SP, SP, 20
}

@ $Script_Init_8021D4C8
{
	Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_80229F9C )
	Call     BindIdle    	( .Actor:Self $Script_Idle_8021D5B4 )
	Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021D600 )
	Call     BindNextTurn 	( .Actor:Self $Script_NextTurn_8022A038 )
	Call     SetActorVar 	( .Actor:Self 00000008 00000000 )
	Call     SetActorVar 	( .Actor:Self 00000009 .True )	% Added: enables the original Lee to spawn clones
	Call     SetActorVar 	( .Actor:Self 0000000A .True )
	Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
	Thread
		Call     8026BF48 ( 00000001 )
		Wait     0000000F 
		Call     ActorSpeak  	( 00020027 .Actor:Self 00000001 00A40006 00A40002 ) % I bet you've never seen a move like this before!
		Wait     0000000F 
		ExecWait $Script_CopyPartner 
		Call     8026BF48 ( 00000000 )
	EndThread
	Call     $Function_802180D0 ( )
	Call     SetBattleFlagBits 	( 00800000 .True )
	%I used the 8 original dupli partner IDs so I have to use the tattle and name stuff to fix things
	Call	$Function_SetTattle_C ( 3C 001C008C )
	Call	$Function_SetName_C   ( 3C 001D0007 )
	Call	$Function_SetTattle_C ( 3D 001C008B )	
	Call	$Function_SetName_C   ( 3D 001D0008 )
	Call	$Function_SetTattle_C ( 3E 001C0090 )	
	Call	$Function_SetName_C   ( 3E 001D0009 )
	Call	$Function_SetTattle_C ( 3F 001C008F )	
	Call	$Function_SetName_C   ( 3F 001D000A )
	Call	$Function_SetTattle_C ( 40 001C0091 )	
	Call	$Function_SetName_C   ( 40 001D000F )
	Call	$Function_SetTattle_C ( 41 001C008A )	
	Call	$Function_SetName_C   ( 41 001D000C )
	Call	$Function_SetTattle_C ( 42 001C008D )	
	Call	$Function_SetName_C   ( 42 001D000D )
	Call	$Function_SetTattle_C ( 43 001C008E )	
	Call	$Function_SetName_C   ( 43 001D000E )
	Return
	End
}

@ $Script_TakeTurn_80229F9C
{
	Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
	Switch   *Var[0] 
		Case     ==  00000000 
			ExecWait $Script_CopyPartner 
		Case     ==  00000001 
		Case     ==  00000002 
			ExecWait $Script_FlyingTackle 
			ExecWait $Script_CopyPartner 
		Case     ==  00000003 
			Call     SetActorVar 	( .Actor:Self 00000008 00000002 )
	EndSwitch
	Return
	End
}

	
@ $Script_NextTurn_8022A038
{
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     GetBattlePhase ( *Var[0] )
	Switch   *Var[0] 
		Case     ==  .Phase:EnemyBegin
			Call     GetStatusFlags ( .Actor:Self *Var[0] )
			If       (*Var[0]  &  003F1000) 
				BreakCase
			EndIf
			Call     GetActorVar 	( .Actor:Self 00000009 *Var[0] )
			If	*Var[0]  ==  .True
				Call     GetActorHP  	( .Actor:Self *Var[C] )
				Call     GetEnemyMaxHP 	( .Actor:Self *Var[D] )
				Div *Var[D] 2`
				If  (*Var[C]  < *Var[D])
					/%
					%/
					Call     UseBattleCamPreset 	( 00000002 )
					Call     MoveBattleCamOver 	( 0000000A )
					Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
					If       *Var[0] ==  00000001 
						Call     ActorSpeak  	( 00020028 .Actor:Enemy1 00000001 00A40006 00A40002 ) % Ooh... You are strong,  I'll give you that.
					Else
						Call     ActorSpeak  	( 00020028 .Actor:Self 00000001 00A40006 00A40002 ) % Ooh... You are strong,  I'll give you that.
					EndIf
					% NEW: spawn clones
					Call     SetActorVar 	( .Actor:Self 00000009 .False )
					Call     PlaySoundAtActor 	( .Actor:Self 000020B8 )
					If       *Var[0] ==  00000001 
						Call     GetActorPos 	( .Actor:Enemy1 *Var[1] *Var[2] *Var[3] )
						Call     GetStatusFlags ( .Actor:Enemy1 *Var[0] )
					Else
						Call     GetActorPos 	( .Actor:Self *Var[1] *Var[2] *Var[3] )
						Call     GetStatusFlags ( .Actor:Self *Var[0] )
					EndIf
					Thread
						If       *Var[0]  &  00080000 
							Add      *Var[2] 00000008 
							SetF     *Var[4] *Fixed[0.40039062] 
						Else
							Add      *Var[2] 00000014 
							SetF     *Var[4] *Fixed[1.0] 
						EndIf
						Call     PlayEffect  	( 00000013 00000001 *Var[1] *Var[2] *Var[3] *Var[4] 00000028 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
					EndThread
					Wait     0000001A 
					Call     PlaySoundAtActor 	( .Actor:Self 000002CD )
					Thread
						Add      *Var[2] 00000003 
						Add      *Var[3] 00000005 
						Loop     00000003
							Call     PlayEffect  	( 00000001 *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
							Wait     00000003 
						EndLoop
					EndThread
					Wait	3
					Set		*Var[A]  1
					Set		*Var[B]  $LeeClone1Formation
					% Var[C] = HP
					% Var[D] = MaxHP (not used)
					Set		*Var[E]  450`
					Set		*Var[F]  -15`
					Exec	$Script_SummonClone
					Set		*Var[A]  3
					Set		*Var[B]  $LeeClone2Formation
					Set		*Var[E]  -450`
					Set		*Var[F]  15`
					Exec	$Script_SummonClone
					Wait	90`
					% NEW
				EndIf
				BreakCase
			EndIf
			Call     GetActorVar 	( .Actor:Self 0000000A *Var[0] )
			If	*Var[0]  ==  .True
				Call     SetActorVar 	( .Actor:Self 0000000A .False )
				Call     GetPlayerHP 	( *Var[0] )
				If       *Var[0] <=  00000005 
					Call     UseBattleCamPreset 	( 00000002 )
					Call     MoveBattleCamOver 	( 0000000A )
					Call     ActorSpeak  	( 00020029 .Actor:Self 00000001 00A40006 00A40002 ) % Mario, now I will finish you.
					BreakCase
				EndIf
			EndIf
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End
}

 @ $Script_FlyingTackle
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetActorVar 	( .Actor:Self 00000008 00000000 )
   40:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   54:  Call     UseBattleCamPreset 	( 0000003F )
   64:  Call     BattleCamTargetActor ( .Actor:Self )
   74:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   8C:  Call     SetAnimation 	( .Actor:Self 00000001 00A40008 )
   A4:  Wait     00000014 
   B0:  Call     SetActorSounds ( FFFFFF81 00000002 000002CB 00000000 )
   CC:  Call     EnemyTestTarget ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
   F0:  Switch  *Var[0] 
   FC:  	CaseOR  ==  00000006 
  108:  	CaseOR  ==  00000005 
  114:  		Set  *Var[A]  *Var[0] 
  124:  		Call     UseBattleCamPreset 	( 00000002 )
  134:  		Call     MoveBattleCamOver 	( 00000014 )
  144:  		Call     SetAnimation 	( .Actor:Self 00000001 00A40009 )
  15C:  		Call     SetGoalToTarget 	( .Actor:Self )
  16C:  		Call     AddGoalPos 	( .Actor:Self FFFFFF9C 00000000 00000000 )
  188:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[0.30078125] )
  19C:  		Call     JumpToGoal  	( .Actor:Self 00000011 00000000 00000001 00000000 )
  1BC:  		If  *Var[A]  ==  00000005 
  1CC:  			Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  1F0:  		EndIf
  1F8:  		Wait     0000000A 
  204:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  220:  		Call     SetActorPos 	( .Actor:Self *Var[0] 00000000 *Var[2] )
  23C:  		Call     SetAnimation 	( .Actor:Self 00000001 00A40002 )
  254:  		Call     8026F838 ( FFFFFF81 00000002 )
  268:  		Wait     0000000F 
  274:  		Call     8027D7F0 ( )
  280:  		Call     SetActorYaw 	( .Actor:Self 000000B4 )
  294:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  2B0:  		ExecWait $Script_8021D5C4 
  2BC:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  2D4:  		Call     SetActorYaw 	( .Actor:Self 00000000 )
  2E8:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  2FC:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  310:  		Return
  318:  	EndCaseGroup
  320:  EndSwitch
  328:  Call     SetAnimation 	( .Actor:Self 00000001 00A40009 )
  340:  Call     SetGoalToTarget 	( .Actor:Self )
  350:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
  364:  If  *Var[A]  &  00080000 
  374:  	Call     AddGoalPos 	( .Actor:Self *Fixed[4.0] *Fixed[-6.0] 00000000 )
  390:  Else
  398:  	Call     AddGoalPos 	( .Actor:Self 0000000A FFFFFFF1 00000000 )
  3B4:  EndIf
  3BC:  Call     SetActorJumpGravity 	( .Actor:Self *Fixed[0.30078125] )
  3D0:  Call     JumpToGoal  	( .Actor:Self 0000000C 00000000 00000001 00000000 )
  3F0:  Wait     00000002 
  3FC:  Call     SetGoalToTarget 	( .Actor:Self )
  40C:  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000005 00000020 )
		Call	PlaySoundAtActor	( .Actor:Player 000002D8 )
			Thread % added
				Call	8026BF48	( 00000001 )
				Call	BoostDefense	( .Actor:Player FFFFFFFF )
				%Call	8026BF48	( 00000000 )
				%Call	8026BF48	( 00000001 )
				Call	BoostAttack	( .Actor:Player FFFFFFFF )
				Call	8026BF48	( 00000000 )
			EndThread % added
  434:  Switch  *Var[0] 
  440:  	CaseOR  ==  00000000 
  44C:  	CaseOR  ==  00000002 
  458:  		Call     UseBattleCamPreset 	( 00000002 )
  468:  		Call     8026F838 ( FFFFFF81 00000002 )
  47C:  		Call     SetAnimation 	( .Actor:Self 00000001 00A4000A )
  494:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4B0:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[0.5] )
  4C4:  		Add  *Var[0]  0000001E 
  4D4:  		Call     SetGoalPos 	( .Actor:Self *Var[0] 00000000 *Var[2] )
  4F0:  		Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
  510:  		Add  *Var[0]  00000014 
  520:  		Call     SetGoalPos 	( .Actor:Self *Var[0] 00000000 *Var[2] )
  53C:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  55C:  		Wait     0000000A 
  568:  		Call     8027D7F0 ( )
  574:  		ExecWait $Script_8021D5C4 
  580:  	EndCaseGroup
  588:  EndSwitch
  590:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  5A4:  Call     UseIdleAnimation 	( .Actor:Self .True )
  5B8:  Return
  5C0: End
}

@ $Script_TakeTurn_80221200
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     GetActorVar 	( .Actor:Self 00000004 *Var[0] )
   54:  If  *Var[0]  ==  00000001 
   64:  	Call     GetActorVar 	( .Actor:Self 00000005 *Var[0] )
   7C:  	Sub  *Var[0]  00000001 
   8C:  	If  *Var[0]  >  00000000 
   9C:  		Call     SetActorVar 	( .Actor:Self 00000005 *Var[0] )
   B4:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
   D0:  		Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[3.0] )
   E8:  		Wait     0000001E 
   F4:  		Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[1.0] )
  10C:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  124:  	Else
  12C:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  148:  		Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[3.0] )
  160:  		Wait     00000014 
  16C:  		Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[1.0] )
  184:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  19C:  		Call     SetAnimation 	( .Actor:Self 00000001 000A0019 )
  1B4:  		Set  *Var[0]  00000000 
  1C4:  		Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000C 00000000 )
  1E0:  		Thread
  1E8:  			Loop     00000005 
  1F4:  				Add  *Var[0]  0000000F 
  204:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  220:  				Wait     00000001 
  22C:  			EndLoop
  234:  		EndThread
  23C:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  258:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  274:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[3.0] )
  288:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  2A8:  		Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  2C4:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  2E0:  		Call     SetActorDispOffset ( FFFFFF81 00000000 00000000 00000000 )
  2FC:  		Call     SetAnimation 	( .Actor:Self 00000001 000A0004 )
  314:  		Call     SetActorVar 	( .Actor:Self 00000004 00000000 )
  32C:  		Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_802205D8 )
  344:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80220540 )
  35C:  		Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFE 00000026 )
  378:  		Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFD FFFFFFF7 )
				Goto 1 %get up and attack on same turn
  394:  	EndIf
  39C:  	Call     EnableIdleScript 	( .Actor:Self 00000001 )
  3B0:  	Call     UseIdleAnimation 	( .Actor:Self .True )
  3C4:  	Return
  3CC:  EndIf
		Label 1
  3D4:  Call     SetAnimation 	( .Actor:Self 00000001 000A000E )
  3EC:  Call     PlaySoundAtActor 	( .Actor:Self 00000000 )
  400:  Wait     0000000F 
  40C:  Call     SetAnimation 	( .Actor:Self 00000001 000A000A )
  424:  Call     PlaySoundAtActor 	( .Actor:Self 0000200C )
  438:  Call     UseBattleCamPreset 	( 0000000E )
  448:  Call     BattleCamTargetActor ( .Actor:Self )
  458:  Call     MoveBattleCamOver 	( 0000004B )
  468:  Call     8024ECF8 ( 00000001 00000001 00000001 )
  480:  Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  498:  Switch  *Var[0] 
  4A4:  	Case  ==  00000000 
  4B0:  		Set  *Var[0]  0000000A 
  4C0:  	Case  ==  00000001 
  4CC:  		Set  *Var[0]  00000014 
  4DC:  	Case  ==  00000002 
  4E8:  		Set  *Var[0]  0000001E 
  4F8:  EndSwitch
  500:  Set  *Var[9]  00000000 
  510:  Loop     *Var[0] 
  51C:  	Add  *Var[9]  00000001 
  52C:  	Switch  *Var[9] 
  538:  		Case  <  00000014 
  544:  			Call     SetAnimation 	( .Actor:Self 00000001 000A000A )
  55C:  			Call     SetActorSpeed 	( .Actor:Self *Fixed[10.0] )
  570:  		Case  ==  00000014 
  57C:  			Call     GetActorPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
  598:  			Call     PlayEffect  	( ~FX:SmokeImpact:Small *Var[4] *Var[5] *Var[6] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  5DC:  		Case  <  00000028 
  5E8:  			Call     SetAnimation 	( .Actor:Self 00000001 000A000B )
  600:  			Call     SetActorSpeed 	( .Actor:Self *Fixed[12.0] )
  614:  		Case  ==  00000028 
  620:  			Call     GetActorPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
  63C:  			Call     PlayEffect  	( ~FX:SmokeImpact:Small *Var[4] *Var[5] *Var[6] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  680:  		Case  <  00000032 
  68C:  			Call     SetAnimation 	( .Actor:Self 00000001 000A000C )
  6A4:  			Call     SetActorSpeed 	( .Actor:Self *Fixed[14.0] )
  6B8:  		Case  ==  00000032 
  6C4:  			Call     GetActorPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
  6E0:  			Call     PlayEffect  	( ~FX:SmokeImpact:Small *Var[4] *Var[5] *Var[6] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  724:  		Case  <  0000003C 
  730:  			Call     SetAnimation 	( .Actor:Self 00000001 000A000D )
  748:  			Call     SetActorSpeed 	( .Actor:Self *Fixed[16.0] )
  75C:  		Case  ==  0000003C 
  768:  			Call     GetActorPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
  784:  			Call     PlayEffect  	( ~FX:SmokeImpact:Small *Var[4] *Var[5] *Var[6] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  7C8:  	EndSwitch
  7D0:  	Wait     00000001 
  7DC:  EndLoop
  7E4:  Call     PlaySoundAtActor 	( .Actor:Self 0000200A )
  7F8:  Call     SetActorSounds ( FFFFFF81 00000000 00000000 00000000 )
  814:  Call     UseBattleCamPreset 	( 00000002 )
  824:  Call     MoveBattleCamOver 	( 0000000F )
  834:  Call     AddActorDecoration 	( .Actor:Self 00000000 00000000 .Decoration:GreySmokeTrail )
		Call 	 RandInt ( 100` *Var[0] )
		Switch (*Var[0])
			Case < 4B
				Set *Var[A] 0
			Default
				Set *Var[A] 1
		EndSwitch
  850:  Call     SetGoalToTarget 	( .Actor:Self )
  860:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  878:  Call     EnemyTestTarget ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  89C:  Switch  *Var[0] 
  8A8:  	CaseOR  ==  00000006 
  8B4:  	CaseOR  ==  00000005 
  8C0:  		Set  *Var[A]  *Var[0] 
  8D0:  		Thread
  8D8:  			Call     $Function_80218F40 ( )
  8E4:  			Call     RemoveActorDecoration 	( .Actor:Self 00000000 00000000 )
  8FC:  		EndThread
  904:  		Wait     00000004 
  910:  		Call     SetAnimation 	( .Actor:Self 00000001 000A0009 )
  928:  		Call     SetActorRotationOffset 	( .Actor:Self FFFFFFF8 00000000 00000000 )
  944:  		Set  *Var[0]  00000000 
  954:  		Loop     00000002 
  960:  			Add  *Var[0]  0000001E 
  970:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  98C:  			Wait     00000001 
  998:  		EndLoop
  9A0:  		Wait     00000005 
  9AC:  		Call     GetActorPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
  9C8:  		Call     PlayEffect  	( ~FX:SmokeImpact:Small *Var[4] *Var[5] *Var[6] 00000010 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  A0C:  		Loop     00000005 
  A18:  			Add  *Var[0]  FFFFFFF4 
  A28:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  A44:  			Wait     00000001 
  A50:  		EndLoop
  A58:  		Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  A74:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000002 )
  A90:  		Wait     00000002 
  A9C:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 FFFFFFFE )
  AB8:  		Wait     00000002 
  AC4:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  AE0:  		If  *Var[A]  ==  00000005 
  AF0:  			Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  B14:  		EndIf
  B1C:  		Wait     0000000A 
  B28:  		Call     SetAnimation 	( .Actor:Self 00000001 000A000F )
  B40:  		Wait     0000000A 
  B4C:  		Call     UseBattleCamPreset 	( 00000002 )
  B5C:  		Call     YieldTurn   	( )
  B68:  		Call     8026F6EC ( FFFFFF81 )
  B78:  		Call     SetAnimation 	( .Actor:Self 00000001 000A0006 )
  B90:  		Call     SetGoalToHome 	( .Actor:Self )
  BA0:  		If *Var[A] == 0
					Call     SetActorSpeed 	( .Actor:Self *Fixed[4.5] )
				Else
					Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
				EndIf
  BB4:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  BCC:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  BE0:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  BF4:  		Return
  BFC:  	EndCaseGroup
  C04:  EndSwitch
  C24:  Call     GetActorVar 	( .Actor:Self 00000001 *Var[9] )
  C3C:  Switch  *Var[9] 
  C48:  	Case  ==  00000000 
  %C54:  		Wait     00000002 
  C60:  		Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 0000FFFF 00000000 00000002 00000020 )
  C88:  	Case  ==  00000001 
  %C94:  		Wait     00000002 
  CA0:  		Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 0000FFFF 00000000 00000003 00000020 )
  CC8:  	Case  ==  00000002 
  %CD4:  		Wait     00000002 
  CE0:  		Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 0000FFFF 00000000 00000005 00000020 )
  D08:  EndSwitch
		If *Var[A] == 0 %shell toss, do normal stuff
			Call     RemoveActorDecoration 	( .Actor:Self 00000000 00000000 )
  D10:  	Switch  *Var[0] 
  D1C:  		CaseOR  ==  00000000 
  D28:  		CaseOR  ==  00000002 
  D34:  			Call     UseBattleCamPreset 	( 00000002 )
  D44:  			Call     MoveBattleCamOver 	( 00000008 )
  D54:  			Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  D70:  			Add  *Var[0]  0000003C 
  D80:  			Set  *Var[1]  00000000 
  D90:  			Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.4003906] )
  DA4:  			Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  DC0:  			Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
  DE0:  			Add  *Var[0]  0000001E 
  DF0:  			Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  E0C:  			Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  E2C:  			Add  *Var[0]  00000014 
  E3C:  			Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  E58:  			Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
  E78:  			Add  *Var[0]  0000000A 
  E88:  			Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  EA4:  			Call     JumpToGoal  	( .Actor:Self 00000004 00000000 00000001 00000000 )
  EC4:  			Call     SetAnimation 	( .Actor:Self 00000001 000A000F )
  EDC:  			Wait     0000000F 
  EE8:  			Call     YieldTurn   	( )
  EF4:  			Call     8026F6EC ( FFFFFF81 )
  F04:  			Call     SetAnimation 	( .Actor:Self 00000001 000A0006 )
  F1C:  			Call     SetGoalToHome 	( .Actor:Self )
  F2C:  			Call     SetActorSpeed 	( .Actor:Self *Fixed[4.5] )
  F40:  			Call     RunToGoal   	( .Actor:Self 00000000 .False )
  F58:  		EndCaseGroup
  F60:  	EndSwitch
		Else %power shell, keep going and hit partner
			Call     SetTargetActor ( .Actor:Self .Actor:Partner )
			Call     SetGoalToTarget 	( .Actor:Self )
			Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] ) %faster
			Call     RunToGoal   	( .Actor:Self 00000000 .False )
			Switch  *Var[9] %the partner hit isn't as strong for fairness
				Case  ==  00000000 
					%Wait     00000002 
					Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 0000FFFF 00000000 00000001 00000020 )
				Case  ==  00000001 
					%Wait     00000002 
					Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 0000FFFF 00000000 00000002 00000020 )
				Case  ==  00000002 
					%Wait     00000002 
					Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 0000FFFF 00000000 00000003 00000020 )
			EndSwitch			
			Call	 AddGoalPos (.Actor:Self FFFFFF80 00000000 00000000 )
			Call     RunToGoal   	( .Actor:Self 00000000 .False )
			Call     RemoveActorDecoration 	( .Actor:Self 00000000 00000000 )
			Switch  *Var[0] 
				CaseOR  ==  00000000 
				CaseOR  ==  00000002 
					% Call     UseBattleCamPreset 	( 00000002 )
					% Call     MoveBattleCamOver 	( 00000008 )
					% Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
					% Add  *Var[0]  0000003C 
					% Set  *Var[1]  00000000 
					% Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.4003906] )
					% Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
					% Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
					% Add  *Var[0]  0000001E 
					% Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
					% Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
					% Add  *Var[0]  00000014 
					% Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
					% Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
					% Add  *Var[0]  0000000A 
					% Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
					% Call     JumpToGoal  	( .Actor:Self 00000004 00000000 00000001 00000000 )
					% Call     SetAnimation 	( .Actor:Self 00000001 000A000F )
					Wait     0000000F 
					Call     YieldTurn   	( )
					Call     8026F6EC ( FFFFFF81 )
					Call     SetAnimation 	( .Actor:Self 00000001 000A0006 )
					Call     SetGoalToHome 	( .Actor:Self )
					Call     SetActorSpeed 	( .Actor:Self *Fixed[4.5] )
					Call     RunToGoal   	( .Actor:Self 00000000 .False )
				EndCaseGroup
			EndSwitch
		EndIf
  F68:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  F7C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  F90:  Return
  F98:  End
}

@ $Script_TakeTurn_802229C4
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Wait     0000000A 
   34:  Call     UseBattleCamPreset 	( 0000003F )
   44:  Call     BattleCamTargetActor ( .Actor:Self )
   54:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   68:  Call     SetGoalToTarget 	( .Actor:Self )
   78:  Call     AddGoalPos 	( .Actor:Self 00000028 00000000 00000000 )
   94:  Call     MoveBattleCamOver 	( 0000001E )
		Call 	 RandInt ( 100` *Var[0] )
		Switch (*Var[0]) %1 = bomb
			Case < 50`
				Set *Var[A] 0
			Default
				Set *Var[A] 1
		EndSwitch
		If (*Var[A] == 1) %this is spliced from bombette.bscr mostly
			Call	 SetTargetActor ( .Actor:Self .Actor:Player )
			Call     SetGoalToTarget 	( .Actor:Self )
			Call     AddGoalPos 	( .Actor:Self 0000000C 00000000 00000000 )		
			Call     PlaySoundAtActor 	( .Actor:Self 00000287 ) %fuse
			Thread
				Call     SetAnimation 	( .Actor:Self FFFFFFFF 000B0009 )
				Call     RunToGoal   	( .Actor:Self 00000023 ) 
				Call     SetAnimation 	( .Actor:Self FFFFFFFF 000B001A )
			EndThread
			Call     EnemyTestTarget ( .Actor:Self *Var[C] 00000000 00000000 00000001 00000010 )
			If *Var[C] == 5 %lucky hit triggers a premature explosion
				Wait	1E
				Call     StopSound   	( 00000287 ) %no more fuse
				Call     80254218 ( 0000000B )
				Thread
					Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.75] )
					Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[3.0] )
					Call     ShakeCam    	( 00000001 00000000 0000000A *Fixed[4.5] )
					Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[3.0] )
				EndThread
				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
				Add  *Var[2]  00000002 
				Call     PlayEffect  	( ~FX:SmokeRing:Blast1 *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
				Add  *Var[1]  00000014 
				Add  *Var[2]  00000002 
				Call     PlayEffect  	( ~FX:Explosion1 *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
				Call     PlaySoundAtActor 	( .Actor:Self .Sound:BombBlast )
				Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
				Goto 	0
			EndIf
			Wait     2D %the regular partner move has a consistent timing, no matter where the enemy is 
			Call     StopSound   	( 00000287 ) %no more fuse
			Call     80254218 ( 0000000B )
			Thread
				Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.75] )
				Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[3.0] )
				Call     ShakeCam    	( 00000001 00000000 0000000A *Fixed[4.5] )
				Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[3.0] )
			EndThread
			Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
			Add  *Var[2]  00000002 
			Call     PlayEffect  	( ~FX:SmokeRing:Blast1 *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
			Add  *Var[1]  00000014 
			Add  *Var[2]  00000002 
			Call     PlayEffect  	( ~FX:Explosion1 *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
			Call     PlaySoundAtActor 	( .Actor:Self .Sound:BombBlast )
			If (*Var[C] == 6) %if mario is invisible, skip damage
				Goto 0
			Else
				Call     GetActorVar 	( .Actor:Self 00000001 *Var[9] )
				Switch  *Var[9] %i think it's 5-6-7 but i need to confirm
					Case  ==  00000000  
						Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000200 00000000 00000000 00000005 00000020 )
					Case  ==  00000001  
						Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000200 00000000 00000000 00000006 00000020 )
					Case  ==  00000002  
						Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000200 00000000 00000000 00000007 00000020 )
				EndSwitch
			EndIf
			Label 0 %fly up
			Call     UseBattleCamPreset 	( 00000002 ) %stop camera following
			Thread
				Set  *Var[0]  00000000 
				Loop     00000050 
					Wait     00000001 
					Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
					Add  *Var[0]  00000021 
				EndLoop
				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
			EndThread
			Call     SetAnimation 	( .Actor:Self FFFFFFFF 000B001B )
			Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
			Sub  *Var[0]  00000032 
			Add  *Var[1]  000000C8 
			Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
			Call     FlyToGoal  	( .Actor:Self 0000000A 00000000 .Easing:Linear )
			Wait     00000032 
			Call     80280818 ( )
			Call     SetGoalToHome 	( .Actor:Self )
			Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
			Add  *Var[0]  00000019 
			Add  *Var[1]  000000C8 
			Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
			Call     SetGoalToHome 	( .Actor:Self )
			Call     YieldTurn   	( ) %allows next enemy's turn script to start
			Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
			Call     SetActorJumpGravity 	( .Actor:Self *Fixed[0.60058594] )
			Call     SetAnimation 	( .Actor:Self FFFFFFFF 000B001B )
			Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
			Call     SetAnimation 	( .Actor:Self FFFFFFFF 000B0004 )
			Return
		EndIf
   A4:  Call     SetAnimation 	( .Actor:Self 00000001 000B0008 )
   BC:  Call     RunToGoal   	( .Actor:Self 0000001E .False )
   D4:  Call     SetAnimation 	( .Actor:Self 00000001 000B0004 )
   EC:  Call     SetAnimation 	( .Actor:Self 00000001 000B000F )
  104:  Wait     0000000F 
  110:  Call     SetActorSounds ( FFFFFF81 00000000 00000000 00000000 )
  12C:  Call     PlaySoundAtActor 	( .Actor:Self 00002020 )
  140:  Call     EnemyTestTarget ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  164:  Switch  *Var[0] 
  170:  	CaseOR  ==  00000006 
  17C:  	CaseOR  ==  00000005 
  188:  		Set  *Var[A]  *Var[0] 
  198:  		Call     SetGoalToTarget 	( .Actor:Self )
  1A8:  		Call     AddGoalPos 	( .Actor:Self FFFFFFF6 00000000 00000000 )
  1C4:  		Call     SetAnimation 	( .Actor:Self 00000001 000B0010 )
  1DC:  		Call     RunToGoal   	( .Actor:Self 00000005 .False )
  1F4:  		Call     SetAnimation 	( .Actor:Self 00000001 000B0004 )
  20C:  		Thread
  214:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000F 00000000 )
  230:  			Set  *Var[0]  00000000 
  240:  			Loop     0000000A 
  24C:  				Add  *Var[0]  00000048 
  25C:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  278:  				Wait     00000001 
  284:  			EndLoop
  28C:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  2A8:  		EndThread
  2B0:  		Call     AddGoalPos 	( .Actor:Self FFFFFFC4 00000000 00000000 )
  2CC:  		Call     RunToGoal   	( .Actor:Self 0000000A .False )
  2E4:  		Call     SetAnimation 	( .Actor:Self 00000001 000B0004 )
  2FC:  		Thread
  304:  			Call     $Function_80219064 ( )
  310:  		EndThread
  318:  		If  *Var[A]  ==  00000005 
  328:  			Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  34C:  		EndIf
  354:  		Wait     00000014 
  360:  		Call     UseBattleCamPreset 	( 00000002 )
  370:  		Call     YieldTurn   	( )
  37C:  		Call     SetAnimation 	( .Actor:Self 00000001 000B0008 )
  394:  		Call     SetGoalToHome 	( .Actor:Self )
  3A4:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
  3B8:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  3D0:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  3E4:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  3F8:  		Return
  400:  	EndCaseGroup
  408:  EndSwitch
  410:  Set  *Var[A]  *Var[0] 
  420:  Call     SetGoalToTarget 	( .Actor:Self )
  430:  Call     SetAnimation 	( .Actor:Self 00000001 000B0010 )
  448:  Call     RunToGoal   	( .Actor:Self 00000004 .False )
  460:  Call     GetActorVar 	( .Actor:Self 00000001 *Var[9] )
  478:  Switch  *Var[9] 
  484:  	Case  ==  00000000 
  490:  		Wait     00000002 
  49C:  		Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000002 00000020 )
  4C4:  	Case  ==  00000001 
  4D0:  		Wait     00000002 
  4DC:  		Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000003 00000020 )
  504:  	Case  ==  00000002 
  510:  		Wait     00000002 
  51C:  		Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000005 00000020 )
  544:  EndSwitch
  54C:  Switch  *Var[0] 
  558:  	CaseOR  ==  00000000 
  564:  	CaseOR  ==  00000002 
  570:  		Call     SetAnimation 	( .Actor:Self 00000001 000B0004 )
  588:  		Call     UseBattleCamPreset 	( 00000002 )
  598:  		Call     MoveBattleCamOver 	( 00000008 )
  5A8:  		Call     SetAnimation 	( .Actor:Self 00000001 000B0011 )
  5C0:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  5DC:  		Add  *Var[0]  00000028 
  5EC:  		Set  *Var[1]  00000000 
  5FC:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.4003906] )
  610:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  62C:  		Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
  64C:  		Call     SetAnimation 	( .Actor:Self 00000001 000B000E )
  664:  		Wait     00000001 
  670:  		Call     SetAnimation 	( .Actor:Self 00000001 000B0011 )
  688:  		Add  *Var[0]  00000028 
  698:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  6B4:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  6D4:  		Call     SetAnimation 	( .Actor:Self 00000001 000B000E )
  6EC:  		Wait     00000001 
  6F8:  		Call     SetAnimation 	( .Actor:Self 00000001 000B0011 )
  710:  		Add  *Var[0]  00000014 
  720:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  73C:  		Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
  75C:  		Call     SetAnimation 	( .Actor:Self 00000001 000B000E )
  774:  		Wait     00000001 
  780:  		Call     SetAnimation 	( .Actor:Self 00000001 000B0011 )
  798:  		Add  *Var[0]  0000000A 
  7A8:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  7C4:  		Call     JumpToGoal  	( .Actor:Self 00000004 00000000 00000001 00000000 )
  7E4:  		Call     SetAnimation 	( .Actor:Self 00000001 000B000E )
  7FC:  		Wait     00000001 
  808:  		Call     SetAnimation 	( .Actor:Self 00000001 000B0004 )
  820:  		Wait     00000008 
  82C:  		Call     YieldTurn   	( )
  838:  		Call     SetAnimation 	( .Actor:Self 00000001 000B0008 )
  850:  		Call     SetGoalToHome 	( .Actor:Self )
  860:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
  874:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  88C:  	EndCaseGroup
  894:  EndSwitch
  89C:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  8B0:  Call     UseIdleAnimation 	( .Actor:Self .True )
  8C4:  Return
  8CC:  End
}
 
@ $Script_TakeTurn_80224304 %in vanilla this was just a script that called another script :P
{
		Call 	 RandInt ( 100` *Var[0] )
		Switch (*Var[0])
			Case < 50`
				Set *Var[A] 0
			Default
				Set *Var[A] 1
		EndSwitch
		If (*Var[A] == 0)
    0:  	ExecWait $Script_80223B74 
		Else
			ExecWait $Script_ShellShot
		EndIf
	C:  Return
   14:  End
}

#new:Script $Script_ShellShot
{
Call     UseIdleAnimation 	( .Actor:Self .False )
Call     EnableIdleScript 	( .Actor:Self 00000000 )
Call     SetAnimation 	( .Actor:Self FFFFFFFF 000C0007 )
Call     SetTargetActor ( .Actor:Self .Actor:Player )
Call     UseBattleCamPreset 	( 0000003F )
Call     BattleCamTargetActor ( .Actor:Self )
Wait     0000000F
Call     SetAnimation 	( .Actor:Self FFFFFFFF 000C0008 )
Wait	 00000020
Call     EnableActorBlur 	( .Actor:Self 00000001 )
Call     EnemyTestTarget ( .Actor:Self *Var[0] 10000000 00000000 00000001 00000010 )
Call     SetGoalToTarget 	( .Actor:Self )
Switch (*Var[0])
	Case == 00000005 %lucky: misses you
		Call     EnableActorBlur 	( .Actor:Self 00000001 )
		Call     SetGoalToTarget 	( .Actor:Self )
		Call     AddGoalPos 	( .Actor:Self 00000032 FFFFFFCE 00000000 )
		Call     SetAnimation 	( .Actor:Self FFFFFFFF 000C000A )
		Call     FlyToGoal  	( .Actor:Self 00000007 00000000 00000064 )
		Call     EnableActorBlur 	( .Actor:Self 00000000 )
		Wait 	 00000004
		Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
		Goto 0
	Case == 00000006 %invis: goes through you
		Call     EnableActorBlur 	( .Actor:Self 00000001 )
		Call     SetGoalToTarget 	( .Actor:Self )
		Call     AddGoalPos 	( .Actor:Self FFFFFFCE FFFFFFCE 00000000 )
		Call     SetAnimation 	( .Actor:Self FFFFFFFF 000C000A )
		Call     FlyToGoal  	( .Actor:Self 00000007 00000000 00000064 )
		Call     EnableActorBlur 	( .Actor:Self 00000000 )
		Wait 	 00000004
		Goto 0
	Default
EndSwitch
Call     SetAnimation 	( .Actor:Self FFFFFFFF 000C000A )
Call     FlyToGoal  	( .Actor:Self 00000007 00000000 .Easing:Linear )
Call     EnableActorBlur 	( .Actor:Self 00000000 )
Call     GetActorVar 	( .Actor:Self 00000001 *Var[9] )
Switch  *Var[9]  %5-6-7
	Case  ==  00000000  
		Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000005 00000020 )
	Case  ==  00000001  
		Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000006 00000020 )
	Case  ==  00000002  
		Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000007 00000020 )
EndSwitch
Call     PlaySoundAtActor 	( .Actor:Self 00000110 ) %the regular sound
%go home
Label 0
Call     UseBattleCamPreset 	( 00000002 ) %stop camera following
Call     SetAnimation 	( .Actor:Self FFFFFFFF 000C0017 )
Call     SetActorJumpGravity 	( .Actor:Self *Fixed[2.0] )
Call     AddGoalPos 	( .Actor:Self FFFFFFD8 00000000 00000000 )
Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000000 00000000 )
Call     SetAnimation 	( .Actor:Self FFFFFFFF 000C0000 )
ChildThread
	Wait     00000004 
	Call     SetAnimation 	( .Actor:Self FFFFFFFF 000C0003 )
EndChildThread
Call     AddGoalPos 	( .Actor:Self FFFFFFE8 00000000 00000000 )
Call     80279728 ( .Actor:Self 00000005 *Fixed[4.0] ) %also found in the kick move
Call     SetAnimation 	( .Actor:Self FFFFFFFF 000C0001 )
Wait     00000002 
Call     SetGoalToHome 	( .Actor:Self )
Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
Call     SetAnimation 	( .Actor:Self FFFFFFFF 000C0003 )
Call     FlyToGoal  	( .Actor:Self 00000000 FFFFFFFB .Easing:Linear )
Call     SetAnimation 	( .Actor:Self FFFFFFFF 000C0002 )
Call     EnableIdleScript 	( .Actor:Self 00000001 )
Call     UseIdleAnimation 	( .Actor:Self .True )
Return
End
}

%not gonna give lee bow outta sight since that would just make the fight tedious

@ $Script_TakeTurn_80226004
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     UseBattleCamPreset 	( 00000013 )
   24:  Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
   40:  Call     SetBattleCamTarget 	( *Var[0] *Var[1] *Var[2] )
   58:  Call     SetBattleCamZoom  	( 0000015E )
   68:  Call     SetBattleCamOffsetZ 	( 00000028 )
   78:  Call     MoveBattleCamOver 	( 00000050 )
   88:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   A0:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   B4:  Call     SetGoalToTarget 	( .Actor:Self )
   C4:  Call     SetAnimation 	( .Actor:Self 00000001 000E0003 )
   DC:  Call     $Function_802196F0 ( 00000001 )
   EC:  Call     AddGoalPos 	( .Actor:Self 0000000F FFFFFFF6 00000005 )
  108:  Call     FlyToGoal  	( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
  124:  Call     SetAnimation 	( .Actor:Self 00000001 000E0001 )
  13C:  Call     $Function_802196F0 ( 00000000 )
  14C:  Wait     00000005 
  158:  Call     $Function_80219658 ( 00000000 )
  168:  Call     AddGoalPos 	( .Actor:Self 00000019 00000014 00000000 )
  184:  Call     FlyToGoal  	( .Actor:Self 0000000F FFFFFFEC .Easing:CosInOut )
  1A0:  Call     SetAnimation 	( .Actor:Self 00000001 000E0005 )
  1B8:  Call     SetGoalToTarget 	( .Actor:Self )
  1C8:  Call     FlyToGoal  	( .Actor:Self 00000005 00000000 .Easing:CosInOut )
  1E4:  Call     EnemyTestTarget ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  208:  Switch  *Var[0] 
  214:  	CaseOR  ==  00000006 
  220:  	CaseOR  ==  00000005 
  22C:  		Set  *Var[A]  *Var[0] 
  23C:  		Thread
  244:  			Wait     00000005 
  250:  			Call     SetAnimation 	( .Actor:Self 00000001 000E0001 )
  268:  		EndThread
  270:  		Call     SetGoalToTarget 	( .Actor:Self )
  280:  		Call     AddGoalPos 	( .Actor:Self FFFFFFD8 0000000A 00000000 )
  29C:  		Call     FlyToGoal  	( .Actor:Self 0000000A FFFFFFEC .Easing:QuadraticOut )
  2B8:  		If  *Var[A]  ==  00000005 
  2C8:  			Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  2EC:  		EndIf
  2F4:  		Call     $Function_802196A4 ( 00000001 )
  304:  		Call     $Function_80219658 ( 00000001 )
  314:  		Wait     00000014 
  320:  		Call     UseBattleCamPreset 	( 00000002 )
  330:  		Call     YieldTurn   	( )
  33C:  		Call     SetGoalToHome 	( .Actor:Self )
  34C:  		Call     SetAnimation 	( .Actor:Self 00000001 000E0003 )
  364:  		Call     FlyToGoal  	( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
  380:  		Call     SetAnimation 	( .Actor:Self 00000001 000E0001 )
  398:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  3AC:  		Return
  3B4:  	EndCaseGroup
  3BC:  EndSwitch
  3C4:  Call     $Function_802196A4 ( 00000000 )
		Call 	 RandInt ( 100` *Var[0] ) 
		Switch (*Var[0])
			Case < 75`
				Set *Var[B] 0
				Set  *Var[A]  00000028
			Default
				Set *Var[B] 1
				Set  *Var[A]  0000004B
		EndSwitch
  %3D4:  Set  *Var[A]  00000028 
  3E4:  Call     AddBattleCamZoom  	( FFFFFFB5 )
  3F4:  Call     MoveBattleCamOver 	( *Var[A] )
  404:  Call     8024ECF8 ( 00000000 00000000 00000001 )
  41C:  Call     PlaySoundAtActor 	( .Actor:Self 00000289 )
  430:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
  444:  If  *Var[0]  &  00080000 
  454:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  470:  	Add  *Var[1]  00000004 
  480:  	Call     PlayEffect  	( ~FX:RadialFlowIn:ElectricalWaves *Var[0] *Var[1] *Var[2] *Fixed[0.5205078] *Var[A] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  4C4:  Else
  4CC:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4E8:  	Add  *Var[1]  0000000C 
  4F8:  	Call     PlayEffect  	( ~FX:RadialFlowIn:ElectricalWaves *Var[0] *Var[1] *Var[2] *Fixed[1.3007812] *Var[A] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  53C:  EndIf
  544:  Call     $Function_8021973C ( )
  550:  Set  *Var[9]  00000000 
		If (*Var[B] == 0) %normal attack
  560:  	Call     SetAnimation 	( .Actor:Self 00000001 000E0006 )
  578:  	Loop     *Var[A] 
  584:  		Add  *Var[9]  00000003 
  594:  		If  *Var[9]  >  000000C8 
  5A4:  			Set  *Var[9]  000000C8 
  5B4:  		EndIf
  5BC:  		Call     $Function_80219780 ( *Var[9] )
  5CC:  		Wait     00000001 
  5D8:  	EndLoop
  5E0:  	Call     SetAnimation 	( .Actor:Self 00000001 000E0001 )
  5F8:  	Call     8026EA7C ( FFFFFF81 00000001 00000009 )
  610:  	Call     AddBattleCamZoom  	( 0000004B )
  620:  	Call     MoveBattleCamOver 	( 00000005 )
  630: 		Thread
  638:  		Wait     00000002 
  644:  		Call     $Function_80219780 ( 00000000 )
  654:  	EndThread
  65C:  	Call     GetActorVar 	( .Actor:Self 00000001 *Var[9] )
  674:  	Switch  *Var[9] 
  680:  		Case  ==  00000000 
  68C:  			Wait     00000002 
  698: 		 		Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 08000020 0000FFFF 00000000 00000002 00000020 )
  6C0:  		Case  ==  00000001 
  6CC:  			Wait     00000002 
  6D8:  			Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 08000020 0000FFFF 00000000 00000003 00000020 )
  700:  		Case  ==  00000002 
  70C:  			Wait     00000002 
  718:  			Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 08000020 0000FFFF 00000000 00000004 00000020 )
  740:  	EndSwitch
  748:  	Switch  *Var[0] 
  754:  		CaseOR  ==  00000000 
  760:  		CaseOR  ==  00000002 
  76C:  			Call     UseBattleCamPreset 	( 00000002 )
  77C:  			Call     $Function_802196A4 ( 00000001 )
  78C:  			Call     $Function_80219658 ( 00000001 )
  79C:  			Call     AddGoalPos 	( .Actor:Self 00000019 0000000A 00000000 )
  7B8:  			Call     FlyToGoal  	( .Actor:Self 0000000F FFFFFFF6 .Easing:CosInOut )
  7D4:  			Wait     0000000F 
  7E0:  			Call     YieldTurn   	( )
  7EC:  			Call     SetGoalToHome 	( .Actor:Self )
  7FC:  			Call     SetAnimation 	( .Actor:Self 00000001 000E0003 )
  814:  			Call     FlyToGoal  	( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
  830:  			Call     SetAnimation 	( .Actor:Self 00000001 000E0001 )
  848:  		EndCaseGroup
  850:  	EndSwitch
		Else
			Call     SetAnimation 	( .Actor:Self 00000001 000E0006 )
			Loop     4B 
				Add  *Var[9]  00000003 
				If  *Var[9]  >  000000C8 
					Set  *Var[9]  000000C8 
				EndIf
				Call     $Function_80219780 ( *Var[9] )
				Wait     00000001 
			EndLoop
			Call     PlaySoundAtActor 	( .Actor:Self 0000028A )
			Thread %make watt bigger
				SetF  *Var[0]  *Fixed[1.0] 
				Loop     00000003 
					AddF  *Var[0]  *Fixed[0.40039062] 
					Call     SetActorScale 	( .Actor:Self *Var[0] *Var[0] *Var[0] )
					Wait     00000001 
				EndLoop
				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
				Add  *Var[1]  00000008 
				Call     PlayEffect  	( ~FX:EnergyIn:LongStreaks1 *Var[0] *Var[1] *Var[2] *Fixed[1.8007812] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
			EndThread
			Wait     0000000A %??
			Call     EnemyDamageTarget 	( .Actor:Self *Var[D] 08000020 0000FFFF 80010364 00000000 00000020 ) %3 turn paralyze :)
			Thread %shrink watt back to normal
				Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000014 00000000 )
				SetF  *Var[0]  *Fixed[2.2001953] 
				Loop     0000000C 
					SubF  *Var[0]  *Fixed[0.10058594] 
					Call     SetActorScale 	( .Actor:Self *Var[0] *Var[0] *Var[0] )
					Wait     00000001 
				EndLoop
				Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
				Call     SetAnimation 	( .Actor:Self FFFFFFFF 000E0001 )
			EndThread
			Switch  *Var[D] 
				CaseOR  ==  00000000 
				CaseOR  ==  00000002 
					Call     UseBattleCamPreset 	( 00000002 )
					Call     $Function_802196A4 ( 00000001 )
					Call     $Function_80219658 ( 00000001 )
					Call     AddGoalPos 	( .Actor:Self 00000019 0000000A 00000000 )
					Call     FlyToGoal  	( .Actor:Self 0000000F FFFFFFF6 .Easing:CosInOut )
					Wait     0000000F 
					Call     YieldTurn   	( )
					Call     SetGoalToHome 	( .Actor:Self )
					Call     SetAnimation 	( .Actor:Self 00000001 000E0003 )
					Call     FlyToGoal  	( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
					Call     SetAnimation 	( .Actor:Self 00000001 000E0001 )
				EndCaseGroup
			EndSwitch
			Thread %fix lighting
				Call     MakeLerp    	( 000000C8 00000000 00000014 00000000 )
				Label    00000002
				Call     UpdateLerp  	( )
				Call     $Function_80219780 ( *Var[0] )
				Wait     00000001 
				If  *Var[1]  ==  00000001 
					Goto     00000002 
				EndIf
			EndThread
		EndIf
  858:  Call     UseIdleAnimation 	( .Actor:Self .True )
  86C:  Return
  874:  End
}

@ $Script_TakeTurn_802270BC
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     UseBattleCamPreset 	( 0000003F )
   38:  Call     BattleCamTargetActor ( .Actor:Self )
   48:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   60:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   74:  Call     SetGoalToTarget 	( .Actor:Self )
  		Call 	 RandInt ( 100` *Var[0] ) 
		Switch (*Var[0])
			Case < 50` 
				Set *Var[B] 0
			Default
				Set *Var[B] 1
		EndSwitch
		If (*Var[B] == 1)
			Call     SetAnimation 	( .Actor:Self FFFFFFFF 000F0009 )
			Call     AddBattleCamZoom  	( FFFFFFCE ) %zoom in
			Call     MoveBattleCamOver 	( 0000001E )
			Wait 	 5A
			Call     SetAnimation 	( .Actor:Self FFFFFFFF 000F000A ) %time to shoot water
			Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
			Add  *Var[0]  FFFFFFF6 %0000000A 
			Add  *Var[1]  FFFFFFF5 %0000000B
			Call     UseBattleCamPreset 	( 00000003 )
			Call     MoveBattleCamOver 	( 0000000A )
			Call     EnemyTestTarget ( .Actor:Self *Var[0] 10000004 00000000 00000001 00000010 )
			Switch (*Var[0])
				Case == 00000005 %lucky: water beam misses you
					Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
					Call     SetTargetActor ( .Actor:Self .Actor:Player )
					Call     SetGoalToTarget 	( .Actor:Self )
					Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
					%Call     $Function_802382A4 ( )
					Add	*Var[3] 15
					Call     PlaySoundAtActor 	( .Actor:Self 00000297 )
					Call     PlayEffect  	( ~FX:Squirt:Waterbeam *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] 00000001 0000000A 00000000 00000000 00000000 00000000 )
					Wait     00000014 
					Goto 3
				Case == 00000006 %invis: water beam goes past you
					Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
					Call     SetTargetActor ( .Actor:Self .Actor:Player )
					Call     SetGoalToTarget 	( .Actor:Self )
					Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
					%Call     $Function_802382A4 ( )
					Sub	*Var[3] 15
					Call     PlaySoundAtActor 	( .Actor:Self 00000297 )
					Call     PlayEffect  	( ~FX:Squirt:Waterbeam *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] 00000001 0000000A 00000000 00000000 00000000 00000000 )
					Wait     00000014
					Goto 3
			EndSwitch
			Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
			Call     SetTargetActor ( .Actor:Self .Actor:Player )
			Call     SetGoalToTarget 	( .Actor:Self )
			Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
			%Call     $Function_802382A4 ( )
			Call     PlaySoundAtActor 	( .Actor:Self 00000297 )
			Call     PlayEffect  	( ~FX:Squirt:Waterbeam *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] 00000001 0000000A 00000000 00000000 00000000 00000000 )
			Wait     0000000A
			Switch  *Var[9]  %5-6-7 i think
				Case  ==  00000000  
					Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000004 00000000 00000000 00000005 00000020 )
				Case  ==  00000001  
					Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000004 00000000 00000000 00000006 00000020 )
				Case  ==  00000002  
					Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000004 00000000 00000000 00000007 00000020 )
			EndSwitch
			Label	 3
			Call     UseBattleCamPreset 	( 00000002 ) %reset camera?
			Call     YieldTurn   	( )
		Else %wow belly flop is really complicated
   84:  	Call     AddGoalPos 	( .Actor:Self 00000046 00000000 00000000 )
   A0:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   BC:  	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
   D8:  	Sub  *Var[3]  *Var[0] 
   E8:  	Div  *Var[3]  *Fixed[3.0] 
   F8:  	Set  *Var[A]  *Var[3] 
  108:  	If  *Var[A]  <  00000000 
  118:  		Mul  *Var[A]  FFFFFFFF 
  128:  	EndIf
  130:  	Call     MoveBattleCamOver 	( *Var[A] )
  140:  	Call     SetAnimation 	( .Actor:Self 00000001 000F0003 )
  158:  	Call     RunToGoal   	( .Actor:Self *Var[A] .False )
  170:  	Call     SetAnimation 	( .Actor:Self 00000001 000F0001 )
  188:  	Wait     0000000A 
  194:  	Call     UseBattleCamPreset 	( 00000008 )
  1A4:  	Call     BattleCamTargetActor ( .Actor:Self )
  1B4:  	Call     AddBattleCamZoom  	( FFFFFFCE )
  1C4:  	Call     MoveBattleCamOver 	( 0000001E )
  1D4:  	Call     8024ECF8 ( 00000001 00000001 00000001 )
  1EC:  	Call     SetAnimation 	( .Actor:Self 00000001 000F0004 )
  204:  	Wait     0000000F 
  210:  	Call     SetAnimation 	( .Actor:Self 00000001 000F0008 )
  228:  	Wait     0000000F 
  234:  	Call     EnemyTestTarget ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  258:  	Switch  *Var[0] 
  264:  		CaseOR  ==  00000006 
  270:  		CaseOR  ==  00000005 
  27C:  			Set  *Var[A]  *Var[0] 
  28C:  			Call     UseBattleCamPreset 	( 00000002 )
  29C:  			Call     MoveBattleCamOver 	( 00000014 )
  2AC:  			Call     SetAnimation 	( .Actor:Self 00000001 000F0005 )
  2C4:  			Thread
  2CC:  				Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000C 00000000 )
  2E8:  				Set  *Var[0]  00000000 
  2F8:  				Loop     0000000A 
  304:  					Add  *Var[0]  00000024 
  314:  					Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  330:  					Wait     00000001 
  33C:  				EndLoop
  344:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000014 )
  360:  			EndThread
  368:  			Thread
  370:  				Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  388:  				Switch  *Var[0] 
  394:  					Case  ==  00000000 
  3A0:  						Wait     0000000D 
  3AC:  						Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  3CC:  						Wait     00000001 
  3D8:  						Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  3F8:  						Wait     00000001 
  404:  						Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  424:  						Wait     00000001 
  430:  						Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  450:  						Wait     00000001 
  45C:  						Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  47C:  					Case  ==  00000001 
  488:  						Wait     0000000D 
  494:  						Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.0507812] *Fixed[1.0507812] *Fixed[1.0507812] )
  4B4:  						Wait     00000001 
  4C0:  						Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.1005859] *Fixed[1.1005859] *Fixed[1.1005859] )
  4E0:  						Wait     00000001 
  4EC:  						Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.1503906] *Fixed[1.1503906] *Fixed[1.1503906] )
  50C:  						Wait     00000001 
  518:  						Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.2001953] *Fixed[1.2001953] *Fixed[1.2001953] )
  538:  						Wait     00000001 
  544:  						Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.25] *Fixed[1.25] *Fixed[1.25] )
  564:  					Case  ==  00000002 
  570:  						Wait     0000000D 
  57C:  						Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.1005859] *Fixed[1.1005859] *Fixed[1.1005859] )
  59C:  						Wait     00000001 
  5A8:  						Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.2001953] *Fixed[1.2001953] *Fixed[1.2001953] )
  5C8:  						Wait     00000001 
  5D4:  						Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.3007812] *Fixed[1.3007812] *Fixed[1.3007812] )
  5F4:  						Wait     00000001 
  600:  						Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.4003906] *Fixed[1.4003906] *Fixed[1.4003906] )
  620:  						Wait     00000001 
  62C:  						Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.5] *Fixed[1.5] *Fixed[1.5] )
  64C:  				EndSwitch
  654:  			EndThread
  65C:  			Call     SetActorSounds ( FFFFFF81 00000002 00000000 00000000 )
  678:  			Call     PlaySoundAtActor 	( .Actor:Self 00002034 )
  68C:  			Call     SetGoalToTarget 	( .Actor:Self )
  69C:  			Thread
  6A4:  				Call     SetAnimation 	( .Actor:Self 00000001 000F0005 )
  6BC:  				Wait     0000000A 
  6C8:  				Call     SetAnimation 	( .Actor:Self 00000001 000F0006 )
  6E0:  			EndThread
  6E8:  			Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.0] )
  6FC:  			Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
  71C:  			Call     SetAnimation 	( .Actor:Self 00000001 000F0007 )
  734:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  750:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  76C:  			Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  78C:  			Call     LandJump ( FFFFFF81 )
  79C:  			Call     PlaySoundAtActor 	( .Actor:Self 0000029A )
  7B0:  			Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  7CC:  			Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  7E8:  			Call     AddGoalPos 	( .Actor:Self FFFFFFF1 00000000 00000000 )
  804:  			Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
  824:  			Call     PlaySoundAtActor 	( .Actor:Self 0000029A )
  838:  			Call     AddGoalPos 	( .Actor:Self FFFFFFF6 00000000 00000000 )
  854:  			Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  874:  			Call     PlaySoundAtActor 	( .Actor:Self 0000029A )
  888:  			If  *Var[A]  ==  00000005 
  898:  				Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  8BC:  			EndIf
  8C4:  			Wait     0000000A 
  8D0:  			Call     UseBattleCamPreset 	( 00000002 )
  8E0:  			Call     YieldTurn   	( )
  8EC:  			Call     SetAnimation 	( .Actor:Self 00000001 000F0003 )
  904:  			Call     SetGoalToHome 	( .Actor:Self )
  914:  			Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  928:  			Call     RunToGoal   	( .Actor:Self 00000000 .False )
  940:  			Call     EnableIdleScript 	( .Actor:Self 00000001 )
  954:  			Call     UseIdleAnimation 	( .Actor:Self .True )
  968:  			Return
  970:  		EndCaseGroup
  978:  	EndSwitch
  980:  	Call     UseBattleCamPreset 	( 00000002 )
  990:  	Call     MoveBattleCamOver 	( 0000000A )
  9A0:  	Call     SetAnimation 	( .Actor:Self 00000001 000F0005 )
  9B8:  	Thread
  9C0:  		Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000C 00000000 )
  9DC:  		Set  *Var[0]  00000000 
  9EC:  		Loop     0000000A 
  9F8:  			Add  *Var[0]  00000024 
  A08:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  A24:  			Wait     00000001 
  A30:  		EndLoop
  A38:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000014 )
  A54:  	EndThread
  A5C:  	Thread
  A64:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  A7C:  		Switch  *Var[0] 
  A88:  			Case  ==  00000000 
  A94:  				Wait     0000000D 
  AA0:  				Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.1005859] *Fixed[1.1005859] *Fixed[1.1005859] )
  AC0:  				Wait     00000001 
  ACC:  				Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.1005859] *Fixed[1.1005859] *Fixed[1.1005859] )
  AEC:  				Wait     00000001 
  AF8:  				Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.2001953] *Fixed[1.2001953] *Fixed[1.2001953] )
  B18:  				Wait     00000001 
  B24:  				Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.2001953] *Fixed[1.2001953] *Fixed[1.2001953] )
  B44:  				Wait     00000001 
  B50:  				Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.3007812] *Fixed[1.3007812] *Fixed[1.3007812] )
  B70:  			Case  ==  00000001 
  B7C:  				Wait     0000000D 
  B88:  				Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.1503906] *Fixed[1.1503906] *Fixed[1.1503906] )
  BA8:  				Wait     00000001 
  BB4:  				Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.2001953] *Fixed[1.2001953] *Fixed[1.2001953] )
  BD4:  				Wait     00000001 
  BE0:  				Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.3505859] *Fixed[1.3505859] *Fixed[1.3505859] )
  C00:  				Wait     00000001 
  C0C:  				Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.4003906] *Fixed[1.4003906] *Fixed[1.4003906] )
  C2C:  				Wait     00000001 
  C38:  				Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.5507812] *Fixed[1.5507812] *Fixed[1.5507812] )
  C58:  			Case  ==  00000002 
  C64:  				Wait     0000000D 
  C70:  				Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.2001953] *Fixed[1.2001953] *Fixed[1.2001953] )
  C90:  				Wait     00000001 
  C9C:  				Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.3007812] *Fixed[1.3007812] *Fixed[1.3007812] )
  CBC:  				Wait     00000001 
  CC8:  				Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.5] *Fixed[1.5] *Fixed[1.5] )
  CE8:  				Wait     00000001 
  CF4:  				Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.6005859] *Fixed[1.6005859] *Fixed[1.6005859] )
  D14:  				Wait     00000001 
  D20:  				Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.8007812] *Fixed[1.8007812] *Fixed[1.8007812] )
  D40:  		EndSwitch
  D48:  	EndThread
  D50:  	Call     SetActorSounds ( FFFFFF81 00000002 00000000 00000000 )
  D6C:  	Call     PlaySoundAtActor 	( .Actor:Self 00002034 )
  D80:  	Call     SetGoalToTarget 	( .Actor:Self )
  D90:  	Thread
  D98:  		Call     SetAnimation 	( .Actor:Self 00000001 000F0005 )
  DB0:  		Wait     0000000A 
  DBC:  		Call     SetAnimation 	( .Actor:Self 00000001 000F0006 )
  DD4:  	EndThread
  DDC:  	Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.6005859] )
  DF0:  	Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
  E10:  	Call     SetAnimation 	( .Actor:Self 00000001 000F0007 )
  E28:  	Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  E44:  	Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  E60:  	Thread
  E68:  		Wait     00000003 
  E74:  		Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  E94:  	EndThread
  E9C:  	Call     GetActorVar 	( .Actor:Self 00000001 *Var[A] )
  EB4:  	Switch  *Var[A] 
  EC0:  		Case  ==  00000000 
  ECC:  			Wait     00000002 
  ED8:  			Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000003 00000020 )
  F00:  		Case  ==  00000001 
  F0C:  			Wait     00000002 
  F18:  			Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000004 00000020 )
  F40:  		Case  ==  00000002 
  F4C:  			Wait     00000002 
  F58:  			Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000005 00000020 )
  F80:  	EndSwitch
  F88:  	Switch  *Var[0] 
  F94:  		CaseOR  ==  00000000 
  FA0:  		CaseOR  ==  00000002 
  FAC:  			Call     SetAnimation 	( .Actor:Self 00000001 000F0006 )
  FC4:  			Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  FE0:  			Add  *Var[0]  0000003C 
  FF0:  			Set  *Var[1]  00000000 
 1000:  			Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.4003906] )
 1014:  			Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 1030:  			Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
 1050:  			Call     PlaySoundAtActor 	( .Actor:Self 0000029A )
 1064:  			Add  *Var[0]  0000001E 
 1074:  			Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 1090:  			Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
 10B0:  			Call     PlaySoundAtActor 	( .Actor:Self 0000029A )
 10C4:  			Add  *Var[0]  00000014 
 10D4:  			Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 10F0:  			Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
 1110:  			Call     PlaySoundAtActor 	( .Actor:Self 0000029A )
 1124:  			Add  *Var[0]  0000000A 
 1134:  			Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 1150:  			Call     JumpToGoal  	( .Actor:Self 00000004 00000000 00000001 00000000 )
 1170:  			Call     PlaySoundAtActor 	( .Actor:Self 0000029A )
 1184:  			Call     SetAnimation 	( .Actor:Self 00000001 000F0001 )
 119C:  			Wait     0000000F 
 11A8:  			Call     UseBattleCamPreset 	( 00000002 )
 11B8:  			Call     YieldTurn   	( )
 11C4:  			Call     SetAnimation 	( .Actor:Self 00000001 000F0003 )
 11DC:  			Call     SetGoalToHome 	( .Actor:Self )
 11EC:  			Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
 1200:  			Call     RunToGoal   	( .Actor:Self 00000000 .False )
 1218:  		EndCaseGroup
 1220:  	EndSwitch
		EndIf
 1228:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
 123C:  Call     UseIdleAnimation 	( .Actor:Self .True )
 1250:  Return
 1258:  End
}

%spiny surge is pretty weird

%it's "working" for now

%modify the script to fix the x pos and spiny velocity
%velocity works "properly", but still need to fix x pos
#new:Function $Function_SpinySpawn %this looks like something that spawns the spinies
{
    0:  ADDIU     SP, SP, FFA8
    4:  LAW       V1, 800DC14C
    C:  LIF       F0, 120.0 %x pos?
   14:  ADDIU     A0, R0, 8C
   18:  SW        RA, 28 (SP)
   1C:  SDC1      F28, 50 (SP)
   20:  SDC1      F26, 48 (SP)
   24:  SDC1      F24, 40 (SP)
   28:  SDC1      F22, 38 (SP)
   2C:  SDC1      F20, 30 (SP)
   30:  LWC1      F24, 144 (V1)
   34:  LBU       V0, 191 (V1)
   38:  ADD.S     F24, F24, F0
   3C:  LWC1      F22, 148 (V1)
   40:  MTC1      V0, F0
   44:  NOP
   48:  CVT.S.W   F0, F0
   4C:  ADD.S     F22, F22, F0
   50:  LIF       F26, 20.0
   58:  LWC1      F28, 14C (V1)
   5C:  JAL       ~Func:rand_int %determining spiny x vel?
   60:  ADD.S     F22, F22, F26
   64:  ADDIU      V0, V0, A %+ 10
   68:  MTC1      V0, F20
   6C:  NOP
   70:  CVT.S.W   F20, F20
   74:  JAL       ~Func:rand_int %spiny y vel?
   78:  ADDIU     A0, R0, 50
   7C:  DADDU     A0, R0, R0
   80:  ADDIU     V0, V0, A % + 10
   84:  MTC1      V0, F0
   88:  NOP
   8C:  CVT.S.W   F0, F0
   90:  SWC1      F0, 14 (SP)
   94:  LIF       F0, 1.5
   9C:  MFC1      A1, F24
   A0:  MFC1      A3, F28
   A4:  MFC1      A2, F22
   A8:  ADDI      V0, R0, FFED	%(used to be 1E)  it does weird stuff to velocity (don't set it to 0) high absolute values result in it going more vertically, lower abso values result in more horizontally, but lower values increase speed?
   AC:  SWC1      F20, 10 (SP)
   B0:  SWC1      F26, 18 (SP)
   B4:  SW        V0, 20 (SP)
   B8:  JAL       80071E10		%called once per spiny (I bet this is the actual spiny spawning function)
   BC:  SWC1      F0, 1C (SP)
   C0:  LW        RA, 28 (SP)
   C4:  LDC1      F28, 50 (SP)
   C8:  LDC1      F26, 48 (SP)
   CC:  LDC1      F24, 40 (SP)
   D0:  LDC1      F22, 38 (SP)
   D4:  LDC1      F20, 30 (SP)
   D8:  ADDIU     V0, R0, 2
   DC:  JR        RA
   E0:  ADDIU     SP, SP, 58
}

/%
	80071E10 is a weird function
	calls 8005A564 with increasing values of A0 (68 - 86)
	then calls a function from a pointer
%/


@ $Script_TakeTurn_80228B78
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseBattleCamPreset 	( 0000003F )
   4C:  Call     BattleCamTargetActor ( .Actor:Self )
   5C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   74:  Call     SetAnimation 	( .Actor:Self 00000001 00100003 )
   8C:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   A8:  Call     SetGoalPos 	( .Actor:Self 00000014 0000001E *Var[2] )
   C4:  Call     FlyToGoal  	( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
   E0:  Call     SetAnimation 	( .Actor:Self 00000001 00100001 )
       	Call 	 RandInt ( 100` *Var[D] ) 
		Switch (*Var[D])
			Case < 60` %spiny surge is not that strong of a move, so 40% chance
				Set *Var[B] 0
			Default
				Set *Var[B] 1
		EndSwitch
		If (*Var[B] == 1)
			%the action command time ~= 3C
			%60 frames
			Loop F
				Call     SetPartFlagBits 	( .Actor:Self 00000003 00000001 .False )
				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
				Add  *Var[0]  00000003 
				Add  *Var[1]  00000022 
				Add  *Var[2]  00000005 
				Call     SetPartPos 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
				Call     SetAnimation 	( .Actor:Self 00000001 0010000F )
				Wait	 2
				Call     SetPartFlagBits 	( .Actor:Self 00000003 00000001 .True )
				Call     SetAnimation 	( .Actor:Self 00000001 00100001 )
				Call     $Function_SpinySpawn ( )
				Wait     2
			EndLoop
			Call	 SetTargetActor ( .Actor:Self .Actor:Player )
			Call	 SetGoalToTarget ( .Actor:Self )
			Set *Var[0] 0
			Call     EnemyTestTarget ( .Actor:Self *Var[1] 00000000 00000000 00000001 00000010 )
			Switch *Var[1]
				CaseOR == 00000005
				CaseOR == 00000006
					Goto 1
				EndCaseGroup
			EndSwitch
			Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10040000 00000000 00000000 00000004 00000020 ) %if this is the first attack you get hit by, it triggers a hp bug
			Label 1
			Wait	 10` %10 frames, why not
			Call	 SetTargetActor ( .Actor:Self .Actor:Partner )
			Call	 SetGoalToTarget ( .Actor:Self )
			Call     EnemyTestTarget ( .Actor:Self *Var[1] 00000000 00000000 00000001 00000010 )
			Switch *Var[1]
				CaseOR == 00000005
				CaseOR == 00000006
					Goto 2
				EndCaseGroup
			EndSwitch
			Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10040000 00000000 00000000 00000002 00000020 )
			Label 2
			Switch  *Var[0] 
				CaseOR  ==  00000000 
				CaseOR  ==  00000002 
					Wait     0000000F 
					Call     YieldTurn   	( )
					Call     UseBattleCamPreset 	( 00000002 )
					Call     MoveBattleCamOver 	( 00000008 )
					Call     SetAnimation 	( .Actor:Self 00000001 00100003 )
					Call     SetGoalToHome 	( .Actor:Self )
					Call     FlyToGoal  	( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
				EndCaseGroup
			EndSwitch		
		Else
   F8:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  114:  	Call     GetStatusFlags ( .Actor:Self *Var[A] )
  128:  	If  *Var[A]  &  00080000 
  138:  		Add  *Var[0]  FFFFFFFF 
  148:  		Add  *Var[1]  00000004 
  158:  		Add  *Var[2]  00000002 
  168:  		Call     SetPartScale ( .Actor:Self 00000003 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
  188:  	Else
  190:  		Add  *Var[0]  FFFFFFFD 
  1A0:  		Add  *Var[1]  0000000A 
  1B0:  		Add  *Var[2]  00000005 
  1C0:  		Call     SetPartScale ( .Actor:Self 00000003 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  1E0:  	EndIf
  1E8:  	Call     SetPartPos 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
  208:  	Wait     00000001 
  214:  	Call     SetPartFlagBits 	( .Actor:Self 00000003 00000001 .False )
  230:  	Call     SetAnimation 	( .Actor:Self 00000003 00100014 )
  248:  	Call     SetAnimation 	( .Actor:Self 00000001 0010000F )
  260:  	Loop     00000004 
  26C:  		Call     GetStatusFlags ( .Actor:Self *Var[A] )
  280:  		If  *Var[A]  &  00080000 
  290:  			AddF  *Var[1]  *Fixed[2.4003906] 
  2A0:  		Else
  2A8:  			Add  *Var[1]  00000006 
  2B8:  		EndIf
  2C0:  		Call     SetPartPos 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
  2E0:  		Wait     00000001 
  2EC:  	EndLoop
  2F4:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  310:  	Call     GetStatusFlags ( .Actor:Self *Var[A] )
  324:  	If  *Var[A]  &  00080000 
  334:  		Add  *Var[0]  FFFFFFFD 
  344:  		Add  *Var[1]  00000010 
  354:  		Add  *Var[2]  00000002 
  364:  		SetF  *Var[3]  *Fixed[0.40039062] 
  374:  	Else
  37C:  		Add  *Var[0]  FFFFFFF8 
  38C:  		Add  *Var[1]  00000028 
  39C:  		Add  *Var[2]  00000005 
  3AC:  		SetF  *Var[3]  *Fixed[1.0] 
  3BC:  	EndIf
  3C4:  	Call     PlayEffect  	( ~FX:EnergyIn:ShortStreaks *Var[0] *Var[1] *Var[2] *Var[3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  408:  	Call     PlaySoundAtActor 	( .Actor:Self 000002C5 )
  41C:  	Thread
  424: 	 		Loop     0000000F 
  430: 	 			Call     SetActorDispOffset ( FFFFFF81 00000001 00000000 00000000 )
  44C: 	 			Call     SetPartDispOffset 	( .Actor:Self 00000003 00000001 00000000 00000000 )
  46C: 	 			Wait     00000001 
  478: 	 			Call     SetActorDispOffset ( FFFFFF81 FFFFFFFF 00000000 00000000 )
  494:  			Call     SetPartDispOffset 	( .Actor:Self 00000003 FFFFFFFF 00000000 00000000 )
  4B4:  			Wait     00000001 
  4C0:  		EndLoop
  4C8:  		Call     SetActorDispOffset ( FFFFFF81 00000000 00000000 00000000 )
  4E4:  		Call     SetPartDispOffset 	( .Actor:Self 00000003 00000000 00000000 00000000 )
  504:  	EndThread
  50C:  	Call     SetGoalToTarget 	( .Actor:Self )
  51C:  	Wait     0000000A 
  528:  	Call     SetAnimation 	( .Actor:Self 00000001 00100010 )
  540:  	Wait     0000000A 
  54C:  	Call     SetAnimation 	( .Actor:Self 00000001 00100011 )
  564:  	Wait     0000000A 
  570:  	Call     SetAnimation 	( .Actor:Self 00000001 00100012 )
  588:  	Wait     00000003 
  594:  	Call     8026FA00 ( FFFFFF81 00000003 00000002 00000000 00000000 )
  5B4:  	Call     PlaySoundAtActor 	( .Actor:Self 0000201B )
  5C8:  	Call     EnemyTestTarget ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  5EC:  	Switch  *Var[0] 
  5F8:  		CaseOR  ==  00000006 
  604:  		CaseOR  ==  00000005 
  610:  			Set  *Var[A]  *Var[0] 
  620:  			Call     SetAnimation 	( .Actor:Self 00000003 00100015 )
  638:  			Call     SetPartJumpGravity 	( .Actor:Self 00000003 *Fixed[1.5] )
  650:  			Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  66C:  			Call     RandInt     	( 00000064 *Var[3] )
  680:  			Sub  *Var[3]  00000032 
  690:  			Add  *Var[0]  *Var[3] 
  6A0:  			Call     JumpPartTo 	( .Actor:Self 00000003 *Var[0] 00000000 *Var[2] 00000014 .True )
  6C8:  			Thread
  6D0:  				Add  *Var[0]  FFFFFFCE 
  6E0:  				Call     JumpPartTo 	( .Actor:Self 00000003 *Var[0] 00000000 *Var[2] 0000000F .True )
  708:  				Call     SetPartFlagBits 	( .Actor:Self 00000003 00000001 .True )
  724:  			EndThread
  72C:  			If  *Var[A]  ==  00000005 
  73C:  				Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  760:  			EndIf
  768:  			Wait     0000000F 
  774:  			Call     YieldTurn   	( )
  780:  			Call     UseBattleCamPreset 	( 00000002 )
  790:  			Call     MoveBattleCamOver 	( 0000003C )
  7A0:  			Call     SetAnimation 	( .Actor:Self 00000001 00100003 )
  7B8:  			Call     SetGoalToHome 	( .Actor:Self )
  7C8:  			Call     FlyToGoal  	( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
  7E4:  			Call     EnableIdleScript 	( .Actor:Self 00000001 )
  7F8:  			Call     UseIdleAnimation 	( .Actor:Self .True )
  80C:  			Return
  814:  		EndCaseGroup
  81C:  	EndSwitch
  824:  	Call     SetAnimation 	( .Actor:Self 00000003 00100015 )
  83C:  	Call     SetPartJumpGravity 	( .Actor:Self 00000003 *Fixed[1.5] )
  854:  	Call     SetGoalToTarget 	( .Actor:Self )
  864:  	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  880:  	Call     JumpPartTo 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] 00000014 .True )
  8A8:  	Thread
  8B0:  		Add  *Var[0]  FFFFFFCE 
  8C0:  		Call     JumpPartTo 	( .Actor:Self 00000003 *Var[0] 00000000 *Var[2] 0000000F .True )
  8E8:  		Call     SetPartFlagBits 	( .Actor:Self 00000003 00000001 .True )
  904:  	EndThread
  90C:  	Call     GetActorVar 	( .Actor:Self 00000001 *Var[9] )
  924:  	Switch  *Var[9] 
  930:  		Case  ==  00000000 
  93C:  			Wait     00000002 
  948:  			Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10040000 00000000 00000000 00000003 00000020 )
  970:  		Case  ==  00000001 
  97C:  			Wait     00000002 
  988:  			Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10040000 00000000 00000000 00000004 00000020 )
  9B0:  		Case  ==  00000002 
  9BC:  			Wait     00000002 
  9C8:  			Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10040000 00000000 00000000 00000005 00000020 )
  9F0:  	EndSwitch
  9F8:  	Switch  *Var[0] 
  A04:  		CaseOR  ==  00000000 
  A10:  		CaseOR  ==  00000002 
  A1C:  			Wait     0000000F 
  A28:  			Call     YieldTurn   	( )
  A34:  			Call     UseBattleCamPreset 	( 00000002 )
  A44:  			Call     MoveBattleCamOver 	( 00000008 )
  A54:  			Call     SetAnimation 	( .Actor:Self 00000001 00100003 )
  A6C:  			Call     SetGoalToHome 	( .Actor:Self )
  A7C:  			Call     FlyToGoal  	( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
  A98:  		EndCaseGroup
  AA0:  	EndSwitch
		EndIf
  AA8:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  ABC:  Call     UseIdleAnimation 	( .Actor:Self .True )
  AD0:  Return
  AD8:  End
}

#new:Script $Script_SummonClone
{
	Call	UseIdleAnimation 	( .Actor:Self .False )
	Call	EnableIdleScript 	( .Actor:Self .False )
	Call	SummonEnemy      	( *Var[B] 00000000 )
	Call	SetEnemyHP  		( *Var[0] *Var[C] )
	Call	SetActorRotation 	( *Var[0] 00000000 90` 00000000 )
	Call	SetActorPos       	( *Var[0] *Var[1] *Var[2] *Var[3] )
	Thread
		Set		*Var[B]	*Var[E]
		Loop		30`
			Add		*Var[B] *Var[F]
			Call	SetActorRotation 	( *Var[0] 00000000 *Var[B] 00000000 )
			Wait	1
		EndLoop
	EndThread
	Call	SetAnimation 		( *Var[0] 00000001 00A40007 )
	Call	SetGoalToIndex  	( *Var[0] *Var[A] )
	Call	SetActorJumpGravity	( *Var[0] *Fixed[0.5] )
	Call	JumpToGoal			( *Var[0] 30` 00000000 00000001 00000000 )
	Call	SetAnimation 		( *Var[0] 00000001 00A40002 )
	Call	GetActorPos       	( *Var[0] *Var[1] *Var[2] *Var[3] )
	Call	ForceHomePos 		( *Var[0] *Var[1] *Var[2] *Var[3] )
	Call	HPBarToHome    		( *Var[0] )
	Call	EnableIdleScript 	( .Actor:Self .True )
	Call	UseIdleAnimation 	( .Actor:Self .True )
	Return
	End
}

% Removed speech and camera motions
@ $Script_CopyPartner
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   %28:  Call     UseBattleCamPreset 	( 0000000E )
   %38:  Call     BattleCamTargetActor ( .Actor:Self )
   %48:  Call     MoveBattleCamOver 	( 0000000F )
   %58:  Wait     0000000F 
   %64:  Call     ActorSpeak  	( 00020027 .Actor:Self 00000001 00A40006 00A40003 ) % I bet you've never seen a move like this before!
   84:  Wait     0000000A 
   90:  Call     PlaySoundAtActor 	( .Actor:Self 000020B8 )
   A4:  Call     SetAnimation 	( .Actor:Self 00000001 00A40007 )
   BC:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   D8:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
   EC:  If  *Var[A]  &  00080000 
   FC:  	Add  *Var[1]  00000008 
  10C:  	SetF  *Var[3]  *Fixed[0.40039062] 
  11C:  Else
  124:  	Add  *Var[1]  00000014 
  134:  	SetF  *Var[3]  *Fixed[1.0] 
  144:  EndIf
  14C:  Call     PlayEffect  	( 00000013 00000001 *Var[0] *Var[1] *Var[2] *Var[3] 00000028 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  190:  Call     $Function_8021973C ( )
  19C:  Call     MakeLerp    	( 00000000 000000C8 00000014 00000000 )
  1B8:  Label    00000000 
  1C4:  Call     UpdateLerp  	( )
  1D0:  Call     $Function_80219780 ( *Var[0] )
  1E0:  Wait     00000001 
  1EC:  If  *Var[1]  ==  00000001 
  1FC:  	Goto     00000000 
  208:  EndIf
  210:  Wait     0000000A 
  21C:  Call     $Function_GetPartner ( *Var[5] *Var[6] )
  230:  Call     $Function_80218100 ( )
  23C:  Call     $Function_80219824 ( *Var[5] )
  24C:  Switch  *Var[5] 
  258:  	Case  ==  00000001 
  264:  		Call     SummonEnemy 	( $SpecialFormation_80220524 00000000 )
  278:  	Case  ==  00000002 
  284:  		Call     SummonEnemy 	( $SpecialFormation_80222274 00000000 )
  298:  	Case  ==  00000003 
  2A4:  		Call     SummonEnemy 	( $SpecialFormation_8022336C 00000000 )
  2B8:  	Case  ==  00000004 
  2C4:  		Call     SummonEnemy 	( $SpecialFormation_802243F4 00000000 )
  2D8:  	Case  ==  00000009 
  2E4:  		Call     SummonEnemy 	( $SpecialFormation_80225958 00000000 )
  2F8:  	Case  ==  00000006 
  304:  		Call     SummonEnemy 	( $SpecialFormation_80226960 00000000 )
  318:  	Case  ==  00000007 
  324:  		Call     SummonEnemy 	( $SpecialFormation_802283F0 00000000 )
  338:  	Case  ==  00000008 
  344:  		Call     SummonEnemy 	( $SpecialFormation_8022972C 00000000 )
  338:  	Case  ==  0000000A
  344:  		Call     SummonEnemy 	( $SpecialFormation_Buzzatrice 00000000 )  
  358:  EndSwitch
  360:  Set  *Var[A]  *Var[0] 
  370:  Call     8027DCBC ( FFFFFF81 *Var[A] )
  384:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:SmokeBurst )
  398:  Thread
  3A0:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3BC:  	Add  *Var[1]  00000003 
  3CC:  	Add  *Var[2]  00000005 
  3DC:  	Loop     00000003 
  3E8:  		Call     PlayEffect  	( ~FX:BigSmokePuff *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  42C:  		Wait     00000003 
  438:  	EndLoop
  440:  EndThread
  448:  Wait     00000005 
  454:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  470:  Call     SetActorPos 	( *Var[A] *Var[0] *Var[1] *Var[2] )
  48C:  Call     SetPartFlagBits 	( .Actor:Self 00000001 00020001 .True )
  4A8:  Call     SetPartFlagBits 	( .Actor:Self 00000001 00800000 .False )
  4C4:  Call     SetActorFlagBits 	( .Actor:Self 00400004 .True )
  4DC:  Call     GetActorHP  	( .Actor:Self *Var[0] )
  4F0:  Call     SetEnemyHP  	( *Var[A] *Var[0] )
  504:  Call     CopyBuffs ( .Actor:Self *Var[A] )
  518:  Call     GetOwnerID  	( *Var[0] )
  528:  Call     SetActorVar 	( *Var[A] 00000000 *Var[0] )
  540:  Call     SetActorVar 	( *Var[A] 00000001 *Var[6] )
  558:  Wait     00000014 
  %564:  Call     UseBattleCamPreset 	( 00000002 )
  %574:  Call     MoveBattleCamOver 	( 00000014 )
  584:  Thread
  58C:  	Call     MakeLerp    	( 000000C8 00000000 00000014 00000000 )
  5A8:  	Label    00000001 
  5B4:  	Call     UpdateLerp  	( )
  5C0:  	Call     $Function_80219780 ( *Var[0] )
  5D0:  	Wait     00000001 
  5DC:  	If  *Var[1]  ==  00000001 
  5EC:  		Goto     00000001 
  5F8:  	EndIf
  600:  EndThread
  608:  Call     SetActorSounds ( *Var[A] 00000002 00000000 00000000 )
  624:  Switch  *Var[5] 
  630:  	Case  ==  00000008 
  63C:  		Call     GetActorPos 	( *Var[A] *Var[0] *Var[1] *Var[2] )
  658:  		Call     SetActorJumpGravity 	( *Var[A] *Fixed[0.0107421875] )
  66C:  		Call     SetGoalPos 	( *Var[A] *Var[0] 0000000A *Var[2] )
  688:  		Call     JumpToGoal  	( *Var[A] 0000000A 00000000 00000000 00000000 )
  6A8:  		Wait     0000000A 
  6B4:  	CaseOR  ==  00000006 
  6C0:  	CaseOR  ==  00000009 
  6CC:  	CaseOR  ==  00000004 
  6CC:  	CaseOR  ==  0000000A	%fly to position
  6D8:  		Call     GetActorPos 	( *Var[A] *Var[0] *Var[1] *Var[2] )
  6F4:  		Call     SetActorJumpGravity 	( *Var[A] *Fixed[0.0107421875] )
  708:  		Call     SetGoalPos 	( *Var[A] *Var[0] 0000001E *Var[2] )
  724:  		Call     JumpToGoal  	( *Var[A] 00000014 00000000 00000000 00000000 )
  744:  	EndCaseGroup
  74C:  EndSwitch
  754:  Call     GetActorPos 	( *Var[A] *Var[0] *Var[1] *Var[2] )
  770:  Call     ForceHomePos 	( *Var[A] *Var[0] *Var[1] *Var[2] )
  78C:  Call     HPBarToHome 	( *Var[A] )
  79C:  Call     8026F838 ( *Var[A] 00000002 )
  7B0:  Wait     00000014 
  7BC:  Call     SetActorPos 	( .Actor:Self 00000000 FFFFFC18 00000000 )
  7D8:  Call     ForceHomePos 	( .Actor:Self 00000000 FFFFFC18 00000000 )
  7F4:  Call     HPBarToHome 	( .Actor:Self )
  804:  Call     SetActorVar 	( .Actor:Self 00000008 00000001 )
  81C:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  830:  Call     UseIdleAnimation 	( .Actor:Self .True )
  844:  Return
  84C:  End
}

@ $JumpTable_80232B40
{
	$Function_80219824[54] $Function_80219824[60] $Function_80219824[6C] $Function_80219824[78]
	$Function_80219824[B0] $Function_80219824[90] $Function_80219824[9C] $Function_80219824[A8]
	$Function_80219824[84] $Function_80219824[B0]
}

@ $Function_80219824
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  SW        RA, 14 (SP)
   10:  LW        V0, C (S0)
   14:  JAL       ~Func:get_variable
   18:  LW        A1, 0 (V0)
   1C:  LW        A0, 148 (S0)
   20:  JAL       ~Func:get_actor
   24:  COPY      S0, V0
   28:  COPY      V1, V0
   2C:  ADDIU     S0, S0, FFFF
   30:  SLTIU     V0, S0, A
   34:  BEQ       V0, R0, .oB0
   38:  CLEAR     A0
   3C:  SLL       V0, S0, 2
   40:  LTW       V0, V0 ($JumpTable_80232B40)
   4C:  JR        V0
   50:  NOP
	% LBL: from $JumpTable_80232B40 , entry 0`
   54:  LA        A0, $SpecialFormation_80220524
   58:  BEQ       R0, R0, .oB0
   5C:  RESERVED
	% LBL: from $JumpTable_80232B40 , entry 1`
   60:  LA        A0, $SpecialFormation_80222274
   64:  BEQ       R0, R0, .oB0
   68:  RESERVED
	% LBL: from $JumpTable_80232B40 , entry 2`
   6C:  LA        A0, $SpecialFormation_8022336C
   70:  BEQ       R0, R0, .oB0
   74:  RESERVED
	% LBL: from $JumpTable_80232B40 , entry 3`
   78:  LA        A0, $SpecialFormation_802243F4
   7C:  BEQ       R0, R0, .oB0
   80:  RESERVED
	% LBL: from $JumpTable_80232B40 , entry 8`
   84:  LA        A0, $SpecialFormation_80225958
   88:  BEQ       R0, R0, .oB0
   8C:  RESERVED
	% LBL: from $JumpTable_80232B40 , entry 5`
   90:  LA        A0, $SpecialFormation_80226960
   94:  BEQ       R0, R0, .oB0
   98:  RESERVED
	% LBL: from $JumpTable_80232B40 , entry 6`
   9C:  LA        A0, $SpecialFormation_802283F0
   A0:  BEQ       R0, R0, .oB0
   A4:  RESERVED
	% LBL: from $JumpTable_80232B40 , entry 7`
   A8:  LA        A0, $SpecialFormation_8022972C
	%Entry 9   
	% LBL: from $JumpTable_80232B40 , entry 4`
   A8:  LA        A0, $SpecialFormation_Buzzatrice
        .oB0
   B0:  LB        V1, 1F1 (V1)
   B4:  ADDIU     V1, V1, A
   B8:  SW        V1, 8 (A0)
   BC:  LW        RA, 14 (SP)
   C0:  LW        S0, 10 (SP)
   C4:  LI        V0, 2
   C8:  JR        RA
   CC:  ADDIU     SP, SP, 18
}

#new:Vector3D $LeeCloneSpawnPos
{
0` -1000` 0` 
}

#new:SpecialFormation $LeeClone1Formation
{
$LeeClone	  $LeeCloneSpawnPos 0000000B 00000000 00000000 00000000 00000000 
}


#new:SpecialFormation $LeeClone2Formation
{
$LeeClone	  $LeeCloneSpawnPos 00000009 00000000 00000000 00000000 00000000 
}

#new:Actor $LeeClone
{
% stats
[Index]        7Eb 
[Level]         0`b 
[MaxHP]       .LeeMaxHP
[Coins]         0`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8021D3D0 
% ai
[PartsCount]   1`s 
[PartsTable] $PartsTable_8021D47C 
[Script]      $Script_LeeCloneInit 
% move effectiveness
[Escape]      100`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  3`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         36`b  36`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_LeeCloneInit
{
	Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_80229F9C )
	Call     BindIdle    	( .Actor:Self $Script_Idle_8021D5B4 )
	Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021D600 )
	Call     BindNextTurn 	( .Actor:Self $Script_NextTurn_8022A038 )
	Call     SetActorVar 	( .Actor:Self 00000008 00000000 )
	Call     SetActorVar 	( .Actor:Self 00000009 .False )	% Clones don't spawn other clones
	Call     SetActorVar 	( .Actor:Self 0000000A .False ) % Clones don't speak
	Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
	Thread
		Wait	60`
		Call	8026BF48 ( 00000001 )
		ExecWait $Script_CopyPartner 
		Call	8026BF48 ( 00000000 )
	EndThread
	Call     $Function_802180D0 ( )
	Call     SetBattleFlagBits 	( 00800000 .True )
	Return
    End
}

%lee takes up a lot of space, so hopefully there's still enough space for the master fights

%need to add stuff for another dupli partner
#new:SpecialFormation $SpecialFormation_Buzzatrice
{
	$LeeBuzzatrice $Vector3D_8021E940 00000000 00000000 00000000 00000000 00000000
}

#new:IdleAnimations $IdleAnimations_Buzzatrice
{
	.Status:Normal    00FC0001
	.Status:Stone     00FC0000
	.Status:Sleep     00FC000C
	.Status:Poison    00FC0001
	.Status:Stop      00FC0000
	.Status:Static    00FC0001
	.Status:Paralyze  00FC0000
	.Status:Dizzy     00FC000B
	.Status:Fear      00FC0001
	.Status:End
}

#new:DefenseTable $DefenseTable_Buzzatrice
{
	.Element:Normal 00000002	%you don't get the full 9 defense dark beetles usually have (otherwise she would be way too hard to kill)
	.Element:Fire   00000063	%heh heh
	.Element:Throw FFFFFFFF
	.Element:End
}

#new:PartsTable $PartsTable_Buzzatrice
{
	00020000 01000000 FD2000FF $IdleAnimations_Buzzatrice $DefenseTable_Buzzatrice 000C0000 00000000 00F00000 00000000
	00800001 02003200 FDEE00FF 00000000 $DefenseTable_Buzzatrice 00000000 000C0000 00F00000 00000000
}

#new:Actor $LeeBuzzatrice
{
	% stats
	[Index]        94b
	[Level]         0`b
	[MaxHP]         .LeeMaxHP
	[Coins]         0`b
	[Flags]       00000200
	[StatusTable] $StatusTable_8021D3D0
	% ai
	[PartsCount]    2`s
	[PartsTable]  $PartsTable_Buzzatrice
	[Script]      $Script_Init_Buzzatrice
	% move effectiveness
	[Escape]      100`b
	[Item]          0`b
	[AirLift]       0`b
	[Hurricane]     0`b % Bow's "Spook" as well
	[UpAndAway]     0`b
	[PowerBounce]   3`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         38`b  38`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_Buzzatrice
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_Buzzatrice )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_Buzzatrice )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_Buzzatrice )
   3C:  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_Buzzatrice )
   50:  Call  SetActorVar   ( .Actor:Self 00000002 00000001 )
   68:  Return
   70:  End
}

#new:Script $Script_Idle_Buzzatrice
{
    0:  Return
    8:  End
}

#new:Script $Script_HandleEvent_Buzzatrice
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001
   70:  		SetConst  *Var1  00FC0006
   80:  		ExecWait  DoNormalHit
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit % E
   A0:  		SetConst  *Var0  00000001
   B0:  		SetConst  *Var1  00FC0006
   C0:  		SetConst  *Var2  00FC0005
   D0:  		ExecWait  DoBurnHit
   DC:  	Case  ==  .Event:BurnDeath % 24
   E8:  		SetConst  *Var0  00000001
   F8:  		SetConst  *Var1  00FC0006
  108:  		SetConst  *Var2  00FC0005
  118:  		ExecWait  DoBurnHit
  124:  		ExecWait  $Script_8021E0E0
  130:  		Wait  10`
  13C:  		SetConst  *Var0  00000001
  14C:  		SetConst  *Var1  00FC0005
  15C:  		ExecWait  DoDeath
  168:  		Return
  170:  	Case  ==  .Event:SpinSmashHit % B
  17C:  		SetConst  *Var0  00000001
  18C:  		SetConst  *Var1  00FC0006
  19C:  		ExecWait  DoSpinSmashHit
  1A8:  	Case  ==  .Event:SpinSmashDeath % 21
  1B4:  		ExecWait  $Script_8021E0E0
  1C0:  		SetConst  *Var0  00000001
  1D0:  		SetConst  *Var1  00FC0006
  1E0:  		ExecWait  DoSpinSmashHit
  1EC:  		SetConst  *Var0  00000001
  1FC:  		SetConst  *Var1  00FC0006
  20C:  		ExecWait  DoDeath
  218:  		Return
  220:  	Case  ==  .Event:ShockHit % 2F
  22C:  		SetConst  *Var0  00000001
  23C:  		SetConst  *Var1  00FC0005
  24C:  		Set   *Var2  00000016
  25C:  		ExecWait  $Script_8021E5DC
  268:  		Call  SetGoalToHome ( .Actor:Self )
  278:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  28C:  		Call  SetAnimation  ( .Actor:Self 00000001 00FC0003 )
  2A4:  		Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFFB .Easing:Linear )
  2C0:  	Case  ==  .Event:ShockDeath % 26
  2CC:  		ExecWait  $Script_8021E0E0
  2D8:  		SetConst  *Var0  00000001
  2E8:  		SetConst  *Var1  00FC0005
  2F8:  		Set   *Var2  00000016
  308:  		ExecWait  $Script_8021E5DC
  314:  		SetConst  *Var0  00000001
  324:  		SetConst  *Var1  00FC0006
  334:  		ExecWait  DoDeath
  340:  		Return
  348:  	CaseOR  ==  00000017 % 17
  354:  	CaseOR  ==  .Event:Immune % 19
  360:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  36C:  		SetConst  *Var0  00000001
  37C:  		SetConst  *Var1  00FC0001
  38C:  		ExecWait  DoImmune
  398:  	EndCaseGroup
  3A0:  	Case  ==  .Event:Death % 20
  3AC:  		ExecWait  $Script_8021E0E0
  3B8:  		SetConst  *Var0  00000001
  3C8:  		SetConst  *Var1  00FC0006
  3D8:  		ExecWait  DoNormalHit
  3E4:  		Wait  10`
  3F0:  		SetConst  *Var0  00000001
  400:  		SetConst  *Var1  00FC0006
  410:  		ExecWait  DoDeath
  41C:  		Return
  424:  	Case  ==  .Event:RecoverStatus % 31
  430:  		SetConst  *Var0  00000001
  440:  		SetConst  *Var1  00FC0001
  450:  		ExecWait  DoRecover
  45C:  	Case  ==  .Event:ScareAway % 39
  468:  		SetConst  *Var0  00000001
  478:  		SetConst  *Var1  00FC0006
  488:  		SetConst  *Var2  00FC0005
  498:  		ExecWait  DoScareAway
  4A4:  		Return
  4AC:  	Case  ==  .Event:BeginAirLift % 3A
  4B8:  		SetConst  *Var0  00000001
  4C8:  		SetConst  *Var1  00FC0004
  4D8:  		ExecWait  DoAirLift
  4E4:  	Case  ==  .Event:BlowAway % 16
  4F0:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  504:  		If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  514:  			If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  524:  				Call  SetActorDispOffset    ( .Actor:Self 00000000 00000001 00000000 )
  540:  			Else
  548:  				Call  SetActorDispOffset    ( .Actor:Self 00000000 00000003 00000000 )
  564:  			EndIf
  56C:  		EndIf
  574:  		SetConst  *Var0  00000001
  584:  		SetConst  *Var1  00FC0006
  594:  		ExecWait  DoBlowAway
  5A0:  		Return
  5A8:  	Default
  5B0:  EndSwitch
  5B8:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  5CC:  Call  UseIdleAnimation  ( .Actor:Self .True )
  5E0:  Return
  5E8:  End
}

%varE = damage
%uses Var0, VarC, VarD, VarB
#new:Script $Script_DamageCalc
{
	Call	 GetOwnerTarget ( *VarD *VarB )
	Call     GetActorHP  	( *VarD *Var[0] ) %this works
	Call	 GetEnemyMaxHP	( *VarD *VarC )
	If *Var[0] > *VarC
		Set *Var[0] *VarC 
	EndIf
	Set *Var[B] *Var[0]
	Mul *Var[B] -1`
	Add *Var[B] *VarC
	Add *Var[B] *VarC
	Mul *Var[E] *Var[B]
	Div *Var[E] *VarC
	Return
	End
}

#new:Script $Script_MagicBlast
{
	Call	EnableIdleScript ( .Actor:Self .False )
	Call	UseIdleAnimation ( .Actor:Self .False )
	Call	SetTargetActor ( .Actor:Self .Actor:Player )
	   1C:  Call  SetAnimation  ( .Actor:Self FFFFFFFF 00FC0003 )
   34:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   50:  Add   *Var0  -40`
   60:  Add   *Var1  20`
   70:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
		Call  FlyToGoal     ( .Actor:Self 0000000F 00000000 .Easing:CosInOut )
   A8:  Call  SetAnimation  ( .Actor:Self FFFFFFFF 00FC0001 )
   CC:  Call  SetGoalToTarget       ( .Actor:Self )
		Call  UseBattleCamPreset    ( 0000003F )
		Call     BattleCamTargetActor ( .Actor:Self )
  134:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  150:  Add   *Var0  -3`
  160:  Add   *Var1  0000000A
  170:  Add   *Var2  00000005
  1A0:  Wait  1`
  1E0:  Call  SetAnimation  ( .Actor:Self FFFFFFFF 00FC0011 )
  234:  Wait  24`
  418:  Call  SetGoalToTarget   ( .Actor:Self )
  434:  Call  SetActorVar       ( .Actor:Self 00000000 00000000 )
  44C:  Call  SetAnimation      ( .Actor:Self FFFFFFFF 00FC0014 )
  464:  Wait  3`
		Call     EnemyTestTarget ( .Actor:Self *Var[1] 00000000 00000000 00000001 00000010 )
		Set *VarF 00000000
		Switch *Var[1]
			Case == 00000005
				Set *VarF FFFFFFFF
			Case == 00000006
				Set *VarF FFFFFFFF
		EndSwitch
  4D0:  Switch  *VarF
  4DC:  	Case  ==  FFFFFFFF		%miss
				Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast2 )
				Call     GetGoalPos  	( .Actor:Self *Var[4] *Var[5] *Var[6] )
				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
				Add  *Var[0]  -15`
				Add  *Var[1]  1` 
				Call     $Function_80218200 ( *Var[0] *Var[1] *Var[2] *Var[4] *Var[5] *Var[6] 0000000A ) %shoot out magic that hits in 20 frames?
				Wait 	 10` %Wait for the actual blast
				Goto 	 1
  580:  	Case  ==  00000000
				Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast2 )
				Call     GetGoalPos  	( .Actor:Self *Var[4] *Var[5] *Var[6] )
				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
				Add  *Var[0]  -15`
				Add  *Var[1]  1` 
				Call     $Function_80218200 ( *Var[0] *Var[1] *Var[2] *Var[4] *Var[5] *Var[6] 0000000A ) %shoot out magic that hits in 20 frames?
				Wait 	 10` %Wait for the actual blast
  69C:  EndSwitch
		Call     GetActorVar 	( .Actor:Self 00000001 *Var[2] )
  744:  Switch  *Var2
  750:  	Case  ==  00000000
  75C:  		Set   *VarE  00000003
				ExecWait $Script_DamageCalc
  76C:  	Case  ==  00000001
  778:  		Set   *VarE  00000004
				ExecWait $Script_DamageCalc
  788:  	Case  ==  00000002
  794:  		Set   *VarE  00000005
				ExecWait $Script_DamageCalc
  7A4:  EndSwitch
		Call     EnemyDamageTarget 	( .Actor:Self *Var[0] ~Flags:DamageType:NoContact|Magic 00000000 00000000 *VarE 00000020 )
		Label 1
  808:  Switch  *VarF
  814:  	Case  ==  00000001
  820:  		Call  UseBattleCamPreset    ( 00000004 )
  830:  	Default
  838:  		Call  UseBattleCamPreset    ( 00000033 )
  848:  EndSwitch
  850:  Wait  15`
    C:  Call  UseBattleCamPreset    ( 00000002 )
   1C:  Call  SetGoalToHome ( .Actor:Self )
		Call  YieldTurn 	( )
   2C:  Call  SetAnimation  ( .Actor:Self FFFFFFFF 00FC0003 )
   44:  Call  FlyToGoal     ( .Actor:Self 0000000F 00000000 .Easing:CosInOut )
   60:  Call  SetAnimation  ( .Actor:Self FFFFFFFF 00FC0002 )
	Call	EnableIdleScript ( .Actor:Self .True )
	Call	UseIdleAnimation ( .Actor:Self .True )
	Return
	End
}

#new:Function $Function_80218200
{
    0:  ADDIU		SP, SP, FFA0
    4:  SW			S1, 24 (SP)
    8:  COPY		S1, A0
    C:  SW			RA, 28 (SP)
   10:  SW			S0, 20 (SP)
   14:  SDC1		F30, 58 (SP)
   18:  SDC1		F28, 50 (SP)
   1C:  SDC1		F26, 48 (SP)
   20:  SDC1		F24, 40 (SP)
   24:  SDC1		F22, 38 (SP)
   28:  SDC1		F20, 30 (SP)
   2C:  LW			S0, C (S1)
   30:  LW			A1, 0 (S0)
   34:  JAL			~Func:get_float_variable
   38:  ADDIU		S0, S0, 4
   3C:  LW			A1, 0 (S0)
   40:  ADDIU		S0, S0, 4
   44:  COPY		A0, S1
   48:  JAL			~Func:get_float_variable
   4C:  MOV.S		F30, F0
   50:  LW			A1, 0 (S0)
   54:  ADDIU		S0, S0, 4
   58:  COPY		A0, S1
   5C:  JAL			~Func:get_float_variable
   60:  MOV.S		F20, F0
   64:  LW			A1, 0 (S0)
   68:  ADDIU		S0, S0, 4
   6C:  COPY		A0, S1
   70:  JAL			~Func:get_float_variable
   74:  MOV.S		F28, F0
   78:  LW			A1, 0 (S0)
   7C:  ADDIU		S0, S0, 4
   80:  COPY		A0, S1
   84:  JAL			~Func:get_float_variable
   88:  MOV.S		F26, F0
   8C:  LW			A1, 0 (S0)
   90:  ADDIU		S0, S0, 4
   94:  COPY		A0, S1
   98:  JAL			~Func:get_float_variable
   9C:  MOV.S		F24, F0
   A0:  COPY		A0, S1
   A4:  LW			A1, 0 (S0)
   A8:  JAL			~Func:get_variable
   AC:  MOV.S		F22, F0
   B0:  LW			A0, 148 (S1)
   B4:  JAL			~Func:get_actor
   B8:  COPY		S0, V0
   BC:  CVT.D.S		F20, F20
   C0:  MFC1		A1, F30
   C4:  LIF			F1, 2.3125
   CC:  MTC1		R0, F0
   D0:  MFC1		A3, F28
   D4:  ADD.D		F20, F20, F0
   D8:  CLEAR		A0
		LI			A0, 50
   DC:  SW			S0, 1C (SP)
   E0:  CVT.S.D		F20, F20
   E4:  MFC1		A2, F20
   E8:  COPY		S0, V0
   EC:  SWC1		F26, 10 (SP)
   F0:  SWC1		F24, 14 (SP)
   F4:  JAL			8006FF50 %internal playeffect function?
   F8:  SWC1		F22, 18 (SP)
   FC:  COPY		A0, V0
  100:  LB			V1, 210 (S0)
  104:  ADDIU		V0, R0, A
  108:  BNE			V1, V0, .o128
  10C:  NOP
  110:  LW			V0, C (A0)
  114:  LIO			AT, 3ECCCCCD
  11C:  MTC1		AT, F0
  120:  NOP
  124:  SWC1		F0, 28 (V0)
        .o128
  128:  LW			RA, 28 (SP)
  12C:  LW			S1, 24 (SP)
  130:  LW			S0, 20 (SP)
  134:  LDC1		F30, 58 (SP)
  138:  LDC1		F28, 50 (SP)
  13C:  LDC1		F26, 48 (SP)
  140:  LDC1		F24, 40 (SP)
  144:  LDC1		F22, 38 (SP)
  148:  LDC1		F20, 30 (SP)
  14C:  ADDIU		V0, R0, 2
  150:  JR			RA
  154:  ADDIU		SP, SP, 60
}

#new:Script $Script_MagicBeam
{
		Call	EnableIdleScript ( .Actor:Self .False )
		Call	UseIdleAnimation ( .Actor:Self .False )
		Call	SetTargetActor ( .Actor:Self .Actor:Player )
		Call	SetGoalToTarget ( .Actor:Self )
		Call     UseBattleCamPreset 	( 0000003F )
		Call     BattleCamTargetActor ( .Actor:Self )
   14:  Call  SetAnimation      ( .Actor:Self FFFFFFFF 00FC0012 )
   2C:  Wait  15`
   44:  Call  SetAnimation      ( .Actor:Self FFFFFFFF 00FC0013 )
		Wait  30`
   78:  Call  PlaySoundAtActor  ( .Actor:Self 00002006 )
		Call	SetTargetActor ( .Actor:Self .Actor:Player )
		Call     EnemyTestTarget ( .Actor:Self *Var[1] 00000000 00000000 00000001 00000010 )
		Switch *Var[1]
			Case == 00000005
				Set *VarF 00000000
			Case == 00000006
				Set *VarF 00000001
			Default
				Set *VarF 00000001
		EndSwitch
   E8:  Switch  *VarF
   F4:  	Case  ==  00000001		%the only successful one
				Call	SetTargetActor ( .Actor:Self .Actor:Player )
  134:  		Call  	 SetGoalToTarget   ( .Actor:Self )
  144:  		Call 	 SetAnimation      ( .Actor:Self FFFFFFFF 00FC0015 )
				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
				Add		*Var1  2`
				Add 	*Var0 -14`
				Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
				/%	probably shouldn't need to fine tune this
				Sub	*Var[3] 15
				Add *Var[4] 15
				%/
				Add 	 *Var3 3
				Add	     *Var4 3
				Call     PlayEffect  	( ~FX:Squirt:Waterbeam *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] 00000001 0000000A 00000000 00000000 00000000 00000000 )
				Call	 $Function_PinkWaterBeam ( *VarF )
				Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
				Add 	 *Var3 3
				Sub	     *Var4 3
				Call     PlayEffect  	( ~FX:Squirt:Waterbeam *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] 00000001 0000000A 00000000 00000000 00000000 00000000 )
				Call	 $Function_CyanWaterBeam ( *VarF )
				Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
				Call     PlayEffect  	( ~FX:Squirt:Waterbeam *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] 00000001 0000000A 00000000 00000000 00000000 00000000 )
				Call	 $Function_YellowWaterBeam ( *VarF )
				Wait     0000000A
  240:  	Default 	%too high
				Call	SetTargetActor ( .Actor:Self .Actor:Player )
  280:  		Call  SetGoalToTarget   ( .Actor:Self )
  290:  		Call  AddGoalPos        ( .Actor:Self 00000032 00000032 00000000 )
  134:  		Call  SetGoalToTarget   ( .Actor:Self )
  144:  		Call  SetAnimation      ( .Actor:Self FFFFFFFF 00FC0016 )
				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
				Add		*Var1  2`
				Add 	*Var0 -14`
				Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
				Add 	*Var3 30`
				Add 	*Var4 30`
				/%	probably shouldn't need to fine tune this
				Sub	*Var[3] 15
				Add *Var[4] 15
				%/
				Add 	 *Var3 3
				Add	     *Var4 3
				Call     PlayEffect  	( ~FX:Squirt:Waterbeam *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] 00000001 00000006 00000000 00000000 00000000 00000000 )
				Call	 $Function_PinkWaterBeam ( *VarF )
				Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
				Add 	*Var3 30`
				Add 	*Var4 30`
				Add 	 *Var3 3
				Sub	     *Var4 3
				Call     PlayEffect  	( ~FX:Squirt:Waterbeam *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] 00000001 00000006 00000000 00000000 00000000 00000000 )
				Call	 $Function_CyanWaterBeam ( *VarF )
				Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
				Add 	*Var3 30`
				Add 	*Var4 30`
				Call     PlayEffect  	( ~FX:Squirt:Waterbeam *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] 00000001 00000006 00000000 00000000 00000000 00000000 )
				Call	 $Function_YellowWaterBeam ( *VarF )
				Wait     00000004
				Goto 	 A
  3A8:  EndSwitch
		Call     GetActorVar 	( .Actor:Self 00000001 *Var[2] )
		%calculate damage by level
		Call  GetActorLevel     ( .Actor:Self *VarE )
		Switch *Var2
			Case == 00000000
				Set *VarF 4
			Case == 00000001
				Set *VarF 5
			Case == 00000002
				Set *VarF 6
			Default
				Set *VarF 7
		EndSwitch
		%
		Call  GetOwnerTarget ( *VarB *VarC )
		Call  GetActorAttackBoost	( *VarB *VarD )
		If *VarD > 0
			Add   *VarF *VarD
		EndIf
		Call  GetActorDefenseBoost	( *VarB *VarD )
		If *VarD > 0
			Add   *VarF *VarD
		EndIf
		%Add in mario's charge too
		Call	$Function_ChargeCheck ( *Var6 *Var7 )
		Add *VarF *Var6
		Add *VarF *Var7
		Call	SetTargetActor ( .Actor:Self .Actor:Player )
  3D4:  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] ~Flags:DamageType:NoContact|Magic 00000000 00000000 *VarF 00000020 )
  3F8:  Call  PlaySoundAtActor      ( .Actor:Self 00000110 )
  42C:  Call  PlaySoundAtActor  ( .Actor:Self 00000000 )
  440:  Label  A
  850:  Wait  15`
    C:  Call  UseBattleCamPreset    ( 00000002 )
   1C:  Call  SetGoalToHome ( .Actor:Self )
		Call  YieldTurn 	( )
   2C:  Call  SetAnimation  ( .Actor:Self FFFFFFFF 00FC0003 )
   44:  Call  FlyToGoal     ( .Actor:Self 0000000F 00000000 .Easing:CosInOut )
   60:  Call  SetAnimation  ( .Actor:Self FFFFFFFF 00FC0002 )
	Call	EnableIdleScript ( .Actor:Self .True )
	Call	UseIdleAnimation ( .Actor:Self .True )
	Return
	End
}

#new:Function $Function_ChargeCheck
{
    0:  ADDIU		SP, SP, FFE0
    4:  SW			S1, 14 (SP)
    8:  COPY		S1, A0
    C:  SW			S2, 18 (SP)
   10:  LIA			S2, 800DC070
   18:  SW			RA, 1C (SP)
   1C:  SW			S0, 10 (SP)
   20:  LW			S0, C (S1)
   24:  LB			A2, 97 (S2)
   28:  LW			A1, 0 (S0)
   2C:  JAL			~Func:set_variable
   30:  ADDIU		S0, S0, 4
   34:  LW			A1, 0 (S0)
   38:  LB			A2, 96 (S2)
   3C:  JAL			~Func:set_variable
   40:  COPY		A0, S1
   44:  LW			RA, 1C (SP)
   48:  LW			S2, 18 (SP)
   4C:  LW			S1, 14 (SP)
   50:  LW			S0, 10 (SP)
   54:  ADDIU		V0, R0, 2
   58:  JR			RA
   5C:  ADDIU		SP, SP, 20
}

%effect colors
%FF, FF, 80
%FF, FF, 00
#new:Function $Function_YellowWaterBeam    
{
    0:  ADDIU        SP, SP, FFE8
    4:  SW            RA, 10 (SP)
    8:  LW            V0, C (A0)
    C:  JAL            ~Func:get_variable
   10:  LW            A1, 0 (V0)
   14:  LW            V1, C (V0)
   18:  ADDIU        A0, R0, FF                %R
   1C:  SW            A0, 34 (V1)
   20:  LW            V1, C (V0)
        ADDIU        A0, R0, FF                %G
   24:  SW            A0, 38 (V1)
   28:  LW            V1, C (V0)
   2C:  ADDIU        A1, R0, 80                %B
   30:  SW            A1, 3C (V1)
   34:  LW            A0, C (V0)
   38:  ADDIU        V1, R0, FF                %R 2
   3C:  SW            V1, 44 (A0)
   40:  LW            A0, C (V0)
   44:  ADDIU        V1, R0, FF                %G 2
   48:  SW            V1, 48 (A0)
   4C:  LW            V1, C (V0)
        ADDIU        A1, R0, 00                %B 2
   50:  SW            A1, 4C (V1)
   54:  LW            RA, 10 (SP)
   58:  ADDIU        V0, R0, 2
   5C:  JR            RA
   60:  ADDIU        SP, SP, 18
}

%FF, 80, FF
%FF, 00, FF
#new:Function $Function_PinkWaterBeam    
{
    0:  ADDIU        SP, SP, FFE8
    4:  SW            RA, 10 (SP)
    8:  LW            V0, C (A0)
    C:  JAL            ~Func:get_variable
   10:  LW            A1, 0 (V0)
   14:  LW            V1, C (V0)
   18:  ADDIU        A0, R0, FF                %R
   1C:  SW            A0, 34 (V1)
   20:  LW            V1, C (V0)
        ADDIU        A0, R0, 80                %G
   24:  SW            A0, 38 (V1)
   28:  LW            V1, C (V0)
   2C:  ADDIU        A1, R0, FF                %B
   30:  SW            A1, 3C (V1)
   34:  LW            A0, C (V0)
   38:  ADDIU        V1, R0, FF                %R 2
   3C:  SW            V1, 44 (A0)
   40:  LW            A0, C (V0)
   44:  ADDIU        V1, R0, 00                %G 2
   48:  SW            V1, 48 (A0)
   4C:  LW            V1, C (V0)
        ADDIU        A1, R0, FF                %B 2
   50:  SW            A1, 4C (V1)
   54:  LW            RA, 10 (SP)
   58:  ADDIU        V0, R0, 2
   5C:  JR            RA
   60:  ADDIU        SP, SP, 18
}

%80, FF, FF
%00, FF, FF
#new:Function $Function_CyanWaterBeam    
{
    0:  ADDIU        SP, SP, FFE8
    4:  SW            RA, 10 (SP)
    8:  LW            V0, C (A0)
    C:  JAL            ~Func:get_variable
   10:  LW            A1, 0 (V0)
   14:  LW            V1, C (V0)
   18:  ADDIU        A0, R0, 80                %R
   1C:  SW            A0, 34 (V1)
   20:  LW            V1, C (V0)
        ADDIU        A0, R0, FF                %G
   24:  SW            A0, 38 (V1)
   28:  LW            V1, C (V0)
   2C:  ADDIU        A1, R0, FF                %B
   30:  SW            A1, 3C (V1)
   34:  LW            A0, C (V0)
   38:  ADDIU        V1, R0, 00                %R 2
   3C:  SW            V1, 44 (A0)
   40:  LW            A0, C (V0)
   44:  ADDIU        V1, R0, FF                %G 2
   48:  SW            V1, 48 (A0)
   4C:  LW            V1, C (V0)
        ADDIU        A1, R0, FF                %B 2
   50:  SW            A1, 4C (V1)
   54:  LW            RA, 10 (SP)
   58:  ADDIU        V0, R0, 2
   5C:  JR            RA
   60:  ADDIU        SP, SP, 18
}



#new:Script $Script_TakeTurn_Buzzatrice
{
		Call 	 RandInt ( 100` *Var[0] )
		If *Var0 < 50`
			Set *Var[A] 0
		Else
			Set *Var[A] 1
		EndIf
		If *VarA == 0
			ExecWait  $Script_MagicBlast
		Else
			ExecWait  $Script_MagicBeam
		EndIf
    C:  Return
   14:  End
}

#new:Script $Script_NextTurn_Buzzatrice
{
    0:  Call  GetBattlePhase    ( *Var0 )
   10:  Switch  *Var0
   1C:  	Case  ==  0000000C
   28:  		Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
   40:  		If  *Var0  >  00000000
   50:  			Sub   *Var0  00000001
   60:  			Call  SetActorVar   ( .Actor:Self 00000002 *Var0 )
   78:  			BreakCase
   80:  		EndIf
   88:  		SetConst  *Var0  00000001
   98:  		SetConst  *Var1  00FC0005
   A8:  		ExecWait  $Script_8021E118
   B4:  		Return
   BC:  EndSwitch
   C4:  Return
   CC:  End
}




%master 1
%80 hp
%attack power = # of hits (up to 25)
%zaptap fails
%each hit drains fp equal to current attack power, capped at -9 fp per hit
%	(fp drain is reduced by 2 if blocked)

@ $TheMaster1
{
% stats 
[MaxHP]        80`b 
[PowerBounce]	3`b
}

%statuses are unlikely to work
%paralyze and stop are the only ones that can maybe infinitely stunlock him
%assuming good rng
@ $StatusTable_8022A2B8
{
.Status:Normal     30`
.Status:Default    30`
.Status:Sleep       0`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy       0`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   40`
.Status:Shrink      0`
.Status:Stop       40`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod    -1`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod    -1`
.Status:StopTurnMod      -2`
.Status:End
}

@ $Script_Init_8022A3B0
{
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8022AA54 )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_8022A494 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8022B2CC )
   3C:  Call     BindNextTurn 	( .Actor:Self $Script_NextTurn_8022B06C )
   50:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   68:  Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
   80:  Call     SetActorVar 	( .Actor:Self 00000002 00000000 )
   98:  Call     SetActorVar 	( .Actor:Self 00000003 00000002 )
		Call     SetActorVar 	( .Actor:Self 00000004 00000000 ) %hit counter
		Call     SetActorVar 	( .Actor:Self 00000005 00000000 ) %speech thing
   B0:  Set  *Flag_KMR_48  00000001 
   C0:  Call     SetBattleFlagBits 	( 00800000 .True )
   D4:  Return
   DC:  End
}
   
@ $Script_HandleEvent_8022B2CC
{
		% count hits
		Call     GetLastEvent 	( .Actor:Self *Var[0] )
		Switch   *Var[0] 
			CaseOR     ==  .Event:HitCombo
			CaseOR     ==  .Event:Hit
			CaseOR     ==  .Event:SpinSmashHit % why would you use multibounce though?
			CaseOR     ==  .Event:BurnHit
			CaseOR     ==  .Event:ShockHit %he's immune to zaptap but i'm keeping this in for completeness
			CaseOR     ==  0000000B
				Call     GetLastDamage 	( .Actor:Self *Var[1] )
				If  *Var[1]  >  0
					Call	GetActorVar 	( .Actor:Self 00000004 *Var[1] )
					If  *Var[1]  <  25`
						Call	AddActorVar	( .Actor:Self 00000004 00000001 )
					EndIf
				EndIf
			EndCaseGroup
		EndSwitch
    0:  ExecWait $Script_8022A4A4 
    C:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
   20:  If  *Var[0]  &  00351000 
   30:  	Return
   38:  EndIf
   40:  Call     GetBattleFlags ( *Var[0] )
   50:  If  *Var[0]  &  00000240 
   60:  	Call     GetLastDamage 	( .Actor:Self *Var[0] )
   74:  	If  *Var[0]  >  00000000 
   84:  		Call     SetActorVar 	( .Actor:Self 00000002 00000001 )
   9C:  		Call     AddActorVar 	( .Actor:Self 00000003 00000001 )
   B4:  	EndIf
   BC:  EndIf
   C4:  Call     GetLastEvent 	( .Actor:Self *Var[0] )
   D8:  Switch  *Var[0] 
   E4:  	CaseOR  ==  .Event:Hit % A
   F0:  	CaseOR  ==  .Event:BurnHit % E
   FC:  	CaseOR  ==  .Event:SpinSmashHit % B
  108:  	CaseOR  ==  .Event:Immune % 19
  114:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  120:  		Call     GetActorVar 	( .Actor:Self 00000002 *Var[A] )
  138:  		Call     GetActorVar 	( .Actor:Self 00000003 *Var[B] )
  150:  		Call     SetActorVar 	( .Actor:Self 00000002 00000000 )
  168:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  17C:  		If  *Var[0]  &  003F1000 
  18C:  			BreakCase
  194:  		EndIf
  19C:  		Set  *Flag[00]  00000000 
  1AC:  		Call     GetMenuSelection 	( *Var[0] *Var[1] *Var[2] )
  1C4:  		Switch  *Var[0] 
  1D0:  			CaseOR  ==  00000001 
  1DC:  			CaseOR  ==  00000000 
  1E8:  				Set  *Flag[00]  00000001 
  1F8:  			EndCaseGroup
  200:  		EndSwitch
  208:  		If  *Flag[00]  ==  00000000 
  218:  			BreakCase
  220:  		EndIf
  228:  		Call     UseIdleAnimation 	( .Actor:Self .False )
  23C:  		Call     EnableIdleScript 	( .Actor:Self 00000000 )
				Call	GetActorVar 	( .Actor:Self 00000005 *Var[1] )
				If  *Var[1]  ==  .False
					Call	GetActorVar		( .Actor:Self 00000004 *Var[1] )
					If  *Var[1]  >  6
						Call	SetActorVar 	( .Actor:Self 00000005 .True )
						Call	UseBattleCamPreset 	( 00000002 )
						Call	MoveBattleCamOver 	( 0000000A )
						Call	ActorSpeak  	( $MyPowerGrows .Actor:Self 00000001 00A20009 00A20005 )
						Call	EnableIdleScript 	( .Actor:Self .True )
						Call	UseIdleAnimation 	( .Actor:Self .True )
						Return
					EndIf
				EndIf
  250:  		If  *Var[A]  ==  00000001 
  260:  			If  *Var[B]  >  00000002 
  270:  				Call     UseBattleCamPreset 	( 00000002 )
  280:  				Call     MoveBattleCamOver 	( 0000000A )
  290:  				Call     ActorSpeak  	( 00020030 .Actor:Self 00000001 00A20009 00A20005 ) % Hm! Excellent move.
  2B0:  				Call     SetActorVar 	( .Actor:Self 00000003 00000000 )
  2C8:  			EndIf
  2D0:  		Else
  2D8:  			Call     UseBattleCamPreset 	( 00000002 )
  2E8:  			Call     MoveBattleCamOver 	( 0000000A )
  2F8:  			Call     ActorSpeak  	( 0002002F .Actor:Self 00000001 00A20009 00A20005 ) % Foolish! That won't work on me.
  318:  		EndIf
  320:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  334:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  348:  	EndCaseGroup
  350:  EndSwitch
  358:  Return
  360:  End
}
  
#string $MyPowerGrows
{
[STYLE:Right]Don't you see?[PAUSE:1C][BR]
My power grows with every strike[BR]
you deliver![PAUSE:10] You cannot win![BR]
[Wait][END]
}

@ $Script_TakeTurn_8022AA54
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseBattleCamPreset 	( 0000003F )
   4C:  Call     BattleCamTargetActor ( .Actor:Self )
   5C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   74:  Call     SetAnimation 	( .Actor:Self 00000001 00A20007 )
   8C:  Call     SetGoalToTarget 	( .Actor:Self )
   9C:  Call     AddGoalPos 	( .Actor:Self 0000001E 00000000 00000000 )
   B8:  Call     SetActorSpeed 	( .Actor:Self *Fixed[4.600586] )
   CC:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
   E4:  Call     SetAnimation 	( .Actor:Self 00000001 00A20002 )
   FC:  Wait     0000000A 
  108:  Thread
  110:  	Call     PlaySoundAtActor 	( .Actor:Self 000020BB )
  124:  	Wait     00000005 
  130:  	Call     PlaySoundAtActor 	( .Actor:Self 000020BB )
  144:  EndThread
  14C:  Call     SetAnimation 	( .Actor:Self 00000001 00A20010 )
  164:  Wait     0000000A 
  170:  Thread
  178:  	Call     SetAnimation 	( .Actor:Self 00000001 00A20011 )
  190:  	Wait     00000007 
  19C:  	Call     SetAnimation 	( .Actor:Self 00000001 00A20012 )
  1B4:  EndThread
  1BC:  Call     SetGoalToTarget 	( .Actor:Self )
  1CC:  Call     RunToGoal   	( .Actor:Self 00000008 .True )
  1E4:  Call     EnemyTestTarget ( .Actor:Self *Var[A] 10000000 00000000 00000000 00000010 )
  208:  Switch  *Var[A] 
  214:  	CaseOR  ==  .HitResult:Miss % 6
  220:  	CaseOR  ==  .HitResult:Lucky % 5
  22C:  		Call     UseBattleCamPreset 	( 00000002 )
  23C:  		Wait     0000000A 
  248:  		Call     SetGoalToTarget 	( .Actor:Self )
  258:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  274:  		Add  *Var[0]  00000014 
  284:  		Set  *Var[1]  00000000 
  294:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20007 )
  2AC:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2C8:  		Call     RunToGoal   	( .Actor:Self 0000000A .True )
  2E0:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20002 )
  2F8:  		Wait     00000003 
  304:  		If  *Var[A]  ==  00000005 
  314:  			Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  338:  		EndIf
  340:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20002 )
  358:  		Call     SetGoalToHome 	( .Actor:Self )
  368:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[3.8007812] )
  37C:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20007 )
  394:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  3AC:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20002 )
  3C4:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  3D8:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  3EC:  		Return
  3F4:  	EndCaseGroup
  3FC:  EndSwitch
  404:  Call     PlaySoundAtActor 	( .Actor:Self 000003ED )
  418:  Wait     00000002 
		Call 	 GetActorVar ( .Actor:Self 00000004 *Var[E] )
  424:  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 *Var[E] 00000030 )
  44C:  Switch  *Var[0] 
  458:  	CaseOR  ==  00000000 
  464:  	CaseOR  ==  00000002 
				ExecWait $Script_FP_Drain
  470:  		Call     UseBattleCamPreset 	( 00000002 )
  480:  		Call     SetGoalToTarget 	( .Actor:Self )
  490:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4AC:  		Add  *Var[0]  00000014 
  4BC:  		Set  *Var[1]  00000000 
  4CC:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20007 )
  4E4:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  500:  		Call     RunToGoal   	( .Actor:Self 0000000A .True )
  518:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20002 )
  530:  		Wait     00000014 
  53C:  	EndCaseGroup
  544:  EndSwitch
  54C:  Call     UseBattleCamPreset 	( 00000002 )
  55C:  Call     SetAnimation 	( .Actor:Self 00000001 00A20002 )
  574:  Call     SetGoalToHome 	( .Actor:Self )
  584:  Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  598:  Call     SetAnimation 	( .Actor:Self 00000001 00A20007 )
  5B0:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  5C8:  Call     SetAnimation 	( .Actor:Self 00000001 00A20002 )
  5E0:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  5F4:  Call     UseIdleAnimation 	( .Actor:Self .True )
  608:  Return
  610:  End
}
  
%Master 2
%100 hp, 2 def
%single strike atk power = # of hits + 2
%double strike atk power = # of hits (mininum of 1) (x 2)
%	fp drain is 1 less than attack power
%zaptap fails
%each hit drains fp equal to current attack power, capped at -9 fp per hit
%	(fp drain is reduced by 2 if blocked)

%similar to master 1, but can't paralyze him as much
@ $StatusTable_8022B6E4
{
.Status:Normal     20`
.Status:Default    20`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy       0`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   25`
.Status:Shrink      0`
.Status:Stop       40`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -2`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod    -1`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod    -1`
.Status:StopTurnMod      -2`
.Status:End
}

@ $DefenseTable_8022B6D8
{
.Element:Normal 00000002
.Element:End
}

@ $TheMaster2
{
[MaxHP]       100`b 
[PowerBounce]   3`b 
}

@ $Script_Init_8022B7DC
{
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8022CF48 )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_8022B8B0 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8022D634 )
   3C:  Call     BindNextTurn 	( .Actor:Self $Script_NextTurn_8022CFFC )
   50:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   68:  Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
   80:  Call     SetActorVar 	( .Actor:Self 00000002 00000000 )
   98:  Call     SetActorVar 	( .Actor:Self 00000003 00000002 )
		Call 	 SetActorVar ( .Actor:Self 00000004 00000002 ) % initialize hit counter
   B0:  Call     SetBattleFlagBits 	( 00800000 .True )
   C4:  Return
   CC:  End
}
   
@ $Script_HandleEvent_8022D634
{
		% count hits
		Call     GetLastEvent 	( .Actor:Self *Var[0] )
		Switch   *Var[0] 
			CaseOR     ==  .Event:HitCombo
			CaseOR     ==  .Event:Hit
			CaseOR     ==  .Event:SpinSmashHit % why would you use multibounce though?
			CaseOR     ==  .Event:BurnHit
			CaseOR     ==  .Event:ShockHit %he's immune to zaptap but i'm keeping this in for completeness
			CaseOR     ==  0000000B
				Call     GetLastDamage 	( .Actor:Self *Var[1] )
				If  *Var[1]  >  0
					Call	GetActorVar 	( .Actor:Self 00000004 *Var[1] )
					If  *Var[1]  <  25`
						Call	AddActorVar	( .Actor:Self 00000004 00000001 )
					EndIf
				EndIf
			EndCaseGroup
		EndSwitch
    0:  ExecWait $Script_8022B8C0 
    C:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
   20:  If  *Var[0]  &  00351000 
   30:  	Return
   38:  EndIf
   40:  Call     GetBattleFlags ( *Var[0] )
   50:  If  *Var[0]  &  00000240 
   60:  	Call     GetLastDamage 	( .Actor:Self *Var[0] )
   74:  	If  *Var[0]  >  00000000 
   84:  		Call     SetActorVar 	( .Actor:Self 00000002 00000001 )
   9C:  		Call     AddActorVar 	( .Actor:Self 00000003 00000001 )
   B4:  	EndIf
   BC:  EndIf
   C4:  Call     GetLastEvent 	( .Actor:Self *Var[0] )
   D8:  Switch  *Var[0] 
   E4:  	CaseOR  ==  .Event:Hit % A
   F0:  	CaseOR  ==  .Event:BurnHit % E
   FC:  	CaseOR  ==  .Event:SpinSmashHit % B
  108:  	CaseOR  ==  .Event:Immune % 19
  114:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  120:  		Call     GetActorVar 	( .Actor:Self 00000002 *Var[A] )
  138:  		Call     GetActorVar 	( .Actor:Self 00000003 *Var[B] )
  150:  		Call     SetActorVar 	( .Actor:Self 00000002 00000000 )
  168:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  17C:  		If  *Var[0]  &  003F1000 
  18C:  			BreakCase
  194:  		EndIf
  19C:  		Set  *Flag[00]  00000000 
  1AC:  		Call     GetMenuSelection 	( *Var[0] *Var[1] *Var[2] )
  1C4:  		Switch  *Var[0] 
  1D0:  			CaseOR  ==  00000001 
  1DC:  			CaseOR  ==  00000000 
  1E8:  				Set  *Flag[00]  00000001 
  1F8:  			EndCaseGroup
  200:  		EndSwitch
  208:  		If  *Flag[00]  ==  00000000 
  218:  			BreakCase
  220:  		EndIf
  228:  		Call     UseIdleAnimation 	( .Actor:Self .False )
  23C:  		Call     EnableIdleScript 	( .Actor:Self 00000000 )
  250:  		If  *Var[A]  ==  00000001 
  260:  			If  *Var[B]  >  00000002 
  270:  				Call     UseBattleCamPreset 	( 00000002 )
  280:  				Call     MoveBattleCamOver 	( 0000000A )
  290:  				Call     ActorSpeak  	( 00020035 .Actor:Self 00000001 00A2000A 00A20006 ) % Hm! Nice maneuver.
  2B0:  				Call     SetActorVar 	( .Actor:Self 00000003 00000000 )
  2C8:  			EndIf
  2D0:  		Else
  2D8:  			Call     UseBattleCamPreset 	( 00000002 )
  2E8:  			Call     MoveBattleCamOver 	( 0000000A )
  2F8:  			Call     ActorSpeak  	( 00020034 .Actor:Self 00000001 00A2000A 00A20006 ) % You can't defeat me like that!
  318:  		EndIf
  320:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  334:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  348:  	EndCaseGroup
  350:  EndSwitch
  358:  Return
  360:  End
}
  
@ $Script_SingleStrike2
{
    0:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   14:  Call     UseBattleCamPreset 	( 0000003F )
   24:  Call     BattleCamTargetActor ( .Actor:Self )
   34:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   4C:  Call     SetAnimation 	( .Actor:Self 00000001 00A20008 )
   64:  Call     SetGoalToTarget 	( .Actor:Self )
   74:  Call     AddGoalPos 	( .Actor:Self 00000032 00000000 00000000 )
   90:  Call     SetActorSpeed 	( .Actor:Self *Fixed[7.6] ) %3.8 -> 7.6
   A4:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
   BC:  Call     SetAnimation 	( .Actor:Self 00000001 00A20003 )
   D4:  Wait     0000000A 
   E0:  Call     PlaySoundAtActor 	( .Actor:Self 000020BD )
   F4:  Thread
   FC:  	Wait     0000000F 
  108:  	Call     PlaySoundAtActor 	( .Actor:Self 000020BD )
  11C:  EndThread
  124:  Call     SetAnimation 	( .Actor:Self 00000001 00A2000E )
  13C:  Wait     0000001E 
  148:  Call     SetAnimation 	( .Actor:Self 00000001 00A2000F )
  160:  Call     PlaySoundAtActor 	( .Actor:Self 000020BC )
  174:  Call     PlaySoundAtActor 	( .Actor:Self 000020BB )
  188:  Call     EnemyTestTarget ( .Actor:Self *Var[A] 00000000 00000000 00000000 00000010 )
  1AC:  Switch  *Var[A] 
  1B8:  	CaseOR  ==  .HitResult:Miss % 6
  1C4:  	CaseOR  ==  .HitResult:Lucky % 5
  1D0:  		Call     UseBattleCamPreset 	( 00000002 )
  1E0:  		Call     EnableActorBlur 	( .Actor:Self 00000001 )
  1F4:  		Call     SetGoalToTarget 	( .Actor:Self )
  204:  		Call     AddGoalPos 	( .Actor:Self FFFFFFCE 00000000 00000000 )
  220:  		Call     RunToGoal   	( .Actor:Self 0000000A .False ) 
  238:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20003 )
  250:  		Call     EnableActorBlur 	( .Actor:Self 00000000 )
  264:  		Wait     0000000A 
  270:  		If  *Var[A]  ==  00000005 
  280:  			Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  2A4:  		EndIf
  2AC:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20003 )
  2C4:  		Call     SetGoalToHome 	( .Actor:Self )
  2D4:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[16.0] ) %8 -> 16
  2E8:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20008 )
  300:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  318:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20003 )
  330:  		Return
  338:  	EndCaseGroup
  340:  EndSwitch
  348:  Call     EnableActorBlur 	( .Actor:Self 00000001 )
  35C:  Call     SetGoalToTarget 	( .Actor:Self )
  36C:  Call     AddGoalPos 	( .Actor:Self 00000000 00000000 00000000 )
  388:  Call     RunToGoal   	( .Actor:Self 00000005 .False )
  3A0:  Call     EnableActorBlur 	( .Actor:Self 00000000 )
  3B4:  Call     PlaySoundAtActor 	( .Actor:Self 000003ED )
  3C8:  Call     PlaySoundAtActor 	( .Actor:Self 000020BB )
  3DC:  Wait     00000002 
		Call 	 GetActorVar ( .Actor:Self 00000004 *Var[E] )
  3E8:  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 *Var[E] 00000030 )
  410:  Switch  *Var[0] 
  41C:  	CaseOR  ==  00000000 
  428:  	CaseOR  ==  00000002 
				ExecWait $Script_FP_Drain
  434:  		Call     UseBattleCamPreset 	( 00000002 )
  444:  		Call     PlaySoundAtActor 	( .Actor:Self 000020BB )
  458:  		Thread
  460:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000014 00000000 )
  47C:  			Set  *Var[0]  00000000 
  48C:  			Loop     0000000A 
  498:  				Add  *Var[0]  00000024 
  4A8:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  4C4:  				Wait     00000001 
  4D0:  			EndLoop
  4D8:  		EndThread
  4E0:  		Call     SetGoalToTarget 	( .Actor:Self )
  4F0:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  50C:  		Add  *Var[0]  00000032 
  51C:  		Set  *Var[1]  00000000 
  52C:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[0.20019531] )
  540:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20021 )
  558:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  574:  		Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  594:  		Call     PlaySoundAtActor 	( .Actor:Self 000020BA )
  5A8:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20023 )
  5C0:  		Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  5DC:  		Wait     00000003 
  5E8:  		Add  *Var[0]  00000014 
  5F8:  		Set  *Var[1]  00000000 
  608:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20021 )
  620:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  63C:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  65C:  		Call     PlaySoundAtActor 	( .Actor:Self 000003B4 )
  670:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20023 )
  688:  		Wait     00000014 
  694:  	EndCaseGroup
  69C:  EndSwitch
  6A4:  Call     SetAnimation 	( .Actor:Self 00000001 00A20003 )
  6BC:  Call     SetGoalToHome 	( .Actor:Self )
  6CC:  Call     SetActorSpeed 	( .Actor:Self *Fixed[7.6] ) %3.8 -> 7.6
  6E0:  Call     SetAnimation 	( .Actor:Self 00000001 00A20008 )
  6F8:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  710:  Call     SetAnimation 	( .Actor:Self 00000001 00A20003 )
  728:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  73C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  750:  Return
  758:  End
}
  
@ $Script_DoubleStrike2
{
    0:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   14:  Call     UseBattleCamPreset 	( 00000008 )
   24:  Call     BattleCamTargetActor ( .Actor:Self )
   34:  Call     SetBattleCamZoom  	( 000000C8 )
   44:  Call     SetBattleCamOffsetZ 	( 0000000D )
   54:  Call     MoveBattleCamOver 	( 0000003C )
   64:  Call     SetAnimation 	( .Actor:Self 00000001 00A20015 )
   7C:  Wait     00000028 
   88:  Call     SetGoalToTarget 	( .Actor:Self )
   98:  Call     UseBattleCamPreset 	( 00000007 )
   A8:  Call     BattleCamTargetActor ( .Actor:Self )
   B8:  Call     MoveBattleCamOver 	( 00000001 )
   C8:  Wait     0000000A 
   D4:  Call     PlaySoundAtActor 	( .Actor:Self 000003B9 )
   E8:  Call     PlaySoundAtActor 	( .Actor:Self 000020BB )
   FC:  Call     EnemyTestTarget ( .Actor:Self *Var[A] 10000000 00000000 00000000 00000010 )
  120:  Switch  *Var[A] 
  12C:  	CaseOR  ==  .HitResult:Miss % 6
  138:  	CaseOR  ==  .HitResult:Lucky % 5
  144:  		Call     UseBattleCamPreset 	( 00000002 )
  154:  		Call     EnableActorBlur 	( .Actor:Self 00000001 )
  168:  		Call     SetGoalToTarget 	( .Actor:Self )
  178:  		Call     AddGoalPos 	( .Actor:Self FFFFFFCE 00000000 00000000 )
  194:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20013 )
  1AC:  		Call     RunToGoal   	( .Actor:Self 0000000A .False )
  1C4:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20003 )
  1DC:  		Call     EnableActorBlur 	( .Actor:Self 00000000 )
  1F0:  		Wait     0000000A 
  1FC:  		If  *Var[A]  ==  00000005 
  20C:  			Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  230:  		EndIf
  238:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20003 )
  250:  		Call     SetGoalToHome 	( .Actor:Self )
  260:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  274:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20008 )
  28C:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  2A4:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20003 )
  2BC:  		Return
  2C4:  	EndCaseGroup
  2CC:  EndSwitch
  2D4:  Call     EnableActorBlur 	( .Actor:Self 00000001 )
  2E8:  Call     SetGoalToTarget 	( .Actor:Self )
  2F8:  Call     AddGoalPos 	( .Actor:Self 00000000 00000000 00000000 )
  314:  Call     SetAnimation 	( .Actor:Self 00000001 00A20013 )
  32C:  Call     RunToGoal   	( .Actor:Self 00000005 .False )
  344:  Call     EnableActorBlur 	( .Actor:Self 00000000 )
  358:  Thread
  360:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[1.0] )
  37C:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[4.0] )
  398:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[3.0] )
  3B4:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[2.0] )
  3D0:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[1.0] )
  3EC:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.5] )
  408:  EndThread
  410:  Call     PlaySoundAtActor 	( .Actor:Self 000003ED )
  424:  Call     PlaySoundAtActor 	( .Actor:Self 000020BB )
  438:  Wait     00000002 
		Call 	 GetActorVar ( .Actor:Self 00000004 *Var[E] )
		Sub *Var[E] 2
		If *Var[E] < 1
			Set *Var[E] 1
		EndIf
  444:  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 *Var[E] 00000010 )
		Sub *Var[E] 1
		ExecWait $Script_FP_Drain
  46C:  Wait     0000000F 
  478:  Call     UseBattleCamPreset 	( 00000002 )
  488:  Thread
  490:  	Call     PlaySoundAtActor 	( .Actor:Self .Sound:Jump )
  4A4:  	Call     EnableActorBlur 	( .Actor:Self 00000001 )
  4B8:  	Call     SetAnimation 	( .Actor:Self 00000001 00A20014 )
  4D0:  	Call     SetActorJumpGravity 	( .Actor:Self *Fixed[0.9003906] )
  4E4:  	Call     JumpToGoal  	( .Actor:Self 00000019 00000000 00000001 00000000 )
  504:  	Call     EnableActorBlur 	( .Actor:Self 00000000 )
  518:  EndThread
  520:  Thread
  528:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.5] )
  544:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[1.5] )
  560:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.5] )
  57C:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.20019531] )
  598:  EndThread
  5A0:  Wait     00000002 
  5AC:  Call     PlaySoundAtActor 	( .Actor:Self 000003ED )
  5C0:  Call     PlaySoundAtActor 	( .Actor:Self 000020BB )
  5D4:  Wait     00000002 
  		Call 	 GetActorVar ( .Actor:Self 00000004 *Var[E] )
		Sub *Var[E] 2
		If *Var[E] < 1
			Set *Var[E] 1
		EndIf
  5E0:  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 *Var[E] 00000020 )
  608:  Wait     0000000F 
  614:  Switch  *Var[0] 
  620:  	CaseOR  ==  00000000 
  62C:  	CaseOR  ==  00000002 
				Sub *Var[E] 1
				ExecWait $Script_FP_Drain
  638:  		Call     UseBattleCamPreset 	( 00000002 )
  648:  		Call     PlaySoundAtActor 	( .Actor:Self 000020BE )
  65C:  		Call     PlaySoundAtActor 	( .Actor:Self 000020BB )
  670:  		Thread
  678:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000A 00000000 )
  694:  			Set  *Var[0]  00000000 
  6A4:  			Loop     0000000A 
  6B0:  				Add  *Var[0]  00000024 
  6C0:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  6DC:  				Wait     00000001 
  6E8:  			EndLoop
  6F0:  		EndThread
  6F8:  		Call     SetGoalToTarget 	( .Actor:Self )
  708:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  724:  		Add  *Var[0]  00000032 
  734:  		Set  *Var[1]  00000000 
  744:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[0.80078125] )
  758:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20021 )
  770:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  78C:  		Call     JumpToGoal  	( .Actor:Self 0000001E 00000000 00000001 00000000 )
  7AC:  		Call     PlaySoundAtActor 	( .Actor:Self 000020BA )
  7C0:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20023 )
  7D8:  		Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  7F4:  		Wait     00000003 
  800:  		Add  *Var[0]  00000014 
  810:  		Set  *Var[1]  00000000 
  820:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20021 )
  838:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  854:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  874:  		Call     PlaySoundAtActor 	( .Actor:Self 000003B4 )
  888:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20023 )
  8A0:  		Wait     00000014 
  8AC:  	EndCaseGroup
  8B4:  EndSwitch
  8BC:  Call     SetAnimation 	( .Actor:Self 00000001 00A20003 )
  8D4:  Call     SetGoalToHome 	( .Actor:Self )
  8E4:  Call     SetActorSpeed 	( .Actor:Self *Fixed[3.8007812] )
  8F8:  Call     SetAnimation 	( .Actor:Self 00000001 00A20008 )
  910:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  928:  Call     SetAnimation 	( .Actor:Self 00000001 00A20003 )
  940:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  954:  Call     UseIdleAnimation 	( .Actor:Self .True )
  968:  Return
  970:  End
}
  
%AI changed, probability of double strike increases as attack power increases :)
@ $Script_TakeTurn_8022CF48
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     RandInt     	( 00000064 *Var[0] )
		Call 	 GetActorVar ( .Actor:Self 00000004 *Var[1] )
		Sub *Var[0] *Var[1]
   3C:  Switch  *Var[0] 
   48:  	Case  <  23` %was 20 
   54:  		ExecWait $Script_DoubleStrike2 
   60:  	Default
   68:  		ExecWait $Script_SingleStrike2 
   74:  EndSwitch
   7C:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
   90:  Call     UseIdleAnimation 	( .Actor:Self .True )
   A4:  Return
   AC:  End
}
   
%master 3
%higher hp 99 -> 150
%2 def
%single strike atk power = # of hits + 4
%double strike atk power = # of hits + 2 (min 1) x 2
%	fp drain is 1 less than attack power
%triple strike atk power = # of hits + 1(min 1) x 3
%	fp drain is 2 less than attack power
%quintuple strike atk power = # of hits (min 1) x 3, then # of hits + 1 (min 1) x 2
%	no fp drain, but the final 2 hits pierce invis
%can't preform triple/quintuple hit until he is hit (2/4) times
%uses the signiture 10 hit combo (5 x 10 damage)
%	except I added in the fp-drain effect :)
%	so bring in some fp recovery items

@ $StatusTable_8022DA44 %not immune, but statusing won't really help you
{
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy       0`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   25`
.Status:Shrink      0`
.Status:Stop       35`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -2`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -2`
.Status:FearTurnMod       0`
.Status:StaticTurnMod    -2`
.Status:ParalyzeTurnMod  -2`
.Status:ShrinkTurnMod    -2`
.Status:StopTurnMod      -2`
.Status:End
}

@ $DefenseTable_8022DA38
{
.Element:Normal 00000002
.Element:End
}

@ $TheMaster3
{
[MaxHP]        150`b 
[PowerBounce]	 3`b
}

@ $Script_Init_8022DB60
{
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_80230B20 )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_8022DC34 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80231408 )
   3C:  Call     BindNextTurn 	( .Actor:Self $Script_NextTurn_80230D44 )
   50:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   68:  Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
   80:  Call     SetActorVar 	( .Actor:Self 00000002 00000000 )
   98:  Call     SetActorVar 	( .Actor:Self 00000003 00000002 )
		Call 	 SetActorVar ( .Actor:Self 00000004 00000004 ) % initialize hit counter
		Call 	 SetActorVar ( .Actor:Self 00000005 00000000 ) % final attack 0 = no, 1 = yes, 2 = done
		Call 	 SetActorVar ( .Actor:Self 00000006 00000000 ) % turn counter
   B0:  Call     SetBattleFlagBits 	( 00800000 .True )
   C4:  Return
   CC:  End
}
   
#new:Script $HandleDeath
{
	Call	GetActorVar 	( .Actor:Self 00000005 *Var[2] )
	If      *Var[2]  <  00000002
		Call	SetEnemyHP	( .Actor:Self 00000001 )
		Call	SetActorVar	( .Actor:Self 00000005 00000001 )
	Else
		ExecWait DoDeath
	EndIf
	Return
	End
}
  
#new:IdleAnimations $IdleAnimations_Exhausted
{
.Status:Normal    00A20018
.Status:Stone     00A20018
.Status:Sleep     00A2001D
.Status:Poison    00A20018
.Status:Stop      00A20018
.Status:Static    00A20018
.Status:Paralyze  00A20018
.Status:Dizzy     00A2001F
.Status:Dizzy     00A2001F
.Status:End
}

@ $Script_8022DC44
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetLastEvent 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var[0]  00000001 
   70:  		SetConst  *Var[1]  00A20016 
   80:  		ExecWait DoNormalHit 
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit % E
   A0:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
   B8:  		SetConst  *Var[0]  00000001 
   C8:  		SetConst  *Var[1]  00A2001A 
   D8:  		SetConst  *Var[2]  00A2001B 
   E8:  		ExecWait DoBurnHit 
   F4:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:GoldenFlames )
  110:  		Wait     00000001 
  11C:  		Call     ModifyActorDecoration 	( .Actor:Self 00000001 00000000 00000032 00000032 00000000 00000000 )
  144:  	Case  ==  .Event:BurnDeath % 24
  150:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  168:  		SetConst  *Var[0]  00000001 
  178:  		SetConst  *Var[1]  00A2001A 
  188:  		SetConst  *Var[2]  00A2001B 
  198:  		ExecWait DoBurnHit 
  1A4:  		SetConst  *Var[0]  00000001 
  1B4:  		SetConst  *Var[1]  00A20018 
  1C4:  		ExecWait $HandleDeath
  1D0:  		Return
  1D8:  	Case  ==  .Event:SpinSmashHit % B
  1E4:  		SetConst  *Var[0]  00000001 
  1F4:  		SetConst  *Var[1]  00A20016 
  204:  		ChildThread
  20C:  			Wait     0000001E 
  218:  			Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  230:  			Wait     0000000A 
  23C:  			Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:GoldenFlames )
  258:  			Wait     00000001 
  264:  			Call     ModifyActorDecoration 	( .Actor:Self 00000001 00000000 00000032 00000032 00000000 00000000 )
  28C:  		EndChildThread
  294:  		ExecWait DoSpinSmashHit 
  2A0:  	Case  ==  .Event:ShockHit % 2F
  2AC:  		SetConst  *Var[0]  00000001 
  2BC:  		SetConst  *Var[1]  00A20016 
  2CC:  		ExecWait DoShockHit 
  2D8:  		SetConst  *Var[0]  00000001 
  2E8:  		SetConst  *Var[1]  00A20016 
  2F8:  		ExecWait DoJumpBack 
  304:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  324:  		Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[2.0] )
  33C:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20008 )
  354:  		Call     SetGoalToHome 	( .Actor:Self )
  364:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  378:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  390:  		Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[1.0] )
  3A8:  		Wait     00000005 
  3B4:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20006 )
  3CC:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.6005859] )
  3E0:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  400:  	CaseOR  ==  00000017 % 17
  40C:  	CaseOR  ==  .Event:Immune % 19
  418:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  424:  		SetConst  *Var[0]  00000001 
  434:  		SetConst  *Var[1]  00A20003 
  444:  		ExecWait DoImmune 
  450:  	EndCaseGroup
  458:  	Case  ==  .Event:ShockDeath % 26
  464:  		SetConst  *Var[0]  00000001 
  474:  		SetConst  *Var[1]  00A20016 
  484:  		ExecWait DoShockHit 
  490:  		SetConst  *Var[0]  00000001 
  4A0:  		SetConst  *Var[1]  00A20018 
  4B0:  		ExecWait $HandleDeath
  4BC:  		Return
  4C4:  	Case  ==  .Event:Death % 20
  4D0:  		SetConst  *Var[0]  00000001 
  4E0:  		SetConst  *Var[1]  00A20016 
  4F0:  		ExecWait DoNormalHit 
  4FC:  		Wait     0000000A 
  508:  		SetConst  *Var[0]  00000001 
  518:  		SetConst  *Var[1]  00A20018 
  528:  		ExecWait $HandleDeath 
  534:  		Return
  53C:  	Case  ==  .Event:SpinSmashDeath % 21
  548:  		SetConst  *Var[0]  00000001 
  558:  		SetConst  *Var[1]  00A20016 
  568:  		ExecWait DoSpinSmashHit 
  574:  		SetConst  *Var[0]  00000001 
  584:  		SetConst  *Var[1]  00A20018 
  594:  		ExecWait $HandleDeath
  5A0:  		Return
  5A8:  	Case  ==  .Event:EndFirstStrike % 35
  5B4:  		SetConst  *Var[0]  00000001 
  5C4:  		SetConst  *Var[1]  00A20003 
  5D4:  		ExecWait DoReturnHome 
  5E0:  		Call     HPBarToHome 	( .Actor:Self )
  5F0:  	Case  ==  .Event:RecoverStatus % 31
  5FC:  		SetConst  *Var[0]  00000001 
  60C:  		SetConst  *Var[1]  00A20003 
  61C:  		ExecWait DoRecover 
  628:  	Case  ==  .Event:ScareAway % 39
  634:  		SetConst  *Var[0]  00000001 
  644:  		SetConst  *Var[1]  00A20008 
  654:  		SetConst  *Var[2]  00A20016 
  664:  		ExecWait DoScareAway 
  670:  		Return
  678:  	Default
  680:  EndSwitch
  688:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  69C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  6B0:  Return
  6B8:  End
}

@ $Script_HandleEvent_80231408
{
		Call	GetActorVar 	( .Actor:Self 00000005 *Var[0] )
		If		*Var[0]  ==  2
			Goto 6
		EndIf
		% count hits
		Call     GetLastEvent 	( .Actor:Self *Var[0] )
		Switch   *Var[0] 
			CaseOR     ==  .Event:HitCombo
			CaseOR     ==  .Event:Hit
			CaseOR     ==  .Event:SpinSmashHit % why would you use multibounce though?
			CaseOR     ==  .Event:BurnHit
			CaseOR     ==  .Event:ShockHit %he's immune to zaptap but i'm keeping this in for completeness
			CaseOR     ==  0000000B
				Call     GetLastDamage 	( .Actor:Self *Var[1] )
				If  *Var[1]  >  0
					Call	GetActorVar 	( .Actor:Self 00000004 *Var[1] )
					If  *Var[1]  <  25`
						Call	AddActorVar	( .Actor:Self 00000004 00000001 )
					EndIf
				EndIf
			EndCaseGroup
		EndSwitch
		Label 6
    0:  ExecWait $Script_8022DC44 
		Call	GetActorVar 	( .Actor:Self 00000005 *Var[0] )
		If		*Var[0]  ==  2
			Return
		EndIf
    C:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
   20:  If  *Var[0]  &  00351000 
   30:  	Return
   38:  EndIf
   40:  Call     GetBattleFlags ( *Var[0] )
   50:  If  *Var[0]  &  00000240 
   60:  	Call     GetLastDamage 	( .Actor:Self *Var[0] )
   74:  	If  *Var[0]  >  00000000 
   84:  		Call     SetActorVar 	( .Actor:Self 00000002 00000001 )
   9C:  		Call     AddActorVar 	( .Actor:Self 00000003 00000001 )
   B4:  	EndIf
   BC:  EndIf
   C4:  Call     GetLastEvent 	( .Actor:Self *Var[0] )
   D8:  Switch  *Var[0] 
   E4:  	CaseOR  ==  .Event:Hit % A
   F0:  	CaseOR  ==  .Event:BurnHit % E
   FC:  	CaseOR  ==  .Event:SpinSmashHit % B
  108:  	CaseOR  ==  .Event:Immune % 19
  114:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  120:  		Call     GetActorVar 	( .Actor:Self 00000002 *Var[A] )
  138:  		Call     GetActorVar 	( .Actor:Self 00000003 *Var[B] )
  150:  		Call     SetActorVar 	( .Actor:Self 00000002 00000000 )
  168:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  17C:  		If  *Var[0]  &  003F1000 
  18C:  			BreakCase
  194:  		EndIf
  19C:  		Set  *Flag[00]  00000000 
  1AC:  		Call     GetMenuSelection 	( *Var[0] *Var[1] *Var[2] )
  1C4:  		Switch  *Var[0] 
  1D0:  			CaseOR  ==  00000001 
  1DC:  			CaseOR  ==  00000000 
  1E8:  				Set  *Flag[00]  00000001 
  1F8:  			EndCaseGroup
  200:  		EndSwitch
  208:  		If  *Flag[00]  ==  00000000 
  218:  			BreakCase
  220:  		EndIf
  228:  		Call     UseIdleAnimation 	( .Actor:Self .False )
  23C:  		Call     EnableIdleScript 	( .Actor:Self 00000000 )
  250:  		If  *Var[A]  ==  00000001 
  260:  			If  *Var[B]  >  00000002 
  270:  				Call     UseBattleCamPreset 	( 00000002 )
  280:  				Call     MoveBattleCamOver 	( 0000000A )
  290:  				Call     ActorSpeak  	( 0002003A .Actor:Self 00000001 00A2000A 00A20006 ) % Hm! You have great hidden strength for one clothed ...
  2B0:  				Call     SetActorVar 	( .Actor:Self 00000003 00000000 )
  2C8:  			EndIf
  2D0:  		Else
  2D8:  			Call     UseBattleCamPreset 	( 00000002 )
  2E8:  			Call     MoveBattleCamOver 	( 0000000A )
  2F8:  			Call     ActorSpeak  	( 00020039 .Actor:Self 00000001 00A2000A 00A20006 ) % You foolish novice! Do you think you can beat me w ...
  318:  		EndIf
  320:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  334:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  348:  	EndCaseGroup
  350:  EndSwitch
  358:  Return
  360:  End
}

@ $Script_SingleStrike3
{
    0:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   14:  Call     UseBattleCamPreset 	( 0000003F )
   24:  Call     BattleCamTargetActor ( .Actor:Self )
   34:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   4C:  Call     SetAnimation 	( .Actor:Self 00000001 00A20008 )
   64:  Call     SetGoalToTarget 	( .Actor:Self )
   74:  Call     AddGoalPos 	( .Actor:Self 00000032 00000000 00000000 )
   90:  Call     SetActorSpeed 	( .Actor:Self *Fixed[3.8007812] )
   A4:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
   BC:  Call     SetAnimation 	( .Actor:Self 00000001 00A20003 )
   D4:  Wait     0000000A 
   E0:  Call     PlaySoundAtActor 	( .Actor:Self 000020BD )
   F4:  Thread
   FC:  	Wait     0000000F 
  108:  	Call     PlaySoundAtActor 	( .Actor:Self 000020BD )
  11C:  EndThread
  124:  Call     SetAnimation 	( .Actor:Self 00000001 00A2000E )
  13C:  Wait     0000001E 
  148:  Call     SetAnimation 	( .Actor:Self 00000001 00A2000F )
  160:  Call     PlaySoundAtActor 	( .Actor:Self 000020BC )
  174:  Call     PlaySoundAtActor 	( .Actor:Self 000020BB )
  188:  Call     EnemyTestTarget ( .Actor:Self *Var[A] 00000000 00000000 00000000 00000010 )
  1AC:  Switch  *Var[A] 
  1B8:  	CaseOR  ==  .HitResult:Miss % 6
  1C4:  	CaseOR  ==  .HitResult:Lucky % 5
  1D0:  		Call     UseBattleCamPreset 	( 00000002 )
  1E0:  		Call     EnableActorBlur 	( .Actor:Self 00000001 )
  1F4:  		Call     SetGoalToTarget 	( .Actor:Self )
  204:  		Call     AddGoalPos 	( .Actor:Self FFFFFFCE 00000000 00000000 )
  220:  		Call     RunToGoal   	( .Actor:Self 0000000A .False )
  238:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20003 )
  250:  		Call     EnableActorBlur 	( .Actor:Self 00000000 )
  264:  		Wait     0000000A 
  270:  		If  *Var[A]  ==  00000005 
  280:  			Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  2A4:  		EndIf
  2AC:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20003 )
  2C4:  		Call     SetGoalToHome 	( .Actor:Self )
  2D4:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  2E8:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20008 )
  300:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  318:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20003 )
  330:  		Return
  338:  	EndCaseGroup
  340:  EndSwitch
  348:  Call     EnableActorBlur 	( .Actor:Self 00000001 )
  35C:  Call     SetGoalToTarget 	( .Actor:Self )
  36C:  Call     AddGoalPos 	( .Actor:Self 00000000 00000000 00000000 )
  388:  Call     RunToGoal   	( .Actor:Self 00000005 .False )
  3A0:  Call     EnableActorBlur 	( .Actor:Self 00000000 )
  3B4:  Call     PlaySoundAtActor 	( .Actor:Self 000003ED )
  3C8:  Call     PlaySoundAtActor 	( .Actor:Self 000020BB )
  3DC:  Wait     00000002 
		Call 	 GetActorVar ( .Actor:Self 00000004 *Var[E] )
  3E8:  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 *Var[E] 00000030 )
  410:  Switch  *Var[0] 
  41C:  	CaseOR  ==  00000000 
  428:  	CaseOR  ==  00000002 
				ExecWait $Script_FP_Drain
  434:  		Call     UseBattleCamPreset 	( 00000002 )
  444:  		Call     PlaySoundAtActor 	( .Actor:Self 000020BB )
  458:  		Thread
  460:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000014 00000000 )
  47C:  			Set  *Var[0]  00000000 
  48C:  			Loop     0000000A 
  498:  				Add  *Var[0]  00000024 
  4A8:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  4C4:  				Wait     00000001 
  4D0:  			EndLoop
  4D8:  		EndThread
  4E0:  		Call     SetGoalToTarget 	( .Actor:Self )
  4F0:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  50C:  		Add  *Var[0]  00000032 
  51C:  		Set  *Var[1]  00000000 
  52C:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[0.20019531] )
  540:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20021 )
  558:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  574:  		Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  594:  		Call     PlaySoundAtActor 	( .Actor:Self 000020BA )
  5A8:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20023 )
  5C0:  		Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  5DC:  		Wait     00000003 
  5E8:  		Add  *Var[0]  00000014 
  5F8:  		Set  *Var[1]  00000000 
  608:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20021 )
  620:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  63C:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  65C:  		Call     PlaySoundAtActor 	( .Actor:Self 000003B4 )
  670:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20023 )
  688:  		Wait     00000014 
  694:  	EndCaseGroup
  69C:  EndSwitch
  6A4:  Call     SetAnimation 	( .Actor:Self 00000001 00A20003 )
  6BC:  Call     SetGoalToHome 	( .Actor:Self )
  6CC:  Call     SetActorSpeed 	( .Actor:Self *Fixed[3.8007812] )
  6E0:  Call     SetAnimation 	( .Actor:Self 00000001 00A20008 )
  6F8:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  710:  Call     SetAnimation 	( .Actor:Self 00000001 00A20003 )
  728:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  73C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  750:  Return
  758:  End
}
  
@ $Script_DoubleStrike3
{
    0:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   14:  Call     UseBattleCamPreset 	( 00000008 )
   24:  Call     BattleCamTargetActor ( .Actor:Self )
   34:  Call     SetBattleCamZoom  	( 000000C8 )
   44:  Call     SetBattleCamOffsetZ 	( 0000000D )
   54:  Call     MoveBattleCamOver 	( 0000003C )
   64:  Call     SetAnimation 	( .Actor:Self 00000001 00A20015 )
   7C:  Wait     00000028 
   88:  Call     SetGoalToTarget 	( .Actor:Self )
   98:  Call     UseBattleCamPreset 	( 00000007 )
   A8:  Call     BattleCamTargetActor ( .Actor:Self )
   B8:  Call     MoveBattleCamOver 	( 00000001 )
   C8:  Wait     0000000A 
   D4:  Call     PlaySoundAtActor 	( .Actor:Self 000003B9 )
   E8:  Call     PlaySoundAtActor 	( .Actor:Self 000020BB )
   FC:  Call     EnemyTestTarget ( .Actor:Self *Var[A] 00000000 00000000 00000000 00000010 )
  120:  Switch  *Var[A] 
  12C:  	CaseOR  ==  .HitResult:Miss % 6
  138:  	CaseOR  ==  .HitResult:Lucky % 5
  144:  		Call     UseBattleCamPreset 	( 00000002 )
  154:  		Call     EnableActorBlur 	( .Actor:Self 00000001 )
  168:  		Call     SetGoalToTarget 	( .Actor:Self )
  178:  		Call     AddGoalPos 	( .Actor:Self FFFFFFCE 00000000 00000000 )
  194:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20013 )
  1AC:  		Call     RunToGoal   	( .Actor:Self 0000000A .False )
  1C4:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20003 )
  1DC:  		Call     EnableActorBlur 	( .Actor:Self 00000000 )
  1F0:  		Wait     0000000A 
  1FC:  		If  *Var[A]  ==  00000005 
  20C:  			Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  230:  		EndIf
  238:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20003 )
  250:  		Call     SetGoalToHome 	( .Actor:Self )
  260:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  274:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20008 )
  28C:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  2A4:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20003 )
  2BC:  		Return
  2C4:  	EndCaseGroup
  2CC:  EndSwitch
  2D4:  Call     EnableActorBlur 	( .Actor:Self 00000001 )
  2E8:  Call     SetGoalToTarget 	( .Actor:Self )
  2F8:  Call     AddGoalPos 	( .Actor:Self 00000000 00000000 00000000 )
  314:  Call     SetAnimation 	( .Actor:Self 00000001 00A20013 )
  32C:  Call     RunToGoal   	( .Actor:Self 00000005 .False )
  344:  Call     EnableActorBlur 	( .Actor:Self 00000000 )
  358:  Thread
  360:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[1.0] )
  37C:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[4.0] )
  398:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[3.0] )
  3B4:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[2.0] )
  3D0:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[1.0] )
  3EC:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.5] )
  408:  EndThread
  410:  Call     PlaySoundAtActor 	( .Actor:Self 000003ED )
  424:  Call     PlaySoundAtActor 	( .Actor:Self 000020BB )
  438:  Wait     00000002 
		Call 	 GetActorVar ( .Actor:Self 00000004 *Var[E] )
		Sub *Var[E] 2
		If *Var[E] < 1
			Set *Var[E] 1
		EndIf
  444:  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 *Var[E] 00000010 )
		Sub *Var[E] 1
		ExecWait $Script_FP_Drain
  46C:  Wait     0000000F 
  478:  Call     UseBattleCamPreset 	( 00000002 )
  488:  Thread
  490:  	Call     PlaySoundAtActor 	( .Actor:Self .Sound:Jump )
  4A4:  	Call     EnableActorBlur 	( .Actor:Self 00000001 )
  4B8:  	Call     SetAnimation 	( .Actor:Self 00000001 00A20014 )
  4D0:  	Call     SetActorJumpGravity 	( .Actor:Self *Fixed[0.9003906] )
  4E4:  	Call     JumpToGoal  	( .Actor:Self 00000019 00000000 00000001 00000000 )
  504:  	Call     EnableActorBlur 	( .Actor:Self 00000000 )
  518:  EndThread
  520:  Thread
  528:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.5] )
  544:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[1.5] )
  560:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.5] )
  57C:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.20019531] )
  598:  EndThread
  5A0:  Wait     00000002 
  5AC:  Call     PlaySoundAtActor 	( .Actor:Self 000003ED )
  5C0:  Call     PlaySoundAtActor 	( .Actor:Self 000020BB )
  5D4:  Wait     00000002 
  		Call 	 GetActorVar ( .Actor:Self 00000004 *Var[E] )
		Sub *Var[E] 2
		If *Var[E] < 1
			Set *Var[E] 1
		EndIf
  5E0:  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 *Var[E] 00000020 )
  608:  Wait     0000000F 
  614:  Switch  *Var[0] 
  620:  	CaseOR  ==  00000000 
  62C:  	CaseOR  ==  00000002 
				Sub *Var[E] 1
				ExecWait $Script_FP_Drain
  638:  		Call     UseBattleCamPreset 	( 00000002 )
  648:  		Call     PlaySoundAtActor 	( .Actor:Self 000020BE )
  65C:  		Call     PlaySoundAtActor 	( .Actor:Self 000020BB )
  670:  		Thread
  678:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000A 00000000 )
  694:  			Set  *Var[0]  00000000 
  6A4:  			Loop     0000000A 
  6B0:  				Add  *Var[0]  00000024 
  6C0:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  6DC:  				Wait     00000001 
  6E8:  			EndLoop
  6F0:  		EndThread
  6F8:  		Call     SetGoalToTarget 	( .Actor:Self )
  708:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  724:  		Add  *Var[0]  00000032 
  734:  		Set  *Var[1]  00000000 
  744:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[0.80078125] )
  758:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20021 )
  770:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  78C:  		Call     JumpToGoal  	( .Actor:Self 0000001E 00000000 00000001 00000000 )
  7AC:  		Call     PlaySoundAtActor 	( .Actor:Self 000020BA )
  7C0:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20023 )
  7D8:  		Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  7F4:  		Wait     00000003 
  800:  		Add  *Var[0]  00000014 
  810:  		Set  *Var[1]  00000000 
  820:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20021 )
  838:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  854:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  874:  		Call     PlaySoundAtActor 	( .Actor:Self 000003B4 )
  888:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20023 )
  8A0:  		Wait     00000014 
  8AC:  	EndCaseGroup
  8B4:  EndSwitch
  8BC:  Call     SetAnimation 	( .Actor:Self 00000001 00A20003 )
  8D4:  Call     SetGoalToHome 	( .Actor:Self )
  8E4:  Call     SetActorSpeed 	( .Actor:Self *Fixed[3.8007812] )
  8F8:  Call     SetAnimation 	( .Actor:Self 00000001 00A20008 )
  910:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  928:  Call     SetAnimation 	( .Actor:Self 00000001 00A20003 )
  940:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  954:  Call     UseIdleAnimation 	( .Actor:Self .True )
  968:  Return
  970:  End
}

@ $Script_TripleStrike3
{
    0:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   14:  Call     UseBattleCamPreset 	( 00000008 )
   24:  Call     BattleCamTargetActor ( .Actor:Self )
   34:  Call     SetBattleCamZoom  	( 000000C8 )
   44:  Call     SetBattleCamOffsetZ 	( 0000000D )
   54:  Call     MoveBattleCamOver 	( 0000003C )
   64:  Call     SetAnimation 	( .Actor:Self 00000001 00A20015 )
   7C:  Wait     00000014 
   %		don't spam message every time
   %88:  Call     ActorSpeak  	( 0002003C .Actor:Self 00000001 00A2000A 00A20006 ) % Hyaaahhhh!!! Mario! Survive this if you can!!!!
   A8:  Call     SetGoalToTarget 	( .Actor:Self )
   B8:  Call     UseBattleCamPreset 	( 00000007 )
   C8:  Call     BattleCamTargetActor ( .Actor:Self )
   D8:  Call     MoveBattleCamOver 	( 00000001 )
   E8:  Wait     0000000A 
   F4:  Call     PlaySoundAtActor 	( .Actor:Self 000003B9 )
  108:  Call     PlaySoundAtActor 	( .Actor:Self 000020BB )
  11C:  Call     EnemyTestTarget ( .Actor:Self *Var[A] 00000000 00000000 00000000 00000010 )
  140:  Switch  *Var[A] 
  14C:  	CaseOR  ==  .HitResult:Miss % 6
  158:  	CaseOR  ==  .HitResult:Lucky % 5
  164:  		Call     UseBattleCamPreset 	( 00000002 )
  174:  		Call     EnableActorBlur 	( .Actor:Self 00000001 )
  188:  		Call     SetGoalToTarget 	( .Actor:Self )
  198:  		Call     AddGoalPos 	( .Actor:Self FFFFFFCE 00000000 00000000 )
  1B4:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20013 )
  1CC:  		Call     RunToGoal   	( .Actor:Self 0000000A .False )
  1E4:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20003 )
  1FC:  		Call     EnableActorBlur 	( .Actor:Self 00000000 )
  210:  		Wait     0000000A 
  21C:  		If  *Var[A]  ==  00000005 
  22C:  			Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  250:  		EndIf
  258:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20003 )
  270:  		Call     SetGoalToHome 	( .Actor:Self )
  280:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  294:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20008 )
  2AC:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  2C4:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20003 )
  2DC:  		Return
  2E4:  	EndCaseGroup
  2EC:  EndSwitch
  2F4:  Call     EnableActorBlur 	( .Actor:Self 00000001 )
  308:  Call     SetGoalToTarget 	( .Actor:Self )
  318:  Call     AddGoalPos 	( .Actor:Self 00000000 00000000 00000000 )
  334:  Call     SetAnimation 	( .Actor:Self 00000001 00A20013 )
  34C:  Call     RunToGoal   	( .Actor:Self 00000005 .False )
  364:  Call     EnableActorBlur 	( .Actor:Self 00000000 )
  378:  Thread
  380:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[1.0] )
  39C:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[4.0] )
  3B8:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[3.0] )
  3D4:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[2.0] )
  3F0:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[1.0] )
  40C:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.5] )
  428:  EndThread
  430:  Call     PlaySoundAtActor 	( .Actor:Self 000003ED )
  444:  Call     PlaySoundAtActor 	( .Actor:Self 000020BB )
  458:  Wait     00000002 
		Call 	 GetActorVar ( .Actor:Self 00000004 *Var[E] )
		Sub *Var[E] 3
		If *Var[E] < 1
			Set *Var[E] 1
		EndIf
  464:  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 *Var[E] 00000010 )
		Sub *Var[E] 2
		ExecWait $Script_FP_Drain
  48C:  Wait     0000000F 
  498:  Call     UseBattleCamPreset 	( 00000002 )
  4A8:  Thread
  4B0:  	Call     EnableActorBlur 	( .Actor:Self 00000001 )
  4C4:  	Wait     00000005 
  4D0:  	Call     PlaySoundAtActor 	( .Actor:Self .Sound:Jump )
  4E4:  	Call     SetAnimation 	( .Actor:Self 00000001 00A20014 )
  4FC:  	Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.5] )
  510:  	Call     JumpToGoal  	( .Actor:Self 00000019 00000000 00000001 00000000 )
  530:  	Call     EnableActorBlur 	( .Actor:Self 00000000 )
  544:  EndThread
  54C:  Thread
  554:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.5] )
  570:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[1.5] )
  58C:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.5] )
  5A8:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.20019531] )
  5C4:  EndThread
  5CC:  Wait     00000002 
  5D8:  Call     PlaySoundAtActor 	( .Actor:Self 000003ED )
  5EC:  Call     PlaySoundAtActor 	( .Actor:Self 000020BB )
  600:  Wait     00000002 
		Call 	 GetActorVar ( .Actor:Self 00000004 *Var[E] )
		Sub *Var[E] 3
		If *Var[E] < 1
			Set *Var[E] 1
		EndIf
  60C:  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 *Var[E] 00000000 )
		Sub *Var[E] 2
		ExecWait $Script_FP_Drain
  634:  Thread
  63C:  	Wait     00000005 
  648:  	Call     EnablePlayerBlur 	( 00000001 )
  658:  	Call     SetActorJumpGravity 	( .Actor:Player *Fixed[0.30078125] )
  66C:  	Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  688:  	Call     SetJumpAnimations 	( .Actor:Player 00000000 00010017 00010017 00010017 )
  6A8:  	Call     SetGoalPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  6C4:  	Call     80273444 ( 00000032 00000000 00000000 ) %player jump
  6DC:  	Call     EnablePlayerBlur 	( 00000000 )
  6EC:  EndThread
  6F4:  Wait     0000000F 
  700:  Call     SetGoalToTarget 	( .Actor:Self )
  710:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  72C:  Add  *Var[0]  00000032 
  73C:  Set  *Var[1]  00000000 
  74C:  Call     SetActorJumpGravity 	( .Actor:Self *Fixed[0.80078125] )
  760:  Call     SetAnimation 	( .Actor:Self 00000001 00A20021 )
  778:  Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  794:  Call     JumpToGoal  	( .Actor:Self 0000001E 00000000 00000001 00000000 )
  7B4:  Call     PlaySoundAtActor 	( .Actor:Self 000020BA )
  7C8:  Call     SetAnimation 	( .Actor:Self 00000001 00A20023 )
  7E0:  Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  7FC:  Wait     00000003 
  808:  Add  *Var[0]  00000014 
  818:  Set  *Var[1]  00000000 
  828:  Thread
  830:  	Wait     00000005 
  83C:  	Call     PlaySoundAtActor 	( .Actor:Self 000020BD )
  850:  	Wait     0000000A 
  85C:  	Call     PlaySoundAtActor 	( .Actor:Self 000020BD )
  870:  EndThread
  878:  Call     SetAnimation 	( .Actor:Self 00000001 00A2000E )
  890:  Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  8AC:  Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  8CC:  Call     PlaySoundAtActor 	( .Actor:Self 000003B4 )
  8E0:  Wait     0000000A 
  8EC:  Call     SetAnimation 	( .Actor:Self 00000001 00A2000F )
  904:  Call     EnableActorBlur 	( .Actor:Self 00000001 )
  918:  Call     SetGoalToTarget 	( .Actor:Self )
  928:  Call     AddGoalPos 	( .Actor:Self 00000000 00000000 00000000 )
  944:  Call     RunToGoal   	( .Actor:Self 00000003 .False )
  95C:  Call     EnableActorBlur 	( .Actor:Self 00000000 )
  970:  Thread
  978:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[1.0] )
  994:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[3.0] )
  9B0:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[6.0] )
  9CC:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[5.0] )
  9E8:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[4.0] )
  A04:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[3.0] )
  A20:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[2.0] )
  A3C:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[1.0] )
  A58:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.5] )
  A74:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.20019531] )
  A90:  EndThread
  A98:  Call     PlaySoundAtActor 	( .Actor:Self 000003EE )
  AAC:  Call     PlaySoundAtActor 	( .Actor:Self 000020BB )
  AC0:  Wait     00000002 
		Call 	 GetActorVar ( .Actor:Self 00000004 *Var[E] )
		Sub *Var[E] 3
		If *Var[E] < 1
			Set *Var[E] 1
		EndIf
  ACC:  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 *Var[E] 00000020 )
  AF4:  Wait     0000000F 
  B00:  Switch  *Var[0] 
  B0C:  	CaseOR  ==  00000000 
  B18:  	CaseOR  ==  00000002 
				Sub *Var[E] 2
				ExecWait $Script_FP_Drain
  B24:  		Call     UseBattleCamPreset 	( 00000002 )
  B34:  		Call     PlaySoundAtActor 	( .Actor:Self 000020BE )
  B48:  		Call     PlaySoundAtActor 	( .Actor:Self 000020BB )
  B5C:  		Thread
  B64:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000A 00000000 )
  B80:  			Set  *Var[0]  00000000 
  B90:  			Loop     0000000A 
  B9C:  				Add  *Var[0]  00000024 
  BAC:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  BC8:  				Wait     00000001 
  BD4:  			EndLoop
  BDC:  		EndThread
  BE4:  		Call     SetGoalToTarget 	( .Actor:Self )
  BF4:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  C10:  		Add  *Var[0]  00000032 
  C20:  		Set  *Var[1]  00000000 
  C30:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[0.80078125] )
  C44:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20021 )
  C5C:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  C78:  		Call     JumpToGoal  	( .Actor:Self 0000001E 00000000 00000001 00000000 )
  C98:  		Call     PlaySoundAtActor 	( .Actor:Self 000020BA )
  CAC:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20023 )
  CC4:  		Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  CE0:  		Wait     00000003 
  CEC:  		Add  *Var[0]  00000014 
  CFC:  		Set  *Var[1]  00000000 
  D0C:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20021 )
  D24:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  D40:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  D60:  		Call     PlaySoundAtActor 	( .Actor:Self 000003B4 )
  D74:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20023 )
  D8C:  		Wait     00000014 
  D98:  	EndCaseGroup
  DA0:  EndSwitch
  DA8:  Call     SetAnimation 	( .Actor:Self 00000001 00A20003 )
  DC0:  Call     SetGoalToHome 	( .Actor:Self )
  DD0:  Call     SetActorSpeed 	( .Actor:Self *Fixed[3.8007812] )
  DE4:  Call     SetAnimation 	( .Actor:Self 00000001 00A20008 )
  DFC:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  E14:  Call     SetAnimation 	( .Actor:Self 00000001 00A20003 )
  E2C:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  E40:  Call     UseIdleAnimation 	( .Actor:Self .True )
  E54:  Return
  E5C:  End
}
  
#new:Script $Script_QuintupleStrike3 						  %triple hit + 2 invis kicks
{
    0:  Call     SetTargetActor ( .Actor:Self .Actor:Player ) %however if you're invisible, he skips right to the invis kicks
   14:  Call     UseBattleCamPreset 	( 00000008 )
   24:  Call     BattleCamTargetActor ( .Actor:Self )
   34:  Call     SetBattleCamZoom  	( 000000C8 )
   44:  Call     SetBattleCamOffsetZ 	( 0000000D )
   54:  Call     MoveBattleCamOver 	( 0000003C )
   64:  Call     SetAnimation 	( .Actor:Self 00000001 00A20015 )
   7C:  Wait     00000014 
   % 			don't say message every time
   %88:  Call     ActorSpeak  	( 0002003C .Actor:Self 00000001 00A2000A 00A20006 ) % Hyaaahhhh!!! Mario! Survive this if you can!!!!
   A8:  Call     SetGoalToTarget 	( .Actor:Self )
   B8:  Call     UseBattleCamPreset 	( 00000007 )
   C8:  Call     BattleCamTargetActor ( .Actor:Self )
   D8:  Call     MoveBattleCamOver 	( 00000001 )
   E8:  Wait     0000000A 
   F4:  Call     PlaySoundAtActor 	( .Actor:Self 000003B9 )
  108:  Call     PlaySoundAtActor 	( .Actor:Self 000020BB )
  11C:  Call     EnemyTestTarget ( .Actor:Self *Var[A] 10000000 00000000 00000000 00000010 )
  140:  Switch  *Var[A] 
  14C:  	CaseOR  ==  .HitResult:Miss % 6
  158:  	CaseOR  ==  .HitResult:Lucky % 5
  164:  		Call     UseBattleCamPreset 	( 00000002 )
  174:  		Call     EnableActorBlur 	( .Actor:Self 00000001 )
  188:  		Call     SetGoalToTarget 	( .Actor:Self )
  198:  		Call     AddGoalPos 	( .Actor:Self 128` 00000000 00000000 )
  1B4:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20013 )
  1CC:  		Call     RunToGoal   	( .Actor:Self 00000005 .False ) %A -> 5
  1E4:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20003 )
  1FC:  		Call     EnableActorBlur 	( .Actor:Self 00000000 )
				Goto 	 1
%  210:  		Wait     0000000A 
%  21C:  		If  *Var[A]  ==  00000005 
%  22C:  			Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
%  250:  		EndIf
%  258:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20003 )
%  270:  		Call     SetGoalToHome 	( .Actor:Self )
%  280:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
%  294:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20008 )
%  2AC:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
%  2C4:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20003 )
%  2DC:  		Return
  2E4:  	EndCaseGroup
  2EC:  EndSwitch
  2F4:  Call     EnableActorBlur 	( .Actor:Self 00000001 )
  308:  Call     SetGoalToTarget 	( .Actor:Self )
  318:  Call     AddGoalPos 	( .Actor:Self 00000000 00000000 00000000 )
  334:  Call     SetAnimation 	( .Actor:Self 00000001 00A20013 )
  34C:  Call     RunToGoal   	( .Actor:Self 00000003 .False ) %5 -> 3
  364:  Call     EnableActorBlur 	( .Actor:Self 00000000 )
  378:  Thread
  380:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[1.0] )
  39C:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[4.0] )
  3B8:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[3.0] )
  3D4:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[2.0] )
  3F0:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[1.0] )
  40C:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.5] )
  428:  EndThread
  430:  Call     PlaySoundAtActor 	( .Actor:Self 000003ED )
  444:  Call     PlaySoundAtActor 	( .Actor:Self 000020BB )
  458:  Wait     00000002 
		Call 	 GetActorVar ( .Actor:Self 00000004 *Var[E] )
		Sub *Var[E] 4
		If *Var[E] < 1
			Set *Var[E] 1
		EndIf
  464:  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 *Var[E] 00000010 )
		%no fp drain, you're lucky
  48C:  Wait     0000000F 
  498:  Call     UseBattleCamPreset 	( 00000002 )
  4A8:  Thread
  4B0:  	Call     EnableActorBlur 	( .Actor:Self 00000001 )
  4C4:  	Wait     00000005 
  4D0:  	Call     PlaySoundAtActor 	( .Actor:Self .Sound:Jump )
  4E4:  	Call     SetAnimation 	( .Actor:Self 00000001 00A20014 )
  4FC:  	Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.5] )
  510:  	Call     JumpToGoal  	( .Actor:Self 00000019 00000000 00000001 00000000 )
  530:  	Call     EnableActorBlur 	( .Actor:Self 00000000 )
  544:  EndThread
  54C:  Thread
  554:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.5] )
  570:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[1.5] )
  58C:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.5] )
  5A8:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.20019531] )
  5C4:  EndThread
  5CC:  Wait     00000002 
  5D8:  Call     PlaySoundAtActor 	( .Actor:Self 000003ED )
  5EC:  Call     PlaySoundAtActor 	( .Actor:Self 000020BB )
  600:  Wait     00000002 
		Call 	 GetActorVar ( .Actor:Self 00000004 *Var[E] )
		Sub *Var[E] 4
		If *Var[E] < 1
			Set *Var[E] 1
		EndIf
  60C:  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 *Var[E] 00000000 )
		%no fp drain, you're lucky
  634:  Thread
  63C:  	Wait     00000005 
  648:  	Call     EnablePlayerBlur 	( 00000001 )
  658:  	Call     SetActorJumpGravity 	( .Actor:Player *Fixed[0.30078125] )
  66C:  	Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  688:  	Call     SetJumpAnimations 	( .Actor:Player 00000000 00010017 00010017 00010017 )
  6A8:  	Call     SetGoalPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  6C4:  	Call     80273444 ( 00000032 00000000 00000000 ) %player jump
  6DC:  	Call     EnablePlayerBlur 	( 00000000 )
  6EC:  EndThread
  6F4:  Wait     0000000F 
  700:  Call     SetGoalToTarget 	( .Actor:Self )
  710:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  72C:  Add  *Var[0]  00000032 
  73C:  Set  *Var[1]  00000000 
  74C:  Call     SetActorJumpGravity 	( .Actor:Self *Fixed[0.80078125] )
  760:  Call     SetAnimation 	( .Actor:Self 00000001 00A20021 )
  778:  Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  794:  Call     JumpToGoal  	( .Actor:Self 0000001E 00000000 00000001 00000000 )
  7B4:  Call     PlaySoundAtActor 	( .Actor:Self 000020BA )
  7C8:  Call     SetAnimation 	( .Actor:Self 00000001 00A20023 )
  7E0:  Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  7FC:  Wait     00000003 
  808:  Add  *Var[0]  00000014 
  818:  Set  *Var[1]  00000000 
  828:  Thread
  830:  	Wait     00000005 
  83C:  	Call     PlaySoundAtActor 	( .Actor:Self 000020BD )
  850:  	Wait     0000000A 
  85C:  	Call     PlaySoundAtActor 	( .Actor:Self 000020BD )
  870:  EndThread
  878:  Call     SetAnimation 	( .Actor:Self 00000001 00A2000E )
  890:  Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  8AC:  Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  8CC:  Call     PlaySoundAtActor 	( .Actor:Self 000003B4 )
  8E0:  Wait     0000000A 
  8EC:  Call     SetAnimation 	( .Actor:Self 00000001 00A2000F )
  904:  Call     EnableActorBlur 	( .Actor:Self 00000001 )
  918:  Call     SetGoalToTarget 	( .Actor:Self )
  928:  Call     AddGoalPos 	( .Actor:Self 00000000 00000000 00000000 )
  944:  Call     RunToGoal   	( .Actor:Self 00000003 .False )
  95C:  Call     EnableActorBlur 	( .Actor:Self 00000000 )
  970:  Thread
  978:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[1.0] )
  994:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[3.0] )
  9B0:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[6.0] )
  9CC:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[5.0] )
  9E8:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[4.0] )
  A04:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[3.0] )
  A20:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[2.0] )
  A3C:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[1.0] )
  A58:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.5] )
  A74:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.20019531] )
  A90:  EndThread
  A98:  Call     PlaySoundAtActor 	( .Actor:Self 000003EE )
  AAC:  Call     PlaySoundAtActor 	( .Actor:Self 000020BB )
  AC0:  Wait     00000002 
		Call 	 GetActorVar ( .Actor:Self 00000004 *Var[E] )
		Sub *Var[E] 4
		If *Var[E] < 1
			Set *Var[E] 1
		EndIf
  ACC:  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 *Var[E] 00000020 )
		%stuff spliced from 10 hit combo
		Thread
			Call     SetActorRotationOffset	( .Actor:Self 00000000 16` 00000000 )
			Set      *Var[0]  0 
			Loop     24` 
				Sub      *Var[0] 15` 
				Call     SetActorRotation	( .Actor:Self  00000000 00000000 *Var[0] )
				Wait     00000001 
			EndLoop
			Call     SetActorRotationOffset	( .Actor:Self 00000000 00000000 00000000 )
		EndThread
		Call	EnableActorBlur 	( .Actor:Self .True )
		Wait	8
		Call	PlaySoundAtActor 	( .Actor:Self 000003E2 )
		Call	SetAnimation 		( .Actor:Self 00000001 00A20014 )
		Call	GetActorPos			( .Actor:Player *Var[0] *Var[1] *Var[2] )
		Add		*Var[0]  128`
		Call	SetGoalPos 		( .Actor:Self *Var[0] *Var[1] *Var[2] )
		Call	SetActorJumpGravity 	( .Actor:Self *Fixed[1.5] )
		Wait	15`
		%Call	JumpToGoal  		( .Actor:Self 20` 00000000 00000001 00000000 )
		Call	SetAnimation 		( .Actor:Self 00000001 00A20018 )
		Call	EnableActorBlur 	( .Actor:Self .False )
		Wait	15`
		Label 1 %if mario is invis, go here
		Call	GetActorPos			( .Actor:Player *Var[0] *Var[1] *Var[2] )
		Add		*Var[0]  128`
		Call	SetGoalPos 		( .Actor:Self *Var[0] *Var[1] *Var[2] )
		Call	SetAnimation 		( .Actor:Self 00000001 00A20008 ) % running
		Call	RunToGoal    		( .Actor:Self 00000001 .False )
		Wait	15`
		Thread
			Call	GetActorPos		( .Actor:Self *Var[0] *Var[1] *Var[2] )
			Add		*Var[1]  3 
			Loop	3 
				Call	PlayEffect	( 00000001 *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
				Wait	00000003 
			EndLoop
		EndThread
		Call	SetAnimation 		( .Actor:Self 00000001 00A20014 ) % uppercut
		Call	PlaySoundAtActor 	( .Actor:Self 000002CD )
		Wait	5
		Call	SetActorPos			( .Actor:Self 0` -1000` 0` )
		Wait	8
		Call	ModifyActorDecoration	( .Actor:Self 00000001 00000000 00000000 00000000 00000000 00000000 )
		% attack 8 -- re-appear and strike
		Call	GetActorPos		( .Actor:Player *Var[0] *Var[1] *Var[2] )
		Add		*Var[1]  20`
		Call	SetGoalPos	( .Actor:Self *Var[0] *Var[1] *Var[2] )
		Add		*Var[0]  40`
		Add		*Var[1]  60`
		Call	SetAnimation	( .Actor:Self 00000001 00A20022 ) % jump kick
		Call	SetActorPos		( .Actor:Self *Var[0] *Var[1] *Var[2] )
		Thread
			Add		*Var[1]  3 
			Loop	3 
				Call	PlayEffect	( 00000001 *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
				Wait	00000003 
			EndLoop
		EndThread
		Call	PlaySoundAtActor	( .Actor:Self 000002CD )
		Wait	8
		Call	FlyToGoal		( .Actor:Self 00000008 00000000 00000000 )
		Wait	2
		Call	PlaySoundAtActor 	( .Actor:Self 000003ED )
		Call	PlaySoundAtActor 	( .Actor:Self 000020BB )
		Wait	2
		Call 	 GetActorVar ( .Actor:Self 00000004 *Var[E] )
		Sub *Var[E] 2
		If *Var[E] < 1
			Set *Var[E] 1
		EndIf
		Call	EnemyDamageTarget 		( .Actor:Self *Var[0] 10000000 00000000 00000000 *Var[E] 00000040 )
			/%
		Call	GetPlayerHP	( *Var[1] )
		If		*Var[1]  <  1
			Goto	0
		EndIf
		%/
		%
		Call	GetGoalPos		( .Actor:Self *Var[0] *Var[1] *Var[2] )
		Sub		*Var[0]  40`
		Add		*Var[1]  60`
		Call	SetActorPos		( .Actor:Self *Var[0] *Var[1] *Var[2] )
		Call	SetActorRotation 	( .Actor:Self 00000000 180` 00000000 )
		Thread
			Add		*Var[1]  3 
			Loop	3 
				Call	PlayEffect	( 00000001 *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
				Wait	00000003 
			EndLoop
		EndThread
		Call	PlaySoundAtActor	( .Actor:Self 000002CD )
		Wait	8
		Call	FlyToGoal		( .Actor:Self 00000008 00000000 00000000 )
		Wait	2
		Call	PlaySoundAtActor 	( .Actor:Self 000003ED )
		Call	PlaySoundAtActor 	( .Actor:Self 000020BB )
		Wait	2
		Call 	 GetActorVar ( .Actor:Self 00000004 *Var[E] )
		Sub *Var[E] 2
		If *Var[E] < 1
			Set *Var[E] 1
		EndIf
		Call	EnemyDamageTarget 		( .Actor:Self *Var[0] 10000000 00000000 00000000 *Var[E] 00000040 )
			/%
		Call	GetPlayerHP	( *Var[1] )
		If		*Var[1]  <  1
			Goto	0
		EndIf
		%/
		% re-appear in stage center
		Call	GetActorPos			( .Actor:Player *Var[0] *Var[1] *Var[2] )
		Add		*Var[0]  128`
		Call	SetActorPos 		( .Actor:Self *Var[0] *Var[1] *Var[2] )
		Call	SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
		Call	SetAnimation 		( .Actor:Self 00000001 00A20004 )
		Call	ModifyActorDecoration	( .Actor:Self 00000001 00000000 00000032 00000032 00000000 00000000 )
		Thread
			Add		*Var[1]  3 
			Loop	3 
				Call	PlayEffect	( 00000001 *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
				Wait	00000003 
			EndLoop
		EndThread
		Call	EnableActorBlur 	( .Actor:Self .False )
		Call	PlaySoundAtActor	( .Actor:Self 000002CD )
		Wait	15`
		Thread
			Wait     5 
			Call     PlaySoundAtActor 	( .Actor:Self 000020BD )
			Wait     10` 
			Call     PlaySoundAtActor 	( .Actor:Self 000020BD )
		EndThread
		Call	SetAnimation 		( .Actor:Self 00000001 00A2000E )
		Wait	30`
		/%
  B00:  Switch  *Var[0] 
  B0C:  	CaseOR  ==  00000000 
  B18:  	CaseOR  ==  00000002 
				Sub *Var[E] 2
				ExecWait $Script_FP_Drain
  B24:  		Call     UseBattleCamPreset 	( 00000002 )
  B34:  		Call     PlaySoundAtActor 	( .Actor:Self 000020BE )
  B48:  		Call     PlaySoundAtActor 	( .Actor:Self 000020BB )
  B5C:  		Thread
  B64:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000A 00000000 )
  B80:  			Set  *Var[0]  00000000 
  B90:  			Loop     0000000A 
  B9C:  				Add  *Var[0]  00000024 
  BAC:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  BC8:  				Wait     00000001 
  BD4:  			EndLoop
  BDC:  		EndThread
  BE4:  		Call     SetGoalToTarget 	( .Actor:Self )
  BF4:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  C10:  		Add  *Var[0]  00000032 
  C20:  		Set  *Var[1]  00000000 
  C30:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[0.80078125] )
  C44:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20021 )
  C5C:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  C78:  		Call     JumpToGoal  	( .Actor:Self 0000001E 00000000 00000001 00000000 )
  C98:  		Call     PlaySoundAtActor 	( .Actor:Self 000020BA )
  CAC:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20023 )
  CC4:  		Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  CE0:  		Wait     00000003 
  CEC:  		Add  *Var[0]  00000014 
  CFC:  		Set  *Var[1]  00000000 
  D0C:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20021 )
  D24:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  D40:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  D60:  		Call     PlaySoundAtActor 	( .Actor:Self 000003B4 )
  D74:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20023 )
  D8C:  		Wait     00000014 
  D98:  	EndCaseGroup
  DA0:  EndSwitch
		%/
  DA8:  Call     SetAnimation 	( .Actor:Self 00000001 00A20003 )
  DC0:  Call     SetGoalToHome 	( .Actor:Self )
  DD0:  Call     SetActorSpeed 	( .Actor:Self *Fixed[7.6] ) %3.8 -> 7.6
  DE4:  Call     SetAnimation 	( .Actor:Self 00000001 00A20008 )
  DFC:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  E14:  Call     SetAnimation 	( .Actor:Self 00000001 00A20003 )
  E2C:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  E40:  Call     UseIdleAnimation 	( .Actor:Self .True )
  E54:  Return
  E5C:  End
}

@ $Script_TakeTurn_80230B20
{
		Call	GetActorVar 	( .Actor:Self 00000005 *Var[0] )
		If		*Var[0]  ==  1
			Call	UseIdleAnimation 	( .Actor:Self .False )
			Call	EnableIdleScript 	( .Actor:Self .False )
			ExecWait $Script_TenHitCombo 
			Call	SetIdleAnimations	( .Actor:Self 00000001 $IdleAnimations_Exhausted )
			Call	SetActorVar			( .Actor:Self 00000005 00000002 )
			Call	EnableIdleScript 	( .Actor:Self .True )
			Call	UseIdleAnimation 	( .Actor:Self .True )
			Return
		EndIf
		If		*Var[0]  ==  2
			Return
		EndIf
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
		Call	GetActorVar 	( .Actor:Self 00000004 *Var[F] ) %we need this for later
   28:  Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
   40:  If  *Var[0]  ==  00000000 
   50:  	Call     GetActorHP  	( .Actor:Self *Var[0] )
   64:  	If  *Var[0]  <  00000000 
   74:  		ExecWait $Script_80230240 
   80:  	Else
				Switch *Var[F]
					Case < 00000002 %no triple hit
						Set *Var[A] 3
					Case < 00000004 %no quintuple hit
						Set *Var[A] 4
					Default
						Set *Var[A] 5
				EndSwitch
				Call	GetActorVar 	( .Actor:Self 00000006 *Var[D] ) 
				Add *Var[D] 1
				Mod *Var[D] *Var[A]
				Call 	SetActorVar 	( .Actor:Self 00000006 *Var[D] ) 
				Switch *Var[D]
					Case == 0
						ExecWait $Script_DoubleStrike3 
					Case == 1
						Call     GetActorHP  	( .Actor:Self *Var[0] )
						Call     GetEnemyMaxHP 	( .Actor:Self *Var[1] )
						Div  *Var[1]  00000002 
						If  *Var[0]  <=  *Var[1] %the "now it is time I stopped being so merciful" means something now :)
							ExecWait $Script_TripleStrike3 
						Else
							ExecWait $Script_SingleStrike3 
						EndIf
					Case == 2
						ExecWait $Script_DoubleStrike3 
					Case == 3
						ExecWait $Script_TripleStrike3 
					Default
						ExecWait $Script_QuintupleStrike3 
				EndSwitch
				/%
   88:  		Call     GetActorHP  	( .Actor:Player *Var[0] )
   9C:  		If  *Var[0]  >  00000014 
   AC:  			Call     RandInt     	( 00000064 *Var[0] )
   C0:  			Switch  *Var[0] 
   CC:  				Case  <  0000001E 
   D8:  					ExecWait $Script_TripleStrike3 
   E4:  				Case  <  00000032 
   F0:  					ExecWait $Script_DoubleStrike3 
   FC:  				Default
  104:  					ExecWait $Script_SingleStrike3 
  110:  			EndSwitch
  118:  		Else
  120:  			Call     RandInt     	( 00000064 *Var[0] )
  134:  			Switch  *Var[0] 
  140:  				Case  <  00000032 
  14C:  					ExecWait $Script_DoubleStrike3 
  158:  				Default
  160:  					ExecWait $Script_SingleStrike3 
  16C:  			EndSwitch
  174:  		EndIf
				%/
  17C:  	EndIf
  184:  Else
  18C:  	Call     RandInt     	( 00000064 *Var[0] )
  1A0:  	Switch  *Var[0] 
  1AC:  		Case  <  00000064 
  1B8:  			ExecWait $Script_SingleStrike3 %$Script_80230914 
  1C4:  		Case  <  00000032 
  1D0:  			ExecWait $Script_DoubleStrike3 %$Script_8023059C 
  1DC:  	EndSwitch
  1E4:  EndIf
  1EC:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  200:  Call     UseIdleAnimation 	( .Actor:Self .True )
  214:  Return
  21C:  End
}

@ $Script_NextTurn_80230D44
{
		Call	GetActorVar 	( .Actor:Self 00000005 *Var[0] )
		If		*Var[0]  ==  2
			Return
		EndIf
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetBattlePhase ( *Var[0] )
   38:  Switch  *Var[0] 
   44:  	Case  ==  .Phase:PlayerBegin % A
   50:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   68:  		If  *Var[0]  ==  00000000 
   78:  			Call     UseBattleCamPreset 	( 0000000D )
   88:  			Call     BattleCamTargetActor ( .Actor:Self )
   98:  			Call     SetTargetActor ( .Actor:Self .Actor:Player )
   AC:  			Wait     0000000A 
   B8:  			Call     ActorSpeak  	( 0002002E .Actor:Self 00000001 00A20009 00A20005 ) % To battle!!
   D8:  			Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
   F0:  			Call     SetAnimation 	( .Actor:Self 00000001 00A2000D )
  108:  			Wait     0000000F 
  114:  			Call     SetAnimation 	( .Actor:Self 00000001 00A2000C )
  12C:  			Wait     00000005 
  138:  			Call     PlaySoundAtActor 	( .Actor:Self 000020B8 )
  14C:  			Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  168:  			Add  *Var[1]  00000014 
  178:  			Call     PlayEffect  	( 00000013 00000001 *Var[0] *Var[1] *Var[2] *Fixed[1.0] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  1BC:  			Set  *Var[0]  00000000 
  1CC:  			Call     SetAnimation 	( .Actor:Self 00000001 00A20000 )
  1E4:  			Loop     0000000F 
  1F0:  				Add  *Var[0]  00000018 
  200:  				Call     SetActorRotation 	( .Actor:Self 00000000 *Var[0] 00000000 )
  21C:  				Wait     00000001 
  228:  			EndLoop
  230:  			Set  *Var[0]  00000000 
  240:  			Call     SetAnimation 	( .Actor:Self 00000001 00A20000 )
  258:  			Loop     00000005 
  264:  				Add  *Var[0]  00000012 
  274:  				Call     SetActorRotation 	( .Actor:Self 00000000 *Var[0] 00000000 )
  290:  				Wait     00000001 
  29C:  			EndLoop
  2A4:  			Call     PlaySoundAtActor 	( .Actor:Self .Sound:SmokeBurst )
  2B8:  			Thread
  2C0:  				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2DC:  				Add  *Var[1]  00000003 
  2EC:  				Loop     00000003 
  2F8:  					Call     PlayEffect  	( ~FX:BigSmokePuff *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  33C:  					Wait     00000003 
  348:  				EndLoop
  350:  			EndThread
  358:  			Call     SetAnimation 	( .Actor:Self 00000001 00A20000 )
  370:  			Loop     00000005 
  37C:  				Add  *Var[0]  00000024 
  38C:  				Call     SetActorRotation 	( .Actor:Self 00000000 *Var[0] 00000000 )
  3A8:  				Wait     00000001 
  3B4:  			EndLoop
  3BC:  			Call     SetAnimation 	( .Actor:Self 00000001 00A20001 )
  3D4:  			Loop     00000005 
  3E0:  				Add  *Var[0]  00000012 
  3F0:  				Call     SetActorRotation 	( .Actor:Self 00000000 *Var[0] 00000000 )
  40C:  				Wait     00000001 
  418:  			EndLoop
  420:  			Wait     0000000F 
  42C:  			Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8022D9EC )
  444:  			Call     SetAnimation 	( .Actor:Self 00000001 00A20008 )
  45C:  			Call     SetAnimation 	( .Actor:Self 00000001 00A20014 )
  474:  			Wait     00000002 
  480:  			Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:GoldenFlames )
  49C:  			Wait     00000001 
  4A8:  			Call     ModifyActorDecoration 	( .Actor:Self 00000001 00000000 00000032 00000032 00000000 00000000 )
  4D0:  			Wait     0000000F 
  4DC:  			Call     SetAnimation 	( .Actor:Self 00000001 00A20003 )
  4F4:  			Call     UseBattleCamPreset 	( 00000002 )
  504:  			Call     MoveBattleCamOver 	( 0000000A )
  514:  			Call     ActorSpeak  	( 00020038 .Actor:Self 00000001 00A2000A 00A20006 ) % Kwaaaaa! Behold my fury, Mario!!
					ExecWait $Script_TenHitCombo %yay
  534:  		EndIf
  53C:  	Case  ==  .Phase:EnemyBegin % C
				%do final combo if hp < 5
				Call	GetActorVar 	( .Actor:Self 00000005 *Var[0] )
				If		*Var[0]  ==  0
					Call     GetActorHP  	( .Actor:Self *Var[0] )
					If		*Var[0]  <=  5
						Call	SetActorVar	( .Actor:Self 00000005 00000001 )
					EndIf
				EndIf
  548:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  55C:  		If  *Var[0]  &  00351000 
  56C:  			BreakCase
  574:  		EndIf
  57C:  		Call     GetActorHP  	( .Actor:Self *Var[0] )
  590:  		Call     GetEnemyMaxHP 	( .Actor:Self *Var[1] )
  5A4:  		Div  *Var[1]  00000002 
  5B4:  		If  *Var[0]  <=  *Var[1] 
  5C4:  			Call     UseBattleCamPreset 	( 00000002 )
  5D4:  			Call     MoveBattleCamOver 	( 0000000A )
  5E4:  			Call     ActorSpeak  	( 0002003B .Actor:Self 00000001 00A2000A 00A20006 ) % Now...it is time I stopped being so merciful.
					%some stuff in his AI will trigger (single hit -> triple hit)
  604:  			BreakCase
  60C:  		EndIf
  614:  		Call     GetPlayerHP 	( *Var[0] )
  624:  		If  *Var[0]  <=  0000000A 
  634:  			Call     UseBattleCamPreset 	( 00000002 )
  644:  			Call     MoveBattleCamOver 	( 0000000A )
  654:  			Call     ActorSpeak  	( 0002003D .Actor:Self 00000001 00A2000A 00A20006 ) % You underestimate me, Mario! Did you really think  ...
  674:  			BreakCase
  67C:  		EndIf
  684:  EndSwitch
  68C:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  6A0:  Call     UseIdleAnimation 	( .Actor:Self .True )
  6B4:  Return
  6BC:  End
}

#new:Script $Script_FP_Drain %var E = base drain amount
{
	Call     GetBattleFlags ( *Var[0] ) %check blocking
	Mul *Var[E] -1`
	If  *Var[0]  &  80000000 
		Add *Var[E] 2 %drain by 2 less if you block attack
		If *Var[E] > -1`
			Return %skip reduction
		EndIf
		If *Var[E] < -9` %I'm don't think -10 will display properly
			Set *Var[E] -9`
		EndIf
		Call $Function_FPHeal ( *Var[E] )
		Call	GetActorPos ( .Actor:Player *Var[0] *Var[1] *Var[2] )
		Add	*Var[0] 10
		Add	*Var[1] 12
		Call	PlayEffect ( 00000040 00000001 *Var[0] *Var[1] *Var[2] *Var[E] 00000000 00000000 00000000 00000000 00000000 00000000 )
	Else
		If *Var[E] > -1`
			Return %skip reduction
		EndIf
		If *Var[E] < -9`
			Set *Var[E] -9`
		EndIf
		Call $Function_FPHeal ( *Var[E] )
		Call	GetActorPos ( .Actor:Player *Var[0] *Var[1] *Var[2] )
		Add	*Var[0] 10
		Add	*Var[1] 12
		Call	PlayEffect ( 00000040 00000001 *Var[0] *Var[1] *Var[2] *Var[E] 00000000 00000000 00000000 00000000 00000000 00000000 )
	EndIf
	Return
	End
}
  
#new:Script $Script_TenHitCombo
{
	Call	UseIdleAnimation	( .Actor:Self .False )
	Call	EnableIdleScript	( .Actor:Self .False )
	% focus camera on the master
	Call	SetTargetActor	( .Actor:Self .Actor:Player )
	Call	UseBattleCamPreset	( 00000008 )
	Call	BattleCamTargetActor	( .Actor:Self )
	Call	SetBattleCamZoom		( 000000C8 )
	Call	SetBattleCamOffsetZ	( 0000000D )
	Call	MoveBattleCamOver		( 0000003C )
	%	Move the "survive this if you can" message over here
	%	This is his strongest attack, so it fits here
	Call     ActorSpeak  	( 0002003C .Actor:Self 00000001 00A2000A 00A20006 ) % Hyaaahhhh!!! Mario! Survive this if you can!!!!
	Call	SetAnimation	( .Actor:Self 00000001 00A20015 )
	Wait	20` 
	% charge up
	Call	PlaySoundAtActor	( .Actor:Self 000002D8 )
	Call	GetActorPos		( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add		*Var[1]  10` 
	Call	PlayEffect		( 0000006B 00000006 *Var[0] *Var[1] *Var[2] *Fixed[1.0] 0000002D 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	Wait	40`
	% focus camera on the player
	Call	SetGoalToTarget	( .Actor:Self )
	Call	UseBattleCamPreset	( 00000007 )
	Call	BattleCamTargetActor	( .Actor:Self )
	Call	MoveBattleCamOver		( 00000001 )
	Wait	10` 
	Call	PlaySoundAtActor	( .Actor:Self 000003B9 )
	Call	PlaySoundAtActor	( .Actor:Self 000020BB )
	% Dont even check for a hit. Just murder.
	%actually, we need to call EnemyTestTarget to avoid a glitch from the maxhealth patch
	Call     EnemyTestTarget	( .Actor:Self *Var[A] 10000000 00000000 00000000 00000010 )
	/%
	Switch   *Var[A] 
		Case     ==  00000006 
		% lucky cannot trigger for this attack
			Call	UseBattleCamPreset 	( 00000002 )
			Call	EnableActorBlur 	( .Actor:Self 00000001 )
			Call	SetGoalToTarget 	( .Actor:Self )
			Call	AddGoalPos 		( .Actor:Self FFFFFFCE 00000000 00000000 )
			Call	SetAnimation 		( .Actor:Self 00000001 00A20013 )
			Call	RunToGoal    		( .Actor:Self 0000000A .False )
			Call	SetAnimation 		( .Actor:Self 00000001 00A20003 )
			Call	EnableActorBlur 	( .Actor:Self 00000000 )
			Wait	10`
			Call	SetAnimation 		( .Actor:Self 00000001 00A20003 )
			Call	SetGoalToHome 		( .Actor:Self )
			Call	SetActorSpeed 		( .Actor:Self *Fixed[8.0] )
			Call	SetAnimation 		( .Actor:Self 00000001 00A20008 )
			Call	RunToGoal    		( .Actor:Self 00000000 .False )
			Call	SetAnimation 		( .Actor:Self 00000001 00A20003 )
			Goto	0
		EndCaseGroup
	EndSwitch
	%/
	% attack 1
	Call     EnableActorBlur 	( .Actor:Self 00000001 )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     SetAnimation 		( .Actor:Self 00000001 00A20013 )
	Call     RunToGoal    		( .Actor:Self 00000005 .False )
	Call     EnableActorBlur 	( .Actor:Self 00000000 )
	Thread
		Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[1.0] )
		Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[4.0] )
		Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[3.0] )
		Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[2.0] )
		Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[1.0] )
		Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.5] )
	EndThread
	Call	PlaySoundAtActor 	( .Actor:Self 000003ED )
	Call	PlaySoundAtActor 	( .Actor:Self 000020BB )
	Wait	2 
	Call	EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000005 00000010 )
	Set *Var[E] 5
	ExecWait $Script_FP_Drain
	/%
	Call	GetPlayerHP	( *Var[1] )
	If		*Var[1]  <  1
		Goto	0
	EndIf
	%/
	Wait     15` 
  	% attack 2
 	Call     UseBattleCamPreset 	( 00000002 )
	Thread
		Call     EnableActorBlur 	( .Actor:Self 00000001 )
		Wait     00000005 
		Call     PlaySoundAtActor 	( .Actor:Self 000003E2 )
		Call     SetAnimation 	( .Actor:Self 00000001 00A20014 )
		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.5] )
		Call     JumpToGoal  	( .Actor:Self 00000019 00000000 00000001 00000000 )
		Call     EnableActorBlur 	( .Actor:Self 00000000 )
	EndThread
	Thread
		Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.5] )
		Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[1.5] )
		Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.5] )
		Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.2] )
	EndThread
	Wait	00000002 
	Call	PlaySoundAtActor 	( .Actor:Self 000003ED )
	Call	PlaySoundAtActor 	( .Actor:Self 000020BB )
	Wait	00000002 
	Call	EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000005 00000040 )
	Set *Var[E] 5
	ExecWait $Script_FP_Drain
		/%
	Call	GetPlayerHP	( *Var[1] )
	If		*Var[1]  <  1
		Goto	0
	EndIf
	%/
	Wait     0000000F 
	% attack 3
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add      *Var[0] 00000032 
	Set      *Var[1] 00000000 
	Call     SetActorJumpGravity 	( .Actor:Self *Fixed[0.80078125] )
	Call     SetAnimation 		( .Actor:Self 00000001 00A20021 )
	Call     SetGoalPos 		( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     JumpToGoal  		( .Actor:Self 0000001E 00000000 00000001 00000000 )
	Call     PlaySoundAtActor 	( .Actor:Self 000020BA )
	Call     SetAnimation 		( .Actor:Self 00000001 00A20023 )
	Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
	Wait     00000003 
	Add      *Var[0] 00000014 
	Set      *Var[1] 00000000 
	Thread
		Wait     00000005 
		Call     PlaySoundAtActor 	( .Actor:Self 000020BD )
		Wait     0000000A 
		Call     PlaySoundAtActor 	( .Actor:Self 000020BD )
	EndThread
	Call     SetAnimation 		( .Actor:Self 00000001 00A2000E )
	Call     SetGoalPos 		( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     JumpToGoal  		( .Actor:Self 0000000A 00000000 00000001 00000000 )
	Call     PlaySoundAtActor 	( .Actor:Self 000003B4 )
	Wait     0000000A 
	Call     SetAnimation 		( .Actor:Self 00000001 00A2000F )
	Call     EnableActorBlur 	( .Actor:Self 00000001 )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     RunToGoal    		( .Actor:Self 00000003 .False )
	Call     EnableActorBlur 	( .Actor:Self 00000000 )
	Thread
		Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[1.0] )
		Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[3.0] )
		Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[6.0] )
		Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[5.0] )
		Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[4.0] )
		Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[3.0] )
		Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[2.0] )
		Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[1.0] )
		Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.5] )
		Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.2] )
	EndThread
	Call	PlaySoundAtActor 	( .Actor:Self 000003EE )
	Call	PlaySoundAtActor 	( .Actor:Self 000020BB )
	Wait	00000002 
	Call	EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000005 00000040 )
	Set *Var[E] 5
	ExecWait $Script_FP_Drain
		/%
	Call	GetPlayerHP	( *Var[1] )
	If		*Var[1]  <  1
		Goto	0
	EndIf
	%/
	% rest
	Thread
		Call     SetActorRotationOffset	( .Actor:Self 00000000 16` 00000000 )
		Set      *Var[0]  0 
		Loop     24` 
			Sub      *Var[0] 15` 
			Call     SetActorRotation	( .Actor:Self  00000000 00000000 *Var[0] )
			Wait     00000001 
		EndLoop
		Call     SetActorRotationOffset	( .Actor:Self 00000000 00000000 00000000 )
	EndThread
	Call	EnableActorBlur 	( .Actor:Self .True )
	Wait	5
	Call	PlaySoundAtActor 	( .Actor:Self 000003E2 )
	Call	SetAnimation 		( .Actor:Self 00000001 00A20014 )
	Call	GetActorPos			( .Actor:Player *Var[0] *Var[1] *Var[2] )
	Add		*Var[0]  128`
	Call	SetGoalPos 		( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call	SetActorJumpGravity 	( .Actor:Self *Fixed[1.5] )
	Call	JumpToGoal  		( .Actor:Self 20` 00000000 00000001 00000000 )
	Call	SetAnimation 		( .Actor:Self 00000001 00A20018 )
	Call	EnableActorBlur 	( .Actor:Self .False )
	Wait	15`
	% attack 4 -- run in, double jump part 1
	Call	EnableActorBlur 	( .Actor:Self .True )
	Sub		*Var[0]  48`
	Call	SetAnimation 		( .Actor:Self 00000001 00A20008 ) % running
	Call	SetGoalPos 		( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call	RunToGoal    		( .Actor:Self 00000004 .False )
	Thread
		Wait	3
		Call	SetActorRotationOffset	( .Actor:Self 00000000 16` 00000000 )
		Set		*Var[0]  0 
		Loop	15` 
			Add		*Var[0] 24` 
			Call	SetActorRotation	( .Actor:Self  00000000 00000000 *Var[0] )
			Wait	1 
		EndLoop
		Call	SetActorRotationOffset	( .Actor:Self 00000000 00000000 00000000 )
	EndThread
	Call	GetActorPos			( .Actor:Player *Var[0] *Var[1] *Var[2] )
	Add		*Var[1]  20`
	Call	SetGoalPos 		( .Actor:Self   *Var[0] *Var[1] *Var[2] )
	Call	SetActorJumpGravity 	( .Actor:Self *Fixed[1.2] )
	Call	PlaySoundAtActor 	( .Actor:Self 000003E2 )
	Call	SetAnimation 		( .Actor:Self 00000001 00A20021 ) % jump
	Call	JumpToGoal  		( .Actor:Self 20` 00000000 00000001 00000000 )
	Call	SetAnimation 		( .Actor:Self 00000001 00A20023 ) % land
	Wait	2
	Thread
		Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.5] )
		Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[1.5] )
		Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.5] )
		Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.2] )
	EndThread
	Call	PlaySoundAtActor 	( .Actor:Self 000003ED )
	Call	PlaySoundAtActor 	( .Actor:Self 000020BB )
	Wait	2
	Call	EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000005 00000040 )
	Set *Var[E] 5
	ExecWait $Script_FP_Drain
		/%
	Call	GetPlayerHP	( *Var[1] )
	If		*Var[1]  <  1
		Goto	0
	EndIf
	%/
	% attack 5 -- double jump part 2
	Wait	2
	Call	PlaySoundAtActor 	( .Actor:Self 000003E2 )
	Call	SetAnimation 		( .Actor:Self 00000001 00A20021 ) % jump
	Call	JumpToGoal  		( .Actor:Self 20` 00000000 00000001 00000000 )
	Call	SetAnimation 		( .Actor:Self 00000001 00A20023 ) % land
	Wait	2
	Thread
		Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.5] )
		Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[1.5] )
		Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.5] )
		Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.2] )
	EndThread
	Call	PlaySoundAtActor 	( .Actor:Self 000003ED )
	Call	PlaySoundAtActor 	( .Actor:Self 000020BB )
	Wait	2
	Call	EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000005 00000040 )
	Set *Var[E] 5
	ExecWait $Script_FP_Drain
		/%
	Call	GetPlayerHP	( *Var[1] )
	If		*Var[1]  <  1
		Goto	0
	EndIf
	%/
	% attack 6 -- flip off and cut back in
	Call	UseBattleCamPreset 		( 00000002 )
	Call	PlaySoundAtActor 	( .Actor:Self 000020BE )
	Call	PlaySoundAtActor 	( .Actor:Self 000020BB )
	Thread
		Call	SetActorRotationOffset	( .Actor:Self 00000000 0000000A 00000000 )
		Set		*Var[0]  0 
		Loop	10` 
			Add		*Var[0]  36` 
			Call	SetActorRotation	( .Actor:Self 00000000 00000000 *Var[0] )
			Wait	1
		EndLoop
		Call	SetActorRotationOffset	( .Actor:Self 00000000 00000000 00000000 )
	EndThread
	Call	SetGoalToTarget 	( .Actor:Self )
	Call	GetGoalPos  		( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add		*Var[0] 50` 
	Set		*Var[1] 50` 
	Call	SetActorJumpGravity 	( .Actor:Self *Fixed[0.8] )
	Call	PlaySoundAtActor 	( .Actor:Self 000003E2 )
	Call	SetAnimation 		( .Actor:Self 00000001 00A20021 )
	Call	SetGoalPos 		( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call	JumpToGoal  		( .Actor:Self 0000001E 00000000 00000001 00000000 )
	Call	SetAnimation 		( .Actor:Self 00000001 00A20023 )
	% jump downward
  	Call	EnableActorBlur 	( .Actor:Self .True )
	Call	GetActorPos			( .Actor:Player *Var[0] *Var[1] *Var[2] )
	Add		*Var[0]  16`
	Call	SetGoalPos 		( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call	FlyToGoal			( .Actor:Self 00000005 00000000 00000000 )
	Call	EnableActorBlur 	( .Actor:Self .False )
	Thread
		Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[1.0] )
		Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[4.0] )
		Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[3.0] )
		Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[2.0] )
		Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[1.0] )
		Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.5] )
	EndThread
	Call	PlaySoundAtActor 	( .Actor:Self 000003ED )
	Call	PlaySoundAtActor 	( .Actor:Self 000020BB )
	Wait	2
	Call	EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000005 00000040 )
	Set *Var[E] 5
	ExecWait $Script_FP_Drain
		/%
	Call	GetPlayerHP	( *Var[1] )
	If		*Var[1]  <  1
		Goto	0
	EndIf
	%/
	Wait     15`
	% attack 7 -- spin kick
	Thread
		Set		*Var[0]  0 
		Call	AddActorDecoration 		( .Actor:Self 00000001 00000001 .Decoration:Whirlwind )
		Call	PlaySoundAtActor		( .Actor:Self 000020BE )
		Loop	8
			Add		*Var[0] 45` 
			Call	SetActorRotation 	( .Actor:Self 00000000 *Var[0] 00000000 )
			Wait	1 
		EndLoop
		Call	RemoveActorDecoration 	( .Actor:Self 00000001 00000001 )
	EndThread
	Wait	6
	Call	SetAnimation 		( .Actor:Self 00000001 00A2000F )
	Wait	2
	Call	PlaySoundAtActor 	( .Actor:Self 000003ED )
	Call	PlaySoundAtActor 	( .Actor:Self 000020BB )
	Wait	2
	Call	EnemyDamageTarget 		( .Actor:Self *Var[0] 10000000 00000000 00000000 00000005 00000040 )
	Set *Var[E] 5
	ExecWait $Script_FP_Drain
		/%
	Call	GetPlayerHP	( *Var[1] )
	If		*Var[1]  <  1
		Goto	0
	EndIf
	%/
	Wait	15`
	% retreat and vanish
	Call	GetActorPos			( .Actor:Player *Var[0] *Var[1] *Var[2] )
	Add		*Var[0]  128`
	Call	SetGoalPos 		( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call	SetAnimation 		( .Actor:Self 00000001 00A20008 ) % running
	Call	RunToGoal    		( .Actor:Self 00000004 .False )
	Wait	15`
	Thread
		Call	GetActorPos		( .Actor:Self *Var[0] *Var[1] *Var[2] )
		Add		*Var[1]  3 
		Loop	3 
			Call	PlayEffect	( 00000001 *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
			Wait	00000003 
		EndLoop
	EndThread
	Call	SetAnimation 		( .Actor:Self 00000001 00A20014 ) % uppercut
	Call	PlaySoundAtActor 	( .Actor:Self 000002CD )
	Wait	5
	Call	SetActorPos			( .Actor:Self 0` -1000` 0` )
	Wait	8
	Call	ModifyActorDecoration	( .Actor:Self 00000001 00000000 00000000 00000000 00000000 00000000 )
	% attack 8 -- re-appear and strike
	Call	GetActorPos		( .Actor:Player *Var[0] *Var[1] *Var[2] )
	Add		*Var[1]  20`
	Call	SetGoalPos	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add		*Var[0]  40`
	Add		*Var[1]  60`
	Call	SetAnimation	( .Actor:Self 00000001 00A20022 ) % jump kick
	Call	SetActorPos		( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Thread
		Add		*Var[1]  3 
		Loop	3 
			Call	PlayEffect	( 00000001 *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
			Wait	00000003 
		EndLoop
	EndThread
	Call	PlaySoundAtActor	( .Actor:Self 000002CD )
	Wait	8
	Call	FlyToGoal		( .Actor:Self 00000008 00000000 00000000 )
	Wait	2
	Call	PlaySoundAtActor 	( .Actor:Self 000003ED )
	Call	PlaySoundAtActor 	( .Actor:Self 000020BB )
	Wait	2
	Call	EnemyDamageTarget 		( .Actor:Self *Var[0] 10000000 00000000 00000000 00000005 00000040 )
	Set *Var[E] 5
	ExecWait $Script_FP_Drain
		/%
	Call	GetPlayerHP	( *Var[1] )
	If		*Var[1]  <  1
		Goto	0
	EndIf
	%/
	%
	Call	GetGoalPos		( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Sub		*Var[0]  40`
	Add		*Var[1]  60`
	Call	SetActorPos		( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call	SetActorRotation 	( .Actor:Self 00000000 180` 00000000 )
	Thread
		Add		*Var[1]  3 
		Loop	3 
			Call	PlayEffect	( 00000001 *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
			Wait	00000003 
		EndLoop
	EndThread
	Call	PlaySoundAtActor	( .Actor:Self 000002CD )
	Wait	8
	Call	FlyToGoal		( .Actor:Self 00000008 00000000 00000000 )
	Wait	2
	Call	PlaySoundAtActor 	( .Actor:Self 000003ED )
	Call	PlaySoundAtActor 	( .Actor:Self 000020BB )
	Wait	2
	Call	EnemyDamageTarget 		( .Actor:Self *Var[0] 10000000 00000000 00000000 00000005 00000040 )
	Set *Var[E] 5
	ExecWait $Script_FP_Drain
		/%
	Call	GetPlayerHP	( *Var[1] )
	If		*Var[1]  <  1
		Goto	0
	EndIf
	%/
	% re-appear in stage center
	Call	GetActorPos			( .Actor:Player *Var[0] *Var[1] *Var[2] )
	Add		*Var[0]  128`
	Call	SetActorPos 		( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call	SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
	Call	SetAnimation 		( .Actor:Self 00000001 00A20004 )
	Call	ModifyActorDecoration	( .Actor:Self 00000001 00000000 00000032 00000032 00000000 00000000 )
	Thread
		Add		*Var[1]  3 
		Loop	3 
			Call	PlayEffect	( 00000001 *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
			Wait	00000003 
		EndLoop
	EndThread
	Call	EnableActorBlur 	( .Actor:Self .False )
	Call	PlaySoundAtActor	( .Actor:Self 000002CD )
	Wait	15`
	Thread
		Wait     5 
		Call     PlaySoundAtActor 	( .Actor:Self 000020BD )
		Wait     10` 
		Call     PlaySoundAtActor 	( .Actor:Self 000020BD )
	EndThread
	Call	SetAnimation 		( .Actor:Self 00000001 00A2000E )
	Wait	30`
	% final attack -- charge toward player
	Call	EnableActorBlur 	( .Actor:Self .True )
	Sub		*Var[0]  32`
	Call	SetAnimation 		( .Actor:Self 00000001 00A20008 ) % running
	Call	SetGoalPos 		( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call	RunToGoal    		( .Actor:Self 00000004 .False )
	Call	GetActorPos			( .Actor:Player *Var[0] *Var[1] *Var[2] )
	Add		*Var[0]  20`
	Add		*Var[1]  70`
	Call	SetGoalPos 		( .Actor:Self   *Var[0] *Var[1] *Var[2] )
	Call	SetActorJumpGravity 	( .Actor:Self *Fixed[1.2] )
	Thread
		Wait	8
		Call	PlaySoundAtActor	( .Actor:Self 000020D4 )
		Wait	8
		Call	SetAnimation		( .Actor:Self 00000001 00A20014 ) % uppercut
		Call	PlaySoundAtActor ( .Actor:Self 0000020A )
		% thunder strike!
		Call	GetActorPos   	( .Actor:Self *Var[0] *Var[1] *Var[2] )
		Call	GetActorPos   	( .Actor:Self *Var[3] *Var[4] *Var[5] )
		Sub		*Var[0] 50`
		Sub		*Var[3] 12`
		Add		*Var[1] 100`
		Add		*Var[4] 40`
		Add		*Var[2] 8`
		Add		*Var[5] 8`
		Call	PlayEffect  	( 0000005E 00000000 *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] 00000006 00000014 00000000 00000000 00000000 00000000 )
	EndThread
	Call	PlaySoundAtActor 	( .Actor:Self 000003E2 )
	Call	SetAnimation 	( .Actor:Self 00000001 00A20021 ) % jump
	Call	8026A62C 		( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call	8027BBB8		( .Actor:Self 30` 20` .Easing:CubicOut )
	Call	SetAnimation 	( .Actor:Self 00000001 00A20022 ) % land
	% and strike!
	Call	GetActorPos			( .Actor:Player *Var[0] *Var[1] *Var[2] )
	Add		*Var[1]  20`
	Call	SetGoalPos 		( .Actor:Self   *Var[0] *Var[1] *Var[2] )
	Call	FlyToGoal			( .Actor:Self 00000003 00000000 00000000 )
	Call	EnableActorBlur 	( .Actor:Self .False )
	Thread
		Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[1.0] )
		Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[4.0] )
		Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[3.0] )
		Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[2.0] )
		Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[1.0] )
		Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.5] )
	EndThread
	Call	PlaySoundAtActor 	( .Actor:Self 000003ED )
	Call	PlaySoundAtActor 	( .Actor:Self 000020BB )
	Wait	2
	Call	EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000005 00000040 )
	Set *Var[E] 5 
	ExecWait $Script_FP_Drain
	%Call     $SPSubtractMainFunction ( 00000007 00000000 )
	Wait	2
	% done, return home
	Label	0
	Call	EnableActorBlur 	( .Actor:Self .False )
	Call	ModifyActorDecoration	( .Actor:Self 00000001 00000000 00000032 00000032 00000000 00000000 )
	Call	SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
	Call	GetActorPos	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	If		*Var[1]  !=  0
		Add		*Var[0]  40
		Call	SetGoalPos	( .Actor:Self *Var[0] 0 *Var[2] )
		Call	JumpToGoal		( .Actor:Self 0000000A 00000000 00000001 00000000 )
		Call	PlaySoundAtActor 	( .Actor:Self 000003B4 )
	EndIf
	Call     SetAnimation 	( .Actor:Self 00000001 00A20003 )
	Call     SetGoalToHome 	( .Actor:Self )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[3.8007812] )
	Call     SetAnimation 	( .Actor:Self 00000001 00A20008 )
	Call     RunToGoal    	( .Actor:Self 00000000 .False )
	Call     SetAnimation 	( .Actor:Self 00000001 00A20003 )
	Call     EnableIdleScript 	( .Actor:Self .True )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End
}