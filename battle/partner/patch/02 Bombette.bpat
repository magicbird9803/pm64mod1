%Mega bomb -> shrink bomb
%7 -> 4 damage with 80% 3 turn shrink


#new:Function $Function_SetBlastPalette        
{
    0:  ADDIU        SP, SP, FFE8
    4:  SW            RA, 10 (SP)
    8:  LW            V0, C (A0)
    C:  JAL            ~Func:get_variable
   10:  LW            A1, 0 (V0)
   14:  LW            V1, C (V0)
   18:  ADDIU        A0, R0, D0                %R
   1C:  SB            A0, 50 (V1)
   20:  LW            V1, C (V0)
        ADDIU        A0, R0, 00                %G
   24:  SB            A0, 51 (V1)
   28:  LW            V1, C (V0)
   2C:  ADDIU        A1, R0, D0                %B
   30:  SB            A1, 52 (V1)
   34:  LW            A0, C (V0)
   38:  ADDIU        V1, R0, FF                %R 2
   3C:  SB            V1, 53 (A0)
   40:  LW            A0, C (V0)
   44:  ADDIU        V1, R0, B0                %G 2
   48:  SB            V1, 54 (A0)
   4C:  LW            V1, C (V0)
        ADDIU        A1, R0, FF                %B 2
   50:  SB            A1, 55 (V1)
   54:  LW            RA, 10 (SP)
   58:  ADDIU        V0, R0, 2
   5C:  JR            RA
   60:  ADDIU        SP, SP, 18
}

%controls damage progression for megabomb (now shrink bomb)
@ $Function_80238590
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        V0, C (S1)
   18:  LW        A1, 0 (V0)
   1C:  LAW       S0, 800DC14C			%partner pointer
   24:  JAL       ~Func:get_variable
   28:  NOP
   2C:  LW        V1, 8 (S0)			
   30:  COPY      A1, V0				%A1 = value
   34:  LBU       V1, 6 (V1)
   38:  LI        V0, 2				
   3C:  BNE       V1, V0, .o78
   40:  CLEAR     A0
   44:  SLTI      V0, A1, 21			%(36) => 33
   48:  BNE       V0, R0, .o78
   4C:  LI        A0, 1					%(Less than 33) => 1 damage
   5C:  SLTI      V0, A1, 43			%(81) => 67
   60:  BNE       V0, R0, .o78
   64:  LI        A0, 2					%(Less than 67) => 2 damage
   68:  SLTI      V0, A1, 64			%(100)
   6C:  BEQ       V0, R0, .o7C
   70:  LI        A0, 4					%(Not less than 100) => 4 damage
   74:  LI        A0, 3					%(Less than 100) => 3 damage
        .o78
   78:  SLTI      V0, A1, 64			%(100)
        .o7C
   7C:  BNEL      V0, R0, .o8C
   80:  SW        R0, 84 (S1)			%set damage value
   84:  LI        V0, 1
   88:  SW        V0, 84 (S1)			%set damage value
        .o8C
   8C:  SW        A0, C0 (S1)
   90:  LW        RA, 18 (SP)
   94:  LW        S1, 14 (SP)
   98:  LW        S0, 10 (SP)
   9C:  LI        V0, 2
   A0:  JR        RA
   A4:  ADDIU     SP, SP, 20
}

%give spin smash properties
@ $Script_8023A5F8
{
    0:  Call  LoadActionCommand ( .ActionCommand:BodySlam )
   10:  Call  802A9000 ( )
   1C:  Call  SetupMashMeter    ( 00000001 00000064 00000000 00000000 00000000 00000000 )
   40:  Wait  10`
   4C:  Call  UseBattleCamPreset    ( 00000030 )
   5C:  Call  InitTargetIterator ( )
   68:  Call  SetGoalToTarget   ( .Actor:Partner )
   78:  Call  AddGoalPos        ( .Actor:Partner FFFFFFD8 00000000 00000000 )
   94:  Set   *Flag[02]  .False
   A4:  Loop  0000003C
   B0:  	Call  CheckButtonDown   ( ~Flags:Buttons:A *Var0 )
   C4:  	If  *Var0  !=  .False
   D4:  		Set   *Flag[02]  .True
   E4:  		BreakLoop
   EC:  	EndIf
   F4:  	Wait  1`
  100:  EndLoop
  108:  Call  MoveBattleCamOver ( 00000041 )
  118:  If  *Flag[02]  ==  .True
  128:  	Call  802A91B8  ( 00000000 0000005C 00000003 00000000 )
  144:  	Set   *Flag[00]  .False
  154:  	Exec  $Script_8023A4BC *VarA
  164:  	Loop  00000023
  170:  		Call  CheckButtonDown   ( ~Flags:Buttons:A *Var0 )
  184:  		If  *Var0  ==  .False
  194:  			Set   *Flag[00]  .True
  1A4:  			BreakLoop
  1AC:  		EndIf
  1B4:  		Wait  1`
  1C0:  	EndLoop
  1C8:  	If  *Flag[00]  ==  .True
  1D8:  		Kill  *VarA
  1E4:  		Goto  A
  1F0:  	EndIf
  1F8:  	Set   *Flag[00]  .False
  208:  	Exec  $Script_8023A4F8 *VarA
  218:  	Loop  0000001E
  224:  		Call  CheckButtonDown   ( ~Flags:Buttons:A *Var0 )
  238:  		If  *Var0  ==  .False
  248:  			Set   *Flag[00]  .True
  258:  			BreakLoop
  260:  		EndIf
  268:  		Wait  1`
  274:  	EndLoop
  27C:  	If  *Flag[00]  ==  .True
  28C:  		Kill  *VarA
  298:  		Goto  A
  2A4:  	EndIf
  2AC:  	If  *Flag[00]  ==  .False
  2BC:  		Exec  $Script_8023A584 *VarA
  2CC:  		Loop  0000001E
  2D8:  			Call  CheckButtonDown   ( ~Flags:Buttons:A *Var0 )
  2EC:  			If  *Var0  ==  .False
  2FC:  				Set   *Flag[00]  .True
  30C:  				BreakLoop
  314:  			EndIf
  31C:  			Wait  1`
  328:  		EndLoop
  330:  		If  *Flag[00]  ==  .True
  340:  			Kill  *VarA
  34C:  			Goto  A
  358:  		EndIf
  360:  	EndIf
  368:  Else
  370:  	Set   *Flag[00]  .False
  380:  	Exec  $Script_8023A4BC *VarA
  390:  	Loop  00000023
  39C:  		Call  CheckButtonDown   ( ~Flags:Buttons:A *Var0 )
  3B0:  		If  *Var0  !=  .False
  3C0:  			If  *Flag[02]  ==  .False
  3D0:  				Call  802A91B8  ( 00000000 0000005C 00000003 00000000 )
  3EC:  				Set   *Flag[02]  .True
  3FC:  			EndIf
  404:  		EndIf
  40C:  		If  *Flag[02]  ==  .True
  41C:  			If  *Var0  ==  .False
  42C:  				Set   *Flag[00]  .True
  43C:  				BreakLoop
  444:  			EndIf
  44C:  		EndIf
  454:  		Wait  1`
  460:  	EndLoop
  468:  	If  *Flag[00]  ==  .True
  478:  		Kill  *VarA
  484:  		Goto  A
  490:  	EndIf
  498:  	Set   *Flag[00]  .False
  4A8:  	Exec  $Script_8023A4F8 *VarA
  4B8:  	Loop  0000001E
  4C4:  		Call  CheckButtonDown   ( ~Flags:Buttons:A *Var0 )
  4D8:  		If  *Var0  !=  .False
  4E8:  			If  *Flag[02]  ==  .False
  4F8:  				Call  802A91B8  ( 00000000 0000005C 00000003 00000000 )
  514:  				Set   *Flag[02]  .True
  524:  			EndIf
  52C:  		EndIf
  534:  		If  *Flag[02]  ==  .True
  544:  			If  *Var0  ==  .False
  554:  				Set   *Flag[00]  .True
  564:  				BreakLoop
  56C:  			EndIf
  574:  		EndIf
  57C:  		Wait  1`
  588:  	EndLoop
  590:  	If  *Flag[00]  ==  .True
  5A0:  		Kill  *VarA
  5AC:  		Goto  A
  5B8:  	EndIf
  5C0:  	If  *Flag[00]  ==  .False
  5D0:  		Exec  $Script_8023A584 *VarA
  5E0:  		Loop  0000001E
  5EC:  			Call  CheckButtonDown   ( ~Flags:Buttons:A *Var0 )
  600:  			If  *Var0  ==  .False
  610:  				Set   *Flag[00]  .True
  620:  				BreakLoop
  628:  			EndIf
  630:  			Wait  1`
  63C:  		EndLoop
  644:  		If  *Flag[00]  ==  .True
  654:  			Kill  *VarA
  660:  			Goto  A
  66C:  		EndIf
  674:  	EndIf
  67C:  EndIf
  684:  Label  A
  690:  Call  SetActorDispOffset    ( .Actor:Partner 00000000 00000000 00000000 )
  6AC:  Wait  2`
  6B8:  Call  CloseActionCommandInfo ( )
  6C4:  Call  PartnerTestEnemy      ( *Var0 ~Flags:DamageType:0 00000095 00000000 00000001 00000010 )
  6E8:  If  *Var0  ==  .HitResult:Miss % 6
  6F8:  	Call  PlaySoundAtActor  ( .Actor:Partner 00002020 )
  70C:  	Call  SetGoalToTarget   ( .Actor:Partner )
  71C:  	Call  AddGoalPos        ( .Actor:Partner FFFFFFF6 00000000 00000000 )
  738:  	Call  SetAnimation      ( .Actor:Partner FFFFFFFF 000B0010 )
  750:  	Call  SetActorSpeed     ( .Actor:Partner *Fixed[6.0] )
  764:  	Call  SetActorSounds    ( .Actor:Partner .ActorSound:Walk 00000000 00000000 )
  780:  	Call  RunToGoal ( .Actor:Partner 00000000 )
  794:  	Call  SetAnimation      ( .Actor:Partner FFFFFFFF 000B0004 )
  7AC:  	Call  UseBattleCamPreset    ( 00000033 )
  7BC:  	Thread
  7C4:  		Call  SetActorRotationOffset    ( .Actor:Partner 00000000 0000000F 00000000 )
  7E0:  		Set   *Var0  00000000
  7F0:  		Loop  0000000A
  7FC:  			Add   *Var0  FFFFFFB8
  80C:  			Call  SetActorRotation  ( .Actor:Partner 00000000 00000000 *Var0 )
  828:  			Wait  1`
  834:  		EndLoop
  83C:  		Call  SetActorRotationOffset    ( .Actor:Partner 00000000 00000000 00000000 )
  858:  	EndThread
  860:  	Call  AddGoalPos    ( .Actor:Partner 0000003C 00000000 00000000 )
  87C:  	Call  RunToGoal     ( .Actor:Partner 0000000A )
  890:  	Call  SetAnimation  ( .Actor:Partner FFFFFFFF 000B0004 )
  8A8:  	Thread
  8B0:  		Call  $Function_80238244 ( )
  8BC:  	EndThread
  8C4:  	Wait  20`
  8D0:  	Call  SetGoalToHome ( .Actor:Partner )
  8E0:  	Call  SetActorSpeed ( .Actor:Partner *Fixed[5.0] )
  8F4:  	Call  SetAnimation  ( .Actor:Partner FFFFFFFF 000B0008 )
  90C:  	Call  ResetActorSounds  ( .Actor:Partner .ActorSound:Walk )
  920:  	Call  RunToGoal     ( .Actor:Partner 00000000 )
  934:  	Call  SetAnimation  ( .Actor:Partner FFFFFFFF 000B0004 )
  94C:  	Return
  954:  EndIf
  95C:  Call  GetMenuSelection  ( *Var0 *Var1 *Var2 )
  974:  Switch  *Var2
  980:  	Case  ==  0000008F
  98C:  		Set   *VarE  00000001
  99C:  		Set   *VarF  00000002
				Set	  *VarD  .False
  9AC:  	Case  ==  00000090
  9B8:  		Set   *VarE  00000001
  9C8:  		Set   *VarF  00000003
				Set	  *VarD  .True
  9D8:  	Case  ==  00000091
  9E4:  		Set   *VarE  00000003
  9F4:  		Set   *VarF  00000004
				Set	  *VarD  .True
  A04:  EndSwitch
  A0C:  Call  PlaySoundAtActor  ( .Actor:Partner 00002020 )
  A20:  Call  GetActionCommandResult    ( *Var0 )
  A30:  If  *Var0  >  00000000
  A40:  	Call  SetGoalToTarget   ( .Actor:Partner )
  A50:  	Call  AddGoalPos    ( .Actor:Partner FFFFFFF6 00000000 00000000 )
  A6C:  	Call  SetAnimation  ( .Actor:Partner FFFFFFFF 000B0010 )
  A84:  	Call  RunToGoal     ( .Actor:Partner 00000003 )
  A98:  	Call  SetAnimation  ( .Actor:Partner FFFFFFFF 000B0004 )
  AB0:  Else
  AB8:  	Call  SetGoalToTarget   ( .Actor:Partner )
  AC8:  	Call  AddGoalPos    ( .Actor:Partner FFFFFFF6 00000000 00000000 )
  AE4:  	Call  SetAnimation  ( .Actor:Partner FFFFFFFF 000B0010 )
  AFC:  	Call  SetActorSpeed ( .Actor:Partner *Fixed[6.0] )
  B10:  	Call  RunToGoal     ( .Actor:Partner 00000000 )
  B24:  	Call  SetAnimation  ( .Actor:Partner FFFFFFFF 000B0004 )
  B3C:  EndIf
  B44:  Switch  *Var0
  B50:  	Case  >  00000000
				If *VarD == 1`
  B5C:  			Call  PartnerDamageEnemy    ( *Var0 04000000 00000001 00000000 *VarF 00000070 )	%Spin smash properties (*Note: spin smash uses EnemyDamageTarget, see DoSpinSmashHit in libs for more info)
				Else
  B5C:  			Call  PartnerDamageEnemy    ( *Var0 00000000 00000001 00000000 *VarF 00000070 )
				EndIf
  B80:  	Default
  B88:  		Call  PartnerDamageEnemy    ( *Var0 00000000 00000001 00000000 *VarE 00000030 )	%~Flags:DamageType:0
  BAC:  EndSwitch
  BB4:  Switch  *Var0
  BC0:  	CaseOR  ==  .HitResult:Hit % 0
  BCC:  	CaseOR  ==  00000002 % 2
  BD8:  		ExecWait  $Script_8023A1AC
  BE4:  	EndCaseGroup
  BEC:  	CaseOR  ==  00000001 % 1
  BF8:  	CaseOR  ==  00000003 % 3
  C04:  		ExecWait  $Script_80239E8C
  C10:  	EndCaseGroup
  C18:  EndSwitch
  C20:  Return
  C28:  End
}

@ $Script_8023B228
{
    0:  Call  LoadActionCommand ( .ActionCommand:Bomb )
   10:  Call  802A9000 ( )
   1C:  Call  GetMenuSelection  ( *Var0 *Var1 *Var2 )
   34:  Switch  *Var2
   40:  	Case  ==  00000092
   4C:  		Call  GetActorLevel ( .Actor:Partner *Var0 )
   60:  		Switch  *Var0
   6C:  			Case  ==  00000000
   78:  				Call  SetupMashMeter    ( 00000005 00000023 0000003C 00000050 00000063 00000064 )
   9C:  			Case  ==  00000001
   A8:  				Call  SetupMashMeter    ( 00000005 00000023 0000003C 00000050 00000063 00000064 )
   CC:  			Case  ==  00000002
   D8:  				Call  SetupMashMeter    ( 00000005 00000023 0000003C 00000050 00000063 00000064 )
   FC:  		EndSwitch
  104:  	Case  ==  00000093
  110:  		Call  GetActorLevel ( .Actor:Partner *Var0 )
  124:  		Switch  *Var0
  130:  			Case  ==  00000001
  13C:  				Call  SetupMashMeter    ( 00000005 00000023 0000003C 00000050 00000063 00000064 )
  160:  			Case  ==  00000002
  16C:  				Call  SetupMashMeter    ( 00000005 00000023 0000003C 00000050 00000063 00000064 )
  190:  		EndSwitch
  198:  	Case  ==  00000094
  1A4:  		Call  SetupMashMeter    ( 00000005 00000023 0000003C 00000050 00000063 00000064 )
  1C8:  EndSwitch
  1D0:  Wait  10`
  1DC:  Call  UseBattleCamPreset    ( 00000030 )
  1EC:  Call  GetMenuSelection      ( *Var0 *Var1 *Var2 )
  204:  Switch  *Var2
  210:  	Case  ==  00000092
  21C:  		Call  InitTargetIterator ( )
  228:  		Call  SetGoalToTarget   ( .Actor:Partner )
  238:  		Call  AddGoalPos        ( .Actor:Partner FFFFFFEC 00000000 00000000 )
  254:  	Case  ==  00000093
  260:  		Call  InitTargetIterator ( )
  26C:  		Call  SetGoalToTarget   ( .Actor:Partner )
  27C:  		Call  AddGoalPos        ( .Actor:Partner FFFFFFD8 00000000 00000000 )
  298:  	Case  ==  00000094
  2A4:  		Call  InitTargetIterator ( )
  2B0:  		Call  SetGoalToTarget   ( .Actor:Partner )
  2C0:  		Call  AddGoalPos        ( .Actor:Partner FFFFFFD8 00000000 00000000 )
  2DC:  EndSwitch
  2E4:  Call  MoveBattleCamOver ( 0000003C )
  2F4:  Call  GetMenuSelection  ( *Var0 *Var1 *Var2 )
  30C:  Switch  *Var2
  318:  	Case  ==  00000092
  324:  		Call  802A9170  ( 00000000 00000039 00000003 00000000 )
  340:  	Case  ==  00000093
  34C:  		Call  802A9170  ( 00000000 00000048 00000003 00000001 )
  368:  	Case  ==  00000094
  374:  		Call  802A9170  ( 00000000 00000057 00000003 00000002 )
  390:  EndSwitch
  398:  Call  PlaySoundAtActor  ( .Actor:Partner 00000287 )
  3AC:  ChildThread
  3B4:  	Call  SetActorVar       ( .Actor:Self 00000000 00000001 )
  3CC:  	Call  SetAnimation      ( .Actor:Partner FFFFFFFF 000B0009 )
  3E4:  	Call  GetMenuSelection  ( *Var0 *Var1 *Var2 )
  3FC:  	Switch  *Var2
  408:  		Case  ==  00000092
  414:  			Set   *Var0  0000002D
  424:  		Case  ==  00000093
  430:  			Set   *Var0  00000032
  440:  		Case  ==  00000094
  44C:  			Set   *Var0  00000032
  45C:  	EndSwitch
  464:  	Call  RunToGoal     ( .Actor:Partner 0000002D )
  478:  	Call  SetAnimation  ( .Actor:Partner FFFFFFFF 000B001A )
  490:  	Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
  4A8:  EndChildThread
  4B0:  Switch  *Var2
  4BC:  	Case  ==  00000092
  4C8:  		Set   *Var0  0000002D
  4D8:  	Case  ==  00000093
  4E4:  		Set   *Var0  00000032
  4F4:  	Case  ==  00000094
  500:  		Set   *Var0  00000032
  510:  EndSwitch
  518:  Wait  *Var0
  524:  Call  GetMenuSelection  ( *Var0 *Var1 *Var2 )
  53C:  Switch  *Var2
  548:  	Case  ==  00000092
  554:  		Call  PartnerTestEnemy  ( *Var0 ~Flags:DamageType:0 00000010 00000000 00000001 00000010 )
  578:  EndSwitch
  580:  Call  StopSound ( 00000287 )
  590:  Switch  *Var2
  59C:  	Case  ==  00000092
  5A8:  		Set   *Var0  00000007
  5B8:  	Case  ==  00000093
  5C4:  		Set   *Var0  0000000C
  5D4:  	Case  ==  00000094
  5E0:  		Set   *Var0  00000014
  5F0:  EndSwitch
  5F8:  Loop  *Var0
  604:  	Call  SetActorDispOffset    ( .Actor:Partner *Fixed[0.5] 00000000 00000000 )
  620:  	Wait  1`
  62C:  	Call  SetActorDispOffset    ( .Actor:Partner *Fixed[-0.5] 00000000 00000000 )
  648:  	Wait  1`
  654:  EndLoop
  65C:  Call  SetActorDispOffset    ( .Actor:Partner 00000000 00000000 00000000 )
  678:  Call  UseBattleCamPreset    ( 00000003 )
  688:  Call  MoveBattleCamOver     ( 00000008 )
  698:  Call  GetActionSuccessCopy  ( *Var0 )
  6A8:  Call  $Function_80238358    ( *Var0 )
  6B8:  Set   *VarA  *Var0
  6C8:  Call  GetActorPos   ( .Actor:Partner *Var0 *Var1 *Var2 )
  6E4:  Call  $Function_80238000    ( *Var0 *Var1 *Var2 )
  6FC:  Thread
  704:  	Call  GetMenuSelection  ( *Var0 *Var1 *Var2 )
  71C:  	Switch  *Var2
  728:  		Case  ==  00000092
  734:  			If  *VarA  >  00000000
  744:  				Call  StartRumble   ( 00000004 )
  754:  				Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[0.75] )
  770:  				Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[3.0] )
  78C:  				Call  ShakeCam  ( .Cam:Battle 00000000 0000000A *Fixed[4.5] )
  7A8:  				Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[3.0] )
  7C4:  				Call  ShakeCam  ( .Cam:Battle 00000000 0000000A *Fixed[6.0] )
  7E0:  				Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[3.0] )
  7FC:  				Call  ShakeCam  ( .Cam:Battle 00000000 00000003 *Fixed[2.25] )
  818:  				Call  ShakeCam  ( .Cam:Battle 00000000 00000004 *Fixed[1.2] )
  834:  				Call  ShakeCam  ( .Cam:Battle 00000000 00000006 *Fixed[0.45] )
  850:  				Call  ShakeCam  ( .Cam:Battle 00000000 00000008 *Fixed[0.15] )
  86C:  			Else
  874:  				Call  StartRumble   ( 00000004 )
  884:  				Call  ShakeCam  ( .Cam:Battle 00000000 00000001 *Fixed[0.4] )
  8A0:  				Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[1.6] )
  8BC:  				Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[2.4] )
  8D8:  				Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[1.6] )
  8F4:  				Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[3.2] )
  910:  				Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[1.6] )
  92C:  				Call  ShakeCam  ( .Cam:Battle 00000000 00000001 *Fixed[1.2] )
  948:  				Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[0.64] )
  964:  				Call  ShakeCam  ( .Cam:Battle 00000000 00000003 *Fixed[0.24] )
  980:  				Call  ShakeCam  ( .Cam:Battle 00000000 00000004 *Fixed[0.08] )
  99C:  			EndIf
  9A4:  		Case  ==  00000093
  9B0:  			If  *VarA  >  00000000
  9C0:  				Call  StartRumble   ( 00000005 )
  9D0:  				Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[0.75] )
  9EC:  				Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[3.0] )
  A08:  				Call  ShakeCam  ( .Cam:Battle 00000000 0000000A *Fixed[4.5] )
  A24:  				Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[3.0] )
  A40:  				Call  ShakeCam  ( .Cam:Battle 00000000 0000000A *Fixed[6.0] )
  A5C:  				Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[3.0] )
  A78:  				Call  ShakeCam  ( .Cam:Battle 00000000 00000003 *Fixed[2.25] )
  A94:  				Call  ShakeCam  ( .Cam:Battle 00000000 00000004 *Fixed[1.2] )
  AB0:  				Call  ShakeCam  ( .Cam:Battle 00000000 00000006 *Fixed[0.45] )
  ACC:  				Call  ShakeCam  ( .Cam:Battle 00000000 00000008 *Fixed[0.15] )
  AE8:  			Else
  AF0:  				Call  StartRumble   ( 00000005 )
  B00:  				Call  ShakeCam  ( .Cam:Battle 00000000 00000001 *Fixed[0.4] )
  B1C:  				Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[1.6] )
  B38:  				Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[2.4] )
  B54:  				Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[1.6] )
  B70:  				Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[3.2] )
  B8C:  				Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[1.6] )
  BA8:  				Call  ShakeCam  ( .Cam:Battle 00000000 00000001 *Fixed[1.2] )
  BC4:  				Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[0.64] )
  BE0:  				Call  ShakeCam  ( .Cam:Battle 00000000 00000003 *Fixed[0.24] )
  BFC:  				Call  ShakeCam  ( .Cam:Battle 00000000 00000004 *Fixed[0.08] )
  C18:  			EndIf
  C20:  		Case  ==  00000094
  C2C:  			If  *VarA  >  00000000
  C3C:  				Call  StartRumble   ( 00000006 )
  C4C:  				Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[1.0] )
  C68:  				Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[4.0] )
  C84:  				Call  ShakeCam  ( .Cam:Battle 00000000 0000000A *Fixed[6.0] )
  CA0:  				Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[4.0] )
  CBC:  				Call  ShakeCam  ( .Cam:Battle 00000000 0000000A *Fixed[8.0] )
  CD8:  				Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[4.0] )
  CF4:  				Call  ShakeCam  ( .Cam:Battle 00000000 00000003 *Fixed[3.0] )
  D10:  				Call  ShakeCam  ( .Cam:Battle 00000000 00000004 *Fixed[1.6] )
  D2C:  				Call  ShakeCam  ( .Cam:Battle 00000000 00000006 *Fixed[0.6] )
  D48:  				Call  ShakeCam  ( .Cam:Battle 00000000 00000008 *Fixed[0.2] )
  D64:  			Else
  D6C:  				Call  StartRumble   ( 00000006 )
  D7C:  				Call  ShakeCam  ( .Cam:Battle 00000000 00000001 *Fixed[0.5] )
  D98:  				Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[2.0] )
  DB4:  				Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[3.0] )
  DD0:  				Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[2.0] )
  DEC:  				Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[4.0] )
  E08:  				Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[2.0] )
  E24:  				Call  ShakeCam  ( .Cam:Battle 00000000 00000001 *Fixed[1.5] )
  E40:  				Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[0.8] )
  E5C:  				Call  ShakeCam  ( .Cam:Battle 00000000 00000003 *Fixed[0.3] )
  E78:  				Call  ShakeCam  ( .Cam:Battle 00000000 00000004 *Fixed[0.1] )
  E94:  			EndIf
  E9C:  	EndSwitch
  EA4:  EndThread
  EAC:  Thread
  EB4:  	Call  GetMenuSelection  ( *Var0 *Var1 *Var2 )
  ECC:  	Switch  *Var2
  ED8:  		Case  ==  00000092
  EE4:  		Case  ==  00000093
  EF0:  			Call  GetActorPos   ( .Actor:Partner *Var0 *Var1 *Var2 )
  F0C:  			Wait  8`
  F18:  			If  *VarA  >  00000000
  F28:  				Call  PlayEffect    ( ~FX:RedImpact:Huge *Var0 00000000 *Var2 00000001 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  F6C:  			Else
  F74:  				Call  PlayEffect    ( ~FX:RedImpact:Normal *Var0 00000000 *Var2 00000001 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  FB8:  			EndIf
  FC0:  		Case  ==  00000094
					Call     GetActorPos 	( .Actor:Partner *Var5 *Var6 *Var7 )
					Call  PlayEffect    ( ~FX:RedImpact:Huge *Var5 00000000 *Var7 00000001 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
					Call  $Function_SetBlastPalette ( *VarF )					
  FCC:  			Set   *VarA  00000000
  FDC:  			Wait  10`
  FE8:  			Call  $Function_80238000    ( 00000058 00000021 00000005 )
 1000:  			Wait  10`
 100C:  			Call  $Function_80238000    ( 00000012 00000049 00000005 )
 1024:  			Wait  10`
 1030:  			Call  $Function_80238000    ( 00000078 00000013 00000005 )
 1048:  			Wait  10`
 1054:  	EndSwitch
 105C:  EndThread
 1064:  Set   *Flag[00]  .False
 1074:  Call  GetMenuSelection  ( *Var0 *Var1 *Var2 )
 108C:  Switch  *Var2
 1098:  	Case  ==  00000092
 10A4:  		Call  SetGoalToTarget   ( .Actor:Partner )
 10B4:  		Call  PlaySoundAtActor  ( .Actor:Partner .Sound:Cannon1 )
 10C8:  		Call  PartnerTestEnemy  ( *Var0 ~Flags:DamageType:0 00000014 00000000 00000001 00000010 )
 10EC:  		If  *Var0  ==  .HitResult:Miss % 6
 10FC:  			BreakCase
 1104:  		EndIf
 110C:  		Call  GetActionSuccessCopy  ( *Var0 )
 111C:  		Call  $Function_80238358    ( *Var0 )
 112C:  		Switch  *Var0
 1138:  			Case  >  00000000
 1144:  				Call  PartnerDamageEnemy    ( *Var0 10000200 00000000 00000000 *VarF 00000070 )
 1168:  				Set   *Flag[00]  .True
 1178:  			Default
 1180:  				Call  PartnerDamageEnemy    ( *Var0 10000200 00000000 00000000 *VarF 00000030 )
 11A4:  		EndSwitch
 11AC:  	Case  ==  00000093
 11B8:  		Call  PlaySoundAtActor  ( .Actor:Partner .Sound:Cannon1 )
 11CC:  		Label  5
 11D8:  		Call  SetGoalToTarget   ( .Actor:Partner )
 11E8:  		Call  PartnerTestEnemy  ( *Var0 ~Flags:DamageType:0 00000014 00000000 00000001 00000010 )
 120C:  		If  *Var0  ==  .HitResult:Miss % 6
 121C:  			Goto  6
 1228:  		EndIf
 1230:  		Call  GetActionSuccessCopy  ( *Var0 )
 1240:  		Call  $Function_8023849C    ( *Var0 )
 1250:  		Switch  *Var0
 125C:  			Case  >  00000000
 1268:  				Call  PartnerDamageEnemy    ( *Var0 30000200 00000000 00000000 *VarF 00000070 )
 128C:  				Set   *Flag[00]  .True
 129C:  			Default
 12A4:  				Call  PartnerDamageEnemy    ( *Var0 30000200 00000000 00000000 *VarF 00000030 )
 12C8:  		EndSwitch
				%Wait  5`
 12D0:  		Label  6
 12DC:  		Call  ChooseNextTarget  ( .Iter:Next *Var0 )
 12F0:  		If  *Var0  !=  FFFFFFFF
 1300:  			Goto  5
 130C:  		EndIf
 1314:  	Case  ==  00000094
 1320:  		Call  PlaySoundAtActor  ( .Actor:Partner .Sound:Cannon3 )
 1334:  		Label  A
 1340:  		Call  SetGoalToTarget   ( .Actor:Partner )
 1350:  		Call  PartnerTestEnemy  ( *Var0 ~Flags:DamageType:0 00000014 00000000 00000001 00000010 )
 1374:  		If  *Var0  ==  .HitResult:Miss % 6
 1384:  			Goto  B
 1390:  		EndIf
 1398:  		Call  GetActionSuccessCopy  ( *Var0 )
 13A8:  		Call  $Function_80238590    ( *Var0 )	%Determines damage amount from the action command value
 13B8:  		Switch  *Var0
 13C4:  			Case  >  00000000
 13D0:  				Call  PartnerDamageEnemy    ( *Var0 30000200 00000000 80080350 *VarF 00000070 )
 13F4:  				Set   *Flag[00]  .True
 1404:  			Default
 140C:  				Call  PartnerDamageEnemy    ( *Var0 30000200 00000000 8008033C *VarF 00000030 )
 1430:  		EndSwitch
 1444:  		Wait  5`
 1438:  		Label  B
 1450:  		Call  ChooseNextTarget  ( .Iter:Next *Var0 )
 1464:  		If  *Var0  !=  FFFFFFFF
 1474:  			Goto  A
 1480:  		EndIf
 1488:  EndSwitch
 1490:  If  *Flag[00]  >  .False
 14A0:  	Call  UseBattleCamPreset    ( 00000004 )
 14B0:  	Call  MoveBattleCamOver     ( 0000000A )
 14C0:  Else
 14C8:  	Call  UseBattleCamPreset    ( 00000033 )
 14D8:  EndIf
 14E0:  Set   *Var0  00000000
 14F0:  Switch  *Var0
 14FC:  	CaseOR  ==  00000000
 1508:  	CaseOR  ==  00000002
 1514:  	CaseOR  ==  00000001
 1520:  	CaseOR  ==  00000003
 152C:  		Thread
 1534:  			Set   *Var0  00000000
 1544:  			Loop  00000050
 1550:  				Wait  1`
 155C:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
 1578:  				Add   *Var0  00000021
 1588:  			EndLoop
 1590:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
 15AC:  		EndThread
 15B4:  		Call  SetAnimation  ( .Actor:Partner FFFFFFFF 000B001B )
 15CC:  		Call  GetActorPos   ( .Actor:Partner *Var0 *Var1 *Var2 )
 15E8:  		Sub   *Var0  00000032
 15F8:  		Add   *Var1  000000C8
 1608:  		Call  SetGoalPos    ( .Actor:Partner *Var0 *Var1 *Var2 )
 1624:  		Call  FlyToGoal     ( .Actor:Partner 0000000A 00000000 .Easing:Linear )
 1640:  		Wait  50`
 164C:  		Call  80280818 ( )
 1658:  		Call  SetGoalToHome ( .Actor:Partner )
 1668:  		Call  GetGoalPos    ( .Actor:Partner *Var0 *Var1 *Var2 )
 1684:  		Add   *Var0  00000019
 1694:  		Add   *Var1  000000C8
 16A4:  		Call  SetActorPos   ( .Actor:Partner *Var0 *Var1 *Var2 )
 16C0:  		Call  SetGoalToHome ( .Actor:Partner )
 16D0:  		Call  SetActorSpeed ( .Actor:Partner *Fixed[4.0] )
 16E4:  		Call  SetActorJumpGravity   ( .Actor:Partner *Fixed[0.6] )
 16F8:  		Call  SetAnimation  ( .Actor:Partner FFFFFFFF 000B001B )
 1710:  		Call  JumpToGoal    ( .Actor:Partner 00000014 .False .True .False )
 1730:  		Call  SetAnimation  ( .Actor:Partner FFFFFFFF 000B0004 )
 1748:  	EndCaseGroup
 1750:  EndSwitch
 1758:  Return
 1760:  End
}