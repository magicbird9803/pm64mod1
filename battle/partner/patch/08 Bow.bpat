@ $DefenseTable_8023833C
{
.Element:Normal 00000000
.Element:Throw	FFFFFFFF
.Element:End
}

#new:Function $IncrementOuttaSightCost
{
%Cost is +2 per use
PUSH	RA
LAW		V0, $OuttaSightAddress
LB		V1, 0 (V0)
ADDI	V1, V1, 2
SB		V1, 0 (V0)
POP		RA
JR		RA
ORI		V0, R0, 2
}

#new:Function $Function_CheckChill %chill out fails against targets with certain flags
{
    0:  ADDIU		SP, SP, FFE0
    4:  SW			S2, 18 (SP)
    8:  COPY		S2, A0
    C:  SW			RA, 1C (SP)
   10:  SW			S1, 14 (SP)
   14:  SW			S0, 10 (SP)
   18:  JAL			~Func:get_actor
   1C:  LW			A0, 148 (S2)
   20:  COPY		S0, V0
   24:  JAL			~Func:get_actor
   28:  LH			A0, 428 (S0)
   2C:  COPY		S1, V0
   30:  LB			A1, 426 (S0)
   34:  JAL			~Func:get_actor_part
   38:  COPY		A0, S1
   3C:  SW			R0, 84 (S2)
   40:  LW			S1, 0 (S1)
   44:  COPY		V1, V0
   48:  ANDI		V0, S1, 4000 %check flag 4000 (normal star rod)
   4C:  BNE			V0, R0, .oA0
   50:  ADDIU		V0, R0, 2
   54:  LUI			V0, 40
   58:  AND			V0, S1, V0
   5C:  BNE			V0, R0, .oA0
   60:  ADDIU		V0, R0, 2
   64:  ANDI		V0, S1, 2000
   68:  BNE			V0, R0, .oA0
   6C:  ADDIU		V0, R0, 2
   70:  LW			V1, 7C (V1)
   74:  LUI			V0, 4
   78:  AND			V0, V1, V0
   7C:  BNE			V0, R0, .oA0
   80:  ADDIU		V0, R0, 2
   84:  LUI			V0, 8
   88:  AND			V0, V1, V0
   8C:  BNE			V0, R0, .oA0
   90:  ADDIU		V0, R0, 2
   94:  ADDIU		V0, R0, 1
   98:  SW			V0, 84 (S2)
   9C:  ADDIU		V0, R0, 2
        .oA0
   A0:  LW			RA, 1C (SP)
   A4:  LW			S2, 18 (SP)
   A8:  LW			S1, 14 (SP)
   AC:  LW			S0, 10 (SP)
   B0:  JR			RA
   B4:  ADDIU		SP, SP, 20
}

#new:Function $Function_ChillTarget
{
    0:  ADDIU		SP, SP, FFE0
    4:  SW			RA, 1C (SP)
    8:  SW			S0, 18 (SP)
    C:  JAL			~Func:get_actor
   10:  LW			A0, 148 (A0)
   14:  COPY		S0, V0
   18:  JAL			~Func:get_actor
   1C:  LH			A0, 428 (S0)
   20:  LB			A1, 426 (S0)
   24:  COPY		S0, V0
   28:  JAL			~Func:get_actor_part
   2C:  COPY		A0, S0
   30:  LW			V1, 0 (S0)
   34:  COPY		A0, V0
   38:  ANDI		V0, V1, 4000 %star rod flag
   3C:  BNE			V0, R0, .o1E4
   40:  ADDIU		V0, R0, 2
   44:  LUI			V0, 40
   48:  AND			V0, V1, V0
   4C:  BEQ			V0, R0, .o5C
   50:  ANDI		V0, V1, 2000
   54:  BEQ			R0, R0, .o1E4
   58:  ADDIU		V0, R0, 2
        .o5C
   5C:  BNE			V0, R0, .o1E4
   60:  ADDIU		V0, R0, 2
   64:  LW			V1, 7C (A0)
   68:  LUI			V0, 4
   6C:  AND			V0, V1, V0
   70:  BNE			V0, R0, .o1E4
   74:  ADDIU		V0, R0, 2
   78:  LUI			V0, 8
   7C:  AND			V0, V1, V0
   80:  BNE			V0, R0, .o1E4
   84:  ADDIU		V0, R0, 2
   88:  COPY		A0, S0
   8C:  CLEAR		A1
   90:  ADDIU		A2, R0, A
   94:  ADDIU		V0, R0, 3		%duration
   98:  SB			V0, 226 (S0)	%def duration
   9C:  ADDIU		V0, R0, 2		%amount				-2 should be alright with the 0 def cap
   A0:  JAL			802788F8
   A4:  SB			V0, 225 (S0)	%def reduction
   A8:  LH			V0, 150 (S0)
   AC:  LWC1		F0, 144 (S0)
   B0:  LW			V1, 0 (S0)
   B4:  MTC1		V0, F2
   B8:  NOP
   BC:  CVT.S.W		F2, F2
   C0:  LBU			V0, 190 (S0)
   C4:  ADD.S		F0, F0, F2
   C8:  SRL			V0, V0, 1
   CC:  MTC1		V0, F2
   D0:  NOP
   D4:  CVT.S.W		F2, F2
   D8:  ANDI		V0, V1, 800
   DC:  BEQ			V0, R0, .o114
   E0:  ADD.S		F4, F0, F2
   E4:  LH			V0, 152 (S0)
   E8:  LWC1		F0, 148 (S0)
   EC:  MTC1		V0, F2
   F0:  NOP
   F4:  CVT.S.W		F2, F2
   F8:  LBU			V0, 191 (S0)
   FC:  ADD.S		F0, F0, F2
  100:  MTC1		V0, F2
  104:  NOP
  108:  CVT.S.W		F2, F2
  10C:  BEQ			R0, R0, .o180
  110:  SUB.S		F0, F0, F2
        .o114
  114:  ANDI		V0, V1, 8000
  118:  BNE			V0, R0, .o150
  11C:  NOP
  120:  LH			V0, 152 (S0)
  124:  LWC1		F0, 148 (S0)
  128:  MTC1		V0, F2
  12C:  NOP
  130:  CVT.S.W		F2, F2
  134:  LBU			V0, 191 (S0)
  138:  ADD.S		F0, F0, F2
  13C:  MTC1		V0, F2
  140:  NOP
  144:  CVT.S.W		F2, F2
  148:  BEQ			R0, R0, .o180
  14C:  ADD.S		F0, F2, F0
        .o150
  150:  LH			V0, 152 (S0)
  154:  LWC1		F2, 148 (S0)
  158:  MTC1		V0, F0
  15C:  NOP
  160:  CVT.S.W		F0, F0
  164:  LBU			V0, 191 (S0)
  168:  ADD.S		F2, F2, F0
  16C:  SLL			V0, V0, 1
  170:  MTC1		V0, F0
  174:  NOP
  178:  CVT.S.W		F0, F0
  17C:  ADD.S		F0, F2, F0
        .o180
  180:  LH			V0, 154 (S0)
  184:  MFC1		A2, F0
  188:  LWC1		F0, 14C (S0)
  18C:  MTC1		V0, F2
  190:  NOP
  194:  CVT.S.W		F2, F2
  198:  ADD.S		F0, F0, F2
  19C:  LIF			F2, 5.0
  1A4:  ADDIU		A0, R0, 4		%damage icon (5 -> 4?) (aka -2)
  1A8:  ADD.S		F0, F0, F2
  1AC:  MFC1		A1, F4
  1B0:  LIF			F4, 1.0
  1B8:  MFC1		A3, F0
  1BC:  ADDIU		V0, R0, 3C
  1C0:  SW			V0, 14 (SP)
  1C4:  JAL			800718D0
  1C8:  SWC1		F4, 10 (SP)
  1CC:  JAL			~Func:sfx_play_sound
  1D0:  ADDIU		A0, R0, 210C			%def down sound from ddown moves?
  1D4:  ADDIU		V0, R0, 2
  1D8:  ADDIU		V1, R0, 1
  1DC:  SAW			V1, $End[0]
        .o1E4
  1E4:  LW			RA, 1C (SP)
  1E8:  LW			S0, 18 (SP)
  1EC:  JR			RA
  1F0:  ADDIU		SP, SP, 20
}


#new:Function $Function_ChillTargetWeak
{
    0:  ADDIU		SP, SP, FFE0
    4:  SW			RA, 1C (SP)
    8:  SW			S0, 18 (SP)
    C:  JAL			~Func:get_actor
   10:  LW			A0, 148 (A0)
   14:  COPY		S0, V0
   18:  JAL			~Func:get_actor
   1C:  LH			A0, 428 (S0)
   20:  LB			A1, 426 (S0)
   24:  COPY		S0, V0
   28:  JAL			~Func:get_actor_part
   2C:  COPY		A0, S0
   30:  LW			V1, 0 (S0)
   34:  COPY		A0, V0
   38:  ANDI		V0, V1, 4000 %star rod flag
   3C:  BNE			V0, R0, .o1E4
   40:  ADDIU		V0, R0, 2
   44:  LUI			V0, 40
   48:  AND			V0, V1, V0
   4C:  BEQ			V0, R0, .o5C
   50:  ANDI		V0, V1, 2000
   54:  BEQ			R0, R0, .o1E4
   58:  ADDIU		V0, R0, 2
        .o5C
   5C:  BNE			V0, R0, .o1E4
   60:  ADDIU		V0, R0, 2
   64:  LW			V1, 7C (A0)
   68:  LUI			V0, 4
   6C:  AND			V0, V1, V0
   70:  BNE			V0, R0, .o1E4
   74:  ADDIU		V0, R0, 2
   78:  LUI			V0, 8
   7C:  AND			V0, V1, V0
   80:  BNE			V0, R0, .o1E4
   84:  ADDIU		V0, R0, 2
   88:  COPY		A0, S0
   8C:  CLEAR		A1
   90:  ADDIU		A2, R0, A
   94:  ADDIU		V0, R0, 3		%duration
   98:  SB			V0, 226 (S0)	%def duration
   9C:  ADDIU		V0, R0, 1		%amount				-2 should be alright with the 0 def cap
   A0:  JAL			802788F8
   A4:  SB			V0, 225 (S0)	%def reduction
   A8:  LH			V0, 150 (S0)
   AC:  LWC1		F0, 144 (S0)
   B0:  LW			V1, 0 (S0)
   B4:  MTC1		V0, F2
   B8:  NOP
   BC:  CVT.S.W		F2, F2
   C0:  LBU			V0, 190 (S0)
   C4:  ADD.S		F0, F0, F2
   C8:  SRL			V0, V0, 1
   CC:  MTC1		V0, F2
   D0:  NOP
   D4:  CVT.S.W		F2, F2
   D8:  ANDI		V0, V1, 800
   DC:  BEQ			V0, R0, .o114
   E0:  ADD.S		F4, F0, F2
   E4:  LH			V0, 152 (S0)
   E8:  LWC1		F0, 148 (S0)
   EC:  MTC1		V0, F2
   F0:  NOP
   F4:  CVT.S.W		F2, F2
   F8:  LBU			V0, 191 (S0)
   FC:  ADD.S		F0, F0, F2
  100:  MTC1		V0, F2
  104:  NOP
  108:  CVT.S.W		F2, F2
  10C:  BEQ			R0, R0, .o180
  110:  SUB.S		F0, F0, F2
        .o114
  114:  ANDI		V0, V1, 8000
  118:  BNE			V0, R0, .o150
  11C:  NOP
  120:  LH			V0, 152 (S0)
  124:  LWC1		F0, 148 (S0)
  128:  MTC1		V0, F2
  12C:  NOP
  130:  CVT.S.W		F2, F2
  134:  LBU			V0, 191 (S0)
  138:  ADD.S		F0, F0, F2
  13C:  MTC1		V0, F2
  140:  NOP
  144:  CVT.S.W		F2, F2
  148:  BEQ			R0, R0, .o180
  14C:  ADD.S		F0, F2, F0
        .o150
  150:  LH			V0, 152 (S0)
  154:  LWC1		F2, 148 (S0)
  158:  MTC1		V0, F0
  15C:  NOP
  160:  CVT.S.W		F0, F0
  164:  LBU			V0, 191 (S0)
  168:  ADD.S		F2, F2, F0
  16C:  SLL			V0, V0, 1
  170:  MTC1		V0, F0
  174:  NOP
  178:  CVT.S.W		F0, F0
  17C:  ADD.S		F0, F2, F0
        .o180
  180:  LH			V0, 154 (S0)
  184:  MFC1		A2, F0
  188:  LWC1		F0, 14C (S0)
  18C:  MTC1		V0, F2
  190:  NOP
  194:  CVT.S.W		F2, F2
  198:  ADD.S		F0, F0, F2
  19C:  LIF			F2, 5.0
  1A4:  ADDIU		A0, R0, 3		%damage icon (5 -> 3?) (aka -1)
  1A8:  ADD.S		F0, F0, F2
  1AC:  MFC1		A1, F4
  1B0:  LIF			F4, 1.0
  1B8:  MFC1		A3, F0
  1BC:  ADDIU		V0, R0, 3C
  1C0:  SW			V0, 14 (SP)
  1C4:  JAL			800718D0
  1C8:  SWC1		F4, 10 (SP)
  1CC:  JAL			~Func:sfx_play_sound
  1D0:  ADDIU		A0, R0, 210C			%def down sound from ddown moves?
  1D4:  ADDIU		V0, R0, 2
  1D8:  ADDIU		V1, R0, 1
  1DC:  SAW			V1, $End[0]
        .o1E4
  1E4:  LW			RA, 1C (SP)
  1E8:  LW			S0, 18 (SP)
  1EC:  JR			RA
  1F0:  ADDIU		SP, SP, 20
}


%new advances in effect programming mean I can add some more cool effects
%8DFF95000000

%set var5, var6, var7 to correct position
#new:Function $Function_DebuffEffect2
{
    0:  ADDIU     SP, SP, FFE8
    4:  COPY      V0, A0
    8:  SW        RA, 10 (SP)
    C:  LWC1      F0, 98 (V0)				%84 (var0) -> 98 (var5)
   10:  CVT.S.W   F0, F0
   14:  MFC1      A1, F0
   18:  LWC1      F0, 9C (V0)
   1C:  CVT.S.W   F0, F0
   20:  MFC1      A2, F0
   24:  LWC1      F0, A0 (V0)
   28:  CVT.S.W   F0, F0
   2C:  MFC1      A3, F0
   30:  JAL       80070AF0
   34:  ADDIU     A0, R0, 2   
   38:  LW        A0, C (V0)
		ADDIU     V1, R0, 8D  
   40:  SB        V1, 38 (A0)						%color byte 1?
   44:  LW        A0, C (V0)
		ADDIU     V1, R0, FF
   4C:  SB        V1, 39 (A0)						%color byte 2?
   50:  LW        V1, C (V0)
		ADDIU     A0, R0, 95
   54:  SB        A0, 3A (V1)						%color byte 3?
   58:  LW        A0, C (V0)
		ADDIU     V1, R0, 0
   60:  SB        V1, 3B (A0)						%color byte 4? (unused?)
   64:  LW        A0, C (V0)
		%ADDIU     V1, R0, 0  
   6C:  SB        V1, 3C (A0)						%color byte 5?
   70:  LW        V1, C (V0)
   74:  SB        R0, 3D (V1)						%color byte 6?
   78:  LW        RA, 10 (SP)
   7C:  ADDIU     V0, R0, 2   						%return 2
   80:  JR        RA
   84:  ADDIU     SP, SP, 18
}

%copy some action commands from smack
@ $Script_8023A0E8
{
    0:  Call  LoadActionCommand ( .ActionCommand:Smack ) %LoadActionCommand ( .ActionCommand:Spook )
   10:  Call  802A9000 ( )
   1C:  Call  SetupMashMeter    ( 00000001 00000064 00000000 00000000 00000000 00000000 )
   40:  Call     80269344 ( 00000014 ) %???
   50:  Wait  10`
   5C:  Thread
   64:  	Call  UseBattleCamPreset    ( 0000000F )
   74:  	Call  BattleCamTargetActor  ( .Actor:Self )
   84:  	Call  SetBattleCamOffsetZ   ( 00000004 )
   94:  	Call  AddBattleCamZoom      ( FFFFFF6A )
   A4:  	Call  MoveBattleCamOver     ( 00000014 )
   B4:  	Call  8024EDA4 ( )
   C0:  EndThread
   C8:  Call  GetActorPos   ( .Actor:Partner *Var0 *Var1 *Var2 )
   E4:  Add   *Var0  00000028
   F4:  Add   *Var1  0000000A
  104:  Call  SetGoalPos    ( .Actor:Partner *Var0 *Var1 *Var2 )
  120:  Call  FlyToGoal     ( .Actor:Partner 00000014 00000000 .Easing:CosInOut )
  13C:  Wait  15`
  148:  Call  8024E664      ( 00000013 )
  158:  Thread
  160:  	Wait  74`
  16C:  	Loop  00000008
  178:  		Call  SetActorDispOffset    ( .Actor:Partner 00000001 00000000 00000000 )
  194:  		Wait  1`
  1A0:  		Call  SetActorDispOffset    ( .Actor:Partner FFFFFFFF 00000000 00000000 )
  1BC:  		Wait  1`
  1C8:  	EndLoop
  1D0:  	Loop  00000007
  1DC:  		Call  SetActorDispOffset    ( .Actor:Partner 00000002 00000000 00000000 )
  1F8:  		Wait  1`
  204:  		Call  SetActorDispOffset    ( .Actor:Partner FFFFFFFE 00000000 00000000 )
  220:  		Wait  1`
  22C:  	EndLoop
  234:  	Loop  00000008
  240:  		Call  SetActorDispOffset    ( .Actor:Partner 00000003 00000000 00000000 )
  25C:  		Wait  1`
  268:  		Call  SetActorDispOffset    ( .Actor:Partner FFFFFFFD 00000000 00000000 )
  284:  		Wait  1`
  290:  	EndLoop
  298:  	Call  SetActorDispOffset    ( .Actor:Partner 00000000 00000000 00000000 )
  2B4:  EndThread
  2BC:  Call  $Function_802381E8 ( )
  2C8:  Call  802A917C  ( 00000000 00000057 00000003 *Var0 )
  2E4:  Call  GetActionResult   ( *Var1 )
  2F4:  Call  SetAnimation      ( .Actor:Partner FFFFFFFF 000D000C )
  30C:  Set   *Var1  00000000
  31C:  Set   *Var2  00000000
  32C:  Loop  0000005A
  338:  	Switch  *Var1
  344:  		Case  >  00000050
  350:  			If  *Var2  ==  00000007
  360:  				Call  AddBattleCamZoom  ( FFFFFFEC )
  370:  				Call  MoveBattleCamOver ( 00000014 )
  380:  				Call  8024ECF8  ( 00000000 00000000 00000001 )
  398:  				Set   *Var2  00000008
  3A8:  			EndIf
  3B0:  		Case  >  00000046
  3BC:  			If  *Var2  ==  00000006
  3CC:  				Call  AddBattleCamZoom  ( FFFFFFEC )
  3DC:  				Call  MoveBattleCamOver ( 00000014 )
  3EC:  				Call  8024ECF8  ( 00000000 00000000 00000001 )
  404:  				Set   *Var2  00000007
  414:  			EndIf
  41C:  		Case  >  0000003C
  428:  			If  *Var2  ==  00000005
  438:  				Call  AddBattleCamZoom  ( FFFFFFEC )
  448:  				Call  MoveBattleCamOver ( 00000014 )
  458:  				Call  8024ECF8  ( 00000000 00000000 00000001 )
  470:  				Set   *Var2  00000006
  480:  			EndIf
  488:  		Case  >  00000032
  494:  			If  *Var2  ==  00000004
  4A4:  				Call  AddBattleCamZoom  ( FFFFFFEC )
  4B4:  				Call  MoveBattleCamOver ( 00000014 )
  4C4:  				Call  8024ECF8  ( 00000000 00000000 00000001 )
  4DC:  				Set   *Var2  00000005
  4EC:  			EndIf
  4F4:  		Case  >  00000028
  500:  			If  *Var2  ==  00000003
  510:  				Call  AddBattleCamZoom  ( FFFFFFEC )
  520:  				Call  MoveBattleCamOver ( 00000014 )
  530:  				Call  8024ECF8  ( 00000000 00000000 00000001 )
  548:  				Set   *Var2  00000004
  558:  			EndIf
  560:  		Case  >  0000001E
  56C:  			If  *Var2  ==  00000002
  57C:  				Call  AddBattleCamZoom  ( FFFFFFEC )
  58C:  				Call  MoveBattleCamOver ( 00000014 )
  59C:  				Call  8024ECF8  ( 00000000 00000000 00000001 )
  5B4:  				Set   *Var2  00000003
  5C4:  			EndIf
  5CC:  		Case  >  00000014
  5D8:  			If  *Var2  ==  00000001
  5E8:  				Call  AddBattleCamZoom  ( FFFFFFEC )
  5F8:  				Call  MoveBattleCamOver ( 00000014 )
  608:  				Call  8024ECF8  ( 00000000 00000000 00000001 )
  620:  				Set   *Var2  00000002
  630:  			EndIf
  638:  		Case  >  0000000A
  644:  			If  *Var2  ==  00000000
  654:  				Call  AddBattleCamZoom  ( FFFFFFEC )
  664:  				Call  MoveBattleCamOver ( 00000014 )
  674:  				Call  8024ECF8  ( 00000000 00000000 00000001 )
  68C:  				Set   *Var2  00000001
  69C:  			EndIf
  6A4:  	EndSwitch
  6AC:  	Add   *Var1  00000001
  6BC:  	Wait  1`
  6C8:  EndLoop
  6D0:  Call  SetActorDispOffset        ( .Actor:Partner 00000000 00000000 00000000 )
  6EC:  Call  SetAnimation  ( .Actor:Partner FFFFFFFF 000D000E )
  704:  Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
  720:  Thread
  728:  	Call  UseBattleCamPreset    ( 00000002 )
  738:  	Call  MoveBattleCamOver     ( 00000005 )
  748:  	Wait  5`
  754:  	Call  UseBattleCamPreset    ( 00000001 )
  764:  	Loop  00000005
  770:  		Call  8024E748  ( 00000003 0000006E )
  784:  		Wait  2`
  790:  		Call  8024E748  ( 00000003 00000064 )
  7A4:  		Wait  2`
  7B0:  	EndLoop
  7B8:  EndThread
  7C0:  Thread
  7C8:  	Set   *Var0  000000FF
  7D8:  	Loop  0000000F
  7E4:  		Sub   *Var0  0000000A
  7F4:  		Call  SetPartAlpha  ( .Actor:Partner FFFFFFFF *Var0 )
  80C:  		Wait  1`
  818:  	EndLoop
  820:  EndThread
  828:  Call  PlaySoundAtActor  ( .Actor:Partner .Sound:BowSpook )
  83C:  SetF  *Var0  *Fixed[1.0]
  84C:  Call  GetActionResult   ( *Var2 )
  85C:  Switch  *Var2
  868:  	Case  <=  00000014
  874:  		SetF  *Var1  *Fixed[0.3]
  884:  	Case  <=  00000028
  890:  		SetF  *Var1  *Fixed[0.4]
  8A0:  	Case  <=  0000003C
  8AC:  		SetF  *Var1  *Fixed[0.5]
  8BC:  	Case  <=  00000050
  8C8:  		SetF  *Var1  *Fixed[0.6]
  8D8:  	Default
  8E0:  		SetF  *Var1  *Fixed[0.7]
  8F0:  EndSwitch
  8F8:  Loop  00000005
  904:  	AddF  *Var0  *Var1
  914:  	Call  SetActorScale ( .Actor:Partner *Var0 *Var0 *Var0 )
  930:  	Wait  1`
  93C:  EndLoop
  944:  SetF  *VarE  *Var0
  954:  Thread
  95C:  	Loop  00000005
  968:  		Loop  00000003
  974:  			SubF  *Var0  *Fixed[0.23]
  984:  			Call  SetActorScale ( .Actor:Partner *Var0 *Var0 *Var0 )
  9A0:  			Wait  1`
  9AC:  		EndLoop
  9B4:  		Loop  00000003
  9C0:  			AddF  *Var0  *Fixed[0.23]
  9D0:  			Call  SetActorScale ( .Actor:Partner *Var0 *Var0 *Var0 )
  9EC:  			Wait  1`
  9F8:  		EndLoop
  A00:  	EndLoop
  A08:  EndThread
  A10:  Call  GetActorPos   ( .Actor:Partner *Var0 *Var1 *Var2 )
  A2C:  Add   *Var1  00000020
  A3C:  Call  PlayEffect    ( ~FX:EnergyIn:LongStreaks1 *Var0 *Var1 *Var2 *Fixed[1.8] 0000002D 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  A80:  Call  PlayEffect    ( ~FX:EnergyIn:LongStreaks1 *Var0 *Var1 *Var2 *Fixed[1.0] 0000002D 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  AC4:  Wait  15`
  AD0:  Call  InitTargetIterator ( )
  ADC:  Call  GetActionResult   ( *VarF )
  AEC:  Loop
  AF8:  	Call  SetGoalToTarget   ( .Actor:Self )
  B08:  	Call  PartnerTestEnemy  ( *Var0 ~Flags:DamageType:0 00000014 00000000 00000002 00000010 )
  B2C:  	If  *Var0  ==  .HitResult:Miss % 6
  B3C:  		Goto  A
  B48:  	EndIf
  B50:  	Call  80269EAC  ( 00000012 )
  B60:  	Switch  *VarF
  B6C:  		Case  >  00000063
					%Total success
					Wait 1`
					Call     $Function_CheckChill ( ) %0 = immune to chill out
					If  *Var[0]  ==  00000001 
						Call     $Function_ChillTarget ( )
						Call	 SetGoalToTarget ( .Actor:Self )
						Call	 GetGoalPos ( .Actor:Self *Var5 *Var6 *Var7 ) 
						Call	 $Function_DebuffEffect2 ( )				
					EndIf
  BA0:  		Default
					%Partial success
					Wait 1`
					Call     $Function_CheckChill ( ) %0 = immune to chill out
					If  *Var[0]  ==  00000001 
						Call     $Function_ChillTargetWeak ( )
						Call	 SetGoalToTarget ( .Actor:Self )
						Call	 GetGoalPos ( .Actor:Self *Var5 *Var6 *Var7 ) 
						Call	 $Function_DebuffEffect2 ( )					
					EndIf
  BD0:  	EndSwitch
  BD8:  	Label  A
  BE4:  	Wait  5`
  BF0:  	Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  C04:  	If  *Var0  ==  FFFFFFFF
  C14:  		BreakLoop
  C1C:  	EndIf
  C24:  EndLoop
  C2C:  Call  GetActionCommandResult    ( *Var0 )
  C3C:  Switch  *Var0
  C48:  	Case  >  00000063
  C54:  		Call  UseBattleCamPreset    ( 00000004 )
  C64:  	Default
  C6C:  		Call  UseBattleCamPreset    ( 00000033 )
  C7C:  EndSwitch
  C84:  Wait  30`
  C90:  Thread
  C98:  	Set   *Var0  00000069
  CA8:  	Loop  0000000F
  CB4:  		Add   *Var0  0000000A
  CC4:  		Call  SetPartAlpha  ( .Actor:Partner FFFFFFFF *Var0 )
  CDC:  		Wait  1`
  CE8:  	EndLoop
  CF0:  EndThread
  CF8:  Call  GetActionResult   ( *Var2 )
  D08:  Switch  *Var2
  D14:  	Case  <=  00000014
  D20:  		SetF  *Var1  *Fixed[0.3]
  D30:  	Case  <=  00000028
  D3C:  		SetF  *Var1  *Fixed[0.4]
  D4C:  	Case  <=  0000003C
  D58:  		SetF  *Var1  *Fixed[0.5]
  D68:  	Case  <=  00000050
  D74:  		SetF  *Var1  *Fixed[0.6]
  D84:  	Default
  D8C:  		SetF  *Var1  *Fixed[0.7]
  D9C:  EndSwitch
  DA4:  SetF  *Var0  *VarE
  DB4:  Loop  00000005
  DC0:  	SubF  *Var0  *Var1
  DD0:  	Call  SetActorScale ( .Actor:Partner *Var0 *Var0 *Var0 )
  DEC:  	Wait  1`
  DF8:  EndLoop
  E00:  Call  SetActorScale ( .Actor:Partner *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  E1C:  Call  SetAnimation  ( .Actor:Partner FFFFFFFF 000D0001 )
  E34:  ExecWait  $Script_80238EE0
  E40:  Return
  E48:  End
}

@ $Script_80239B40
{
    0:  Call  SetActorFlagBits      ( .Actor:Player 20000000 .True )
   18:  Call  SetActorFlagBits      ( .Actor:Player 04000000 .False )
   30:  Call  UseBattleCamPreset    ( 00000013 )
   40:  Call  SetBattleCamTarget    ( FFFFFF7F 0000001C 00000000 )
   58:  Call  SetBattleCamOffsetZ   ( 0000000F )
   68:  Call  SetBattleCamZoom      ( 00000104 )
   78:  Call  MoveBattleCamOver     ( 00000028 )
   88:  Thread
   90:  	Call  GetActorPos   ( .Actor:Partner *Var0 *Var1 *Var2 )
   AC:  	Add   *Var1  00000005
   BC:  	Call  SetGoalPos    ( .Actor:Partner *Var0 *Var1 *Var2 )
   D8:  	Call  FlyToGoal     ( .Actor:Partner 0000000A 00000000 .Easing:CosInOut )
   F4:  EndThread
   FC:  Set   *Var0  00000000
  10C:  Loop  0000000A
  118:  	Add   *Var0  00000012
  128:  	Call  SetActorYaw   ( .Actor:Partner *Var0 )
  13C:  	Wait  1`
  148:  EndLoop
  150:  Wait  10`
  15C:  Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
  178:  Add   *Var0  FFFFFFE2
  188:  Add   *Var1  0000001E
  198:  Call  SetGoalPos    ( .Actor:Partner *Var0 *Var1 *Var2 )
  1B4:  Call  FlyToGoal     ( .Actor:Partner 00000014 0000001E .Easing:CosInOut )
  1D0:  Thread
  1D8:  	Set   *Var0  000000B4
  1E8:  	Loop  0000000A
  1F4:  		Sub   *Var0  00000012
  204:  		Call  SetActorYaw   ( .Actor:Partner *Var0 )
  218:  		Wait  1`
  224:  	EndLoop
  22C:  EndThread
  234:  Thread
  23C:  	Set   *Var0  000000FF
  24C:  	Loop  0000001E
  258:  		Sub   *Var0  00000005
  268:  		Call  SetPartAlpha  ( .Actor:Partner FFFFFFFF *Var0 )
  280:  		Wait  1`
  28C:  	EndLoop
  294:  EndThread
  29C:  Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
  2B8:  Call  $Function_802380E4    ( FFFFFFF6 00000014 )
  2CC:  Add   *Var2  00000005
  2DC:  Call  SetGoalPos    ( .Actor:Partner *Var0 *Var1 *Var2 )
  2F8:  Call  FlyToGoal     ( .Actor:Partner 00000014 00000000 .Easing:Linear )
  314:  Call  $Function_80238198 ( )
  320:  If  *Var0  ==  00000000
  330:  	Call  SetAnimation  ( .Actor:Player 00000000 00010014 )
  348:  EndIf
  350:  Call  PlaySoundAtActor  ( .Actor:Partner .Sound:BowVanish )
  364:  Set   *Var0  000000FF
  374:  Loop  0000000F
  380:  	Sub   *Var0  0000000A
  390:  	Call  SetPartAlpha  ( .Actor:Player 00000001 *Var0 )
  3A8:  	Wait  1`
  3B4:  EndLoop
  3BC:  Wait  15`
  3C8:  Call  UseBattleCamPreset    ( 00000002 )
  3D8:  Call  MoveBattleCamOver     ( 0000001E )
  3E8:  Call  $Function_8023808C ( )
  3F4:  Call  SetActorFlagBits      ( .Actor:Player 20000000 .False )
		Call  $IncrementOuttaSightCost ( )
  40C:  Return
  414:  End
}