#new:Function $Function_ThunderFX
{
	ADDIU     SP, SP, FFC0
	SW        RA, 24 (SP)
	SW        S2, 20 (SP)
	SW        S1, 1C (SP)
	SW        S0, 18 (SP)
	SDC1      F24, 38 (SP)
	SDC1      F22, 30 (SP)
	SDC1      F20, 28 (SP)
	JAL       ~Func:get_actor
	LW        A0, 148 (A0)
	JAL       ~Func:get_actor
	LH        A0, 428 (V0)
	DADDU     S0, V0, R0
	BEQ       S0, R0, .o128
	ADDIU     V0, R0, 2
	JAL       80149CB4
	ADDIU     A0, R0, 366
	LIO       V1, CCCCCCCD
	LBU       A0, 191 (S0)
	LBU       V0, 190 (S0)
	MULTU     A0, V1
	LWC1      F0, 188 (S0)
	SRL       V1, V0, 2
	ADDU      V0, V0, V1
	MTC1      V0, F6
	NOP
	CVT.S.W   F6, F6
	MUL.S     F6, F6, F0
	NOP
	ADDIU     V0, A0, FFFE
	MTC1      V0, F4
	NOP
	CVT.S.W   F4, F4
	MUL.S     F4, F4, F0
	NOP
	LWC1      F2, 148 (S0)
	LWC1      F22, 144 (S0)
	LWC1      F24, 14C (S0)
	MFHI      T0
	SRL       V0, T0, 3
	ANDI      V0, V0, FF
	MTC1      V0, F0
	NOP
	CVT.S.W   F0, F0
	TRUNC.W.S F8, F6
	MFC1      S1, F8
	TRUNC.W.S F8, F4
	MFC1      S2, F8
	LW        V0, 0 (S0)
	ANDI      V0, V0, 8000
	BEQ       V0, R0, .oE8
	ADD.S     F20, F2, F0
	SRL       V0, A0, 1
	MTC1      V0, F0
	NOP
	CVT.S.W   F0, F0
	SUB.S     F20, F20, F0
	.oE8
	JAL       800299FC
	ADDIU     A0, R0, 2
	ADDIU     A0, V0, 3
	MFC1      A1, F22
	MFC1      A2, F20
	MFC1      A3, F24
	MTC1      S1, F0
	NOP
	CVT.S.W   F0, F0
	SWC1      F0, 10 (SP)
	MTC1      S2, F0
	NOP
	CVT.S.W   F0, F0
	JAL       80070CD0
	SWC1      F0, 14 (SP)
	ADDIU     V0, R0, 2
	.o128
	LW        RA, 24 (SP)
	LW        S2, 20 (SP)
	LW        S1, 1C (SP)
	LW        S0, 18 (SP)
	LDC1      F24, 38 (SP)
	LDC1      F22, 30 (SP)
	LDC1      F20, 28 (SP)
	JR        RA
	ADDIU SP, SP, 40
}

%hammer sprites defined in a weird format?
#new:IntTable $IntTable_ExtraHammer
{
	00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
	00000000 000AAAAA 00000000 00000000 00000000 0AAAAAAA AAA00000 00000000
	00000000 AAA47477 AAAA0AAA A0000000 0000000B B477333B B8AAAAAA AA000000
	000000BB EC738DE1 1B88AAA2 AAA00000 00000BBE 11C8C111 11B88A32 2AAA0000
	0000ABE1 111C1111 11B84333 4AAA0000 0000AAC1 1111E111 DB222434 AAA00000
	000AA77C 11111E1B 8222224A AAA00000 000AA733 C11111B8 22223222 2AAA0000
	000AA43C 1E11111B 22222332 22AAA000 000AA7DF 11E11111 C2222233 232AAA00
	000AA7E1 111B1111 1C222223 3333AA00 000AABF1 11B3B111 B2222337 66764440
	000AABF1 1D333B1B 22223777 76766440 0000AABF 1B2233B2 22337667 55556440
	0000AAAB B2222333 33375675 55557440 00000AAA 83222223 33376655 55554440
	000000AA A8332222 37677555 55574400 00000AAA 3A833323 75675555 55544400
	0000AAA3 33A23333 76655555 55744000 000AAA32 34AA2233 76555555 57440000
	00AAA322 4AAAA237 77555555 74440000 0AAA3224 AAAAAAA7 66555557 44400000
	0AA3224A AA00AAA7 66655744 44000000 0AA224AA A0000AAA 76744444 40000000
	0AAA4AAA 000000AA A4444440 00000000 00AAAAA0 00000000 A4444000 00000000
	000AAA00 00000000 00000000 00000000 00000000 00000000 00000000 00000000
}

#new:IntTable $IntTable_ExtraHammerB
{
210CC631 B4078AC7 5A09E65B CD979C13 A387B4D5 30C72109 39CF4A53 63190001 
}


#new:IntTable $IntTable_Hammer
{
	00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
	00000000 00AAAAAA 00000000 00000000 00000000 AAAAAAAA AA000000 00000000
	0000000A AAA77A7A AAAA0AAA A0000000 000000AA A7773338 8AAAAAAA AA000000
	00000AAA 77888833 388AAAA2 AAA00000 0000AAA7 78888888 33888A32 2AAA0000
	0000AA77 33833888 88884333 4AAA0000 000AAA78 33883332 22222434 AAA00000
	000AA778 88888333 2222224A AAA00000 000AA783 88822233 32222222 2AAA0000
	000AAA83 38222223 33222322 22AAA000 000AA783 38222222 33222233 232AAA00
	000AA788 33222222 22322223 3333AA00 000AAA88 83322222 22222337 66764440
	0000AA88 82322232 22223777 66766440 0000AAA8 82232223 22227667 55576440
	00000AA8 82222223 32375675 55556440 00000AAA 82222222 33376655 55554440
	000000AA A8222222 37677555 55554400 00000AAA 3A822222 75675555 55544400
	0000AAA3 33A22323 76655555 55544000 000AAA32 34AA2233 77755555 55440000
	00AAA322 4AAAA233 77555555 54440000 0AAA3224 AAAAAAA7 66555555 44400000
	00A3224A AA00AAAA 67655544 44000000 000224AA A0000AAA A6644444 40000000
	00004AAA 0000000A A4444440 00000000 000000A0 00000000 04444000 00000000
	00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
}

#new:IntTable $IntTable_HammerB
{
210CC631 B4078AC7 5A09E65B CD979C13 A387B4D5 30C72109 39CF4A53 63190001 
}


#new:IntTable $IntTable_SHammer
{
	00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
	00000000 0000BBBB 00000000 00000000 00000000 00BBBBBB BB000000 00000000
	00000000 BBBB7889 BBB00011 00000000 0000000B BA766788 99BB0111 10000000
	000000BB 97666678 899B1112 11000000 00000BB9 76766667 88991132 21100000
	00000BA8 76676666 7889B333 41100000 0000BB88 87667666 67889B34 11000000
	0000BB88 88766766 667889B1 B0000000 000BB998 88876676 66678899 BB000000
	000BB999 88887667 66667889 9BB00000 000BBA99 98888766 76666788 99BB0000
	000BBAA9 99888876 67666678 AAABB000 000BBAAA 99988887 667667AA 999BB000
	000BBAAA A9998888 7667AA99 9999BB00 0000BBAA AA999888 877A9999 9999BB00
	0000BBAA AAA99988 88A99999 9999BB00 00000BBA AAAA9998 8A999999 9999BB00
	000000BB AAAAA999 8A999999 999BB000 00000111 BAAAAA99 A9999999 999BB000
	00001113 3BAAAAA9 A9999999 99BB0000 00011132 34B9AAAA 99999999 9BBB0000
	00111322 41BB9AAA 99999999 BBB00000 01113224 111BB9AA 9999999B BB000000
	01132241 1100BB9A 999999BB B0000000 01322411 10000BBA A999BBBB 00000000
	00224111 000000BB BBBBBB00 00000000 00041110 00000000 BBBB0000 00000000
	00001100 00000000 00000000 00000000 00000000 00000000 00000000 00000000
}

#new:IntTable $IntTable_SHammerB
{
210C30C7 B4078AC7 5A09BDEF A4E983E3 5ADD4217 29512109 39CF4A53 6319A529 
}


#new:IntTable $IntTable_UHammer
{
	00000000 00000000 00000000 00000000 00000000 00011111 00000000 00000000
	00000000 0111FF11 11000000 00000000 00000001 111FDDFD 11100000 00000000
	00000011 1CBCFFDD DE110000 00000000 0000011D BBBBCDFF FF110011 00000000
	000011CC BBBBFE89 91110111 10000000 00011DDC CBEE6678 99111121 11000000
	00011FDD CE766667 89911322 11000000 0011DDFD F8876666 7899A341 10000000
	0011DDFF 98887666 67899A11 00000000 011EFFDE 99888766 66789911 11000000
	011DDDF9 99988876 6667899F F1100000 011DDDE9 99998887 6666CDFD DF110000
	011DDD99 99999888 76BBBCFD DFD11000 011FDE99 99999988 8BBBBBCF FDDD1100
	0011DF99 99999998 CCBBBBBC DEEE1100 0011FF19 9999999D DCCBBBBE FFFFF110
	00011111 999999DD DDCCBEFF FFFFF110 00001111 199999FF DDDCFFFF FFFFF110
	00000011 11999FDD FDDFFFFF FFFFF110 00000111 31199FDD FDEFFFFF FFFF1100
	00001113 24419DFF DDFFFFFF FFFF1100 00011132 24111DDD DEFFFFFF FFF11000
	00111322 41111DDD DFFFFFFF FFF11000 01113224 110011DD EFFFFFFF FF110000
	01132241 1000011D EFFFFFFF F1100000 01122411 00000011 EFFFFFF1 11000000
	01111110 00000001 11FFF111 10000000 00111100 00000000 11111110 00000000
	00000000 00000000 00111000 00000000 00000000 00000000 00000000 00000000
}

#new:IntTable $IntTable_UHammerB
{
210C30C7 B4078AC7 5A09BDEF C4A1C355 CA07998B 4109CE4F B583A503 83C37345 
}

% Origin: HEURISTIC
%defines corners of sprite?
%-16,-16
%+15,-16
%+15,+15
%-16,+15

#new:VertexTable $VertexTable_Hammer
{
	%    X        Y        Z                 U        V         R   G   B   A     pos
	   -16`s    -16`s      0`s    0000s       0`s      0`s      00b 00b 00b FFb   %  0
	    15`s    -16`s      0`s    0000s    1024`s      0`s      00b 00b 00b FFb   %  1
	    15`s     15`s      0`s    0000s    1024`s   1024`s      00b 00b 00b FFb   %  2
	   -16`s     15`s      0`s    0000s       0`s   1024`s      00b 00b 00b FFb   %  3
}

% Origin: HEURISTIC

#new:DisplayList $DisplayList_UnusedHammer
{
	G_RDPPIPESYNC
	G_TEXTURE        (G_TX_RENDERTILE, 0.999985, 0.999985, 0, true)
	G_SETCOMBINE     (G_CCMUX_0, G_CCMUX_0, G_CCMUX_0, G_CCMUX_TEXEL0, ...
	                  G_ACMUX_0, G_ACMUX_0, G_ACMUX_0, G_ACMUX_TEXEL0, ...
	                  G_CCMUX_0, G_CCMUX_0, G_CCMUX_0, G_CCMUX_TEXEL0, ...
	                  G_ACMUX_0, G_ACMUX_0, G_ACMUX_0, G_ACMUX_TEXEL0)
	G_SetOtherMode_H (G_MDSFT_TEXTPERSP, 1)
	G_SetOtherMode_H (G_MDSFT_TEXTDETAIL, G_TD_CLAMP)
	G_SetOtherMode_H (G_MDSFT_TEXTLOD, G_TL_TILE)
	G_SetOtherMode_H (G_MDSFT_TEXTLUT, G_TT_NONE)
	G_SetOtherMode_H (G_MDSFT_TEXTFILT, G_TF_AVERAGE)
	G_SetOtherMode_H (G_MDSFT_TEXTCONV, G_TC_FILT)
	G_SetOtherMode_H (G_MDSFT_TEXTLUT, G_TT_RGBA16)
	G_SETIMG         (RGBA-16, 1`, $IntTable_ExtraHammerB )
	G_RDPTILESYNC
	G_SETTILE        (G_TX_LOADTILE, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0) % invalid format (0:0)
	G_RDPLOADSYNC
	G_LOADTLUT       (G_TX_LOADTILE, 16`)
	G_RDPPIPESYNC
	G_SETIMG         (CI-8, 16`, $IntTable_ExtraHammer )
	G_SETTILE        (G_TX_LOADTILE, CI-8, 2, 0, 0, 0, 0, 0, 0, 0, 0)
	G_RDPLOADSYNC
	G_LOADTILE       (G_TX_LOADTILE, 0.000000, 0.000000, 15.500000, 31.000000)
	G_RDPPIPESYNC
	G_SETTILE        (G_TX_RENDERTILE, CI-4, 2, 0, 0, 0, 0, 0, 0, 0, 0)
	G_SETTILESIZE    (G_TX_RENDERTILE, 0, 0, 32`, 32`)
	G_GEOMETRYMODE   (Clear, G_LIGHTING)
	G_GEOMETRYMODE   (Clear, G_SHADING_SMOOTH)
	G_VTX            ( $VertexTable_Hammer , 4`, 0)
	G_TRI1           ( 0`,  1`,  2`)
	G_TRI1           ( 0`,  2`,  3`)
	G_RDPPIPESYNC
	G_ENDDL
}


% Origin: HEURISTIC
#new:DisplayList  $DisplayList_Hammer
{
	G_RDPPIPESYNC
	G_TEXTURE        (G_TX_RENDERTILE, 0.999985, 0.999985, 0, true)
	G_SETCOMBINE     (G_CCMUX_0, G_CCMUX_0, G_CCMUX_0, G_CCMUX_TEXEL0, ...
	                  G_ACMUX_0, G_ACMUX_0, G_ACMUX_0, G_ACMUX_TEXEL0, ...
	                  G_CCMUX_0, G_CCMUX_0, G_CCMUX_0, G_CCMUX_TEXEL0, ...
	                  G_ACMUX_0, G_ACMUX_0, G_ACMUX_0, G_ACMUX_TEXEL0)
	G_SetOtherMode_H (G_MDSFT_TEXTPERSP, 1)
	G_SetOtherMode_H (G_MDSFT_TEXTDETAIL, G_TD_CLAMP)
	G_SetOtherMode_H (G_MDSFT_TEXTLOD, G_TL_TILE)
	G_SetOtherMode_H (G_MDSFT_TEXTLUT, G_TT_NONE)
	G_SetOtherMode_H (G_MDSFT_TEXTFILT, G_TF_AVERAGE)
	G_SetOtherMode_H (G_MDSFT_TEXTCONV, G_TC_FILT)
	G_SetOtherMode_H (G_MDSFT_TEXTLUT, G_TT_RGBA16)
	G_SETIMG         (RGBA-16, 1`, $IntTable_HammerB )
	G_RDPTILESYNC
	G_SETTILE        (G_TX_LOADTILE, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0) % invalid format (0:0)
	G_RDPLOADSYNC
	G_LOADTLUT       (G_TX_LOADTILE, 16`)
	G_RDPPIPESYNC
	G_SETIMG         (CI-8, 16`, $IntTable_Hammer )
	G_SETTILE        (G_TX_LOADTILE, CI-8, 2, 0, 0, 0, 0, 0, 0, 0, 0)
	G_RDPLOADSYNC
	G_LOADTILE       (G_TX_LOADTILE, 0.000000, 0.000000, 15.500000, 31.000000)
	G_RDPPIPESYNC
	G_SETTILE        (G_TX_RENDERTILE, CI-4, 2, 0, 0, 0, 0, 0, 0, 0, 0)
	G_SETTILESIZE    (G_TX_RENDERTILE, 0, 0, 32`, 32`)
	G_GEOMETRYMODE   (Clear, G_LIGHTING)
	G_GEOMETRYMODE   (Clear, G_SHADING_SMOOTH)
	G_VTX            ( $VertexTable_Hammer , 4`, 0)
	G_TRI1           ( 0`,  1`,  2`)
	G_TRI1           ( 0`,  2`,  3`)
	G_RDPPIPESYNC
	G_ENDDL
}

% Origin: HEURISTIC
#new:DisplayList $DisplayList_SuperHammer
{
	G_RDPPIPESYNC
	G_TEXTURE        (G_TX_RENDERTILE, 0.999985, 0.999985, 0, true)
	G_SETCOMBINE     (G_CCMUX_0, G_CCMUX_0, G_CCMUX_0, G_CCMUX_TEXEL0, ...
	                  G_ACMUX_0, G_ACMUX_0, G_ACMUX_0, G_ACMUX_TEXEL0, ...
	                  G_CCMUX_0, G_CCMUX_0, G_CCMUX_0, G_CCMUX_TEXEL0, ...
	                  G_ACMUX_0, G_ACMUX_0, G_ACMUX_0, G_ACMUX_TEXEL0)
	G_SetOtherMode_H (G_MDSFT_TEXTPERSP, 1)
	G_SetOtherMode_H (G_MDSFT_TEXTDETAIL, G_TD_CLAMP)
	G_SetOtherMode_H (G_MDSFT_TEXTLOD, G_TL_TILE)
	G_SetOtherMode_H (G_MDSFT_TEXTLUT, G_TT_NONE)
	G_SetOtherMode_H (G_MDSFT_TEXTFILT, G_TF_AVERAGE)
	G_SetOtherMode_H (G_MDSFT_TEXTCONV, G_TC_FILT)
	G_SetOtherMode_H (G_MDSFT_TEXTLUT, G_TT_RGBA16)
	G_SETIMG         (RGBA-16, 1`, $IntTable_SHammerB )
	G_RDPTILESYNC
	G_SETTILE        (G_TX_LOADTILE, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0) % invalid format (0:0)
	G_RDPLOADSYNC
	G_LOADTLUT       (G_TX_LOADTILE, 16`)
	G_RDPPIPESYNC
	G_SETIMG         (CI-8, 16`, $IntTable_SHammer )
	G_SETTILE        (G_TX_LOADTILE, CI-8, 2, 0, 0, 0, 0, 0, 0, 0, 0)
	G_RDPLOADSYNC
	G_LOADTILE       (G_TX_LOADTILE, 0.000000, 0.000000, 15.500000, 31.000000)
	G_RDPPIPESYNC
	G_SETTILE        (G_TX_RENDERTILE, CI-4, 2, 0, 0, 0, 0, 0, 0, 0, 0)
	G_SETTILESIZE    (G_TX_RENDERTILE, 0, 0, 32`, 32`)
	G_GEOMETRYMODE   (Clear, G_LIGHTING)
	G_GEOMETRYMODE   (Clear, G_SHADING_SMOOTH)
	G_VTX            ( $VertexTable_Hammer , 4`, 0)
	G_TRI1           ( 0`,  1`,  2`)
	G_TRI1           ( 0`,  2`,  3`)
	G_RDPPIPESYNC
	G_ENDDL
}

#new:DisplayList $DisplayList_UltraHammer
{
	G_RDPPIPESYNC
	G_TEXTURE        (G_TX_RENDERTILE, 0.999985, 0.999985, 0, true)
	G_SETCOMBINE     (G_CCMUX_0, G_CCMUX_0, G_CCMUX_0, G_CCMUX_TEXEL0, ...
	                  G_ACMUX_0, G_ACMUX_0, G_ACMUX_0, G_ACMUX_TEXEL0, ...
	                  G_CCMUX_0, G_CCMUX_0, G_CCMUX_0, G_CCMUX_TEXEL0, ...
	                  G_ACMUX_0, G_ACMUX_0, G_ACMUX_0, G_ACMUX_TEXEL0)
	G_SetOtherMode_H (G_MDSFT_TEXTPERSP, 1)
	G_SetOtherMode_H (G_MDSFT_TEXTDETAIL, G_TD_CLAMP)
	G_SetOtherMode_H (G_MDSFT_TEXTLOD, G_TL_TILE)
	G_SetOtherMode_H (G_MDSFT_TEXTLUT, G_TT_NONE)
	G_SetOtherMode_H (G_MDSFT_TEXTFILT, G_TF_AVERAGE)
	G_SetOtherMode_H (G_MDSFT_TEXTCONV, G_TC_FILT)
	G_SetOtherMode_H (G_MDSFT_TEXTLUT, G_TT_RGBA16)
	G_SETIMG         (RGBA-16, 1`, $IntTable_UHammerB )
	G_RDPTILESYNC
	G_SETTILE        (G_TX_LOADTILE, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0) % invalid format (0:0)
	G_RDPLOADSYNC
	G_LOADTLUT       (G_TX_LOADTILE, 16`)
	G_RDPPIPESYNC
	G_SETIMG         (CI-8, 16`, $IntTable_UHammer )
	G_SETTILE        (G_TX_LOADTILE, CI-8, 2, 0, 0, 0, 0, 0, 0, 0, 0)
	G_RDPLOADSYNC
	G_LOADTILE       (G_TX_LOADTILE, 0.000000, 0.000000, 15.500000, 31.000000)
	G_RDPPIPESYNC
	G_SETTILE        (G_TX_RENDERTILE, CI-4, 2, 0, 0, 0, 0, 0, 0, 0, 0)
	G_SETTILESIZE    (G_TX_RENDERTILE, 0, 0, 32`, 32`)
	G_GEOMETRYMODE   (Clear, G_LIGHTING)
	G_GEOMETRYMODE   (Clear, G_SHADING_SMOOTH)
	G_VTX            ( $VertexTable_Hammer , 4`, 0)
	G_TRI1           ( 0`,  1`,  2`)
	G_TRI1           ( 0`,  2`,  3`)
	G_RDPPIPESYNC
	G_ENDDL
}

#new:EntityModelScript $EntityModelScript_Hammer
{
	SetRenderMode   ( .RenderMode:AlphaTest )
	SetDisplayList  ( 60` $DisplayList_Hammer )
	Restart
}

#new:EntityModelScript $EntityModelScript_SuperHammer
{
	SetRenderMode   ( .RenderMode:AlphaTest )
	SetDisplayList  ( 60` $DisplayList_SuperHammer )
	Restart
}

#new:EntityModelScript $EntityModelScript_UltraHammer
{
	SetRenderMode   ( .RenderMode:AlphaTest )
	SetDisplayList  ( 60` $DisplayList_UltraHammer )
	Restart
}

%first hit: hammer
%second hit: 4 piercing + 50% 2 turn paralyze

%so it will usually do hammer + 2 unless the target enemy has shock weakness/shock immunity
%	...or if the enemy has enough defense to negate the hammer hit
@ $Script_UseMove0
{
    0:  Call  802694A4  ( 00000001 )
   10:  Call  GetMenuSelection  ( *Var0 *Var1 *Var2 )
   28:  Switch  *Var1
   34:  	Case  ==  00000000 % 0
   40:  		Set   *VarD  00000032
   50:  		Set   *VarE  00000001
   60:  		Set   *VarF  00000002
   70:  		ExecWait  $Script_802A3260
   7C:  	Case  ==  00000001 % 1
   88:  		Set   *VarD  00000032
   98:  		Set   *VarE  00000002
   A8:  		Set   *VarF  00000004
   B8:  		ExecWait  $Script_802A3260
   C4:  	Case  ==  00000002 % 2
   D0:  		Set   *VarD  00000032
   E0:  		Set   *VarE  00000003
   F0:  		Set   *VarF  00000006
  100:  		ExecWait  $Script_802A3260
  10C:  EndSwitch
  114:  Return
  11C:  End
}
  
@ $Script_802A3260
{
    0:  Call  LoadActionCommand ( .ActionCommand:Smash )
   10:  Call  802A9000 ( )
   1C:  Call  SetAnimation      ( .Actor:Player 00000000 00010005 )
   34:  Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
   50:  Add   *Var0  00000010
   60:  Call  SetActorSpeed     ( .Actor:Player *Fixed[4.0] )
   74:  Call  SetGoalPos        ( .Actor:Player *Var0 *Var1 *Var2 )
   90:  Call  PlayerRunToGoal   ( 00000000 )
   A0:  Call  SetGoalToTarget   ( .Actor:Player )
   B0:  Call  AddGoalPos        ( .Actor:Player 00000000 00000000 00000000 )
   CC:  Call  GetMenuSelection  ( *Var0 *Var1 *Var2 )
   E4:  Switch  *Var1
   F0:  	Case  ==  00000000 % 0
   FC:  		ExecWait  $Script_PreThrowHammer
  108:  	Case  ==  00000001 % 1
  114:  		ExecWait  $Script_PreThrowSHammer
  120:  	Case  ==  00000002 % 2
  12C:  		ExecWait  $Script_PreThrowUHammer
  138:  EndSwitch
  140:  Call  InitTargetIterator ( )
  14C:  Call  UseBattleCamPreset    ( 0000001A )
  15C:  Call  AddBattleCamZoom  ( 00000032 )
  16C:  Call  MoveBattleCamOver ( 00000014 )
  17C:  Call  PlaySoundAtActor  ( .Actor:Player 0000010B )
  190:  Call  GetMenuSelection  ( *Var0 *Var1 *Var2 )
  1A8:  Switch  *Var1
  1B4:  	Case  ==  00000000 % 0
  1C0:  		Call  SetAnimation  ( .Actor:Player 00000000 00040017 )
  1D8:  		Wait  4`
  1E4:  		Call  SetAnimation  ( .Actor:Player 00000000 00040018 )
  1FC:  	Case  ==  00000001 % 1
  208:  		Call  SetAnimation  ( .Actor:Player 00000000 0004001D )
  220:  		Wait  4`
  22C:  		Call  SetAnimation  ( .Actor:Player 00000000 0004001E )
  244:  	Case  ==  00000002 % 2
  250:  		Call  SetAnimation  ( .Actor:Player 00000000 00040023 )
  268:  		Wait  4`
  274:  		Call  SetAnimation  ( .Actor:Player 00000000 00040024 )
  28C:  EndSwitch
  294:  Call  GetActionCommandMode  ( *Var0 )
  2A4:  If  *Var0  >  00000000
  2B4:  	Call  $Function_802A1050 ( )
  2C0:  	If  *Var0  ==  00000000
  2D0:  		Loop  0000002D
  2DC:  			Wait  1`
  2E8:  			Call  CheckButtonDown   ( 00040000 *Var0 )
  2FC:  			If  *Var0  !=  .False
  30C:  				BreakLoop
  314:  			EndIf
  31C:  		EndLoop
  324:  	EndIf
  32C:  	Add   *VarD  00000006
  33C:  	Call  802A9258  ( 00000000 *VarD 00000003 )
  354:  	Call  SetActionResult   ( 00000000 )
  364:  	Set   *Var1  00000000
  374:  	Loop  0000001E
  380:  		Wait  1`
  38C:  		Call  GetActionResult   ( *Var0 )
  39C:  		If  *Var0  !=  00000000
  3AC:  			If  *Var1  !=  00000001
  3BC:  				Call  GetMenuSelection  ( *Var3 *Var4 *Var5 )
  3D4:  				Switch  *Var4
  3E0:  					Case  ==  00000000 % 0
  3EC:  						Call  SetAnimation  ( .Actor:Player 00000000 00040019 )
  404:  					Case  ==  00000001 % 1
  410:  						Call  SetAnimation  ( .Actor:Player 00000000 0004001F )
  428:  					Case  ==  00000002 % 2
  434:  						Call  SetAnimation  ( .Actor:Player 00000000 00040025 )
  44C:  				EndSwitch
  454:  				Set   *Var1  00000001
  464:  			EndIf
  46C:  		EndIf
  474:  		Call  CheckButtonDown   ( 00040000 *Var0 )
  488:  		If  *Var0  ==  .False
  498:  			BreakLoop
  4A0:  		EndIf
  4A8:  	EndLoop
  4B0:  Else
  4B8:  	Wait  10`
  4C4:  	Call  GetMenuSelection  ( *Var3 *Var4 *Var5 )
  4DC:  	Switch  *Var4
  4E8:  		Case  ==  00000000 % 0
  4F4:  			Call  SetAnimation  ( .Actor:Player 00000000 00040019 )
  50C:  		Case  ==  00000001 % 1
  518:  			Call  SetAnimation  ( .Actor:Player 00000000 0004001F )
  530:  		Case  ==  00000002 % 2
  53C:  			Call  SetAnimation  ( .Actor:Player 00000000 00040025 )
  554:  	EndSwitch
  55C:  	Wait  30`
  568:  EndIf
  570:  Call  GetActionCommandMode  ( *Var0 )
  580:  If  *Var0  >  00000000
  590:  	Loop
  59C:  		Wait  1`
  5A8:  		Call  GetActionSuccess  ( *Var0 )
  5B8:  		If  *Var0  !=  00000000
  5C8:  			BreakLoop
  5D0:  		EndIf
  5D8:  	EndLoop
  5E0:  EndIf
  5E8:  Call  GetMenuSelection  ( *Var0 *Var1 *Var2 )
  600:  Switch  *Var1
  60C:  	Case  ==  00000000 % 0
  618:  		Call  SetAnimation      ( .Actor:Player 00000000 0004001B )
  630:  		Call  PlaySoundAtActor  ( .Actor:Player 00002115 )
  644:  	Case  ==  00000001 % 1
  650:  		Call  SetAnimation      ( .Actor:Player 00000000 00040021 )
  668:  		Call  PlaySoundAtActor  ( .Actor:Player 00002116 )
  67C:  	Case  ==  00000002 % 2
  688:  		Call  SetAnimation      ( .Actor:Player 00000000 00040027 )
  6A0:  		Call  PlaySoundAtActor  ( .Actor:Player 00002117 )
  6B4:  EndSwitch
  6BC:  Wait  3`
  6C8:  Call  GetMenuSelection  ( *Var0 *Var1 *Var2 )
  6E0:  Switch  *Var1
  6EC:  	Case  ==  00000000 % 0
  6F8:  		Call  CreateVirtualEntity   ( *VarA $EntityModelScript_Hammer )
  70C:  	Case  ==  00000001 % 1
  718:  		Call  CreateVirtualEntity   ( *VarA $EntityModelScript_SuperHammer )
  72C:  	Case  ==  00000002 % 2
  738:  		Call  CreateVirtualEntity   ( *VarA $EntityModelScript_UltraHammer )
  74C:  EndSwitch
  754:  Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
  770:  Add   *Var0  00000014
  780:  Add   *Var1  0000002A
  790:  Add   *Var2  00000005
  7A0:  Call  SetVirtualEntityPosition  ( *VarA *Var0 *Var1 *Var2 )
  7BC:  Call  SetVirtualEntityScale     ( *VarA *Fixed[0.6] *Fixed[0.6] *Fixed[0.6] )
  7D8:  Call  InitTargetIterator ( )
  7E4:  Call  SetGoalToTarget   ( .Actor:Self )
  7F4:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  810:  Call  DidActionSucceed  ( *Var3 )
  820:  Switch  *Var3
  82C:  	Case  >  .False
  838:  		Thread
  840:  			Set   *Var0  00000000
  850:  			Loop  00000009
  85C:  				Add   *Var0  0000003C
  86C:  				Call  SetVirtualEntityRotation  ( *VarA 00000000 00000000 *Var0 )
  888:  				Wait  1`
  894:  			EndLoop
  89C:  		EndThread
  8A4:  		Call  SetVirtualEntityJumpGravity   ( *VarA *Fixed[1.3] )
  8B8:  		Add   *Var2  00000005
  8C8:  		Call  VirtualEntityJumpTo   ( *VarA *Var0 *Var1 *Var2 0000000B )
  8E8:  	Default
  8F0:  		Thread
  8F8:  			Set   *Var0  00000000
  908:  			Loop  00000012
  914:  				Add   *Var0  0000003C
  924:  				Call  SetVirtualEntityRotation  ( *VarA 00000000 00000000 *Var0 )
  940:  				Wait  1`
  94C:  			EndLoop
  954:  		EndThread
  95C:  		Call  SetVirtualEntityJumpGravity   ( *VarA *Fixed[0.7] )
  970:  		Add   *Var2  00000005
  980:  		Call  VirtualEntityJumpTo   ( *VarA *Var0 *Var1 *Var2 00000014 )
  9A0:  EndSwitch
  9A8:  Call  SetAnimation      ( .Actor:Player 00000000 00010002 )
  9C0:  Call  PlayerTestEnemy   ( *Var3 ~Flags:DamageType:NoContact|Smash 00000019 00000000 00000000 00000010 )
  9E4:  If  *Var3  ==  .HitResult:Miss % 6
  9F4:  	Call  VirtualEntityLandJump ( *VarA )
  A04:  	Call  DeleteVirtualEntity   ( *VarA )
  A14:  	ExecWait  $Script_802A1A64
  A20:  	Return
  A28:  EndIf
  A30:  Thread
  A38:  	Call  DidActionSucceed  ( *Var3 )
  A48:  	Switch  *Var3
  A54:  		Case  >  .False
  A60:  			Call  SetVirtualEntityJumpGravity   ( *VarA *Fixed[1.4] )
  A74:  			Add   *Var0  0000003C
  A84:  			Add   *Var1  00000000
  A94:  			Call  VirtualEntityJumpTo   ( *VarA *Var0 *Var1 *Var2 0000000A )
  AB4:  			Call  DeleteVirtualEntity   ( *VarA )
  AC4:  		Default
  ACC:  			Call  SetVirtualEntityJumpGravity   ( *VarA *Fixed[0.8] )
  AE0:  			Add   *Var0  00000028
  AF0:  			Add   *Var1  00000000
  B00:  			Call  VirtualEntityJumpTo   ( *VarA *Var0 *Var1 *Var2 0000000F )
  B20:  			Call  DeleteVirtualEntity   ( *VarA )
  B30:  	EndSwitch
  B38:  EndThread
  B40:  Call  DidActionSucceed  ( *Var0 )
  B50:  Switch  *Var0
  B5C:  	Case  >  .False
  B68:  		Call  GetMenuSelection  ( *Var0 *Var1 *Var2 )
  B80:  		Switch  *Var1
  B8C:  			Case  ==  00000000 % 0
  B98:  				Call  StartRumble   ( 00000007 )
  BA8:  				Thread
  BB0:  					Call  ShakeCam  ( .Cam:Battle 00000000 0000000A *Fixed[1.3] )
  BCC:  				EndThread
  BD4:  			Case  ==  00000001 % 1
  BE0:  				Call  StartRumble   ( 00000008 )
  BF0:  				Thread
  BF8:  					Call  ShakeCam  ( .Cam:Battle 00000000 0000000A *Fixed[1.6] )
  C14:  				EndThread
  C1C:  			Case  ==  00000002 % 2
  C28:  				Call  StartRumble   ( 00000009 )
  C38:  				Thread
  C40:  					Call  ShakeCam  ( .Cam:Battle 00000000 0000000A *Fixed[1.9] )
  C5C:  				EndThread
  C64:  		EndSwitch
  C6C:  	Default
  C74:  		Call  GetMenuSelection  ( *Var0 *Var1 *Var2 )
  C8C:  		Switch  *Var1
  C98:  			Case  ==  00000000 % 0
  CA4:  				Call  StartRumble   ( 00000007 )
  CB4:  				Thread
  CBC:  					Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[1.3] )
  CD8:  				EndThread
  CE0:  			Case  ==  00000001 % 1
  CEC:  				Call  StartRumble   ( 00000008 )
  CFC:  				Thread
  D04:  					Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[1.6] )
  D20:  				EndThread
  D28:  			Case  ==  00000002 % 2
  D34:  				Call  StartRumble   ( 00000009 )
  D44:  				Thread
  D4C:  					Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[1.9] )
  D68:  				EndThread
  D70:  		EndSwitch
  D78:  EndSwitch
  D80:  Call  UseBattleCamPreset    ( 0000002C )
  D90:  Call  MoveBattleCamOver     ( 0000000A )
  DA0:  Call  GetMenuSelection      ( *Var0 *Var1 *Var2 )
  DB8:  Switch  *Var1
  DC4:  	Case  ==  00000000 % 0
  DD0:  		Call  PlaySoundAtActor  ( .Actor:Player 0000210A )
  DE4:  	Case  ==  00000001 % 1
  DF0:  		Call  PlaySoundAtActor  ( .Actor:Player 0000210B )
  E04:  	Case  ==  00000002 % 2
  E10:  		Call  PlaySoundAtActor  ( .Actor:Player 0000210C )
  E24:  EndSwitch
  E2C:  Call  DidActionSucceed  ( *Var0 )
  E3C:  Switch  *Var0
  E48:  	Case  >  .False
  E54:  		Call  GetMenuSelection  ( *Var0 *Var1 *Var2 )
  E6C:  		Switch  *Var1
  E78:  			Case  ==  00000000 % 0
  E84:  				Call  PlaySoundAtActor  ( .Actor:Player 000000E9 )
  E98:  			Case  ==  00000001 % 1
  EA4:  				Call  PlaySoundAtActor  ( .Actor:Player 0000010E )
  EB8:  			Case  ==  00000002 % 2
  EC4:  				Call  PlaySoundAtActor  ( .Actor:Player 0000010E )
  ED8:  		EndSwitch
  EE0:  		Call     PlayerDamageEnemy 	( *Var0 ~Flags:DamageType:NoContact|Throw 00000019 00000000 *VarF 00000050 ) %I think that the 2 flag specified if this is the final hit of the move
				Wait	15`
				Call	$Function_ThunderFX ( ) 
				Call     ItemDamageEnemy 	( *Var[9] 18000020 80010232 00000004 00000020 ) %don't make this affected by hammer charging
				%Call     PlayerDamageEnemy 	( *Var[0] 18000020 00000000 00000000 00000002 00000070 ) 
  F04:  	Default
  F0C:  		Call  GetMenuSelection  ( *Var0 *Var1 *Var2 )
  F24:  		Switch  *Var1
  F30:  			Case  ==  00000000 % 0
  F3C:  				Call  PlaySoundAtActor  ( .Actor:Player 000000E9 )
  F50:  			Case  ==  00000001 % 1
  F5C:  				Call  PlaySoundAtActor  ( .Actor:Player 0000010E )
  F70:  			Case  ==  00000002 % 2
  F7C:  				Call  PlaySoundAtActor  ( .Actor:Player 0000010E )
  F90:  		EndSwitch
  F98:  		Call  PlayerDamageEnemy ( *Var0 ~Flags:DamageType:NoContact|Throw 00000019 00000000 *VarE 00000030 )
  FBC:  EndSwitch
  FC4:  Switch  *Var0
  FD0:  	CaseOR  ==  00000001 % 1
  FDC:  	CaseOR  ==  00000003 % 3
  FE8:  		ExecWait  $Script_802A18AC
  FF4:  	EndCaseGroup
  FFC:  	CaseOR  ==  .HitResult:Hit % 0
 1008:  	CaseOR  ==  00000002 % 2
 1014:  		ExecWait  $Script_802A1A64
 1020:  	EndCaseGroup
 1028:  EndSwitch
 1030:  Return
 1038:  End
}

/%
{
    0:  Call     LoadActionCommand 	( 00000002 )
   10:  Call     802A9000 ( )
   1C:  Call     SetAnimation 	( .Actor:Player 00000000 00010005 )
   34:  Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
   50:  Add  *Var[0]  00000010 
   60:  Call     SetActorSpeed 	( .Actor:Player *Fixed[4.0] )
   74:  Call     SetGoalPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
   90:  Call     80273C64 ( 00000000 )
   A0:  Call     SetGoalToTarget 	( .Actor:Player )
   B0:  Call     AddGoalPos 	( .Actor:Player 00000000 00000000 00000000 )
   CC:  Call     GetMenuSelection 	( *Var[0] *Var[1] *Var[2] )
   E4:  Switch  *Var[1] 
   F0:  	Case  ==  00000000 
   FC:  		ExecWait $Script_802A1204 %$Script_PreThrowHammer 
  108:  	Case  ==  00000001 
  114:  		ExecWait $Script_802A1388 %$Script_PreThrowSHammer 
  120:  	Case  ==  00000002 
  12C:  		ExecWait $Script_802A150C %$Script_PreThrowUHammer 
  138:  EndSwitch
  140:  Call     InitTargetIterator 	( )
  14C:  Call     UseBattleCamPreset 	( 0000001A )
  15C:  Call     AddCamZoom  	( 00000032 )
  16C:  Call     MoveBattleCamOver 	( 00000014 )
  17C:  Call     PlaySoundAtActor 	( .Actor:Player 0000010B )
  190:  Call     GetMenuSelection 	( *Var[0] *Var[1] *Var[2] )
  1A8:  Switch  *Var[1] 
  1B4:  	Case  ==  00000000 
  1C0:  		Call     SetAnimation 	( .Actor:Player 00000000 00040017 )
  1D8:  		Wait     00000004 
  1E4:  		Call     SetAnimation 	( .Actor:Player 00000000 00040018 )
  1FC:  	Case  ==  00000001 
  208:  		Call     SetAnimation 	( .Actor:Player 00000000 0004001D )
  220:  		Wait     00000004 
  22C:  		Call     SetAnimation 	( .Actor:Player 00000000 0004001E )
  244:  	Case  ==  00000002 
  250:  		Call     SetAnimation 	( .Actor:Player 00000000 00040023 )
  268:  		Wait     00000004 
  274:  		Call     SetAnimation 	( .Actor:Player 00000000 00040024 )
  28C:  EndSwitch
  294:  Call     80269318 ( *Var[0] )
  2A4:  If  *Var[0]  >  00000000 
  2B4:  	Call     $Function_802A1050 ( )
  2C0:  	If  *Var[0]  ==  00000000 
  2D0:  		Loop     0000002D 
  2DC:  			Wait     00000001 
  2E8:  			Call     CheckButtonHeld 	( 00040000 *Var[0] )
  2FC:  			If  *Var[0]  !=  00000000 
  30C:  				BreakLoop
  314:  			EndIf
  31C:  		EndLoop
  324:  	EndIf
  32C:  	Add  *Var[D]  00000006 
  33C:  	Call     802A9258 ( 00000000 *Var[D] 00000003 )
  354:  	Call     802695D4 ( 00000000 )
  364:  	Set  *Var[1]  00000000 
  374:  	Loop     0000001E 
  380:  		Wait     00000001 
  38C:  		Call     802695A8 ( *Var[0] )
  39C:  		If  *Var[0]  !=  00000000 
  3AC:  			If  *Var[1]  !=  00000001 
  3BC:  				Call     GetMenuSelection 	( *Var[3] *Var[4] *Var[5] )
  3D4:  				Switch  *Var[4] 
  3E0:  					Case  ==  00000000 
  3EC:  						Call     SetAnimation 	( .Actor:Player 00000000 00040019 )
  404:  					Case  ==  00000001 
  410:  						Call     SetAnimation 	( .Actor:Player 00000000 0004001F )
  428:  					Case  ==  00000002 
  434:  						Call     SetAnimation 	( .Actor:Player 00000000 00040025 )
  44C:  				EndSwitch
  454:  				Set  *Var[1]  00000001 
  464:  			EndIf
  46C:  		EndIf
  474:  		Call     CheckButtonHeld 	( 00040000 *Var[0] )
  488:  		If  *Var[0]  ==  00000000 
  498:  			BreakLoop
  4A0:  		EndIf
  4A8:  	EndLoop
  4B0:  Else
  4B8:  	Wait     0000000A 
  4C4:  	Call     GetMenuSelection 	( *Var[3] *Var[4] *Var[5] )
  4DC:  	Switch  *Var[4] 
  4E8:  		Case  ==  00000000 
  4F4:  			Call     SetAnimation 	( .Actor:Player 00000000 00040019 )
  50C:  		Case  ==  00000001 
  518:  			Call     SetAnimation 	( .Actor:Player 00000000 0004001F )
  530:  		Case  ==  00000002 
  53C:  			Call     SetAnimation 	( .Actor:Player 00000000 00040025 )
  554:  	EndSwitch
  55C:  	Wait     0000001E 
  568:  EndIf
  570:  Call     80269318 ( *Var[0] )
  580:  If  *Var[0]  >  00000000 
  590:  	Loop     
  59C:  		Wait     00000001 
  5A8:  		Call     80269294 ( *Var[0] )
  5B8:  		If  *Var[0]  !=  00000000 
  5C8:  			BreakLoop
  5D0:  		EndIf
  5D8:  	EndLoop
  5E0:  EndIf
  5E8:  Call     GetMenuSelection 	( *Var[0] *Var[1] *Var[2] )
  600:  Switch  *Var[1] 
  60C:  	Case  ==  00000000 
  618:  		Call     SetAnimation 	( .Actor:Player 00000000 0004001B )
  630:  		Call     PlaySoundAtActor 	( .Actor:Player 00002115 )
  644:  	Case  ==  00000001 
  650:  		Call     SetAnimation 	( .Actor:Player 00000000 00040021 )
  668:  		Call     PlaySoundAtActor 	( .Actor:Player 00002116 )
  67C:  	Case  ==  00000002 
  688:  		Call     SetAnimation 	( .Actor:Player 00000000 00040027 )
  6A0:  		Call     PlaySoundAtActor 	( .Actor:Player 00002117 )
  6B4:  EndSwitch
  6BC:  Wait     00000003 
  6C8:  Call     GetMenuSelection 	( *Var[0] *Var[1] *Var[2] )
  6E0:  Switch  *Var[1] %spawn a hammer sprite
  6EC:  	Case  ==  00000000 
  6F8:  		Call     802D3474 ( *Var[A] $EntityModelScript_Hammer )
  70C:  	Case  ==  00000001 
  718:  		Call     802D3474 ( *Var[A] $EntityModelScript_SuperHammer )
  72C:  	Case  ==  00000002 
  738:  		Call     802D3474 ( *Var[A] $EntityModelScript_UltraHammer )
  74C:  EndSwitch
  754:  Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  770:  Add  *Var[0]  00000014 
  780:  Add  *Var[1]  0000002A 
  790:  Add  *Var[2]  00000005 
  7A0:  Call     802D36E0 ( *Var[A] *Var[0] *Var[1] *Var[2] )
  7BC:  Call     802D38EC ( *Var[A] *Fixed[0.60058594] *Fixed[0.60058594] *Fixed[0.60058594] )
  7D8:  Call     InitTargetIterator 	( )
  7E4:  Call     SetGoalToTarget 	( .Actor:Self )
  7F4:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  810:  Call     80276EB4 ( *Var[3] )
  820:  Switch  *Var[3] 
  82C:  	Case  >  00000000 
  838:  		Thread
  840:  			Set  *Var[0]  00000000 
  850:  			Loop     00000009 
  85C:  				Add  *Var[0]  0000003C 
  86C:  				Call     802D3840 ( *Var[A] 00000000 00000000 *Var[0] )
  888:  				Wait     00000001 
  894:  			EndLoop
  89C:  		EndThread
  8A4:  		Call     802D39FC ( *Var[A] *Fixed[1.3007812] )
  8B8:  		Add  *Var[2]  00000005 
  8C8:  		Call     802D3C58 ( *Var[A] *Var[0] *Var[1] *Var[2] 0000000B )
  8E8:  	Default
  8F0:  		Thread
  8F8:  			Set  *Var[0]  00000000 
  908:  			Loop     00000012 
  914:  				Add  *Var[0]  0000003C 
  924:  				Call     802D3840 ( *Var[A] 00000000 00000000 *Var[0] )
  940:  				Wait     00000001 
  94C:  			EndLoop
  954:  		EndThread
  95C:  		Call     802D39FC ( *Var[A] *Fixed[0.7001953] )
  970:  		Add  *Var[2]  00000005 
  980:  		Call     802D3C58 ( *Var[A] *Var[0] *Var[1] *Var[2] 00000014 )
  9A0:  EndSwitch
  9A8:  Call     SetAnimation 	( .Actor:Player 00000000 00010002 )
  9C0:  Call     PlayerTestEnemy 	( *Var[3] 10000040 00000019 00000000 00000000 00000010 )
  9E4:  If  *Var[3]  ==  00000006 
  9F4:  	Call     802D3EB8 ( *Var[A] )
  A04:  	Call     802D3624 ( *Var[A] )
  A14:  	ExecWait $Script_802A1A64 
  A20:  	Return
  A28:  EndIf
  A30:  Thread
  A38:  	Call     80276EB4 ( *Var[3] )
  A48:  	Switch  *Var[3] 
  A54:  		Case  >  00000000 
  A60:  			Call     802D39FC ( *Var[A] *Fixed[1.4003906] )
  A74:  			Add  *Var[0]  0000003C 
  A84:  			Add  *Var[1]  00000000 
  A94:  			Call     802D3C58 ( *Var[A] *Var[0] *Var[1] *Var[2] 0000000A )
  AB4:  			Call     802D3624 ( *Var[A] )
  AC4:  		Default
  ACC:  			Call     802D39FC ( *Var[A] *Fixed[0.80078125] )
  AE0:  			Add  *Var[0]  00000028 
  AF0:  			Add  *Var[1]  00000000 
  B00:  			Call     802D3C58 ( *Var[A] *Var[0] *Var[1] *Var[2] 0000000F )
  B20:  			Call     802D3624 ( *Var[A] )
  B30:  	EndSwitch
  B38:  EndThread
  B40:  Call     80276EB4 ( *Var[0] )
  B50:  Switch  *Var[0] 
  B5C:  	Case  >  00000000 
  B68:  		Call     GetMenuSelection 	( *Var[0] *Var[1] *Var[2] )
  B80:  		Switch  *Var[1] 
  B8C:  			Case  ==  00000000 
  B98:  				Call     80254218 ( 00000007 )
  BA8:  				Thread
  BB0:  					Call     ShakeCam    	( 00000001 00000000 0000000A *Fixed[1.3007812] )
  BCC:  				EndThread
  BD4:  			Case  ==  00000001 
  BE0:  				Call     80254218 ( 00000008 )
  BF0:  				Thread
  BF8:  					Call     ShakeCam    	( 00000001 00000000 0000000A *Fixed[1.6005859] )
  C14:  				EndThread
  C1C:  			Case  ==  00000002 
  C28:  				Call     80254218 ( 00000009 )
  C38:  				Thread
  C40:  					Call     ShakeCam    	( 00000001 00000000 0000000A *Fixed[1.9003906] )
  C5C:  				EndThread
  C64:  		EndSwitch
  C6C:  	Default
  C74:  		Call     GetMenuSelection 	( *Var[0] *Var[1] *Var[2] )
  C8C:  		Switch  *Var[1] 
  C98:  			Case  ==  00000000 
  CA4:  				Call     80254218 ( 00000007 )
  CB4:  				Thread
  CBC:  					Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[1.3007812] )
  CD8:  				EndThread
  CE0:  			Case  ==  00000001 
  CEC:  				Call     80254218 ( 00000008 )
  CFC:  				Thread
  D04:  					Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[1.6005859] )
  D20:  				EndThread
  D28:  			Case  ==  00000002 
  D34:  				Call     80254218 ( 00000009 )
  D44:  				Thread
  D4C:  					Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[1.9003906] )
  D68:  				EndThread
  D70:  		EndSwitch
  D78:  EndSwitch
  D80:  Call     UseBattleCamPreset 	( 0000002C )
  D90:  Call     MoveBattleCamOver 	( 0000000A )
  DA0:  Call     GetMenuSelection 	( *Var[0] *Var[1] *Var[2] )
  DB8:  Switch  *Var[1] 
  DC4:  	Case  ==  00000000 
  DD0:  		Call     PlaySoundAtActor 	( .Actor:Player 0000210A )
  DE4:  	Case  ==  00000001 
  DF0:  		Call     PlaySoundAtActor 	( .Actor:Player 0000210B )
  E04:  	Case  ==  00000002 
  E10:  		Call     PlaySoundAtActor 	( .Actor:Player 0000210C )
  E24:  EndSwitch
  E2C:  Call     80276EB4 ( *Var[0] )
  E3C:  Switch  *Var[0] 
  E48:  	Case  >  00000000 
  E54:  		Call     GetMenuSelection 	( *Var[0] *Var[1] *Var[2] )
  E6C:  		Switch  *Var[1] 
  E78:  			Case  ==  00000000 
  E84:  				Call     PlaySoundAtActor 	( .Actor:Player 000000E9 )
  E98:  			Case  ==  00000001 
  EA4:  				Call     PlaySoundAtActor 	( .Actor:Player 0000010E )
  EB8:  			Case  ==  00000002 
  EC4:  				Call     PlaySoundAtActor 	( .Actor:Player 0000010E )
  ED8:  		EndSwitch
  EE0:  		Call     PlayerDamageEnemy 	( *Var[0] 10040000 00000019 00000000 *Var[F] 00000050 ) %I think that the 2 flag specified if this is the final hit of the move
				Wait	15`
				Call	$Function_ThunderFX ( ) 
				Call     ItemDamageEnemy 	( *Var[9] 18000020 80010232 00000003 00000020 ) %don't make this affected by hammer charging
				%Call     PlayerDamageEnemy 	( *Var[0] 18000020 00000000 00000000 00000002 00000070 ) 
  F04:  	Default
  F0C:  		Call     GetMenuSelection 	( *Var[0] *Var[1] *Var[2] )
  F24:  		Switch  *Var[1] 
  F30:  			Case  ==  00000000 
  F3C:  				Call     PlaySoundAtActor 	( .Actor:Player 000000E9 )
  F50:  			Case  ==  00000001 
  F5C:  				Call     PlaySoundAtActor 	( .Actor:Player 0000010E )
  F70:  			Case  ==  00000002 
  F7C:  				Call     PlaySoundAtActor 	( .Actor:Player 0000010E )
  F90:  		EndSwitch
  F98:  		Call     PlayerDamageEnemy 	( *Var[0] 10040000 00000019 00000000 *Var[E] 00000030 )
  FBC:  EndSwitch
  FC4:  Switch  *Var[0] 
  FD0:  	CaseOR  ==  00000001 
  FDC:  	CaseOR  ==  00000003 
  FE8:  		ExecWait $Script_802A18AC 
  FF4:  	EndCaseGroup
  FFC:  	CaseOR  ==  00000000 
 1008:  	CaseOR  ==  00000002 
 1014:  		ExecWait $Script_802A1A64 
 1020:  	EndCaseGroup
 1028:  EndSwitch
 1030:  Return
 1038:  End
}
%/

#new:Script $Script_PreThrowHammer
{
    0:  Call  SetGoalToTarget   ( .Actor:Player )
   10:  Call  AddGoalPos        ( .Actor:Player 00000000 00000000 00000000 )
   2C:  Set   *Var1  00000000
   3C:  Loop  0000000A
   48:  	Call  CheckButtonDown   ( 00040000 *Var0 )
   5C:  	If  *Var0  ==  .True
   6C:  		Call  SetAnimation  ( .Actor:Player 00000000 00010002 )
   84:  		BreakLoop
   8C:  	EndIf
   94:  	Wait  1`
   A0:  	Add   *Var1  00000001
   B0:  	Call  SetAnimation  ( .Actor:Player 00000000 00040016 )
   C8:  EndLoop
   D0:  Call  SetAnimation  ( .Actor:Player 00000000 00040016 )
   E8:  Switch  *Var1
   F4:  	Case  <  00000003
  100:  		Wait  4`
  10C:  	Case  <  00000005
  118:  		Wait  3`
  124:  	Case  <  00000007
  130:  		Wait  2`
  13C:  	Case  <  00000009
  148:  		Wait  1`
  154:  	Case  <  0000000B
  160:  		Wait  00000000
  16C:  EndSwitch
  174:  Return
  17C:  End
}

#new:Script $Script_PreThrowSHammer
{
    0:  Call  SetGoalToTarget   ( .Actor:Player )
   10:  Call  AddGoalPos        ( .Actor:Player 00000000 00000000 00000000 )
   2C:  Set   *Var1  00000000
   3C:  Loop  0000000A
   48:  	Call  CheckButtonDown   ( 00040000 *Var0 )
   5C:  	If  *Var0  ==  .True
   6C:  		Call  SetAnimation  ( .Actor:Player 00000000 00010002 )
   84:  		BreakLoop
   8C:  	EndIf
   94:  	Wait  1`
   A0:  	Add   *Var1  00000001
   B0:  	Call  SetAnimation  ( .Actor:Player 00000000 0004001C )
   C8:  EndLoop
   D0:  Call  SetAnimation  ( .Actor:Player 00000000 0004001C )
   E8:  Switch  *Var1
   F4:  	Case  <  00000003
  100:  		Wait  4`
  10C:  	Case  <  00000005
  118:  		Wait  3`
  124:  	Case  <  00000007
  130:  		Wait  2`
  13C:  	Case  <  00000009
  148:  		Wait  1`
  154:  	Case  <  0000000B
  160:  		Wait  00000000
  16C:  EndSwitch
  174:  Return
  17C:  End
}

#new:Script $Script_PreThrowUHammer
{
    0:  Call  SetGoalToTarget   ( .Actor:Player )
   10:  Call  AddGoalPos        ( .Actor:Player 00000000 00000000 00000000 )
   2C:  Set   *Var1  00000000
   3C:  Loop  0000000A
   48:  	Call  CheckButtonDown   ( 00040000 *Var0 )
   5C:  	If  *Var0  ==  .True
   6C:  		Call  SetAnimation  ( .Actor:Player 00000000 00010002 )
   84:  		BreakLoop
   8C:  	EndIf
   94:  	Wait  1`
   A0:  	Add   *Var1  00000001
   B0:  	Call  SetAnimation  ( .Actor:Player 00000000 00040022 )
   C8:  EndLoop
   D0:  Call  SetAnimation  ( .Actor:Player 00000000 00040022 )
   E8:  Switch  *Var1
   F4:  	Case  <  00000003
  100:  		Wait  4`
  10C:  	Case  <  00000005
  118:  		Wait  3`
  124:  	Case  <  00000007
  130:  		Wait  2`
  13C:  	Case  <  00000009
  148:  		Wait  1`
  154:  	Case  <  0000000B
  160:  		Wait  00000000
  16C:  EndSwitch
  174:  Return
  17C:  End
}