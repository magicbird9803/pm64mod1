@ $Function_802A1108
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 1C (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 24 (SP)
   10:  SW        S2, 20 (SP)
   14:  SW        S0, 18 (SP)
   18:  LW        S0, C (S1)
   1C:  LW        A1, 0 (S0)
   20:  JAL       ~Func:get_variable
   24:  ADDIU     S0, S0, 4
   28:  LW        A1, 0 (S0)
   2C:  ADDIU     S0, S0, 4
   30:  DADDU     A0, S1, R0
   34:  JAL       ~Func:get_variable
   38:  DADDU     S2, V0, R0
   3C:  DADDU     A0, S1, R0
   40:  LW        A1, 0 (S0)
   44:  JAL       ~Func:get_variable
   48:  DADDU     S0, V0, R0
   4C:  ADDIU     A0, R0, 2
   50:  MTC1      S2, F2
   54:  NOP
   58:  CVT.S.W   F2, F2
   5C:  MFC1      A1, F2
   60:  MTC1      S0, F2
   64:  NOP
   68:  CVT.S.W   F2, F2
   6C:  MFC1      A2, F2
   70:  MTC1      V0, F2
   74:  NOP
   78:  CVT.S.W   F2, F2
   7C:  LIF       F0, 1.0
   84:  MFC1      A3, F2
   88:  ADDIU     V1, R0, 3C
   8C:  SW        V1, 14 (SP)
   90:  JAL       800718D0
   94:  SWC1      F0, 10 (SP)
   98:  LIA       A0, $End[0]
   A0:  LIA       S0, 800DC070
   A8:  SW        R0, 0 (A0)
   AC:  LB        V0, 97 (S0)
   B0:  LBU       V1, 97 (S0)
   B4:  BLEZ      V0, .oC4
   B8:  DADDU     S1, S0, R0
   BC:  ADDIU     V0, R0, 1
   C0:  SW        V0, 0 (A0)
        .oC4
   C4:  ADDIU     V0, V1, 6 %charge 6
   C8:  SB        V0, 97 (S0)
   CC:  SLL       V0, V0, 18
   D0:  SRA       V0, V0, 18
   D4:  SLTI      V0, V0, 64
   D8:  BNE       V0, R0, .oE8
   DC:  LUI       V1, EFFF
   E0:  ADDIU     V0, R0, 63
   E4:  SB        V0, 97 (S0)
        .oE8
   E8:  ORI       V1, V1, FFFF
   EC:  LW        A0, 0 (S1)
   F0:  LUI       A1, 2000
   F4:  SB        R0, 96 (S1)
   F8:  OR        A0, A0, A1
   FC:  AND       A0, A0, V1
  100:  SW        A0, 0 (S1)
  104:  LW        RA, 24 (SP)
  108:  LW        S2, 20 (SP)
  10C:  LW        S1, 1C (SP)
  110:  LW        S0, 18 (SP)
  114:  ADDIU     V0, R0, 2
  118:  JR        RA
  11C:  ADDIU     SP, SP, 28
}

% Change maximum charge to +6
@ $Function_802A10E4
{
    0:  SW        R0, 84 (A0)
    4:  LAB       V0, 800DC107
    C:  SLTI      V0, V0, 1		% was 63
   10:  BNE       V0, R0, .o1C
   14:  ADDIU     V0, R0, 1
   18:  SW        V0, 84 (A0)
        .o1C
   1C:  JR        RA
   20: ADDIU V0, R0, 2
}
   
#new:Function $Function_802A133C
{
    0:  LAW       V0, $End[0]
    8:  BNEL      V0, R0, .o14
    C:  ADDIU     V0, R0, 7
   10:  ADDIU     V0, R0, 6
        .o14
   14:  SW        V0, 84 (A0)
   18:  JR        RA
   1C:  ADDIU     V0, R0, 2
}
   
%Make it blue ish
@ $Function_802A120C
{
    0:  ADDIU     SP, SP, FFB0
    4:  SW        S2, 20 (SP)
    8:  COPY      S2, A0
    C:  SW        RA, 28 (SP)
   10:  SW        S3, 24 (SP)
   14:  SW        S1, 1C (SP)
   18:  SW        S0, 18 (SP)
   1C:  SDC1      F26, 48 (SP)
   20:  SDC1      F24, 40 (SP)
   24:  SDC1      F22, 38 (SP)
   28:  SDC1      F20, 30 (SP)
   2C:  LW        S0, C (S2)
   30:  LW        A1, 0 (S0)
   34:  JAL       ~Func:get_variable
   38:  ADDIU     S0, S0, 4
   3C:  LW        A1, 0 (S0)
   40:  ADDIU     S0, S0, 4
   44:  COPY      A0, S2
   48:  JAL       ~Func:get_variable
   4C:  COPY      S3, V0
   50:  LW        A1, 0 (S0)
   54:  ADDIU     S0, S0, 4
   58:  COPY      A0, S2
   5C:  JAL       ~Func:get_variable
   60:  COPY      S1, V0
   64:  COPY      A0, S2
   68:  LW        A1, 0 (S0)
   6C:  JAL       ~Func:get_float_variable
   70:  COPY      S0, V0
   74:  LI        A0, 6
   78:  ADDIU     S3, S3, A
   7C:  MTC1      S3, F26
   80:  NOP
   84:  CVT.S.W   F26, F26
   88:  ADDIU     S1, S1, 12
   8C:  MTC1      S1, F24
   90:  NOP
   94:  CVT.S.W   F24, F24
   98:  MTC1      S0, F20
   9C:  NOP
   A0:  CVT.S.W   F20, F20
   A4:  MOV.S     F22, F0
   A8:  MFC1      A1, F26
   AC:  MFC1      A2, F24
   B0:  MFC1      A3, F20
   B4:  LI        V0, 2D
   B8:  SWC1      F22, 10 (SP)
   BC:  JAL       800720B0
   C0:  SW        V0, 14 (SP)
   C4:  LI        A0, D
   C8:  MFC1      A1, F26
   CC:  MFC1      A2, F24
   D0:  MFC1      A3, F20
   D4:  LI        V0, 1E
   D8:  SWC1      F22, 10 (SP)
   DC:  JAL       80070BB0
   E0:  SW        V0, 14 (SP)
		LW        V1, C (V0)
		ADDIU     A0, R0, 80                %R
		SB        A0, 68 (V1)
		LW        V1, C (V0)
        ADDIU     A0, R0, E0                %G
		SB        A0, 69 (V1)
		LW        V1, C (V0)
		ADDIU     A1, R0, FF                %B
		SB        A1, 6A (V1)
		LW        A0, C (V0)
		ADDIU     V1, R0, FF                %R 2
		SB        V1, 6B (A0)
		LW        A0, C (V0)
		ADDIU     V1, R0, FF                %G 2
		SB        V1, 6C (A0)
		LW        V1, C (V0)
        ADDIU     A1, R0, FF                %B 2
		SB        A1, 6D (V1)
   E4:  LW        RA, 28 (SP)
   E8:  LW        S3, 24 (SP)
   EC:  LW        S2, 20 (SP)
   F0:  LW        S1, 1C (SP)
   F4:  LW        S0, 18 (SP)
   F8:  LDC1      F26, 48 (SP)
   FC:  LDC1      F24, 40 (SP)
  100:  LDC1      F22, 38 (SP)
  104:  LDC1      F20, 30 (SP)
  108:  LI        V0, 2
  10C:  JR        RA
  110:  ADDIU     SP, SP, 50
}

@ $Script_UseMove0
{
    0:  Call     UseBattleCamPreset 	( 00000020 )
   10:  Wait     0000000A 
   1C:  ChildThread
   24:  	Call     PlaySoundAtActor 	( .Actor:Player 00000156 )
   38:  	Wait     00000008 
   44:  	Call     PlaySoundAtActor 	( .Actor:Player 00000156 )
   58:  	Wait     00000008 
   64:  EndChildThread
   6C:  Call     SetAnimation 	( .Actor:Player 00000000 00010020 )
   84:  Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
   A0:  Call     $Function_802A120C ( *Var[0] *Var[1] *Var[2] *Fixed[1.2001953] )
   BC:  Wait     00000003 
   C8:  Call     $Function_802A120C ( *Var[0] *Var[1] *Var[2] *Fixed[0.80078125] )
   E4:  Wait     0000001E 
   F0:  Call     UseBattleCamPreset 	( 00000002 )
  100:  Call     MoveBattleCamOver 	( 00000005 )
  110:  Call     $Function_802A10E4 ( )
  11C:  If  *Var[0]  ==  00000000 
  12C:  	Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  148:  	Add  *Var[0]  0000000A 
  158:  	Add  *Var[1]  00000019 
  168:  	Add  *Var[2]  00000005 
  178:  	Call     $Function_802A1108 ( *Var[0] *Var[1] *Var[2] )
  190:  	Call     PlaySoundAtActor 	( .Actor:Player 0000208F )
  1A4:  	Wait     00000004 
  1B0:  	Call     PlaySoundAtActor 	( .Actor:Player 00000160 )
  1C4:  	Call     SetActorJumpGravity 	( .Actor:Player *Fixed[1.0] )
  1D8:  	Call     SetActorSpeed 	( .Actor:Player *Fixed[1.0] )
  1EC:  	Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  208:  	Call     SetJumpAnimations 	( .Actor:Player 00000000 00010007 00010008 00010009 )
  228:  	Call     SetGoalPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  244:  	Call     80273444 ( 00000014 00000000 00000000 )
  25C:  	Call     SetAnimation 	( .Actor:Player 00000000 00010009 )
  274:  	Wait     00000004 
  280:  	Call     SetAnimation 	( .Actor:Player 00000000 00010002 )
  298:  	Call     $Function_802A133C ( )
  2A4:  	Call     ShowVariableMessageBox 	( *Var[0] 0000003C 00000006 )
  2BC:  Else
    		%charging is illegal
  2C4:  	Call     ShowMessageBox ( 00000008 0000003C )
			Call $FreeTurn ( ) 
  2D8:  EndIf
  2E0:  Label    00000000 
  2EC:  Wait     00000001 
  2F8:  Call     80251384 ( *Var[0] )
  308:  If  *Var[0]  ==  00000001 
  318:  	Goto     00000000 
  324:  EndIf
  32C:  Call     SetGoalToHome 	( .Actor:Player )
  33C:  Call     SetActorSpeed 	( .Actor:Player *Fixed[8.0] )
  350:  Call     SetAnimation 	( .Actor:Player 00000000 00010005 )
  368:  Call     80273C64 ( 00000000 )
  378:  Call     SetAnimation 	( .Actor:Player 00000000 00010002 )
  390:  Return
  398:  End
}



%This file is shared with Paralyzing Stomp
/%
@ $Script_UseMove1
{
    0:  Return
    8:  End
}
%/


% Script File: Move_DizzyStomp.bscr
% Decoded from: 748DD0 to 74AD90 (Move_DizzyStomp)

#new:Function $Function_802A1000_B
{
    0:  ADDIU     SP, SP, FFD8
    4:  LA        V1, 800DC070
    C:  SW        RA, 20 (SP)
   10:  SW        S1, 1C (SP)
   14:  SW        S0, 18 (SP)
   18:  LW        V0, D8 (V1)
   1C:  COPY      S0, A0
   20:  LWC1      F2, 1C (V0)
   24:  LWC1      F12, 144 (V0)
   28:  LWC1      F14, 148 (V0)
   2C:  LWC1      F4, 14C (V0)
   30:  LWC1      F6, 18 (V0)
   34:  LWC1      F0, 20 (V0)
   38:  MFC1      A2, F4
   3C:  MFC1      A3, F6
   40:  COPY      S1, V1
   44:  SWC1      F2, 10 (SP)
   48:  JAL       ~Func:dist3D
   4C:  SWC1      F0, 14 (SP)
   50:  LIF       F2, 15.0
   58:  NOP
   5C:  MUL.S     F0, F0, F2
   60:  NOP
   64:  LIF       F2, 100.0
   6C:  NOP
   70:  DIV.S     F0, F0, F2
   74:  TRUNC.W.S F8, F0
   78:  MFC1      V0, F8
   7C:  NOP
   80:  SW        V0, 84 (S0)
   84:  SLTI      V0, V0, 15
   88:  BNE       V0, R0, .o94
   8C:  LI        V0, 14
   90:  SW        V0, 84 (S0)
        .o94
   94:  LB        V0, 83 (S1)
   98:  BEQ       V0, R0, .oB8
   9C:  NOP
   A0:  LW        V0, 84 (S0)
   A4:  SLTI      V0, V0, 6
   A8:  BEQ       V0, R0, .oCC
   AC:  LI        V0, 6
   B0:  BEQ       R0, R0, .oCC
   B4:  SW        V0, 84 (S0)
        .oB8
   B8:  LW        V0, 84 (S0)
   BC:  SLTI      V0, V0, C
   C0:  BEQ       V0, R0, .oCC
   C4:  LI        V0, C
   C8:  SW        V0, 84 (S0)
        .oCC
   CC:  LW        RA, 20 (SP)
   D0:  LW        S1, 1C (SP)
   D4:  LW        S0, 18 (SP)
   D8:  LI        V0, 2
   DC:  JR        RA
   E0:  ADDIU     SP, SP, 28
}

#new:Script $Script_802A1130
{
    0:  Call  SetAnimation  ( .Actor:Player 00000000 00010006 )
   18:  Loop  00000005
   24:  	Call  CheckButtonPress  ( ~Flags:Buttons:A *Var0 )
   38:  	If  *Var0  ==  .True
   48:  		BreakLoop
   50:  	EndIf
   58:  	Wait  1`
   64:  EndLoop
   6C:  Return
   74:  End
}

#new:Script $Script_802A11AC
{
    0:  Call  SetGoalToFirstTarget  ( .Actor:Self )
   10:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
   2C:  Sub   *Var0  00000028
   3C:  Call  InitTargetIterator ( )
   48:  Call  SetGoalToTarget   ( .Actor:Player )
   58:  Call  GetGoalPos        ( .Actor:Player *Var3 *Var4 *Var5 )
   74:  Sub   *Var3  *Fixed[70.0]
   84:  If  *Var0  <  *Var3
   94:  	Set   *Var3  *Var0
   A4:  EndIf
   AC:  Call  SetGoalPos    ( .Actor:Player *Var3 *Var4 *Var5 )
   C8:  Call  UseBattleCamPreset        ( 0000001A )
   D8:  Call  SetActorSpeed ( .Actor:Player *Fixed[5.0] )
   EC:  Call  SetAnimation  ( .Actor:Player 00000000 00010005 )
  104:  Call  CancelablePlayerRunToGoal ( 00000000 *Var0 )
  118:  Call  SetAnimation  ( .Actor:Player 00000000 00010002 )
  130:  Call  SetGoalToTarget   ( .Actor:Player )
  140:  ExecWait  $Script_802A1130
  14C:  Call  SetAnimation  ( .Actor:Player 00000000 00010006 )
  164:  Return
  16C:  End
}

#new:Script $Script_802A1320_B
{
    0:  Call  SetGoalToTarget   ( .Actor:Player )
   10:  Call  GetGoalPos        ( .Actor:Player *Var6 *Var7 *Var8 )
   2C:  Call  GetActorPos       ( .Actor:Player *Var7 *Var8 *Var9 )
   48:  If  *Var6  >  *Var7
   58:  	Sub   *Var6  *Var7
   68:  Else
   70:  	Sub   *Var7  *Var6
   80:  	Set   *Var6  *Var7
   90:  EndIf
   98:  Sub   *Var6  00000014
   A8:  DivF  *Var6  *Fixed[10.588867]
   B8:  AddF  *Var6  0000000F
   C8:  Set   *VarA  *Var6
   D8:  Return
   E0:  End
}

#new:Script $Script_802A15D8
{
    0:  Call  80276EFC ( )
    C:  Call  SetBattleFlagBits ( 00000100 .False )
   20:  Call  UseBattleCamPreset    ( 00000003 )
   30:  Call  802693F0 ( )
   3C:  Call  SetGoalToHome ( .Actor:Player )
   4C:  Call  GetGoalPos    ( .Actor:Player *Var0 *Var1 *Var2 )
   68:  Add   *Var0  00000028
   78:  Call  SetJumpAnimations ( .Actor:Player 00000000 00010007 00010008 00010009 )
   98:  Call  SetActorJumpGravity   ( .Actor:Player *Fixed[1.3] )
   AC:  Call  SetGoalPos    ( .Actor:Player *Var0 *Var1 *Var2 )
   C8:  Call  $Function_802A1000_B ( )
   D4:  Call  80273444      ( *Var0 00000000 00000000 )
   EC:  Call  SetAnimation  ( .Actor:Player 00000000 00010009 )
  104:  Wait  1`
  110:  Call  AddGoalPos    ( .Actor:Player FFFFFFEC 00000000 00000000 )
  12C:  Call  80273444      ( 00000006 00000000 00000002 )
  144:  Call  SetAnimation  ( .Actor:Player 00000000 00010009 )
  15C:  Wait  5`
  168:  Call  EnablePlayerBlur  ( FFFFFFFF )
  178:  Call  SetGoalToHome ( .Actor:Player )
  188:  Call  SetActorSpeed ( .Actor:Player *Fixed[8.0] )
  19C:  Call  SetAnimation  ( .Actor:Player 00000000 00010005 )
  1B4:  Call  PlayerRunToGoal   ( 00000000 )
  1C4:  Call  SetAnimation  ( .Actor:Player 00000000 00010002 )
  1DC:  Return
  1E4:  End
}

#new:Script $Script_802A19B0
{
    0:  Call  80276EFC ( )
    C:  Call  SetBattleFlagBits ( 00000100 .False )
   20:  Call  UseBattleCamPreset    ( 0000001D )
   30:  Call  802693F0 ( )
   3C:  Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
   58:  Sub   *Var0  00000028
   68:  Set   *Var1  00000000
   78:  Call  SetGoalPos    ( .Actor:Player *Var0 *Var1 *Var2 )
   94:  Call  SetJumpAnimations ( .Actor:Player 00000000 00010007 00010008 00010009 )
   B4:  Call  SetActorJumpGravity   ( .Actor:Player *Fixed[1.0] )
   C8:  Call  $Function_802A1000_B ( )
   D4:  Call  80273444      ( *Var0 00000000 00000000 )
   EC:  Call  SetAnimation  ( .Actor:Player 00000000 00010009 )
  104:  Wait  1`
  110:  Call  AddGoalPos    ( .Actor:Player FFFFFFEC 00000000 00000000 )
  12C:  Call  80273444      ( 00000006 00000000 00000002 )
  144:  Call  SetAnimation  ( .Actor:Player 00000000 00010009 )
  15C:  Wait  2`
  168:  Call  EnablePlayerBlur  ( FFFFFFFF )
  178:  Call  SetGoalToHome ( .Actor:Player )
  188:  Call  SetActorSpeed ( .Actor:Player *Fixed[8.0] )
  19C:  Call  SetAnimation  ( .Actor:Player 00000000 00010005 )
  1B4:  Call  PlayerRunToGoal   ( 00000000 )
  1C4:  Call  SetAnimation  ( .Actor:Player 00000000 00010002 )
  1DC:  Return
  1E4:  End
}

#new:Script $Script_802A1FEC
{
    0:  Call  SetJumpAnimations ( .Actor:Player 00000000 00000000 00000000 0001000C )
   20:  Call  PlayerLandJump ( )
   2C:  Call  SetAnimation      ( .Actor:Player 00000000 0001000C )
   44:  Wait  2`
   50:  ChildThread
   58:  	Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[1.0] )
   74:  EndChildThread
   7C:  Call  PlaySoundAtActor  ( .Actor:Player 00000162 )
   90:  Call  SetAnimation      ( .Actor:Player 00000000 00010030 )
   A8:  Wait  10`
   B4:  Call  SetAnimation      ( .Actor:Player 00000000 00010031 )
   CC:  Wait  20`
   D8:  Call  SetBattleFlagBits ( 00000100 .False )
   EC:  Call  UseBattleCamPreset    ( 00000003 )
   FC:  Call  802693F0 ( )
  108:  Call  EnablePlayerBlur  ( FFFFFFFF )
  118:  Call  80276EFC ( )
  124:  Call  SetGoalToHome     ( .Actor:Player )
  134:  Call  SetActorSpeed     ( .Actor:Player *Fixed[8.0] )
  148:  Call  SetAnimation      ( .Actor:Player 00000000 00010005 )
  160:  Call  PlayerRunToGoal   ( 00000000 )
  170:  Call  SetAnimation      ( .Actor:Player 00000000 00010002 )
  188:  Return
  190:  End
}

#new:Script $Script_802A2184
{
    0:  Call  LoadActionCommand ( .ActionCommand:Jump )
   10:  Call  802A9000 ( )
   1C:  ExecWait  $Script_802A11AC
   28:  ExecWait  $Script_802A1320_B
   34:  Call  802A9120  ( *VarA 00000003 )
   48:  Call  UseBattleCamPreset    ( 00000022 )
   58:  Call  SetGoalToTarget   ( .Actor:Player )
   68:  Call  SetJumpAnimations ( .Actor:Player 00000000 00010007 00010008 00030000 )
   88:  Call  80274A18  ( *VarA 00000000 )
   9C:  Return
   A4:  End
}

%attach this to the existing script
@ $Script_UseMove1
{
    0:  Call  802694A4  ( 00000001 )
   10:  Call  GetMenuSelection  ( *Var0 *Var1 *Var2 )
   28:  Switch  *Var1
   34:  	Case  ==  00000000 % 0
   40:  		ExecWait  $Script_802A2694
   4C:  	Case  ==  00000001 % 1
   58:  		ExecWait  $Script_802A2980
   64:  	Case  ==  00000002 % 2
   70:  		ExecWait  $Script_802A2CAC
   7C:  EndSwitch
   84:  Return
   8C:  End
}

#new:Script $Script_802A2694
{
    0:  ExecWait  $Script_802A2184
    C:  Call  PlayerTestEnemy   ( *Var0 ~Flags:DamageType:Jump 00000000 00000000 00000001 00000000 )
   30:  If  *Var0  ==  .HitResult:Miss % 6
   40:  	ExecWait  $Script_802A1FEC
   4C:  	Return
   54:  EndIf
   5C:  Wait  1`
   68:  Call  DidActionSucceed  ( *Var0 )
   78:  Switch  *Var0
   84:  	Case  >  .False
   90:  		Call  SetActorSounds    ( .Actor:Player .ActorSound:Hurt 0000015A 00000000 )
   AC:  		Call  PlayerDamageEnemy ( *Var0 ~Flags:DamageType:Jump 00000000 8001034B 00000001 00000050 )
   D0:  	Default
   D8:  		Call  SetActorSounds    ( .Actor:Player .ActorSound:Hurt 0000015A 00000000 )
   F4:  		Call  PlayerDamageEnemy ( *Var0 ~Flags:DamageType:Jump 00000000 8001034B 00000001 00000030 )
  118:  EndSwitch
  120:  Switch  *Var0
  12C:  	CaseOR  ==  .HitResult:Hit % 0
  138:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  144:  		ExecWait  $Script_802A19B0
  150:  		Return
  158:  	EndCaseGroup
  160:  	CaseOR  ==  00000001 % 1
  16C:  	CaseOR  ==  00000003 % 3
  178:  	EndCaseGroup
  180:  EndSwitch
  188:  ChildThread
  190:  	Call  UseBattleCamPreset    ( 0000001B )
  1A0:  	Wait  5`
  1AC:  	Call  SetGoalToTarget       ( .Actor:Player )
  1BC:  	Call  UseBattleCamPreset    ( 00000023 )
  1CC:  EndChildThread
  1D4:  Call  80269524  ( *VarF )
  1E4:  Call  CloseActionCommandInfo ( )
  1F0:  Call  LoadActionCommand ( .ActionCommand:Jump )
  200:  Call  802A9000 ( )
  20C:  Call  802694A4  ( 00000000 )
  21C:  Call  802A9120  ( 00000018 00000003 )
  230:  Call  SetGoalToTarget   ( .Actor:Player )
  240:  Call  SetJumpAnimations ( .Actor:Player 00000000 00010007 00010008 0001000C )
  260:  Call  80274A18  ( 00000018 00000003 )
  274:  Wait  1`
  280:  Call  SetActorSounds    ( .Actor:Player .ActorSound:Hurt 0000015A 00000000 )
  29C:  Call  PlayerDamageEnemy ( *Var0 ~Flags:DamageType:Jump 00000000 80010364 00000001 000000E0 )
  2C0:  Call  80269550  ( *VarF )
  2D0:  ExecWait  $Script_802A15D8
  2DC:  Return
  2E4:  End
}

#new:Script $Script_802A2980
{
    0:  ExecWait  $Script_802A2184
    C:  Call  PlayerTestEnemy   ( *Var0 ~Flags:DamageType:Jump 00000000 00000000 00000001 00000000 )
   30:  If  *Var0  ==  .HitResult:Miss % 6
   40:  	ExecWait  $Script_802A1FEC
   4C:  	Return
   54:  EndIf
   5C:  Wait  1`
   68:  Call  DidActionSucceed  ( *Var0 )
   78:  Switch  *Var0
   84:  	Case  >  .False
   90:  		Call  SetActorSounds    ( .Actor:Player .ActorSound:Hurt 0000015B 00000000 )
   AC:  		Call  PlayerDamageEnemy ( *Var0 ~Flags:DamageType:Jump 00000000 8001034B 00000002 00000050 )
   D0:  	Default
   D8:  		Call  SetActorSounds    ( .Actor:Player .ActorSound:Hurt 0000015B 00000000 )
   F4:  		Call  PlayerDamageEnemy ( *Var0 ~Flags:DamageType:Jump 00000000 8001034B 00000002 00000030 )
  118:  EndSwitch
  120:  Switch  *Var0
  12C:  	CaseOR  ==  .HitResult:Hit % 0
  138:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  144:  		ExecWait  $Script_802A19B0
  150:  		Return
  158:  	EndCaseGroup
  160:  	CaseOR  ==  00000001 % 1
  16C:  	CaseOR  ==  00000003 % 3
  178:  	EndCaseGroup
  180:  EndSwitch
  188:  Call  80269524  ( *VarF )
  198:  ChildThread
  1A0:  	Call  UseBattleCamPreset    ( 0000001B )
  1B0:  	Wait  5`
  1BC:  	Call  SetGoalToTarget       ( .Actor:Player )
  1CC:  	Call  UseBattleCamPreset    ( 00000023 )
  1DC:  EndChildThread
  1E4:  Call  CloseActionCommandInfo ( )
  1F0:  Call  LoadActionCommand ( .ActionCommand:Jump )
  200:  Call  802A9000 ( )
  20C:  Call  802694A4  ( 00000000 )
  21C:  Call  802A9120  ( 00000025 00000003 )
  230:  Call  SetGoalToTarget   ( .Actor:Player )
  240:  Call  EnablePlayerBlur  ( 00000001 )
  250:  Call  SetJumpAnimations ( .Actor:Player 00000000 00010007 0001000A 0001000B )
  270:  Call  802752AC  ( 00000014 00000004 )
  284:  Wait  7`
  290:  Call  802752AC  ( 00000003 00000005 )
  2A4:  Call  EnablePlayerBlur  ( 00000000 )
  2B4:  Wait  1`
  2C0:  Call  SetActorSounds    ( .Actor:Player .ActorSound:Hurt 0000015B 00000000 )
  2DC:  Call  PlayerDamageEnemy ( *Var0 ~Flags:DamageType:Jump 00000000 80010364 00000002 000000E0 )
  300:  Call  80269550  ( *VarF )
  310:  ExecWait  $Script_802A15D8
  31C:  Return
  324:  End
}

#new:Script $Script_802A2CAC
{
    0:  ExecWait  $Script_802A2184
    C:  Call  PlayerTestEnemy   ( *Var0 ~Flags:DamageType:Jump 00000000 00000000 00000001 00000000 )
   30:  If  *Var0  ==  .HitResult:Miss % 6
   40:  	ExecWait  $Script_802A1FEC
   4C:  	Return
   54:  EndIf
   5C:  Wait  1`
   68:  Call  DidActionSucceed  ( *Var0 )
   78:  Switch  *Var0
   84:  	Case  >  .False
   90:  		Call  SetActorSounds    ( .Actor:Player .ActorSound:Hurt 0000015C 00000000 )
   AC:  		Call  PlayerDamageEnemy ( *Var0 ~Flags:DamageType:Jump 00000000 8001034B 00000003 00000050 )
   D0:  	Default
   D8:  		Call  SetActorSounds    ( .Actor:Player .ActorSound:Hurt 0000015C 00000000 )
   F4:  		Call  PlayerDamageEnemy ( *Var0 ~Flags:DamageType:Jump 00000000 8001034B 00000003 00000030 )
  118:  EndSwitch
  120:  Switch  *Var0
  12C:  	CaseOR  ==  .HitResult:Hit % 0
  138:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  144:  		ExecWait  $Script_802A19B0
  150:  		Return
  158:  	EndCaseGroup
  160:  	CaseOR  ==  00000001 % 1
  16C:  	CaseOR  ==  00000003 % 3
  178:  	EndCaseGroup
  180:  EndSwitch
  188:  Call  80269524  ( *VarF )
  198:  ChildThread
  1A0:  	Call  UseBattleCamPreset    ( 0000001C )
  1B0:  	Wait  5`
  1BC:  	Call  SetGoalToTarget       ( .Actor:Player )
  1CC:  	Call  UseBattleCamPreset    ( 00000023 )
  1DC:  EndChildThread
  1E4:  Call  CloseActionCommandInfo ( )
  1F0:  Call  LoadActionCommand ( .ActionCommand:Jump )
  200:  Call  802A9000 ( )
  20C:  Call  802694A4  ( 00000000 )
  21C:  Call  802A9120  ( 00000019 00000003 )
  230:  Call  SetGoalToTarget   ( .Actor:Player )
  240:  Call  EnablePlayerBlur  ( 00000001 )
  250:  Call  SetJumpAnimations ( .Actor:Player 00000000 00010007 00010007 0001000C )
  270:  Call  80275F00  ( 00000019 00000004 )
  284:  Call  EnablePlayerBlur  ( 00000000 )
  294:  Wait  1`
  2A0:  Call  SetActorSounds    ( .Actor:Player .ActorSound:Hurt 0000015C 00000000 )
  2BC:  Call  PlayerDamageEnemy ( *Var0 ~Flags:DamageType:Jump 00000000 80010364 00000003 000000E0 )
  2E0:  Call  80269550  ( *VarF )
  2F0:  ExecWait  $Script_802A15D8
  2FC:  Return
  304:  End
}

