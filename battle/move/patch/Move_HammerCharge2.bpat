@ $Function_802A10A4
{
    0:  SW			R0, 84 (A0)
    4:  LAB			V0, 800DC106
    C:  SLTI		V0, V0, 4 %63 -> 5	(can only charge if charge is below 4 so that the limit is 6)
   10:  BNE			V0, R0, .o1C
   14:  ADDIU		V0, R0, 1
   18:  SW			V0, 84 (A0)
        .o1C
   1C:  JR			RA
   20:  ADDIU		V0, R0, 2
}

@ $Function_802A11E8
{
    0:  ADDIU     SP, SP, FFB0
    4:  SW        S2, 20 (SP)
    8:  COPY      S2, A0
    C:  SW        RA, 28 (SP)
   10:  SW        S3, 24 (SP)
   14:  SW        S1, 1C (SP)
   18:  SW        S0, 18 (SP)
   1C:  SDC1      F26, 48 (SP)
   20:  SDC1      F24, 40 (SP)
   24:  SDC1      F22, 38 (SP)
   28:  SDC1      F20, 30 (SP)
   2C:  LW        S0, C (S2)
   30:  LW        A1, 0 (S0)
   34:  JAL       ~Func:get_variable
   38:  ADDIU     S0, S0, 4
   3C:  LW        A1, 0 (S0)
   40:  ADDIU     S0, S0, 4
   44:  COPY      A0, S2
   48:  JAL       ~Func:get_variable
   4C:  COPY      S3, V0
   50:  LW        A1, 0 (S0)
   54:  ADDIU     S0, S0, 4
   58:  COPY      A0, S2
   5C:  JAL       ~Func:get_variable
   60:  COPY      S1, V0
   64:  COPY      A0, S2
   68:  LW        A1, 0 (S0)
   6C:  JAL       ~Func:get_float_variable
   70:  COPY      S0, V0
   74:  LI        A0, 6
   78:  ADDIU     S3, S3, A
   7C:  MTC1      S3, F26
   80:  NOP
   84:  CVT.S.W   F26, F26
   88:  ADDIU     S1, S1, 12
   8C:  MTC1      S1, F24
   90:  NOP
   94:  CVT.S.W   F24, F24
   98:  MTC1      S0, F20
   9C:  NOP
   A0:  CVT.S.W   F20, F20
   A4:  MOV.S     F22, F0
   A8:  MFC1      A1, F26
   AC:  MFC1      A2, F24
   B0:  MFC1      A3, F20
   B4:  LI        V0, 2D
   B8:  SWC1      F22, 10 (SP)
   BC:  JAL       800720B0
   C0:  SW        V0, 14 (SP)
   C4:  LI        A0, D
   C8:  MFC1      A1, F26
   CC:  MFC1      A2, F24
   D0:  MFC1      A3, F20
   D4:  LI        V0, 1E
   D8:  SWC1      F22, 10 (SP)
   DC:  JAL       80070BB0
   E0:  SW        V0, 14 (SP)
		LW        V1, C (V0)
		ADDIU     A0, R0, FF                %R
		SB        A0, 68 (V1)
		LW        V1, C (V0)
        ADDIU     A0, R0, A0                %G
		SB        A0, 69 (V1)
		LW        V1, C (V0)
		ADDIU     A1, R0, A0                %B
		SB        A1, 6A (V1)
		LW        A0, C (V0)
		ADDIU     V1, R0, FF                %R 2
		SB        V1, 6B (A0)
		LW        A0, C (V0)
		ADDIU     V1, R0, FF                %G 2
		SB        V1, 6C (A0)
		LW        V1, C (V0)
        ADDIU     A1, R0, FF                %B 2
		SB        A1, 6D (V1)   
   E4:  LW        RA, 28 (SP)
   E8:  LW        S3, 24 (SP)
   EC:  LW        S2, 20 (SP)
   F0:  LW        S1, 1C (SP)
   F4:  LW        S0, 18 (SP)
   F8:  LDC1      F26, 48 (SP)
   FC:  LDC1      F24, 40 (SP)
  100:  LDC1      F22, 38 (SP)
  104:  LDC1      F20, 30 (SP)
  108:  LI        V0, 2
  10C:  JR        RA
  110:  ADDIU     SP, SP, 50
}

@ $Script_802A39C8
{
    0:  Call  UseBattleCamPreset    ( 00000020 )
   10:  Wait  10`
   1C:  Thread
   24:  	Call  PlaySoundAtActor  ( .Actor:Player 00000156 )
   38:  	Wait  8`
   44:  	Call  PlaySoundAtActor  ( .Actor:Player 00000156 )
   58:  	Wait  8`
   64:  EndThread
   6C:  Call  SetAnimation  ( .Actor:Player 00000000 00050004 )
   84:  Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
   A0:  Call  $Function_802A11E8    ( *Var0 *Var1 *Var2 *Fixed[1.2] )
   BC:  Wait  3`
   C8:  Call  $Function_802A11E8    ( *Var0 *Var1 *Var2 *Fixed[0.8] )
   E4:  Wait  30`
   F0:  Call  UseBattleCamPreset    ( 00000002 )
  100:  Call  MoveBattleCamOver     ( 00000005 )
  110:  Call  $Function_802A10A4 ( )
  11C:  If  *Var0  ==  00000000
  12C:  	Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
  148:  	Add   *Var0  0000000F
  158:  	Add   *Var1  00000023
  168:  	Call  $Function_802A10C8        ( *Var0 *Var1 *Var2 )
  180:  	Call  PlaySoundAtActor  ( .Actor:Player 0000208F )
  194:  	Wait  4`
  1A0:  	Call  PlaySoundAtActor  ( .Actor:Player 00000160 )
  1B4:  	Call  SetActorJumpGravity       ( .Actor:Player *Fixed[1.0] )
  1C8:  	Call  SetActorSpeed     ( .Actor:Player *Fixed[1.0] )
  1DC:  	Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
  1F8:  	Call  SetJumpAnimations ( .Actor:Player 00000000 00050005 00050005 00050005 )
  218:  	Call  SetGoalPos        ( .Actor:Player *Var0 *Var1 *Var2 )
  234:  	Call  80273444  ( 00000014 00000000 00000000 )
  24C:  	Call  SetAnimation      ( .Actor:Player 00000000 00010009 )
  264:  	Wait  4`
  270:  	Call  SetAnimation      ( .Actor:Player 00000000 00010002 )
			Call  UseIdleAnimation  ( .Actor:Player .True )
  288:  	Call  $Function_802A12FC ( )
  294:  	Call  ShowVariableMessageBox    ( *Var0 0000003C 00000003 )
  2AC:  Else
      		%charging is illegal
  2B4:  	Call  ShowMessageBox    ( 00000008 0000003C )
			Call $FreeTurn ( )  
  2C8:  EndIf
  2D0:  Label  0
  2DC:  Wait  1`
  2E8:  Call  IsMessageBoxDisplayed ( *Var0 )
  2F8:  If  *Var0  ==  .True
  308:  	Goto  0
  314:  EndIf
  31C:  Return
  324:  End
}

@ $Script_802A3CF4
{
    0:  Call  UseBattleCamPreset    ( 00000020 )
   10:  Wait  10`
   1C:  Thread
   24:  	Call  PlaySoundAtActor  ( .Actor:Player 00000156 )
   38:  	Wait  8`
   44:  	Call  PlaySoundAtActor  ( .Actor:Player 00000156 )
   58:  	Wait  8`
   64:  EndThread
   6C:  Call  SetAnimation  ( .Actor:Player 00000000 00050006 )
   84:  Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
   A0:  Call  $Function_802A11E8    ( *Var0 *Var1 *Var2 *Fixed[1.2] )
   BC:  Wait  3`
   C8:  Call  $Function_802A11E8    ( *Var0 *Var1 *Var2 *Fixed[0.8] )
   E4:  Wait  30`
   F0:  Call  UseBattleCamPreset    ( 00000002 )
  100:  Call  MoveBattleCamOver     ( 00000005 )
  110:  Call  $Function_802A10A4 ( )
  11C:  If  *Var0  ==  00000000
  12C:  	Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
  148:  	Add   *Var0  0000000F
  158:  	Add   *Var1  00000023
  168:  	Call  $Function_802A10C8        ( *Var0 *Var1 *Var2 )
  180:  	Call  PlaySoundAtActor  ( .Actor:Player 0000208F )
  194:  	Wait  4`
  1A0:  	Call  PlaySoundAtActor  ( .Actor:Player 00000160 )
  1B4:  	Call  SetActorJumpGravity       ( .Actor:Player *Fixed[1.0] )
  1C8:  	Call  SetActorSpeed     ( .Actor:Player *Fixed[1.0] )
  1DC:  	Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
  1F8:  	Call  SetJumpAnimations ( .Actor:Player 00000000 00050007 00050007 00050007 )
  218:  	Call  SetGoalPos        ( .Actor:Player *Var0 *Var1 *Var2 )
  234:  	Call  80273444  ( 00000014 00000000 00000000 )
  24C:  	Call  SetAnimation      ( .Actor:Player 00000000 00010009 )
  264:  	Wait  4`
  270:  	Call  SetAnimation      ( .Actor:Player 00000000 00010002 )
			Call  UseIdleAnimation  ( .Actor:Player .True )
  288:  	Call  $Function_802A12FC ( )
  294:  	Call  ShowVariableMessageBox    ( *Var0 0000003C 00000003 )
  2AC:  Else
      		%charging is illegal
  2B4:  	Call  ShowMessageBox    ( 00000008 0000003C )
			Call $FreeTurn ( )  
  2C8:  EndIf
  2D0:  Label  0
  2DC:  Wait  1`
  2E8:  Call  IsMessageBoxDisplayed ( *Var0 )
  2F8:  If  *Var0  ==  .True
  308:  	Goto  0
  314:  EndIf
  31C:  Return
  324:  End
}

@ $Script_802A4020
{
    0:  Call  UseBattleCamPreset    ( 00000020 )
   10:  Wait  10`
   1C:  Thread
   24:  	Call  PlaySoundAtActor  ( .Actor:Player 00000156 )
   38:  	Wait  8`
   44:  	Call  PlaySoundAtActor  ( .Actor:Player 00000156 )
   58:  	Wait  8`
   64:  EndThread
   6C:  Call  SetAnimation  ( .Actor:Player 00000000 00050008 )
   84:  Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
   A0:  Call  $Function_802A11E8    ( *Var0 *Var1 *Var2 *Fixed[1.2] )
   BC:  Wait  3`
   C8:  Call  $Function_802A11E8    ( *Var0 *Var1 *Var2 *Fixed[0.8] )
   E4:  Wait  30`
   F0:  Call  UseBattleCamPreset    ( 00000002 )
  100:  Call  MoveBattleCamOver     ( 00000005 )
  110:  Call  $Function_802A10A4 ( )
  11C:  If  *Var0  ==  00000000
  12C:  	Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
  148:  	Add   *Var0  0000000F
  158:  	Add   *Var1  00000023
  168:  	Call  $Function_802A10C8        ( *Var0 *Var1 *Var2 )
  180:  	Call  PlaySoundAtActor  ( .Actor:Player 0000208F )
  194:  	Wait  4`
  1A0:  	Call  PlaySoundAtActor  ( .Actor:Player 00000160 )
  1B4:  	Call  SetActorJumpGravity       ( .Actor:Player *Fixed[1.0] )
  1C8:  	Call  SetActorSpeed     ( .Actor:Player *Fixed[1.0] )
  1DC:  	Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
  1F8:  	Call  SetJumpAnimations ( .Actor:Player 00000000 00050009 00050009 00050009 )
  218:  	Call  SetGoalPos        ( .Actor:Player *Var0 *Var1 *Var2 )
  234:  	Call  80273444  ( 00000014 00000000 00000000 )
  24C:  	Call  SetAnimation      ( .Actor:Player 00000000 00010009 )
  264:  	Wait  4`
  270:  	Call  SetAnimation      ( .Actor:Player 00000000 00010002 )
			Call  UseIdleAnimation  ( .Actor:Player .True ) %???
  288:  	Call  $Function_802A12FC ( )
  294:  	Call  ShowVariableMessageBox    ( *Var0 0000003C 00000003 )
  2AC:  Else
      		%charging is illegal
  2B4:  	Call  ShowMessageBox    ( 00000008 0000003C )
			Call $FreeTurn ( ) 
  2C8:  EndIf
  2D0:  Label  0
  2DC:  Wait  1`
  2E8:  Call  IsMessageBoxDisplayed ( *Var0 )
  2F8:  If  *Var0  ==  .True
  308:  	Goto  0
  314:  EndIf
  31C:  Return
  324:  End
}




%Reuse for dual charge (super level)
%Use jump anims for this


% Script File: Move_JumpCharge2.bscr
% Decoded from: 761920 to 763540 (Move_JumpCharge2)


#new:Function $Function_CheckJumpCharge
{
    0:  SW        R0, 84 (A0)
    4:  LAB       V0, 800DC107
    C:  SLTI      V0, V0, 4
   10:  BNE       V0, R0, .o1C
   14:  LI        V0, 1
   18:  SW        V0, 84 (A0)
        .o1C
   1C:  JR        RA
   20:  LI        V0, 2
}

#new:Function $Function_AddDualCharge
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 1C (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 24 (SP)
   10:  SW        S2, 20 (SP)
   14:  SW        S0, 18 (SP)
   18:  LW        S0, C (S1)
   1C:  LW        A1, 0 (S0)
   20:  JAL       ~Func:get_variable
   24:  ADDIU     S0, S0, 4
   28:  LW        A1, 0 (S0)
   2C:  ADDIU     S0, S0, 4
   30:  COPY      A0, S1
   34:  JAL       ~Func:get_variable
   38:  COPY      S2, V0
   3C:  COPY      A0, S1
   40:  LW        A1, 0 (S0)
   44:  JAL       ~Func:get_variable
   48:  COPY      S0, V0
   4C:  LI        A0, 2
   50:  MTC1      S2, F2
   54:  NOP
   58:  CVT.S.W   F2, F2
   5C:  MFC1      A1, F2
   60:  MTC1      S0, F2
   64:  NOP
   68:  CVT.S.W   F2, F2
   6C:  MFC1      A2, F2
   70:  MTC1      V0, F2
   74:  NOP
   78:  CVT.S.W   F2, F2
   7C:  LIF       F0, 1.0
   84:  MFC1      A3, F2
   88:  LI        V1, 3C
   8C:  SW        V1, 14 (SP)
   90:  JAL       ~Func:playFX_56
   94:  SWC1      F0, 10 (SP)
   98:  LA        A0, $End[0]
   A0:  LA        S0, 800DC070
   A8:  SW        R0, 0 (A0)
   AC:  LB        V0, 97 (S0)
   B0:  LBU       V1, 97 (S0)
   B4:  BLEZ      V0, .oC4
   B8:  COPY      S1, S0
   BC:  LI        V0, 1
   C0:  SW        V0, 0 (A0)
        .oC4
   C4:  ADDIU     V0, V1, 3
   C8:  SB        V0, 97 (S0)
		%
		LB        V0, 96 (S0)
		LBU       V1, 96 (S0)
		BLEZ      V0, .oC4b
		COPY      S1, S0
		LI        V0, 1
		SW        V0, 0 (A0)
        .oC4b
		ADDIU     V0, V1, 3
		SB        V0, 96 (S0)		
		%
   CC:  SLL       V0, V0, 18
   D0:  SRA       V0, V0, 18
   D4:  SLTI      V0, V0, 64
   D8:  BNE       V0, R0, .oE8
   DC:  LUI       V1, EFFF
   E0:  LI        V0, 63
   E4:  SB        V0, 97 (S0)
        .oE8
   E8:  ORI       V1, V1, FFFF
   EC:  LW        A0, 0 (S1)
   F0:  LUI       A1, 3000				%30000000 flag
   %F4:  SB        R0, 96 (S1)
   F8:  OR        A0, A0, A1
   FC:  AND       A0, A0, V1
  100:  SW        A0, 0 (S1)
  104:  LW        RA, 24 (SP)
  108:  LW        S2, 20 (SP)
  10C:  LW        S1, 1C (SP)
  110:  LW        S0, 18 (SP)
  114:  LI        V0, 2
  118:  JR        RA
  11C:  ADDIU     SP, SP, 28
}

%reuse $Function_802A11E8 from the charge above
/%
#new:Function $Function_802A1228
{
    0:  ADDIU     SP, SP, FFB0
    4:  SW        S2, 20 (SP)
    8:  COPY      S2, A0
    C:  SW        RA, 28 (SP)
   10:  SW        S3, 24 (SP)
   14:  SW        S1, 1C (SP)
   18:  SW        S0, 18 (SP)
   1C:  SDC1      F26, 48 (SP)
   20:  SDC1      F24, 40 (SP)
   24:  SDC1      F22, 38 (SP)
   28:  SDC1      F20, 30 (SP)
   2C:  LW        S0, C (S2)
   30:  LW        A1, 0 (S0)
   34:  JAL       ~Func:get_variable
   38:  ADDIU     S0, S0, 4
   3C:  LW        A1, 0 (S0)
   40:  ADDIU     S0, S0, 4
   44:  COPY      A0, S2
   48:  JAL       ~Func:get_variable
   4C:  COPY      S3, V0
   50:  LW        A1, 0 (S0)
   54:  ADDIU     S0, S0, 4
   58:  COPY      A0, S2
   5C:  JAL       ~Func:get_variable
   60:  COPY      S1, V0
   64:  COPY      A0, S2
   68:  LW        A1, 0 (S0)
   6C:  JAL       ~Func:get_float_variable
   70:  COPY      S0, V0
   74:  LI        A0, 6
   78:  ADDIU     S3, S3, A
   7C:  MTC1      S3, F26
   80:  NOP
   84:  CVT.S.W   F26, F26
   88:  ADDIU     S1, S1, 12
   8C:  MTC1      S1, F24
   90:  NOP
   94:  CVT.S.W   F24, F24
   98:  MTC1      S0, F20
   9C:  NOP
   A0:  CVT.S.W   F20, F20
   A4:  MOV.S     F22, F0
   A8:  MFC1      A1, F26
   AC:  MFC1      A2, F24
   B0:  MFC1      A3, F20
   B4:  LI        V0, 2D
   B8:  SWC1      F22, 10 (SP)
   BC:  JAL       ~Func:playFX_6B
   C0:  SW        V0, 14 (SP)
   C4:  LI        A0, D
   C8:  MFC1      A1, F26
   CC:  MFC1      A2, F24
   D0:  MFC1      A3, F20
   D4:  LI        V0, 1E
   D8:  SWC1      F22, 10 (SP)
   DC:  JAL       ~Func:playFX_33
   E0:  SW        V0, 14 (SP)
   E4:  LW        RA, 28 (SP)
   E8:  LW        S3, 24 (SP)
   EC:  LW        S2, 20 (SP)
   F0:  LW        S1, 1C (SP)
   F4:  LW        S0, 18 (SP)
   F8:  LDC1      F26, 48 (SP)
   FC:  LDC1      F24, 40 (SP)
  100:  LDC1      F22, 38 (SP)
  104:  LDC1      F20, 30 (SP)
  108:  LI        V0, 2
  10C:  JR        RA
  110:  ADDIU     SP, SP, 50
}
%/

#new:Function $Function_802A133C
{
    0:  LAW       V0, $End[0]
    8:  BNEL      V0, R0, .o14
    C:  LI        V0, 7
   10:  LI        V0, 6
        .o14
   14:  SW        V0, 84 (A0)
   18:  JR        RA
   1C:  LI        V0, 2
}

@ $Script_UseMove1
{
    0:  Call  UseBattleCamPreset    ( 00000020 )
   10:  Wait  10`
   1C:  ChildThread
   24:  	Call  PlaySoundAtActor  ( .Actor:Player 00000156 )
   38:  	Wait  8`
   44:  	Call  PlaySoundAtActor  ( .Actor:Player 00000156 )
   58:  	Wait  8`
   64:  EndChildThread
   6C:  Call  SetAnimation  ( .Actor:Player 00000000 00010020 )
   84:  Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
   A0:  Call  $Function_802A11E8    ( *Var0 *Var1 *Var2 *Fixed[1.2] )
   BC:  Wait  3`
   C8:  Call  $Function_802A11E8    ( *Var0 *Var1 *Var2 *Fixed[0.8] )
   E4:  Wait  30`
   F0:  Call  UseBattleCamPreset    ( 00000002 )
  100:  Call  MoveBattleCamOver     ( 00000005 )
  110:  Call  $Function_CheckJumpCharge ( )
		Set *VarF *Var0
		Call  $Function_802A10A4 ( )
		If *VarF == 00000000
			Set *Var0 0
		EndIf
  11C:  If  *Var0  ==  00000000
  12C:  	Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
  148:  	Add   *Var0  0000000A
  158:  	Add   *Var1  00000019
  168:  	Add   *Var2  00000005
  178:  	Call  $Function_AddDualCharge        ( *Var0 *Var1 *Var2 )
  190:  	Call  PlaySoundAtActor  ( .Actor:Player 0000208F )
  1A4:  	Wait  4`
  1B0:  	Call  PlaySoundAtActor  ( .Actor:Player 00000160 )
  1C4:  	Call  SetActorJumpGravity       ( .Actor:Player *Fixed[1.0] )
  1D8:  	Call  SetActorSpeed     ( .Actor:Player *Fixed[1.0] )
  1EC:  	Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
  208:  	Call  SetJumpAnimations ( .Actor:Player 00000000 00010007 00010008 00010009 )
  228:  	Call  SetGoalPos        ( .Actor:Player *Var0 *Var1 *Var2 )
  244:  	Call  80273444  ( 00000014 00000000 00000000 )
  25C:  	Call  SetAnimation      ( .Actor:Player 00000000 00010009 )
  274:  	Wait  4`
  280:  	Call  SetAnimation      ( .Actor:Player 00000000 00010002 )
  298:  	Call  $Function_802A133C ( )
  2A4:  	Call  ShowVariableMessageBox    ( *Var0 0000003C 00000003 )
  2BC:  Else
			%charging is illegal
  2C4:  	Call  ShowMessageBox    ( 00000008 0000003C )
			Call $FreeTurn ( )  
  2D8:  EndIf
  2E0:  Label  0
  2EC:  Wait  1`
  2F8:  Call  IsMessageBoxDisplayed ( *Var0 )
  308:  If  *Var0  ==  .True
  318:  	Goto  0
  324:  EndIf
  32C:  Call  SetGoalToHome ( .Actor:Player )
  33C:  Call  SetActorSpeed ( .Actor:Player *Fixed[8.0] )
  350:  Call  SetAnimation  ( .Actor:Player 00000000 00010005 )
  368:  Call  PlayerRunToGoal   ( 00000000 )
  378:  Call  SetAnimation  ( .Actor:Player 00000000 00010002 )
  390:  Return
  398:  End
}

