%normal hammer twice (-2), but second hit does 2 more than the first hit
%Very powerful, if the first hit does 6, it is at least as strong as megasmash
%Getting to 6 damage only requires +2 damage in badges, which is not that hard

%Recalculations

%Megasmash is 14 base + 1x bonus
%4 + 6 = 10 + 2x
%Get +4 damage

%now it is 4 + 7

@ $Script_UseMove0
{
		Set *Var[C] 0 %whether this is the second hit or not
    0:  Call     802694A4 ( 00000001 )
   10:  Call     GetMenuSelection 	( *Var[0] *Var[1] *Var[2] )
   28:  Switch  *Var[1] 
   34:  	Case  ==  00000000 
   40:  		Set  *Var[D]  0000003C 
   50:  		Set  *Var[E]  00000001 
   60:  		Set  *Var[F]  00000001 
   70:  		ExecWait $Script_802A3390 
   7C:  	Case  ==  00000001 
   88:  		Set  *Var[D]  0000003C 
   98:  		Set  *Var[E]  00000001 
   A8:  		Set  *Var[F]  00000002
   B8:  		ExecWait $Script_802A3390 
   C4:  	Case  ==  00000002 
   D0:  		Set  *Var[D]  0000003C 
   E0:  		Set  *Var[E]  00000003 
   F0:  		Set  *Var[F]  00000004 
  100:  		ExecWait $Script_802A3390 
  10C:  EndSwitch
  114:  Return
  11C:  End
}

  
@ $Script_802A3390
{
		Label 0
		Set		 *VarD 28		%Regular hammer is 2D (+6?)	 %Reset hammer timing
    0:  Call     GetMenuSelection 	( *Var[0] *Var[1] *Var[2] )
   18:  Switch  *Var[1] 
   24:  	Case  ==  00000000 
   30:  		ExecWait $Script_802A1C20 
   3C:  	Case  ==  00000001 
   48:  		ExecWait $Script_802A20E0 
   54:  	Case  ==  00000002 
   60:  		ExecWait $Script_802A24C8 
   6C:  EndSwitch
   74:  Call     PlayerTestEnemy 	( *Var[0] 00000040 00000019 00000000 00000000 00000010 )
   98:  ExecWait $Script_802A3248 						%shake
   A4:  Call     InitTargetIterator 	( )
   B0:  Call     SetGoalToTarget 	( .Actor:Player )
   %C0:  Call     $Function_802A10A4 ( )					%Makes effects	(effect dec 105) (80071FF0)
   CC:  Call     UseBattleCamPreset 	( 0000002C )
   DC:  Wait     00000001 
   E8:  Call     PlayerTestEnemy 	( *Var[0] 00000040 00000019 00000000 00000000 00000010 )
  10C:  If  *Var[0]  ==  00000006 
  11C:  	ExecWait $Script_802A1B44 
  128:  	Return
  130:  EndIf
  138:  Call     DidActionSucceed ( *Var[0] )
  148:  Switch  *Var[0] 
  154:  	Case  >  00000000 
  160:  		Call     GetMenuSelection 	( *Var[0] *Var[1] *Var[2] )
  178:  		Switch  *Var[1] 
  184:  			Case  ==  00000000 
  190:  				Call     PlaySoundAtActor 	( .Actor:Player 000000E9 )
  1A4:  			Case  ==  00000001 
  1B0:  				Call     PlaySoundAtActor 	( .Actor:Player 0000010E )
  1C4:  			Case  ==  00000002 
  1D0:  				Call     PlaySoundAtActor 	( .Actor:Player 0000010E )
  1E4:  		EndSwitch
				If *Var[C] == 00000001
  1EC:  			Call     PlayerDamageEnemy 	( *Var[0] 00000040 00000019 00000000 *Var[F] 00000070 ) %flag 10 = ?, flag 20 = end move, flag 40 = success? (spawn nice/good/super depending on unknown factors)
				Else
					Call     PlayerDamageEnemy 	( *Var[0] 00000040 00000019 00000000 *Var[F] 00000050 )
				EndIf
  210:  	Default
  218:  		Call     GetMenuSelection 	( *Var[0] *Var[1] *Var[2] )
  230:  		Switch  *Var[1] 
  23C:  			Case  ==  00000000 
  248:  				Call     PlaySoundAtActor 	( .Actor:Player 000000E9 )
  25C:  			Case  ==  00000001 
  268:  				Call     PlaySoundAtActor 	( .Actor:Player 0000010E )
  27C:  			Case  ==  00000002 
  288:  				Call     PlaySoundAtActor 	( .Actor:Player 0000010E )
  29C:  		EndSwitch
				If *Var[C] == 00000001
  2A4:  			Call     PlayerDamageEnemy 	( *Var[0] 00000040 00000019 00000000 *Var[E] 00000030 )
				Else
					Call     PlayerDamageEnemy 	( *Var[0] 00000040 00000019 00000000 *Var[E] 00000030 )
				EndIf
				Goto 1 %if you fail the first hit, end immediately
  2C8:  EndSwitch
		Wait A
		If *Var[C] == 00000000
			Set   *Var[6]   *Var[0]
			Call GetOwnerTarget ( *Var[0] *Var[1] )
			Call ActorExists    ( *Var[0] *Var[9] )
			If *Var[9] == 00000000 %if the enemy somehow stops existing between first and second hit
				Goto 00000001	   %that shouldn't be possible, but it's good to have failsafes
			EndIf
			% Call GetActorHP ( *Var[0] *Var[9] )	thanks to the flags above, reducing an enemy to 0 hp works properly
			% If *Var[9] < 1`
				% Goto 00000001
			% EndIf 
			Add *Var[F] 3
			Add *Var[E] 3
			Add	*Var[C] 1
			Goto 0
		EndIf
		Label 1
  2D0:  Switch  *Var[0] %go home
  2DC:  	CaseOR  ==  00000001 
  2E8:  	CaseOR  ==  00000003 
  2F4:  		ExecWait $Script_802A198C 
  300:  	EndCaseGroup
  308:  	CaseOR  ==  00000000 
  314:  	CaseOR  ==  00000002 
  320:  		ExecWait $Script_802A1B44 
  32C:  	EndCaseGroup
  334:  EndSwitch
  33C:  Return
  344:  End
}