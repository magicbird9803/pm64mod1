@ $Function_802A10E4
{
    0:  SW			R0, 84 (A0)
    4:  LAB			V0, 800DC107
    C:  SLTI		V0, V0, 5 %was 63
   10:  BNE			V0, R0, .o1C
   14:  ADDIU		V0, R0, 1
   18:  SW			V0, 84 (A0)
        .o1C
   1C:  JR			RA
   20:  ADDIU		V0, R0, 2
}

@ $Function_802A1228
{
    0:  ADDIU     SP, SP, FFB0
    4:  SW        S2, 20 (SP)
    8:  COPY      S2, A0
    C:  SW        RA, 28 (SP)
   10:  SW        S3, 24 (SP)
   14:  SW        S1, 1C (SP)
   18:  SW        S0, 18 (SP)
   1C:  SDC1      F26, 48 (SP)
   20:  SDC1      F24, 40 (SP)
   24:  SDC1      F22, 38 (SP)
   28:  SDC1      F20, 30 (SP)
   2C:  LW        S0, C (S2)
   30:  LW        A1, 0 (S0)
   34:  JAL       ~Func:get_variable
   38:  ADDIU     S0, S0, 4
   3C:  LW        A1, 0 (S0)
   40:  ADDIU     S0, S0, 4
   44:  COPY      A0, S2
   48:  JAL       ~Func:get_variable
   4C:  COPY      S3, V0
   50:  LW        A1, 0 (S0)
   54:  ADDIU     S0, S0, 4
   58:  COPY      A0, S2
   5C:  JAL       ~Func:get_variable
   60:  COPY      S1, V0
   64:  COPY      A0, S2
   68:  LW        A1, 0 (S0)
   6C:  JAL       ~Func:get_float_variable
   70:  COPY      S0, V0
   74:  LI        A0, 6
   78:  ADDIU     S3, S3, A
   7C:  MTC1      S3, F26
   80:  NOP
   84:  CVT.S.W   F26, F26
   88:  ADDIU     S1, S1, 12
   8C:  MTC1      S1, F24
   90:  NOP
   94:  CVT.S.W   F24, F24
   98:  MTC1      S0, F20
   9C:  NOP
   A0:  CVT.S.W   F20, F20
   A4:  MOV.S     F22, F0
   A8:  MFC1      A1, F26
   AC:  MFC1      A2, F24
   B0:  MFC1      A3, F20
   B4:  LI        V0, 2D
   B8:  SWC1      F22, 10 (SP)
   BC:  JAL       800720B0
   C0:  SW        V0, 14 (SP)
   C4:  LI        A0, C
   C8:  MFC1      A1, F26
   CC:  MFC1      A2, F24
   D0:  MFC1      A3, F20
   D4:  LI        V0, 1E
   D8:  SWC1      F22, 10 (SP)
   DC:  JAL       80070BB0
   E0:  SW        V0, 14 (SP)
		LW        V1, C (V0)
		ADDIU     A0, R0, A0                %R
		SB        A0, 68 (V1)
		LW        V1, C (V0)
        ADDIU     A0, R0, FF                %G
		SB        A0, 69 (V1)
		LW        V1, C (V0)
		ADDIU     A1, R0, A0                %B
		SB        A1, 6A (V1)
		LW        A0, C (V0)
		ADDIU     V1, R0, FF                %R 2
		SB        V1, 6B (A0)
		LW        A0, C (V0)
		ADDIU     V1, R0, FF                %G 2
		SB        V1, 6C (A0)
		LW        V1, C (V0)
        ADDIU     A1, R0, FF                %B 2
		SB        A1, 6D (V1)      
   E4:  LW        RA, 28 (SP)
   E8:  LW        S3, 24 (SP)
   EC:  LW        S2, 20 (SP)
   F0:  LW        S1, 1C (SP)
   F4:  LW        S0, 18 (SP)
   F8:  LDC1      F26, 48 (SP)
   FC:  LDC1      F24, 40 (SP)
  100:  LDC1      F22, 38 (SP)
  104:  LDC1      F20, 30 (SP)
  108:  LI        V0, 2
  10C:  JR        RA
  110:  ADDIU     SP, SP, 50
}

@ $Script_UseMove0
{
    0:  Call  UseBattleCamPreset    ( 00000020 )
   10:  Wait  10`
   1C:  ChildThread
   24:  	Call  PlaySoundAtActor  ( .Actor:Player 00000156 )
   38:  	Wait  8`
   44:  	Call  PlaySoundAtActor  ( .Actor:Player 00000156 )
   58:  	Wait  8`
   64:  EndChildThread
   6C:  Call  SetAnimation  ( .Actor:Player 00000000 00010020 )
   84:  Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
   A0:  Call  $Function_802A1228    ( *Var0 *Var1 *Var2 *Fixed[1.2] )
   BC:  Wait  3`
   C8:  Call  $Function_802A1228    ( *Var0 *Var1 *Var2 *Fixed[0.8] )
   E4:  Wait  30`
   F0:  Call  UseBattleCamPreset    ( 00000002 )
  100:  Call  MoveBattleCamOver     ( 00000005 )
  110:  Call  $Function_802A10E4 ( )
  11C:  If  *Var0  ==  00000000
  12C:  	Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
  148:  	Add   *Var0  0000000A
  158:  	Add   *Var1  00000019
  168:  	Add   *Var2  00000005
  178:  	Call  $Function_802A1108        ( *Var0 *Var1 *Var2 )
  190:  	Call  PlaySoundAtActor  ( .Actor:Player 0000208F )
  1A4:  	Wait  4`
  1B0:  	Call  PlaySoundAtActor  ( .Actor:Player 00000160 )
  1C4:  	Call  SetActorJumpGravity       ( .Actor:Player *Fixed[1.0] )
  1D8:  	Call  SetActorSpeed     ( .Actor:Player *Fixed[1.0] )
  1EC:  	Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
  208:  	Call  SetJumpAnimations ( .Actor:Player 00000000 00010007 00010008 00010009 )
  228:  	Call  SetGoalPos        ( .Actor:Player *Var0 *Var1 *Var2 )
  244:  	Call  80273444  ( 00000014 00000000 00000000 )
  25C:  	Call  SetAnimation      ( .Actor:Player 00000000 00010009 )
  274:  	Wait  4`
  280:  	Call  SetAnimation      ( .Actor:Player 00000000 00010002 )
  298:  	Call  UseIdleAnimation  ( .Actor:Player .True )
  2AC:  	Call  $Function_802A133C ( )
  2B8:  	Call  ShowVariableMessageBox    ( *Var0 0000003C 00000002 )
  2D0:  Else
    		%charging is illegal
  2D8:  	Call  ShowMessageBox    ( 00000008 0000003C )
			Call $FreeTurn ( ) 
  2EC:  EndIf
  2F4:  Label  0
  300:  Wait  1`
  30C:  Call  IsMessageBoxDisplayed ( *Var0 )
  31C:  If  *Var0  ==  .True
  32C:  	Goto  0
  338:  EndIf
  340:  Call  UseIdleAnimation  ( .Actor:Player .False )
  354:  Call  SetGoalToHome ( .Actor:Player )
  364:  Call  SetActorSpeed ( .Actor:Player *Fixed[8.0] )
  378:  Call  SetAnimation  ( .Actor:Player 00000000 00010005 )
  390:  Call  PlayerRunToGoal   ( 00000000 )
  3A0:  Call  SetAnimation  ( .Actor:Player 00000000 00010002 )
  3B8:  Return
  3C0:  End
}


%Reuse for truth stomp 


% Script File: Move_PowerJump.bscr
% Decoded from: 76D760 to 76F330 (Move_PowerJump)

#new:Function $Function_802A1000_B
{
    0:  ADDIU     SP, SP, FFD8
    4:  LA        V1, 800DC070
    C:  SW        RA, 20 (SP)
   10:  SW        S1, 1C (SP)
   14:  SW        S0, 18 (SP)
   18:  LW        V0, D8 (V1)
   1C:  COPY      S0, A0
   20:  LWC1      F2, 1C (V0)
   24:  LWC1      F12, 144 (V0)
   28:  LWC1      F14, 148 (V0)
   2C:  LWC1      F4, 14C (V0)
   30:  LWC1      F6, 18 (V0)
   34:  LWC1      F0, 20 (V0)
   38:  MFC1      A2, F4
   3C:  MFC1      A3, F6
   40:  COPY      S1, V1
   44:  SWC1      F2, 10 (SP)
   48:  JAL       ~Func:dist3D
   4C:  SWC1      F0, 14 (SP)
   50:  LIF       F2, 15.0
   58:  NOP
   5C:  MUL.S     F0, F0, F2
   60:  NOP
   64:  LIF       F2, 100.0
   6C:  NOP
   70:  DIV.S     F0, F0, F2
   74:  TRUNC.W.S F8, F0
   78:  MFC1      V0, F8
   7C:  NOP
   80:  SW        V0, 84 (S0)
   84:  SLTI      V0, V0, 15
   88:  BNE       V0, R0, .o94
   8C:  LI        V0, 14
   90:  SW        V0, 84 (S0)
        .o94
   94:  LB        V0, 83 (S1)
   98:  BEQ       V0, R0, .oB8
   9C:  NOP
   A0:  LW        V0, 84 (S0)
   A4:  SLTI      V0, V0, 6
   A8:  BEQ       V0, R0, .oCC
   AC:  LI        V0, 6
   B0:  BEQ       R0, R0, .oCC
   B4:  SW        V0, 84 (S0)
        .oB8
   B8:  LW        V0, 84 (S0)
   BC:  SLTI      V0, V0, C
   C0:  BEQ       V0, R0, .oCC
   C4:  LI        V0, C
   C8:  SW        V0, 84 (S0)
        .oCC
   CC:  LW        RA, 20 (SP)
   D0:  LW        S1, 1C (SP)
   D4:  LW        S0, 18 (SP)
   D8:  LI        V0, 2
   DC:  JR        RA
   E0:  ADDIU     SP, SP, 28
}

#new:Script $Script_802A1130_B
{
    0:  Call  SetAnimation  ( .Actor:Player 00000000 00010006 )
   18:  Loop  00000005
   24:  	Call  CheckButtonPress  ( ~Flags:Buttons:A *Var0 )
   38:  	If  *Var0  ==  .True
   48:  		BreakLoop
   50:  	EndIf
   58:  	Wait  1`
   64:  EndLoop
   6C:  Return
   74:  End
}

#new:Script $Script_802A11AC
{
    0:  Call  SetGoalToFirstTarget  ( .Actor:Self )
   10:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
   2C:  Sub   *Var0  00000028
   3C:  Call  InitTargetIterator ( )
   48:  Call  SetGoalToTarget   ( .Actor:Player )
   58:  Call  GetGoalPos        ( .Actor:Player *Var3 *Var4 *Var5 )
   74:  Sub   *Var3  *Fixed[70.0]
   84:  If  *Var0  <  *Var3
   94:  	Set   *Var3  *Var0
   A4:  EndIf
   AC:  Call  SetGoalPos    ( .Actor:Player *Var3 *Var4 *Var5 )
   C8:  Call  UseBattleCamPreset        ( 0000001A )
   D8:  Call  SetActorSpeed ( .Actor:Player *Fixed[5.0] )
   EC:  Call  SetAnimation  ( .Actor:Player 00000000 00010005 )
  104:  Call  CancelablePlayerRunToGoal ( 00000000 *Var0 )
  118:  Call  SetAnimation  ( .Actor:Player 00000000 00010002 )
  130:  Call  SetGoalToTarget   ( .Actor:Player )
  140:  ExecWait  $Script_802A1130_B
  14C:  Call  SetAnimation  ( .Actor:Player 00000000 00010006 )
  164:  Return
  16C:  End
}

#new:Script $Script_802A1320
{
    0:  Call  SetGoalToTarget   ( .Actor:Player )
   10:  Call  GetGoalPos        ( .Actor:Player *Var6 *Var7 *Var8 )
   2C:  Call  GetActorPos       ( .Actor:Player *Var7 *Var8 *Var9 )
   48:  If  *Var6  >  *Var7
   58:  	Sub   *Var6  *Var7
   68:  Else
   70:  	Sub   *Var7  *Var6
   80:  	Set   *Var6  *Var7
   90:  EndIf
   98:  Sub   *Var6  00000014
   A8:  DivF  *Var6  *Fixed[10.588867]
   B8:  AddF  *Var6  0000000F
   C8:  Set   *VarA  *Var6
   D8:  Return
   E0:  End
}

#new:Script $Script_802A15D8
{
    0:  Call  80276EFC ( )
    C:  Call  SetBattleFlagBits ( 00000100 .False )
   20:  Call  UseBattleCamPreset    ( 00000003 )
   30:  Call  802693F0 ( )
   3C:  Call  SetGoalToHome ( .Actor:Player )
   4C:  Call  GetGoalPos    ( .Actor:Player *Var0 *Var1 *Var2 )
   68:  Add   *Var0  00000028
   78:  Call  SetJumpAnimations ( .Actor:Player 00000000 00010007 00010008 00010009 )
   98:  Call  SetActorJumpGravity   ( .Actor:Player *Fixed[1.3] )
   AC:  Call  SetGoalPos    ( .Actor:Player *Var0 *Var1 *Var2 )
   C8:  Call  $Function_802A1000_B ( )
   D4:  Call  80273444      ( *Var0 00000000 00000000 )
   EC:  Call  SetAnimation  ( .Actor:Player 00000000 00010009 )
  104:  Wait  1`
  110:  Call  AddGoalPos    ( .Actor:Player FFFFFFEC 00000000 00000000 )
  12C:  Call  80273444      ( 00000006 00000000 00000002 )
  144:  Call  SetAnimation  ( .Actor:Player 00000000 00010009 )
  15C:  Wait  5`
  168:  Call  EnablePlayerBlur  ( FFFFFFFF )
  178:  Call  SetGoalToHome ( .Actor:Player )
  188:  Call  SetActorSpeed ( .Actor:Player *Fixed[8.0] )
  19C:  Call  SetAnimation  ( .Actor:Player 00000000 00010005 )
  1B4:  Call  PlayerRunToGoal   ( 00000000 )
  1C4:  Call  SetAnimation  ( .Actor:Player 00000000 00010002 )
  1DC:  Return
  1E4:  End
}

#new:Script $Script_802A17C4
{
    0:  Call  80276EFC ( )
    C:  Call  SetBattleFlagBits ( 00000100 .False )
   20:  Call  UseBattleCamPreset    ( 00000003 )
   30:  Call  802693F0 ( )
   3C:  Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
   58:  Sub   *Var0  00000032
   68:  Set   *Var1  00000000
   78:  Call  SetGoalPos    ( .Actor:Player *Var0 *Var1 *Var2 )
   94:  Call  SetJumpAnimations ( .Actor:Player 00000000 00010007 00010008 00010009 )
   B4:  Call  SetActorJumpGravity   ( .Actor:Player *Fixed[0.8] )
   C8:  Call  $Function_802A1000_B ( )
   D4:  Call  80273444      ( *Var0 00000000 00000000 )
   EC:  Call  SetAnimation  ( .Actor:Player 00000000 00010009 )
  104:  Wait  1`
  110:  Call  AddGoalPos    ( .Actor:Player FFFFFFE2 00000000 00000000 )
  12C:  Call  80273444      ( 00000006 00000000 00000002 )
  144:  Call  SetAnimation  ( .Actor:Player 00000000 00010009 )
  15C:  Wait  2`
  168:  Call  EnablePlayerBlur  ( FFFFFFFF )
  178:  Call  SetGoalToHome ( .Actor:Player )
  188:  Call  SetActorSpeed ( .Actor:Player *Fixed[8.0] )
  19C:  Call  SetAnimation  ( .Actor:Player 00000000 00010005 )
  1B4:  Call  PlayerRunToGoal   ( 00000000 )
  1C4:  Call  SetAnimation  ( .Actor:Player 00000000 00010002 )
  1DC:  Return
  1E4:  End
}

#new:Script $Script_802A1FEC
{
    0:  Call  SetJumpAnimations ( .Actor:Player 00000000 00000000 00000000 0001000C )
   20:  Call  PlayerLandJump ( )
   2C:  Call  SetAnimation      ( .Actor:Player 00000000 0001000C )
   44:  Wait  2`
   50:  ChildThread
   58:  	Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[1.0] )
   74:  EndChildThread
   7C:  Call  PlaySoundAtActor  ( .Actor:Player 00000162 )
   90:  Call  SetAnimation      ( .Actor:Player 00000000 00010030 )
   A8:  Wait  10`
   B4:  Call  SetAnimation      ( .Actor:Player 00000000 00010031 )
   CC:  Wait  20`
   D8:  Call  SetBattleFlagBits ( 00000100 .False )
   EC:  Call  UseBattleCamPreset    ( 00000003 )
   FC:  Call  802693F0 ( )
  108:  Call  EnablePlayerBlur  ( FFFFFFFF )
  118:  Call  80276EFC ( )
  124:  Call  SetGoalToHome     ( .Actor:Player )
  134:  Call  SetActorSpeed     ( .Actor:Player *Fixed[8.0] )
  148:  Call  SetAnimation      ( .Actor:Player 00000000 00010005 )
  160:  Call  PlayerRunToGoal   ( 00000000 )
  170:  Call  SetAnimation      ( .Actor:Player 00000000 00010002 )
  188:  Return
  190:  End
}

#new:Script $Script_802A2184
{
    0:  Call  LoadActionCommand ( .ActionCommand:Jump )
   10:  Call  802A9000 ( )
   1C:  ExecWait  $Script_802A11AC
   28:  ExecWait  $Script_802A1320
   34:  Call  802A9120  ( *VarA 00000003 )
   48:  Call  UseBattleCamPreset    ( 00000022 )
   58:  Call  SetGoalToTarget   ( .Actor:Player )
   68:  Call  SetJumpAnimations ( .Actor:Player 00000000 00010007 00010008 00030000 )
   88:  Call  80274A18  ( *VarA 00000000 )
   9C:  Return
   A4:  End
}

@ $Script_UseMove1
{
    0:  Call  EnablePlayerBlur  ( 00000001 )
   10:  Call  802694A4  ( 00000001 )
   20:  Call  GetMenuSelection  ( *Var0 *Var1 *Var2 )
   38:  Switch  *Var1
   44:  	Case  ==  00000000 % 0
   50:  		ExecWait  $Script_802A2754
   5C:  	Case  ==  00000001 % 1
   68:  		ExecWait  $Script_802A28D0
   74:  	Case  ==  00000002 % 2
   80:  		ExecWait  $Script_802A2A4C
   8C:  EndSwitch
   94:  Call  EnablePlayerBlur  ( 00000000 )
   A4:  Return
   AC:  End
}

#new:Script $Script_802A26B4
{
    0:  Call  StartRumble   ( 00000009 )
   10:  ChildThread
   18:  	Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[0.5] )
   34:  	Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[1.5] )
   50:  	Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[0.5] )
   6C:  	Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[0.2] )
   88:  EndChildThread
   90:  Return
   98:  End
}

#new:Script $Script_802A2754
{
    0:  ExecWait  $Script_802A2184
    C:  Call  PlayerTestEnemy   ( *Var0 ~Flags:DamageType:Jump 00000000 00000000 00000001 00000000 )
		Set *VarD 0`
   30:  If  *Var0  ==  .HitResult:Miss % 6
			Set *VarD 1`
   %40:  	ExecWait  $Script_802A1FEC
   %4C:  	Return
   54:  EndIf
   5C:  ExecWait  $Script_802A26B4
   68:  Wait  1`
   74:  Call  DidActionSucceed  ( *Var0 )
   84:  Switch  *Var0
   90:  	Case  >  .False
   9C:  		Call  SetActorSounds    ( .Actor:Player .ActorSound:Hurt 0000015A 00000000 )
				%
				Set *VarE 0`
				If *VarD == 1`
					Set *VarE 1
				EndIf
				Call  GetOwnerTarget ( *VarB *VarC )
				Call  GetActorAttackBoost	( *VarB *VarD )
				If *VarD > 0
					Add   *VarE *VarD
				EndIf
				Call  GetActorDefenseBoost	( *VarB *VarD )
				If *VarD > 0
					Add   *VarE *VarD
				EndIf
				%Cap at +6 boost
				If *VarE > 6`
					Set *VarE 6`
				EndIf
				If *VarE > 0`
					Set *VarD *VarE
					Loop *VarD			%looping with varF might not work since effect function can modify it
						Call     GetActorPos 	( .Actor:Player *Var[6] *Var[7] *Var[8] )
						Sub  *Var[7]  00000005 	%spawn particles below enemy 
						Sub  *Var[8]  00000002 
						Call     PlayEffect  	( 00000011 00000002 *Var[6] *Var[7] *Var[8] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
						%copied from amazy dayzee idle script, but it isn't in the effect enum		
					EndLoop				
				EndIf
				%
				Add *VarE 4`
   B8:  		Call  PlayerDamageEnemy ( *Var0 ~Flags:DamageType:Jump 00000000 00000000 *VarE 00000070 )
   DC:  	Default
   E4:  		Call  SetActorSounds    ( .Actor:Player .ActorSound:Hurt 0000015A 00000000 )
				%
				Set *VarE 0`
				If *VarD == 1`
					Set *VarE 1
				EndIf
				Call  GetOwnerTarget ( *VarB *VarC )
				Call  GetActorAttackBoost	( *VarB *VarD )
				If *VarE > 0
					Add   *VarE *VarD
				EndIf
				Call  GetActorDefenseBoost	( *VarB *VarD )
				If *VarE > 0
					Add   *VarE *VarD
				EndIf
				%Cap at +6 boost
				If *VarE > 6`
					Set *VarE 6`
				EndIf
				If *VarE > 0`
					Set *VarD *VarE
					Loop *VarD
						Call     GetActorPos 	( .Actor:Player *Var[6] *Var[7] *Var[8] )
						Sub  *Var[7]  00000005 	%spawn particles below enemy 
						Sub  *Var[8]  00000002 
						Call     PlayEffect  	( 00000011 00000002 *Var[6] *Var[7] *Var[8] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
						%copied from amazy dayzee idle script, but it isn't in the effect enum		
					EndLoop				
				EndIf			
				%
				Add *VarE 3`   
  100:  		Call  PlayerDamageEnemy ( *Var0 ~Flags:DamageType:Jump 00000000 00000000 *VarE 00000030 )
  124:  EndSwitch
  12C:  Switch  *Var0
  138:  	Case  >  .HitResult:Hit % 0
  144:  		ExecWait  $Script_802A15D8
  150:  	Default
  158:  		ExecWait  $Script_802A17C4
  164:  EndSwitch
  16C:  Return
  174:  End
}

#new:Script $Script_802A28D0
{
    0:  ExecWait  $Script_802A2184
    C:  Call  PlayerTestEnemy   ( *Var0 ~Flags:DamageType:Jump 00000000 00000000 00000001 00000000 )
		Set *VarD 0`
   30:  If  *Var0  ==  .HitResult:Miss % 6
			Set *VarD 1`
   %40:  	ExecWait  $Script_802A1FEC
   %4C:  	Return
   54:  EndIf
   5C:  ExecWait  $Script_802A26B4
   68:  Wait  1`
   74:  Call  DidActionSucceed  ( *Var0 )
   84:  Switch  *Var0
   90:  	Case  >  .False
   9C:  		Call  SetActorSounds    ( .Actor:Player .ActorSound:Hurt 0000015B 00000000 )
				%
				Set *VarE 0`
				If *VarD == 1`
					Set *VarE 1
				EndIf
				Call  GetOwnerTarget ( *VarB *VarC )
				Call  GetActorAttackBoost	( *VarB *VarD )
				If *VarD > 0
					Add   *VarE *VarD
				EndIf
				Call  GetActorDefenseBoost	( *VarB *VarD )
				If *VarD > 0
					Add   *VarE *VarD
				EndIf
				%Cap at +6 boost
				If *VarE > 6`
					Set *VarE 6`
				EndIf
				If *VarE > 0`
					Set *VarD *VarE
					Loop *VarD			%looping with varF might not work since effect function can modify it
						Call     GetActorPos 	( .Actor:Player *Var[6] *Var[7] *Var[8] )
						Sub  *Var[7]  00000005 	%spawn particles below enemy 
						Sub  *Var[8]  00000002 
						Call     PlayEffect  	( 00000011 00000002 *Var[6] *Var[7] *Var[8] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
						%copied from amazy dayzee idle script, but it isn't in the effect enum		
					EndLoop				
				EndIf
				%
				Add *VarE 6`
   B8:  		Call  PlayerDamageEnemy ( *Var0 ~Flags:DamageType:Jump 00000000 00000000 *VarE 00000070 )
   DC:  	Default
   E4:  		Call  SetActorSounds    ( .Actor:Player .ActorSound:Hurt 0000015B 00000000 )
				%
				Set *VarE 0`
				If *VarD == 1`
					Set *VarE 1
				EndIf
				Call  GetOwnerTarget ( *VarB *VarC )
				Call  GetActorAttackBoost	( *VarB *VarD )
				If *VarE > 0
					Add   *VarE *VarD
				EndIf
				Call  GetActorDefenseBoost	( *VarB *VarD )
				If *VarE > 0
					Add   *VarE *VarD
				EndIf
				%Cap at +6 boost
				If *VarE > 6`
					Set *VarE 6`
				EndIf
				If *VarE > 0`
					Set *VarD *VarE
					Loop *VarD
						Call     GetActorPos 	( .Actor:Player *Var[6] *Var[7] *Var[8] )
						Sub  *Var[7]  00000005 	%spawn particles below enemy 
						Sub  *Var[8]  00000002 
						Call     PlayEffect  	( 00000011 00000002 *Var[6] *Var[7] *Var[8] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
						%copied from amazy dayzee idle script, but it isn't in the effect enum		
					EndLoop				
				EndIf			
				%
				Add *VarE 4`   
  100:  		Call  PlayerDamageEnemy ( *Var0 ~Flags:DamageType:Jump 00000000 00000000 *VarE 00000030 )
  124:  EndSwitch
  12C:  Switch  *Var0
  138:  	Case  >  .HitResult:Hit % 0
  144:  		ExecWait  $Script_802A15D8
  150:  	Default
  158:  		ExecWait  $Script_802A17C4
  164:  EndSwitch
  16C:  Return
  174:  End
}

#new:Script $Script_802A2A4C
{
    0:  ExecWait  $Script_802A2184
    C:  Call  PlayerTestEnemy   ( *Var0 ~Flags:DamageType:Jump 00000000 00000000 00000001 00000000 )
		Set *VarD 0`
   30:  If  *Var0  ==  .HitResult:Miss % 6
			Set *VarD 1`
   %40:  	ExecWait  $Script_802A1FEC
   %4C:  	Return
   54:  EndIf
   5C:  ExecWait  $Script_802A26B4
   68:  Wait  1`
   74:  Call  DidActionSucceed  ( *Var0 )
   84:  Switch  *Var0
   90:  	Case  >  .False
   9C:  		Call  SetActorSounds    ( .Actor:Player .ActorSound:Hurt 0000015C 00000000 )
				%
				Set *VarE 0`
				If *VarD == 1`
					Set *VarE 1
				EndIf
				Call  GetOwnerTarget ( *VarB *VarC )
				Call  GetActorAttackBoost	( *VarB *VarD )
				If *VarD > 0
					Add   *VarE *VarD
				EndIf
				Call  GetActorDefenseBoost	( *VarB *VarD )
				If *VarD > 0
					Add   *VarE *VarD
				EndIf
				%Cap at +6 boost
				If *VarE > 6`
					Set *VarE 6`
				EndIf
				If *VarE > 0`
					Set *VarD *VarE
					Loop *VarD			%looping with varF might not work since effect function can modify it
						Call     GetActorPos 	( .Actor:Player *Var[6] *Var[7] *Var[8] )
						Sub  *Var[7]  00000005 	%spawn particles below enemy 
						Sub  *Var[8]  00000002 
						Call     PlayEffect  	( 00000011 00000002 *Var[6] *Var[7] *Var[8] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
						%copied from amazy dayzee idle script, but it isn't in the effect enum		
					EndLoop				
				EndIf
				%
				Add *VarE 8`
   B8:  		Call  PlayerDamageEnemy ( *Var0 ~Flags:DamageType:Jump 00000000 00000000 *VarE 00000070 )
   DC:  	Default
   E4:  		Call  SetActorSounds    ( .Actor:Player .ActorSound:Hurt 0000015C 00000000 )
				%
				Set *VarE 0`
				If *VarD == 1`
					Set *VarE 1
				EndIf
				Call  GetOwnerTarget ( *VarB *VarC )
				Call  GetActorAttackBoost	( *VarB *VarD )
				If *VarE > 0
					Add   *VarE *VarD
				EndIf
				Call  GetActorDefenseBoost	( *VarB *VarD )
				If *VarE > 0
					Add   *VarE *VarD
				EndIf
				%Cap at +6 boost
				If *VarE > 6`
					Set *VarE 6`
				EndIf
				If *VarE > 0`
					Set *VarD *VarE
					Loop *VarD
						Call     GetActorPos 	( .Actor:Player *Var[6] *Var[7] *Var[8] )
						Sub  *Var[7]  00000005 	%spawn particles below enemy 
						Sub  *Var[8]  00000002 
						Call     PlayEffect  	( 00000011 00000002 *Var[6] *Var[7] *Var[8] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
						%copied from amazy dayzee idle script, but it isn't in the effect enum		
					EndLoop				
				EndIf			
				%
				Add *VarE 5`   
  100:  		Call  PlayerDamageEnemy ( *Var0 ~Flags:DamageType:Jump 00000000 00000000 *VarE 00000030 )
  124:  EndSwitch
  12C:  Switch  *Var0
  138:  	Case  >  .HitResult:Hit % 0
  144:  		ExecWait  $Script_802A15D8
  150:  	Default
  158:  		ExecWait  $Script_802A17C4
  164:  EndSwitch
  16C:  Return
  174:  End
}
