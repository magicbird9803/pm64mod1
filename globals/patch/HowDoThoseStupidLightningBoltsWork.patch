%How do Watt's lightning bolts work?

%Function 800723B0 creates the bolts


%Various asm functions are used to do other stuff like move it around and temporarily delete them

%Functions that do not control lightning bolts
%802DEB0C => load sprite (lightning bolts load independently of this)
%	*though replacing partner anims with the wrong ones has weird effects
%	Changing the sprite id loaded does not stop lightning bolts from spawning
%802DF2D8 => allocate components
%	Watt's sprite allocates 4 components, but replacing this with 1 component does not break
%	Since replacing watt's sprite id with others also doesn't break, this is expected
%802DE5E8 => delete sprite
%	Putting Watt away calls this once (same as the other partners)
%802DE2AC => update sprite
%	just updates Watt's idle anim


%Functions that could control lightning bolts
%802DCEDC => draw component
%	False positive
%	This is used for the rasters of her idle animation :/
%	You can mess with stuff to break things



%ok, let's try to run through 800723B0 to see what it actually does
%8005A564 = play effect
%with hardcoded effect id of 73
%messing this ID up usually causes a tlb exception at E00E6000 (effect code)

%???
%800667A0 = osMapTLB
%	does this have to do with the dma copy coming up?

%effect stuff is stored in a table at 8007F210
%each entry is size 0x18?


%8002973C = dma copy
%obtains hard coded effect code from memory
%look at 3E0930 - 3E12D0 for lightning bolt code
%	Length of DMA copy = 9A0
%it copies this back to E00E6000

%checks if a rom pointer is not 0 (if it is, skip loading the sprite)

%second heap malloc

%Second dma copy from 3E12D0 to 3E1690 (destination is variable)
%This contains the real sprite used

%second dma copy is done before returning out of the effect wrapper function




%after dma copying
%if return from dma copy == 0, skip to end

%8002AC28 = heap malloc
%if return value is 0, spin around forever (a jump statement that leads to itself)

%8002973C = dma copy (again)
%003E12D0 to 003E1690 at 80518C50? (or 80518C40?)
%dma copy length = 3C0

%and that is the end of the function
%it looks like it just loads other stuff from memory to be run later



%now for the stuff at E00E6000 (and around there)
%A1, A2, A3 = position

%???
%then jump to 8005A2BC

%does a heap malloc
%spins forever if malloc fails

%jump to E00E617C (?)
%then jump immediately back


%another heap malloc to _heap_malloc

%note that a lot of the heap mallocs are used for all effects

%E00E6000

%Effect struct

%The 5 lightning bolts have independently tracked position offsets (why)
%They also use independent animation state values

%Some values
%0 = pointer to some other data
%04 - 10 = unused?
%14 = x pos
%18 = y pos
%1C = z pos
%2C = a timer of some kind (effect will break if value is locked)
%24 = scale XY
%



%D down green shockwave

%???
%Image data
%3659B0
%366030
%Length = 680

%Image data
%(Damage numbers)
%350220
%352440
%Length = 2220

%???
%code
%389850
%38A350

%???
%image data
%8053BE20
%Damage star?
%38A350
%38ADF0
%Length = AA0

%???
%366D60
%36A8D0
%Length = 3B70


%effect stuff is stored in a table at 8007F210 ?		(table end = 8007FEA0?)
%each entry is size 0x18?
%0 = ??? memory address
%4 = code start address ROM
%8 = code end address ROM
%C = ??? memory address
%10 = image start address ROM
%14 = image end address ROM

%0x73 => 115 dec

/%
here is the entire table lol (also at ROM 5A610)
00000000 00000000 00000000 00000000 00000000 00000000 
E0002000 003278F0 00328110 E0002000 00326410 003278F0
00000000 00000000 00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 00000000 00000000
E000C160 00328110 00328EA0 E000C000 00328EA0 0032C110 
E000E000 0032C110 0032C7A0 E000E000 00328EA0 0032C110
E00101E8 0032C7A0 0032CEC0 E0010000 0032CEC0 0032DD10 
E0012204 0032DD10 0032E490 E0012000 0032CEC0 0032DD10

E0014000 0032E490 0032EC50 E0014000 0032EC50 0032EE30 
E0016000 0032EE30 0032F580 E0016000 0032EC50 0032EE30
E0018078 0032F580 0032FB50 E0018000 0032FB50 0032FE30 
E001A000 0032FE30 00330460 E001A000 00330460 00330910
E001C000 00330910 00330F00 E001C000 00330F00 00331940 
E001E000 00331940 003326A0 E001E000 003326A0 00333EC0
E00202CC 00333EC0 00334C70 E0020000 00334C70 00337240 
E0022000 00337240 00337FC0 E0022000 00337FC0 00339250
E0024000 00339250 00339F60 E0024000 00339F60 0033B180 
E0026000 0033B180 0033BBD0 E0026000 0033BBD0 0033CDF0

E0028000 0033CDF0 0033D610 E0028000 0033D610 0033E8C0 
E002A000 0033E8C0 0033F000 E002A000 0033F000 0033FE80
E002C000 0033FE80 00340880 E002C000 00340880 003419E0 
E002E000 003419E0 00342140 E002E000 00328EA0 0032C110
E0030000 00342140 00343040 E0030000 00343040 00343680 
E0032000 00343680 00343F70 E0032000 00343F70 00344A10
E0034000 00344A10 003451E0 E0034000 003451E0 003454E0 
E0036000 003454E0 00345B40 E0036000 00345B40 0034DD20
E0038000 0034DD20 0034E770 E0038000 0034E770 0034EC80 
E003A000 0034EC80 0034F4C0 E003A000 00328EA0 0032C110

E003C000 0034F4C0 00350220 E003C000 00350220 00352440 
E003E000 00352440 00352CE0 E003E000 00352CE0 00353300
E0040000 00353300 00353BB0 E0040000 00353BB0 003547A0 
E0042000 003547A0 00354F60 E0042000 00343040 00343680
E0044000 00354F60 00355EE0 E0044000 00337FC0 00339250 
E0046000 00355EE0 00356530 E0046000 00356530 00356980
E0048000 00356980 003573A0 E0048000 003573A0 003584C0 
E004A000 003584C0 003593B0 E004A000 003593B0 00359F20
E004C000 00359F20 0035A5E0 E004C000 0035A5E0 0035B9D0 
E004E000 0035B9D0 0035BFD0 E004E000 00328EA0 0032C110

E0050000 0035BFD0 0035C550 E0050000 0035C550 0035CA80 
E0052000 0035CA80 0035D510 E0052000 0035D510 0035DA00
00000000 00000000 00000000 00000000 00000000 00000000 
E0056000 0035DA00 0035E920 E0056000 0033D610 0033E8C0
E0058000 0035E920 0035F0E0 E0058000 0035F0E0 003602C0 
E005A000 003602C0 00360A30 E005A000 00360A30 00360F40
E005C000 00360F40 00361670 E005C000 00361670 003625C0 
E005E000 003625C0 00362C50 E005E000 00362C50 00363160
E0060000 00363160 003638C0 E0060000 003638C0 00364300 
E0062000 00364300 00364C00 E0062000 00364C00 00364F10

E0064000 00364F10 003659B0 E0064000 003659B0 00366030 
E0066000 00366030 00366D60 E0066000 00366D60 0036A8D0
E0068000 0036A8D0 0036AEE0 E0068000 0036AEE0 0036D020 
E006A1E8 0036D020 0036DF90 E006A000 0036DF90 0036E1D0
E006C000 0036E1D0 0036ED60 E006C000 0036ED60 00372790 
E006E000 00372790 003733E0 E006E000 003733E0 003740B0
E0070000 003740B0 00374E50 E0070000 00337FC0 00339250 
E0072000 00374E50 00375510 E0072000 00375510 00376460
E0074000 00376460 00377070 E0074000 00337FC0 00339250 
E0076000 00377070 00377F80 E0076000 00377F80 0037A3F0

E0078000 0037A3F0 0037ADD0 E0078000 0037ADD0 0037C540 
E007A000 0037C540 0037D180 E007A000 0037D180 0037D490
E007C000 0037D490 0037D9D0 E007C000 0037D9D0 0037F720 
E007E000 0037F720 003803A0 E007E000 003803A0 003812C0
E0080000 003812C0 00381E00 E0080000 00381E00 00385640 
E0082000 00385640 003863B0 E0082000 003863B0 003889D0
E0084084 003889D0 00389850 E0084000 0037D9D0 0037F720 
E0086000 00389850 0038A350 E0086000 0038A350 0038ADF0
E008817C 0038ADF0 0038BBA0 E0088000 0038BBA0 0038C5F0 
E008A188 0038C5F0 0038D070 E008A000 0038D070 0038DE00

E008C000 0038DE00 0038E990 E008C000 0038E990 0038EE60 
E008E000 0038EE60 0038F710 E008E000 0038F710 0038F900
E0090000 0038F900 003903D0 E0090000 003903D0 00391D30 
E0092000 00391D30 00392440 E0092000 00392440 003928D0
E0094000 003928D0 003930A0 E0094000 003930A0 00394280 
E0096000 00394280 00394670 E0096000 00394670 00395BB0
E0098000 00395BB0 003960F0 E0098000 003960F0 003965B0 
E009A000 003965B0 00397040 E009A000 00397040 003981F0
E009C000 003981F0 00398BC0 E009C000 00398BC0 0039FF20 
E009E000 0039FF20 003A0D60 E009E000 003A0D60 003A2290

E00A0000 003A2290 003A2440 E00A0000 003A2440 003A2990 
E00A2000 003A2990 003A33D0 E00A2000 003A33D0 003A37E0
E00A4000 003A37E0 003A4320 E00A4000 003A4320 003A5550 
E00A6000 003A5550 003A5BE0 E00A6000 003A5BE0 003A70F0
E00A8000 003A70F0 003A77A0 E00A8000 003A77A0 003AA920 
E00AA000 003AA920 003AB030 E00AA000 003AB030 003AEE20
E00AC000 003AEE20 003AF700 E00AC000 003AF700 003B2350 
E00AE000 003B2350 003B2D90 E00AE000 003B2D90 003B3EB0
E00B0000 003B3EB0 003B46A0 E00B0000 003B46A0 003B4790 
E00B2000 003B4790 003B5340 E00B2000 003B5340 003B5CF0

E00B4000 003B5CF0 003B6BF0 E00B4000 003B6BF0 003B7160 
E00B6000 003B7160 003B78D0 E00B6000 003B78D0 003B7B80
E00B8000 003B7B80 003B8860 E00B8000 003B8860 003B8BD0 
E00BA000 003B8BD0 003B9A70 E00BA000 003B9A70 003BA030
E00BC000 003BA030 003BAEA0 E00BC000 003BAEA0 003BBF60 
E00BE000 003BBF60 003BCA90 E00BE000 003BCA90 003BCD60
E00C0000 003BCD60 003BD9A0 E00C0000 003BD9A0 003C11D0 
E00C2000 003C11D0 003C1BA0 E00C2000 003C1BA0 003CADF0
E00C4000 003CADF0 003CB890 E00C4000 003CB890 003CC9E0 
E00C6000 003CC9E0 003CD6E0 E00C6000 003CD6E0 003CF3A0

E00C8000 003CF3A0 003CFAF0 E00C8000 003CFAF0 003D0500 
E00CA000 003D0500 003D11E0 E00CA000 003D11E0 003D1690
E00CC000 003D1690 003D2580 E00CC000 003D2580 003D2AC0 
E00CE000 003D2AC0 003D3930 E00CE000 003D3930 003D3E20
E00D0000 003D3E20 003D4970 E00D0000 003593B0 00359F20 
E00D2000 003D4970 003D4E90 E00D2000 003D4E90 003D5020
00000000 00000000 00000000 00000000 00000000 00000000 
E00D6000 003D5020 003D5F30 E00D6000 003D5F30 003D67C0
E00D8000 003D67C0 003D7040 E00D8000 003D7040 003D7240 
E00DA000 003D7240 003D7770 E00DA000 003D7770 003D7A70

E00DC000 003D7A70 003D80C0 E00DC000 003D80C0 003D8720 
E00DE000 003D8720 003D9100 E00DE000 003D9100 003DB460
E00E0000 003DB460 003DBF40 E00E0000 003DBF40 003DC310 
E00E2000 003DC310 003DCD50 E00E2000 003DCD50 003DE000
E00E4000 003DE000 003DEE60 E00E4000 003DEE60 003E0930 
E00E6000 003E0930 003E12D0 E00E6000 003E12D0 003E1690		%115
E00E8000 003E1690 003E1CD0 E00E8000 003E1CD0 003E1EE0 
E00EA000 003E1EE0 003E2960 E00EA000 003E2960 003E43A0
00000000 00000000 00000000 00000000 00000000 00000000 
E010A000 003E43A0 003E5350 E010A000 003E5350 003E54C0

E010C000 003E54C0 003E5F30 E010C000 003E5F30 003EB4E0 
E010E32C 003EB4E0 003EBE60 E010E000 003EBE60 003F83F0
E0110000 003F83F0 003F8CC0 E0110000 003F8CC0 003F9E50 
E0112000 003F9E50 003FA4B0 E0112000 003FA4B0 003FEAE0
E0114000 003FEAE0 003FF250 E0114000 003FF250 00402640 
E0116000 00402640 00403400 E0116000 003FA4B0 003FEAE0
E0118000 00403400 00403BF0 E0118000 00403BF0 00404220 
E011A000 00404220 00404F40 E011A000 00404F40 00406B40
E011C000 00406B40 00407080 E011C000 00407080 00409990 
E011E000 00409990 0040A1C0 E011E000 0040A1C0 0040B3F0

E0120000 0040B3F0 0040BBA0 E0120000 0040BBA0 0040C5A0 
E0122000 0040C5A0 0040D290 E0122000 0040D290 00412730
E0124000 00412730 00413360 E0124000 00337FC0 00339250 
E0126000 00413360 00413FA0 E0126000 00413FA0 00414BA0
E0128000 00414BA0 00415060 E0128000 00415060 00415D90
%/

%Total length is C90 (0x86 effects)



%how does the load effect function work?

%set S2 to the effect ID (originally A0)
%load a hardcoded pointer of 8007F210 into V1	
%multiply S2 by 0x18 (into V0)
%set S1 to pointer + V0 (which was 0x18 * id)
%set A0 to 0
%set S0 to 800A4000

%	Loop
%(V0) load from S0 (0 + effect table entry)
%andi by 1
%if it is 0, go to next iteration and increment A0
%check effect ID in V0 (4 + effect table entry)
%if it is equal to S2, escape the loop + check if A0 < 15 into V0

%increment A0
%check if A0 < 15 into V0
%if A0 < 15, go back to top of loop + increment S0 by 0x20

%if not 0, skip ahead past loading

%...then set up effect ID stuff