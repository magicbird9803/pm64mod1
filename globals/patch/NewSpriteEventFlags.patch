%Let's add new sprite event flags
%Flag 00000001 = last stand (Half incoming damage AFTER defense)
%Flag 00000040 = cloud 9 (Reduce incoming damage by 1/3 AFTER defense)

%watch out for enemies with these flags

%It seems that only flag 4 is checked somewhere? (To do: Test its effect)


%Second set of new flags
%Flag 01000000 = Attacks are capped to 1 damage (after calculating defense)
%Flag 02000000 = Negate all attacks that aren't exact kills (after calculating defense)
%Flag 04000000 = Negate all attacks that aren't lethal (weaker version of 2)
%Flag 08000000 = Dark energy (Damage on jump, with no way to get around it)
%Flag 20000000 = Front spiky 2 (Triggers when the fiery flag would trigger)
%	Partially functioning right now, Bow's smack doesn't trigger it but it doesn't matter that much since the enemies I use it on have a lot of defense

%could come up with weirder mathy flags like "even damage is negated" but I don't want you to have to use high level math to play a mario game :P

%	^	I'll put some of them in the game in case I want to make some more wacky enemy mechanics

%Flag 10000000 = Odd damage is negated
%Flag 40000000 = When at max hp, lethal hits will fail ("Ultra Sturdy") (This is a much stronger version of sturdy)
%Flag 80000000 = When at max hp, lethal hits become nonlethal (equal to max hp - 1) ("Sturdy") (like in the pokemon games)


%Flag 00400000 = last stand * 2 (division by 4)
%	^	No!!! charging enemies use this flag!

%Flag 00020000 = last stand * 2 (division by 4)


%changed the damage flag storage location from 480 + battle data pointer to 19C + pointer since 19C is actually unused while 480 is kind of unused I think


%800DC4F0 is unused I think?
%However, it is set to 0 when changing maps, so it might not be part of "battle data"
%though it is never set to anything else IIRC
%(though some battle data surrounding it is also reset, so that might just be what happens to that part of the battle data)

%Changed it to 19C so it should be better

%Lets check the flags and store them somewhere else for later (Probably unneccessary on second thought)
% C0:  LAW       V0, 800DC070
@Hook 1A02E4
{
LW 		V0, 7C (FP) 	%where the flags are
SW		V0, 19C (S1)	%S1 = 800DC070 I think
LUI 	V0, 800E 		%hooked over
J 		80271A0C
LW 		V0, C070 (V0) 	%hooked over
}

%Mario sprite event flags stuff

%1A0224 --> 80271944
%New fire flag

%250:  ANDI      V0, V1, 2
%254:  BEQ       V0, R0, .o2C4
%258:  NOP
@Hook 1A0474
{
	PUSH	V0
	LUI		V0, 800
	AND     V0, V1, V0
	BEQ		V0, R0, .normal
	NOP
	%Check this special value (Might be some kind of special flag to ignore certain contact hazards)
	LW      V0, 18C (S4)
	ANDI    V0, V0, 10
	BNE     V0, R0, .normal
	NOP
	POP		V0
	J		80271BD8	%Execute fire stuff
	NOP
	.normal
	POP		V0
	ANDI    V0, V1, 2
	BEQ     V0, R0, .branch
	NOP
	J		80271B9C	%normal next code
	NOP
	.branch
	J		80271C08	%do branch
	NOP
}


%reduce mario's attack power against certain enemies

%Pre-defense last stand (Now removed for consistency with how the badge now works)
/%
@Hook 1A0B84
{
PUSH	T0, T1, T2, T3
LIO		T0, 800DC070
LW		T1, 19C (T0)	
ANDI	T1, T1, 0001 %check 1 flag
BEQ		T1, R0, .end
ORI		T3, S0, 0
SRL		T3, S0, 1
.end
ORI		S0, T3, 0
POP		T0, T1, T2, T3
LUI 	V1, 4000 %hooked over
J 		802722AC
AND 	V0, V0, V1 %hooked over
}
%/

@Hook 1A0CAC %if I recall correctly, hooks overwrite function overrides (IncreaseMaxHealth.patch has overrides here)	(though I had to eventually remove it because star rod doesn't like conflicting patches)
{
	PUSH	T0, T1, T2, T3
	LIO		T0, 800DC070
	%now execute paralysis check
	LB		T1, 210 (S3) 
	LI      T2, 5
	BNE		T1, T2, .noparalyze
	NOP
	BEQ		S0, R0, .noparalyze
	NOP
	ADDI	S0, S0, FFFF
	.noparalyze
	LW		T1, 19C (T0)	
	ANDI	T1, T1, 0001 %check 1 flag
	BEQ		T1, R0, .nolaststand
	ORI		T3, S0, 0
	ADDI	T3, S0, 1
	SRL		T3, T3, 1
	ORI		S0, T3, 0
	.nolaststand
	LW		T1, 19C (T0)	
	LUI		T2, 0002
	AND 	T1, T1, T2 %00020000
	BEQ		T1, R0, .nosuperlaststand
	ORI		T3, S0, 0
	ADDI	T3, S0, 3
	SRL		T3, T3, 2		%Round up by adding 3 then rounding down
	ORI		S0, T3, 0
	.nosuperlaststand	
	LW		T1, 19C (T0)	
	ANDI	T1, T1, 0040 %check 4 flag
	BEQ		T1, R0, .nocloud9
	ORI		T3, S0, 0
	ORI		T2, R0, 3
	SLL		T3, S0, 1
	DIV		T3, T2
	NOP		%apparently you can't have div and mflo next to each other
	NOP		%so... empty space
	MFLO	AT %put result in AT
	ADD		T3, AT, R0
	MFHI	AT %get remainder
	BEQ		AT, R0, .nocloud9
	NOP
	ADDI	T3, T3, 1 %if there is a remainder, add 1 to round up
	.nocloud9
	ORI		S0, T3, 0
	%check 01000000 flag
	LUI		T2, 0100
	LW		T1, 19C (T0)	
	AND		T1, T1, T2 
	BEQ		T1, R0, .nosingleflag
	NOP
	SLTI	T2, S0, 2
	BNE		T2, R0, .nosingleflag
	NOP
	ADDIU	S0, R0, 1	%set damage to 1
	.nosingleflag
	%check 02000000 flag
	LUI		T2, 0200
	LW		T1, 19C (T0)	
	AND		T1, T1, T2 
	BEQ		T1, R0, .nocriticalflag
	NOP
	LHU		V0, 1B8 (S3)
	BEQ		V0, S0, .nocriticalflag
	NOP
	ADDIU	S0, R0, 0	%set damage to 0
	.nocriticalflag
	%check 04000000 flag
	LUI		T2, 0400
	LW		T1, 19C (T0)	
	AND		T1, T1, T2 
	BEQ		T1, R0, .nosubcriticalflag
	NOP
	LHU		V0, 1B8 (S3)
	BLE		V0, S0, .nosubcriticalflag
	NOP
	ADDIU	S0, R0, 0	%set damage to 0
	.nosubcriticalflag
	%check 10000000 flag
	LUI		T2, 1000
	LW		T1, 19C (T0)	
	AND		T1, T1, T2 
	BEQ		T1, R0, .nooddnegateflag
	NOP
	ANDI	T2, V0, 1
	BEQ		T2, R0, .nooddnegateflag
	NOP
	ADDIU	S0, R0, 0	%set damage to 0
	.nooddnegateflag	
	%check 40000000 flag
	LUI		T2, 4000
	LW		T1, 19C (T0)	
	AND		T1, T1, T2 
	BEQ		T1, R0, .noultrasturdyflag
	NOP
	LHU		T2, 1BA (S3)
	LHU		V0, 1B8 (S3)
	BNE		T2, V0, .noultrasturdyflag		%Only at max hp
	NOP
	BGT		V0, S0, .noultrasturdyflag		%if curr hp > damage, skip (otherwise set damage to 0)
	NOP
	ADDIU	S0, R0, 0	%set damage to 0
	.noultrasturdyflag
	%check 80000000 flag
	LUI		T2, 8000
	LW		T1, 19C (T0)	
	AND		T1, T1, T2 
	BEQ		T1, R0, .nosturdyflag
	NOP
	LHU		T2, 1BA (S3)
	LHU		V0, 1B8 (S3)
	BNE		T2, V0, .nosturdyflag		%Only at max hp
	NOP
	BGT		V0, S0, .nosturdyflag		%if curr hp > damage, skip (otherwise set damage to max hp - 1)
	NOP
	ADDIU	S0, T2, 0	%set damage to maxhp - 1
	ADDI	S0, S0, FFFF
	.nosturdyflag
	%Cheats
	LAB		T0, 8010F2A8
	BEQ		T0, R0, .nocheats
	NOP
	LAW 	T0, 800DC280
	ANDI	T0, T0, 0020
	BEQ		T0, R0, .nocheats
	NOP
	ORI		S0, R0, 63
	.nocheats
	%Force it to be at least 0
	BGT		S0, R0, .end
	NOP
	COPY	S0, R0
	.end
	POP		T0, T1, T2, T3
	LHU		V0, 1B8 (S3) %hooked over
	J 		802723D4
	SUBU 	V0, V0, S0 %hooked over
}

%partners use a different damage function, so we have to do everything again

@Hook 1ACD00
{
LW		A0, 7C (S6) %get sprite event flags (hooked over)
SW		A0, 19C (S1) %S1 = 800DC070 I think
J		8027E428
ANDI	V0, A0, 0020 %hooked over
}



%Make it so that Quake + Jump does not trigger spikiness (normally, jump moves are hardcoded to trigger spikiness unless you have spike shield, regardless of other factors)
%1A0034 --> 80271754
/%
   E0:  LW        V0, 188 (S2)								%(damage type word)
   E4:  ANDI      V0, V0, 80								%check for 80 (Jump)
%/
@Hook 1A0114
{
	LW        V0, 188 (S2)
	%Check for 800 flag
	ANDI      V0, V0, 800
	BNE		  V0, R0, .new
	NOP
	.normal
	LW        V0, 188 (S2)
	J		  8027183C
	ANDI      V0, V0, 80	%check it normally
	.new
	J		  8027183C
	ORI		  V0, R0, 0		%nope, no jump flag here
}

%1A0224 --> 80271944
/%
  1B8:  LW        V1, 188 (S4)
  1BC:  AND       V0, V0, V1
%/
@Hook 1A03DC
{
	LW        V1, 188 (S4)
	%Check for 800 flag
	ANDI      V1, V1, 800
	BNE		  V1, R0, .new
	NOP
	.normal
	LW        V1, 188 (S4)
	J		  80271B04
	AND       V0, V0, V1
	.new
	PUSH      T0
	LW        V1, 188 (S4)
	LI		  T0, FFFFFF7F		% not 80 flag
	AND		  V1, V1, T0
	POP		  T0
	J		  80271B04
	AND       V0, V0, V1
}


%Apply new damage event flags (dark energy and clubba spikiness)

%Note: Some of those flags are evaluated when checking for the hit result

%function at 1AC85C --> 8027DF7C
%E8:  LW        V0, 188 (S1)
%EC:  ORI       V1, V1, 80

/%
	%fire effect is triggered in two places for some reason, even though only one will execute
	%Fire trigger code 1
    164:  LW        V0, 188 (S1)
    168:  ORI       V1, V1, 40			%check for damage type 40 (and 10000000?)
    16C:  AND       V0, V0, V1
    170:  BNE       V0, R0, .o198		%if present, skip
    174:  NOP
    178:  LW        V0, 7C (S2)			%check sprite event flags
    17C:  ANDI      V0, V0, 2			%flag 2 = fire
    180:  BEQ       V0, R0, .o198		%if not there, skip
    184:  NOP
    188:  LW        V0, 18C (S1)		%check this special word
    18C:  ANDI      V0, V0, 10			
    190:  BEQ       V0, R0, .o340		%if 10 is not present, execute
    194:  NOP	
	%Fire trigger code 2
	30C:  LW        V0, 188 (S1)
	310:  ORI       V1, V1, 40
	314:  AND       V0, V0, V1
	318:  BNE       V0, R0, .o380
	31C:  COPY      A0, S3
	320:  LW        V0, 7C (S2)
	324:  ANDI      V0, V0, 2
	328:  BEQ       V0, R0, .o380
	32C:  NOP
	330:  LW        V0, 18C (S1)
	334:  ANDI      V0, V0, 10
	338:  BNE       V0, R0, .o380
	33C:  NOP
%/

@Hook 1AC944
{	
    PUSH	  V1
	LUI		  V1, 1000
    LW        V0, 188 (S1)
    ORI       V1, V1, 40			%check for damage type 40 (and 10000000?)
    AND       V0, V0, V1
    BNE       V0, R0, .original		%if present, skip
    NOP
	LUI		  V1, 2000
	LW        V0, 7C (S2)			%check sprite event flags
    AND       V0, V0, V1			%flag 2 = fire
    BEQ       V0, R0, .original		%if not there, skip
    NOP
    LW        V0, 18C (S1)		%check this special word
    ANDI      V0, V0, 10			
	BNE       V0, R0, .original		%if 10 is present, skip
	NOP	
	%Do the hammer hurt event	
	POP		  V1
	J		8027E0AC
	NOP
	.original
	%original code
	POP		  V1
	LW        V0, 188 (S1)
	J		8027E06C
	ORI       V1, V1, 80
}

%function at 1AC85C --> 8027DF7C
%178:  LW        V0, 7C (S2)			%check sprite event flags
%17C:  ANDI      V0, V0, 2			%flag 2 = fire
@Hook 1AC9D4
{
	PUSH	V1
	LI		V1, 08000002			%check both fire flags now
	LW      V0, 7C (S2)
	AND     V0, V0, V1
	POP		V1
	J		8027E0FC
	NOP
}

%320:  LW        V0, 7C (S2)
%324:  ANDI      V0, V0, 2
@Hook 1ACB7C
{
	PUSH	V1
	LI		V1, 08000002			%check both fire flags now
	LW      V0, 7C (S2)
	AND     V0, V0, V1
	POP		V1
	J		8027E2A4
	NOP
}

%function at 1ACC08 --> 8027E328
%278:  LW        V0, 7C (S6)			%sprite event flags
%27C:  ANDI      V0, V0, 2
%Also check the front spikiness
@Hook 1ACE80
{
	PUSH	  V1
	LI		  V1, 08000002			%check both fire flags now
	LW        V0, 7C (S6)			%sprite event flags
	AND       V0, V0, V1
	POP		  V1
	J		  8027E5A8
	NOP
}

/%
@Hook 1AD2FC
{
PUSH	T0, T1, T2, T3
LIO		T0, 800DC070
LW		T1, 19C (T0)	
ANDI	T1, T1, 0001 %check 1 flag
BEQ		T1, R0, .end
ORI		T3, A0, 0
SRL		T3, A0, 1
.end
ORI		A0, T3, 0
POP		T0, T1, T2, T3
LB		V1, 0210 (T0)
J 		8027EA24
ADDIU	V0, R0, A
}
%/

@Hook 1AD440
{
	PUSH	T0, T1, T2, T3
	LIO		T0, 800DC070
	%start checking stuff
	%now execute paralysis check
	LB		T1, 210 (S3) 
	LI      T2, 5
	BNE		T1, T2, .noparalyze
	NOP
	BEQ		A0, R0, .noparalyze
	NOP
	ADDI	A0, A0, FFFF
	.noparalyze	
	LW		T1, 19C (T0)	
	ANDI	T1, T1, 0001 %check 1 flag
	BEQ		T1, R0, .nolaststand
	ORI		T3, A0, 0
	ADDI	T3, A0, 1
	SRL		T3, A0, 1
	ORI		A0, T3, 0
	.nolaststand
	LW		T1, 19C (T0)	
	LUI		T2, 0002
	AND 	T1, T1, T2 %00020000
	BEQ		T1, R0, .nosuperlaststand
	ORI		T3, A0, 0
	ADDI	T3, A0, 3
	SRL		T3, T3, 2		%Round up by adding 3 then rounding down
	ORI		A0, T3, 0
	.nosuperlaststand		
	LW		T1, 19C (T0)	
	ANDI	T1, T1, 0004 %check 4 flag
	BEQ		T1, R0, .nocloud9
	ORI		T3, A0, 0
	ORI		T2, R0, 3
	SLL		T3, A0, 1
	DIV		T3, T2
	NOP		%apparently you can't have div and mflo next to each other
	NOP		%so... empty space
	MFLO	AT %put result in AT
	ADD		T3, AT, R0
	MFHI	AT %get remainder
	BEQ		AT, R0, .nocloud9
	NOP
	ADDI	T3, T3, 1 %if there is a remainder, add 1 to round up
	.nocloud9
	ORI		A0, T3, 0
	%check 01000000 flag
	LUI		T2, 0100
	LW		T1, 19C (T0)	
	AND		T1, T1, T2 
	BEQ		T1, R0, .nosingleflag
	NOP
	SLTI	T2, A0, 2
	BNE		T2, R0, .nosingleflag
	NOP
	ADDIU	A0, R0, 1	%set damage to 1
	.nosingleflag
	%check 02000000 flag
	LUI		T2, 0200
	LW		T1, 19C (T0)	
	AND		T1, T1, T2 
	BEQ		T1, R0, .nocriticalflag
	NOP
	LHU		V0, 1B8 (S3) %hooked over
	BEQ		V0, A0, .nocriticalflag
	NOP
	ADDIU	A0, R0, 0	%set damage to 0
	.nocriticalflag
	%check 04000000 flag
	LUI		T2, 0400
	LW		T1, 19C (T0)	
	AND		T1, T1, T2 
	BEQ		T1, R0, .nosubcriticalflag
	NOP
	LHU		V0, 1B8 (S3) %hooked over
	BLE		V0, A0, .nosubcriticalflag
	NOP
	ADDIU	A0, R0, 0	%set damage to 0
	.nosubcriticalflag
	%check 10000000 flag
	LUI		T2, 1000
	LW		T1, 19C (T0)	
	AND		T1, T1, T2 
	BEQ		T1, R0, .nooddnegateflag
	NOP
	ANDI	T2, V0, 1
	BEQ		T2, R0, .nooddnegateflag
	NOP
	ADDIU	A0, R0, 0	%set damage to 0
	.nooddnegateflag	
	%check 40000000 flag
	LUI		T2, 4000
	LW		T1, 19C (T0)	
	AND		T1, T1, T2 
	BEQ		T1, R0, .noultrasturdyflag
	NOP
	LHU		T2, 1BA (S3)
	LHU		V0, 1B8 (S3)
	BNE		T2, V0, .noultrasturdyflag		%Only at max hp
	NOP
	BGT		V0, A0, .noultrasturdyflag		%if curr hp > damage, skip (otherwise set damage to 0)
	NOP
	ADDIU	A0, R0, 0	%set damage to 0
	.noultrasturdyflag
	%check 80000000 flag
	LUI		T2, 8000
	LW		T1, 19C (T0)	
	AND		T1, T1, T2 
	BEQ		T1, R0, .nosturdyflag
	NOP
	LHU		T2, 1BA (S3)
	LHU		V0, 1B8 (S3)
	BNE		T2, V0, .nosturdyflag		%Only at max hp
	NOP
	BGT		V0, A0, .nosturdyflag		%if curr hp > damage, skip (otherwise set damage to max hp - 1)
	NOP
	ADDIU	A0, T2, 0	%set damage to maxhp - 1
	ADDI	A0, A0, FFFF
	.nosturdyflag	
	%Cheats
	LAB		T0, 8010F2A8
	BEQ		T0, R0, .nocheats
	NOP
	LAW 	T0, 800DC280
	ANDI	T0, T0, 0020
	BEQ		T0, R0, .nocheats
	NOP
	ORI		A0, R0, 63
	.nocheats	
	%Force it to be at least 0
	BGT		A0, R0, .end
	NOP
	COPY	A0, R0
	.end
	POP		T0, T1, T2, T3
	LHU		V0, 1B8 (S3) %hooked over
	J 		8027EB68
	SUBU 	V0, V0, A0 %hooked over
}

%items use a third set of functions, but i have the big lazy and don't want to do everything a third time

%^ future shade has the motivation to do this, so here we go
%Items actually ignore defense, so there isn't much of a way to have stuff happen before / after defense


%17FFC8 --> 802516E8
@Hook 1801A0
{
	LW        A0, 7C (S7)
	SW		  A0, 19C (S4) %S1 = 800DC070 I think
	J		  802518C8
	ANDI      V0, A0, 20
}
%  1D8:  LW        A0, 7C (S7)
%  1DC:  ANDI      V0, A0, 20



%function
% 0017FFC8 --> 802516E8

%watch out for IncreaseMaxHealth patch here
@Hook	18036C
{
	PUSH	T0, T1, T2, T3
	LIO		T0, 800DC070
	%Start checking stuff
	%now execute paralysis check
	LB		T1, 210 (S3) 
	LI      T2, 5
	BNE		T1, T2, .noparalyze
	NOP
	BEQ		A0, R0, .noparalyze
	NOP
	ADDI	A0, A0, FFFF
	.noparalyze	
	LW		T1, 19C (T0)	
	ANDI	T1, T1, 0001 %check 1 flag
	BEQ		T1, R0, .nolaststand
	ORI		T3, A0, 0
	ADDI	T3, A0, 1
	SRL		T3, A0, 1
	ORI		A0, T3, 0
	.nolaststand
	LW		T1, 19C (T0)	
	LUI		T2, 0002
	AND 	T1, T1, T2 %00020000
	BEQ		T1, R0, .nosuperlaststand
	ORI		T3, A0, 0
	ADDI	T3, A0, 3
	SRL		T3, T3, 2		%Round up by adding 3 then rounding down
	ORI		A0, T3, 0
	.nosuperlaststand		
	LW		T1, 19C (T0)	
	ANDI	T1, T1, 0040 %check 4 flag
	BEQ		T1, R0, .nocloud9
	ORI		T3, A0, 0
	ORI		T2, R0, 3
	SLL		T3, A0, 1
	DIV		T3, T2
	NOP		%apparently you can't have div and mflo next to each other
	NOP		%so... empty space
	MFLO	AT %put result in AT
	ADD		T3, AT, R0
	MFHI	AT %get remainder
	BEQ		AT, R0, .nocloud9
	NOP
	ADDI	T3, T3, 1 %if there is a remainder, add 1 to round up
	.nocloud9
	ORI		A0, T3, 0
	%check 01000000 flag
	LUI		T2, 0100
	LW		T1, 19C (T0)	
	AND		T1, T1, T2 
	BEQ		T1, R0, .nosingleflag
	NOP
	SLTI	T2, A0, 2
	BNE		T2, R0, .nosingleflag
	NOP
	ADDIU	A0, R0, 1	%set damage to 1
	.nosingleflag
	%check 02000000 flag
	LUI		T2, 0200
	LW		T1, 19C (T0)	
	AND		T1, T1, T2 
	BEQ		T1, R0, .nocriticalflag
	NOP
	LHU		V0, 1B8 (S3) %hooked over
	BEQ		V0, A0, .nocriticalflag
	NOP
	ADDIU	A0, R0, 0	%set damage to 0
	.nocriticalflag
	%check 04000000 flag
	LUI		T2, 0400
	LW		T1, 19C (T0)	
	AND		T1, T1, T2 
	BEQ		T1, R0, .nosubcriticalflag
	NOP
	LHU		V0, 1B8 (S3) %hooked over
	BLE		V0, A0, .nosubcriticalflag
	NOP
	ADDIU	A0, R0, 0	%set damage to 0
	.nosubcriticalflag
	%check 10000000 flag
	LUI		T2, 1000
	LW		T1, 19C (T0)	
	AND		T1, T1, T2 
	BEQ		T1, R0, .nooddnegateflag
	NOP
	ANDI	T2, V0, 1
	BEQ		T2, R0, .nooddnegateflag
	NOP
	ADDIU	A0, R0, 0	%set damage to 0
	.nooddnegateflag	
	%check 40000000 flag
	LUI		T2, 4000
	LW		T1, 19C (T0)	
	AND		T1, T1, T2 
	BEQ		T1, R0, .noultrasturdyflag
	NOP
	LHU		T2, 1BA (S3)
	LHU		V0, 1B8 (S3)
	BNE		T2, V0, .noultrasturdyflag		%Only at max hp
	NOP
	BGT		V0, A0, .noultrasturdyflag		%if curr hp > damage, skip (otherwise set damage to 0)
	NOP
	ADDIU	A0, R0, 0	%set damage to 0
	.noultrasturdyflag
	%check 80000000 flag
	LUI		T2, 8000
	LW		T1, 19C (T0)	
	AND		T1, T1, T2 
	BEQ		T1, R0, .nosturdyflag
	NOP
	LHU		T2, 1BA (S3)
	LHU		V0, 1B8 (S3)
	BNE		T2, V0, .nosturdyflag		%Only at max hp
	NOP
	BGT		V0, A0, .nosturdyflag		%if curr hp > damage, skip (otherwise set damage to max hp - 1)
	NOP
	ADDIU	A0, T2, 0	%set damage to maxhp - 1
	ADDI	A0, A0, FFFF
	.nosturdyflag	
	%Cheats
	LAB		T0, 8010F2A8
	BEQ		T0, R0, .nocheats
	NOP
	LAW 	T0, 800DC280
	ANDI	T0, T0, 0020
	BEQ		T0, R0, .nocheats
	NOP
	ORI		A0, R0, 63
	.nocheats	
	%Force it to be at least 0
	BGT		A0, R0, .end
	NOP
	COPY	A0, R0
	.end
	POP		T0, T1, T2, T3
	LHU       V0, 1B8 (S3)
	J		  80251A94
	SUBU      V0, V0, A0
}

@Function 180384
{
	SH        R0, 1B8 (S3)
}




%What does the block of data after the sprite event flags do?
/%
  1A8:  LW        V0, 80 (S6)		%this data block
  1AC:  LW        V1, 188 (S4)		%damage type word
  1B0:  AND       V0, V0, V1		%remove stuff
  1B4:  BEQ       V0, R0, .o1C4		%skip to 1C4 if the flags in the data block aren't present
  1B8:  ANDI      V0, V1, 80		%then check flag 80
  1BC:  LI        T0, 1				%load 1
  1C0:  SW        T0, 20 (SP)		%store it to 20 + SP (what does this do?)
        .o1C4
  1C4:  BEQ       V0, R0, .o1DC		%if 80 is not present (in either damage word or data block), skip to 1DC
  1C8:  NOP
  1CC:  LW        V0, 7C (S6)		%Load sprite event flags
  1D0:  ANDI      V0, V0, 10		%Check for flag 10 (spiky top)
  1D4:  BNE       V0, R0, .o3E8		%If present, go to o3E8
  1D8:  NOP
        .o1DC
%/



%List of checked flags (Checked with breakpoints and battlelib)
%		usually checked with 7C (S8) I think
%			or it's 7C + part pointer
%		Lower 2 bytes are checked with ANDI
%		Higher 2 bytes are checked by loading the flag with LUI and then checking with AND
%		There could be more but that's pretty unlikely
%Everything else is probably fair game
%To do: Document what exactly these flags actually do
%00000002	(harder to find this one)
%	???	is the 4 flag actually checked anywhere?
%00000010
%00000020	(checked a lot of times :/)
%00000080	(checked twice?)
%00000200
%00000600	(2 and 4 flags?)
%00000800
%00001000	(flippable)
%00002000		<-- also checked by Chill Out
%00004000		<-- also checked by Chill Out
%00008000
%00010000
%00040000																<-- First star rod flag
%	Checked separately from 80000 flag sometimes
%000C0000	%8 + 4 flags?												<-- Both star rod flags (*80000 checked separately for star beam?)
%	does a weird thing where damage type flag 08000000 is removed
%	The defense piercing flag!
%	Sidenote: Function_has_enchanted_part also checks these
%00100000
%00200000	= spiny spikiness? (Spinies have this flag and it makes bow unable to hit them?)
%00400000	<-- Used for charged enemies (not checked through battlelib functions) (Also checked by Chill Out)
%00800000

%List of unused flags in vanilla (?) (*Warning: some vanilla enemies might have them since some enemies have unused flags and I didn't check everything)
%	(list does not include stuff that the documentation below says is used by some enemies)
%00000040
%00000100
%00020000
%01000000
%02000000
%04000000	
%08000000
%10000000	
%20000000
%40000000
%80000000

%What does the documentation say about these?
%00000002 = fiery	
%00000008 = (not above?) icy ("no known effect")
%00000010 = spike top
%00000020 = illusory
%00000080 = electrified
%00000100 = (not above?) "may be connected to event 17"
%00000200 = explosive
%00000600 = explosive + ???
%00001000 = flippable
%00004000 = groundable
%00010000 = front spiky
%000C0000 = enchanted A and enchanted B (00080000 is immunity to star beam I think)
%00100000 = (not above?) power bounce listener (*might be inside power bounce specific scripts)
%00200000 = Spiky top 2 (Might be connected to how pokey mummies deal poison when you jump on them)
%00800000 = (not above?) (does this do anything?)



