%Merlee global changes


%	>Rng is eliminated

%	Need a new byte to track the turn frequency (either 2, 3, 4)
%		I'll try to use playerdata + 28B (seems like unused data)

%	In battle, alternates between atk and defense
%	If battle ends with 2 or 1 turns to spell and on "atk", activate star point spell
%	If battle ends with 2 or 1 turns to spell and on "def", activate coin spell


%Gamebyte 018 = frequency	(no longer used)
%Gamebyte 00B = turncount


%spell types	(playerdata + 289)
%	1 = atk
%	2 = def
%	3 = star points
%	4 = coins

%spells remaining		(playerdata + 28A)
%turns until activation (playerdata + 28D)	(a short for some reason)
%	Base game sets this to a random value from 6 to 15	(average = 10.5)	(that's pretty bad)
%		*It gets decremented as soon as it gets reset though


%rewrite the functions, I can make them shorter than the originals so that I can keep them in the same space 
@Function 16F740
{
	PUSH	S4, S3, S2, S1, S0, RA
	LA		S4, 800DC070
	LA		S3, 800B0F10
	LA		S0, 8010F290
	LW        V0, 4 (S4)			%load stuff from the second set of flags
	ANDI      V0, V0, 40
	BNE       V0, R0, .end			%if flag 40 is present, no spells allowed
	NOP
	%No longer possible to get stuck on coin or SP spells
	LB        V0, 28A (S0)			%remaining spells
	BLE       V0, R0, .end			%if <= 0, skip everything
	NOP	
	LH        V0, 28C (S0)			%Turns until activation
	BGTZ      V0, .decrement		%if >= 0, skip ahead		(Decrement turns till activation)
	NOP
	%Determine new spell type and time
	LB        S1, 289 (S0)			%Load spell type
	ORI		  V1, R0, 1
	BEQ		  S1, V1, .store
	ORI		  S1, R0, 2
	ORI		  S1, R0, 1
	.store
	SB        S1, 289 (S0)			%Store new spell type
	%Now find turn count
	LB        S1, 28B (S0)			%Turn frequency
	SH		  S1, 28C (S0)			%Turns till activation
	.decrement	
	%Decrement turn count and potentially trigger the spell
	LHU       V1, 28C (S0)			%load it again into V1
	LHU       V0, 28C (S0)			%load it again into V0
	SLTI      V0, V0, 2				%if turn count < 2
	BNE       V0, R0, .o144			%Go to 144 if turncount < 2
	ADDIU     V0, V1, FFFF			%Decrement turn count by 1
	BEQ       R0, R0, .end			%Go to end
	SH        V0, 28C (S0)			%Set turn count
	.o144
	LBU       V1, 289 (S0)			%load spell type
	LBU       V0, 28A (S0)			%load spells remaining
	SH        R0, 28C (S0)			%Set spell turns to 0
	ADDIU     V0, V0, FFFF			%Decrement spells remaining
	SB        V1, 8A (S4)			%Store spell into "next spell" value (Execute it as soon as possible)
	SB        V0, 28A (S0)			%Store new spells remaining	
	.end
	JPOP	S4, S3, S2, S1, S0, RA	
}

%Using the same function should work
@Function 16F8BC
{
	PUSH	S4, S3, S2, S1, S0, RA
	LA		S4, 800DC070
	LA		S3, 800B0F10
	LA		S0, 8010F290
	LW        V0, 4 (S4)			%load stuff from the second set of flags
	ANDI      V0, V0, 40
	BNE       V0, R0, .end			%if flag 40 is present, no spells allowed
	NOP
	%No longer possible to get stuck on coin or SP spells
	LB        V0, 28A (S0)			%remaining spells
	BLE       V0, R0, .end			%if <= 0, skip everything
	NOP	
	LH        V0, 28C (S0)			%Turns until activation
	BGTZ      V0, .decrement		%if >= 0, skip ahead		(Decrement turns till activation)
	NOP
	%Determine new spell type and time
	LB        S1, 289 (S0)			%Load spell type
	ORI		  V1, R0, 1
	BEQ		  S1, V1, .store
	ORI		  S1, R0, 2
	ORI		  S1, R0, 1
	.store
	SB        S1, 289 (S0)			%Store new spell type
	%Now find turn count
	LB        S1, 28B (S0)			%Turn frequency
	SH		  S1, 28C (S0)			%Turns till activation
	.decrement	
	%Decrement turn count and potentially trigger the spell
	LHU       V1, 28C (S0)			%load it again into V1
	LHU       V0, 28C (S0)			%load it again into V0
	SLTI      V0, V0, 2				%if turn count < 2
	BNE       V0, R0, .o144			%Go to 144 if turncount < 2
	ADDIU     V0, V1, FFFF			%Decrement turn count by 1
	BEQ       R0, R0, .end			%Go to end
	SH        V0, 28C (S0)			%Set turn count
	.o144
	LBU       V1, 289 (S0)			%load spell type
	LBU       V0, 28A (S0)			%load spells remaining
	SH        R0, 28C (S0)			%Set spell turns to 0
	ADDIU     V0, V0, FFFF			%Decrement spells remaining
	SB        V1, 8A (S4)			%Store spell into "next spell" value (Execute it as soon as possible)
	SB        V0, 28A (S0)			%Store new spells remaining	
	.end
	JPOP	S4, S3, S2, S1, S0, RA	
}


%Change SP spell stuff
%802444E0 / 172DC0
%	LB		V1, 8A (S3)
%	ADDIU	V0, R0, 3

@Hook	172DC0
{
	%Check if SP spell should be used
	%Spells should be available
	LB        V1, 28A (S5)			
	SLTI	  V0, V1, 1
	BNE		  V0, R0, .no
	NOP
	%Turns to activation should be == 2
	LH        V1, 28C (S5)			
	ORI		  V0, V0, 2
	BNE		  V0, V1, .no
	NOP
	%Current spell should be Atk
	LB        V1, 289 (S5)
	ORI		  V0, R0, 1
	BNE		  V1, V0, .no
	NOP
	%SP should be obtainable
	%	*otherwise the game will give you one more spell and reset the spell type
	LB       V1, 78 (S3)
	BEQ		 V1, R0, .no
	NOP
	.yes
	%Set next spell to 3
	ORI		V1, R0, 3
	SB		V1, 8A (S3)
	J		802444E8
	ADDIU	V0, R0, 3
	.no
	LB		V1, 8A (S3)
	J		802444E8
	ADDIU	V0, R0, 3
}

%Change coin spell stuff
%80244C70 / 173550
%	LB		V1, 8A (S2)
%	ADDIU	V0, R0, 4

@Hook	173550
{
	PUSH	  S5
	LIO		  S5, 8010F290
	%Hardcode this to not occur at 999 coins
	LHU       V1, C (S5)			
	SLTI	  V0, V1, 999`
	BEQ		  V0, R0, .no
	NOP	
	%Check if coin spell should be used
	%Spells should be available
	LB        V1, 28A (S5)			
	SLTI	  V0, V1, 1
	BNE		  V0, R0, .no
	NOP
	%Turns to activation should be == 2
	LH        V1, 28C (S5)			
	ORI		  V0, V0, 2
	BNE		  V0, V1, .no
	NOP
	%Current spell should be Def
	LB        V1, 289 (S5)
	ORI		  V0, R0, 2
	BNE		  V1, V0, .no
	NOP
	.yes
	%Set next spell to 4
	ORI		V1, R0, 4
	SB		V1, 8A (S2)
	POP		S5
	J		80244C78
	ADDIU	V0, R0, 4
	.no
	LB		V1, 8A (S2)
	POP		S5
	J		80244C78
	ADDIU	V0, R0, 4
}


%Original functions
/%
% 0016F740 --> 80240E60
#new:Function $Function_btl_merlee_on_start_turn
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S4, 20 (SP)
    8:  LA        S4, 800DC070
   10:  SW        S3, 1C (SP)
   14:  LA        S3, 800B0F10
   1C:  SW        S0, 10 (SP)
   20:  LA        S0, 8010F290
   28:  SW        RA, 24 (SP)
   2C:  SW        S2, 18 (SP)
   30:  SW        S1, 14 (SP)
   34:  LW        V0, 4 (S4)			%load stuff from the second set of flags
   38:  ANDI      V0, V0, 40
   3C:  BNE       V0, R0, .o15C			%if flag 40 is present, no spells allowed
   40:  LI        S1, 3
   44:  LB        V0, 8A (S4)			%next merlee spell type (I'll have to look into this later)
   48:  BEQ       V0, S1, .o15C			%if spell = 3 (SP spell), skip everything
   4C:  LI        S2, 4
   50:  BEQ       V0, S2, .o15C			%if spell = 4 (Coin spell), skip everything
   54:  NOP
   58:  LB        V0, 28A (S0)			%remaining spells
   5C:  BLEZ      V0, .o15C				%if <= 0, skip everything
   60:  NOP
   64:  LH        V0, 28C (S0)			%Turns until activation
   68:  BGTZ      V0, .o12C				%if >= 0, go to o12C		(Decrement turns till activation)
   6C:  NOP
   70:  JAL       ~Func:rand_int		%determining a new spell?
   74:  LI        A0, 64
   78:  LW        V1, 8C (S3)			%not sure what the pointer is
   7C:  BEQ       V1, R0, .oE0			%if this value is not 0, skip to oE0
   80:  COPY      A0, V0				%V0 = 0 to 99 random value
   84:  LW        V0, 0 (V1)			%load from 0 from the weird pointer
   88:  LUI       V1, 4					%V1 = 4
   8C:  AND       V0, V0, V1			%check 4 flag 
   90:  BEQ       V0, R0, .oB4			%if no 4 flag, skip to B4
   94:  SLTI      V0, A0, 2E			%check if random value < 46
		%								Determine spell type (1,2,3)
   98:  BNE       V0, R0, .oEC			%if value <= 45, go to oEC (Store new spell type)
   9C:  LI        V0, 1					%Set V0 to 1
   A0:  SLTI      V0, A0, 5B			
   A4:  BNE       V0, R0, .o100			%if value <= 90, go to o100 (Store new spell type)
   A8:  LI        V0, 2					%Set V0 to 2
   AC:  BEQ       R0, R0, .o118			
   B0:  SB        S1, 289 (S0)			%Store 3 into spell type, go to o118
        .oB4							
		%								Determine spell type (1,2,3,4)
   B4:  SLTI      V0, A0, 1F			
   B8:  BNE       V0, R0, .oEC			%check if random value <= 30, if so go to EC
   BC:  LI        V0, 1					%Set spell type to 1
   C0:  SLTI      V0, A0, 3D
   C4:  BNE       V0, R0, .o100
   C8:  LI        V0, 2
   CC:  SLTI      V0, A0, 51			
   D0:  BNEL      V0, R0, .o118			%check if random value >= 80
   D4:  SB        S1, 289 (S0)			%Store 3 into spell type, go to o118
   D8:  BEQ       R0, R0, .o118
   DC:  SB        S2, 289 (S0)			%Store 4 into spell type, go to o118
        .oE0							%Determine spell type (1,2)
   E0:  SLTI      V0, A0, 1F
   E4:  BEQ       V0, R0, .oF4
   E8:  LI        V0, 1
        .oEC
   EC:  BEQ       R0, R0, .o118
   F0:  SB        V0, 289 (S0)
        .oF4
   F4:  SLTI      V0, A0, 3D
   F8:  BEQ       V0, R0, .o108
   FC:  LI        V0, 2
        .o100
  100:  BEQ       R0, R0, .o118
  104:  SB        V0, 289 (S0)
        .o108
  108:  SLTI      V0, A0, 51
  10C:  BEQL      V0, R0, .o118
  110:  SB        S2, 289 (S0)			%Set spell type to 4
  114:  SB        S1, 289 (S0)			%Set spell type to 3
        .o118							%found new spell type, determine turn count
  118:  JAL       ~Func:rand_int		%determining the next turn count
  11C:  LI        A0, A
  120:  ADDIU     A0, V0, 6				%add 6 to turn count
  124:  SH        A0, 28C (S0)			%set turns til activation
  128:  LH        V0, 28C (S0)			%load it again into V0
        .o12C							%	Decrement turn count
  12C:  LHU       V1, 28C (S0)			%load it again into V1
  130:  SLTI      V0, V0, 2				%if turn count < 2
  134:  BNE       V0, R0, .o144			%Go to 144 if turncount < 2
  138:  ADDIU     V0, V1, FFFF			%Decrement turn count by 1
  13C:  BEQ       R0, R0, .o15C			%Go to o15C
  140:  SH        V0, 28C (S0)			%Set turn count
        .o144
  144:  LBU       V1, 289 (S0)			%load spell type
  148:  LBU       V0, 28A (S0)			%load spells remaining
  14C:  SH        R0, 28C (S0)			%Set spell turns to 0
  150:  ADDIU     V0, V0, FFFF			%Decrement spells remaining
  154:  SB        V1, 8A (S4)			%Store spell into "next spell" value (Execute it as soon as possible)
  158:  SB        V0, 28A (S0)			%Store new spells remaining
        .o15C							%Done doing stuff, exit
  15C:  LW        RA, 24 (SP)
  160:  LW        S4, 20 (SP)
  164:  LW        S3, 1C (SP)
  168:  LW        S2, 18 (SP)
  16C:  LW        S1, 14 (SP)
  170:  LW        S0, 10 (SP)
  174:  JR        RA
  178:  ADDIU     SP, SP, 28
}
%/

/%
%has some weird differences from the above function
% 0016F8BC --> 80240FDC
#new:Function $Function_btl_merlee_on_first_strike
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S4, 20 (SP)
    8:  LA        S4, 800DC070
   10:  SW        S3, 1C (SP)
   14:  LA        S3, 800B0F10
   1C:  SW        S0, 10 (SP)
   20:  LA        S0, 8010F290
   28:  SW        RA, 24 (SP)
   2C:  SW        S2, 18 (SP)
   30:  SW        S1, 14 (SP)
   34:  LW        V0, 4 (S4)			%load stuff from the second set of flags
   38:  ANDI      V0, V0, 40
   3C:  BNE       V0, R0, .o194			%if flag 40 is present, no spells allowed
   40:  LI        S1, 3
   44:  LB        V0, 8A (S4)			%next merlee spell type (I'll have to look into this later)
   48:  BEQ       V0, S1, .o194			%if spell = 3 (SP spell), skip everything
   4C:  LI        S2, 4
   50:  BEQ       V0, S2, .o194			%if spell = 4 (Coin spell), skip everything
   54:  NOP
   58:  LB        V0, 28A (S0)			%remaining spells
   5C:  BLEZ      V0, .o194				%if <= 0, skip everything
   60:  NOP
   64:  LH        V0, 28C (S0)			%Turns until activation
   68:  BGTZ      V0, .o150				%if >= 0, go to o150		(Decrement turns till activation)
   6C:  NOP
   70:  JAL       ~Func:rand_int		%determining a new spell?
   74:  LI        A0, 64
   78:  LW        V1, 8C (S3)			%not sure what the pointer is
   7C:  BEQ       V1, R0, .oE0			%if this value is not 0, skip to oE0
   80:  COPY      A0, V0				%V0 = 0 to 99 random value
   84:  LW        V0, 0 (V1)			%load from 0 from the weird pointer
   88:  LUI       V1, 4					%V1 = 4
   8C:  AND       V0, V0, V1			%check 4 flag 
   90:  BEQ       V0, R0, .oB4			%if no 4 flag, skip to B4
   94:  SLTI      V0, A0, 2E			%check if random value < 46
		%								Determine spell type (1,2,3)
   98:  BNE       V0, R0, .oEC			%if value <= 45, go to oEC (Store new spell type)
   9C:  LI        V0, 1					%Set V0 to 1
   A0:  SLTI      V0, A0, 5B			
   A4:  BNE       V0, R0, .o100			%if value <= 90, go to o100 (Store new spell type)
   A8:  LI        V0, 2					%Set V0 to 2
   AC:  BEQ       R0, R0, .o118			
   B0:  SB        S1, 289 (S0)			%Store 3 into spell type, go to o118
        .oB4							
		%								Determine spell type (1,2,3,4)
   B4:  SLTI      V0, A0, 1F			
   B8:  BNE       V0, R0, .oEC			%check if random value <= 30, if so go to EC
   BC:  LI        V0, 1					%Set spell type to 1
   C0:  SLTI      V0, A0, 3D
   C4:  BNE       V0, R0, .o100
   C8:  LI        V0, 2
   CC:  SLTI      V0, A0, 51
   D0:  BNEL      V0, R0, .o118			%check if random value >= 80
   D4:  SB        S1, 289 (S0)			%Store 3 into spell type, go to o118
   D8:  BEQ       R0, R0, .o118
   DC:  SB        S2, 289 (S0)			%Store 4 into spell type, go to o118
        .oE0							%Determine spell type (1,2)
   E0:  SLTI      V0, A0, 1F	
   E4:  BEQ       V0, R0, .oF4
   E8:  LI        V0, 1
        .oEC
   EC:  BEQ       R0, R0, .o118
   F0:  SB        V0, 289 (S0)
        .oF4
   F4:  SLTI      V0, A0, 3D
   F8:  BEQ       V0, R0, .o108
   FC:  LI        V0, 2
        .o100
  100:  BEQ       R0, R0, .o118
  104:  SB        V0, 289 (S0)
        .o108
  108:  SLTI      V0, A0, 51
  10C:  BEQL      V0, R0, .o118
  110:  SB        S2, 289 (S0)
  114:  SB        S1, 289 (S0)
        .o118
  118:  LB        V1, 289 (S0)
  11C:  LI        V0, 4
  120:  BEQ       V1, V0, .o13C
  124:  LI        V0, FFFF
  128:  LH        V1, 28C (S0)
  12C:  BEQ       V1, V0, .o140
  130:  LI        A0, 5
  134:  BEQ       R0, R0, .o140
  138:  NOP
        .o13C
  13C:  LI        A0, 8
        .o140						%second spell count number
  140:  JAL       ~Func:rand_int
  144:  NOP
  148:  ADDIU     A0, V0, 5			%Here the turn count is reset to 5 + (0 to 7)
  14C:  SH        A0, 28C (S0)		%set turns til activation
        .o150						
  150:  LBU       A0, 289 (S0)		%Spell type
  154:  ADDIU     V0, A0, FFFD		%minus 3?
  158:  SLTIU     V0, V0, 2			%if spell type - 3 < 2 (unsigned) (so types 3 and 4)
  15C:  BEQ       V0, R0, .o194		%Go to 194 if turncount < 2
  160:  NOP
  164:  LH        V0, 28C (S0)		%Load turn count
  168:  LHU       V1, 28C (S0)		%Load other turn count
  16C:  SLTI      V0, V0, 2			%Now check again
  170:  BNE       V0, R0, .o180		%Go to o180 is V0 is not < 2
  174:  ADDIU     V0, V1, FFFF		%Decrement turn count
  178:  BEQ       R0, R0, .o194		%Go to end
  17C:  SH        V0, 28C (S0)		%Store turn count
        .o180
  180:  LBU       V0, 28A (S0)		%Load spells remaining
  184:  SB        A0, 8A (S4)		%Store next spell
  188:  SH        R0, 28C (S0)		%Set spell turns to 0
  18C:  ADDIU     V0, V0, FFFF		%Decrement spells remaining
  190:  SB        V0, 28A (S0)		%Store spells remaining
        .o194
  194:  LW        RA, 24 (SP)
  198:  LW        S4, 20 (SP)
  19C:  LW        S3, 1C (SP)
  1A0:  LW        S2, 18 (SP)
  1A4:  LW        S1, 14 (SP)
  1A8:  LW        S0, 10 (SP)
  1AC:  JR        RA
  1B0:  ADDIU     SP, SP, 28
}
%/