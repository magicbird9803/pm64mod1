% Auto-generated script for tem_03

#new:Header $Header
{
	[MainScript] $Script_Main
	[Background] 80200000
	[EntryList] $EntryList
	[EntryCount] 1
	[MapTattle]   $Function_GetTattle
}

#new:Function $Function_GetTattle
{
	ADDIU     SP, SP, FFE8
	LIO       V0, $MapTattle
	JR        RA
	ADDIU     SP, SP, 18
}

#string $MapTattle
{
[Style Tattle][EnableCDownNext]This place has a ton[BR]
of moving platforms.[BR]
[Wait][NEXT]
If Parakarry could lift you[BR]
to the top, this would be[BR]
a piece of cake.[BR]
[Wait][NEXT]
...I don't think he's strong[BR]
enough to do that though.
[Wait][END]
}

#new:EntryList $EntryList
{
	~Vec4f:Entry0
}


#new:Script_Main $Script_Main
{
	Set   *GB_WorldLocation  .Location:ToadTownTunnels
	Call  SetCamPerspective  ( .Cam:Default 00000003 00000019 00000010 00001000 )
	Call  SetCamBGColor      ( .Cam:Default 00000000 00000000 00000000 )
	Call  SetCamEnabled      ( .Cam:Default .True
	Call  SetCamLeadPlayer   ( .Cam:Default .False )
	Call    MakeNpcs    	( 00000001 $NpcGroupList )	
	Thread
		Call     ResetFromLava 	( $LavaResetList )
	EndThread		
	%Call  ParentColliderToModel ( ~Collider:helixCollider ~Model:splitGroup )
	%Call  ParentColliderToModel ( ~Collider:splitCollider ~Model:splitGroup )
	%Hard code some stuff because that is the only way to make it work >:(
	Call   $Function_ParentColliderToModel ( 00000000 00000000 )
	Call   $Function_ParentColliderToModel ( 00000002 00000003 )
	Exec  $Script_RotatePlatforms
	Exec  $Script_MakeEntities
	Exec  $Script_SetupMusic
	Exec  $Script_EnterMap
	Return
	End
}

%warp you straight up to the surface (but just copy the spring physics)
%The lava sometimes doesn't jump you high enough (and just puts you at the same level as the lava)
#new:Script $Script_AntiSoftlock
{
	0:  Call     DisablePlayerInput 	( .True )
   10:  Call     DisablePlayerPhysics 	( .True )
   20:  Call     802D10D8 ( 00000006 )
   30:  Wait     00000001 
		Call     GetPlayerPos 	( *Var6 *Var7 *Var8 )
		Set *Var7 506`
   3C:  Exec     $Script_80241420 *Var[A] 
   4C:  If  *MapVar[9]  ==  00000000 
   5C:  	Call     SetPlayerJumpscale 	( *Fixed[1.4003906] )
   6C:  	Call     PlayerJump  	( *Var6 *Var7 *Var8 00000014 )
   88:  Else
   90:  	Call     SetPlayerJumpscale 	( *Fixed[0.7001953] )
   A0:  	Call     PlayerJump  	( *Var6 *Var7 *Var8 00000020 )
   BC:  EndIf
   C4:  Kill     *Var[A] 
   D0:  Call     802D10D8 ( 00000000 )
   E0:  Call     DisablePlayerPhysics 	( .False )
   F0:  Call     DisablePlayerInput 	( .False )
  100:  Return
  108:  End
}

#new:Script $Script_80241420
{
	0:  Loop     
    C:  	Call     GetPlayerPos 	( *Var[0] *Var[1] *Var[2] )
   24:  	Call     802CAF2C ( 00000000 *Var[0] *Var[1] *Var[2] )
   40:  	Wait     00000001 
   4C:  EndLoop
   54:  Return
   5C:  End
}


#new:LavaResetList $LavaResetList
{
~Collider:basefloor		   	   0.0		15.0  -705.0
~Collider:midpointPlatform 	   116.0	15.0  -384.0
~Collider:topPlatform 		   0.0		269.0  267.0
FFFFFFFF 00000000 00000000 00000000 % idk
00000000
}

#new:Function_Init $Function_Init
{
	PUSH    RA
	LIA     A0, 800B0CF0
	LIA     A1, "kpa_tex"
	JAL     800654F0 % sprintf
	RESERVED
	CLEAR  V0
	JPOP   RA
}

#new:Script $Script_MakeEntities
{
	Call  MakeEntity    ( .Entity:HugeBlueSwitch ~Vec4d:topswitch 80000000 )
	Call  AssignScript  ( $Script_BossSwitch )	
	Return
	End
}


#new:Script $Script_BossSwitch
{
	Set   *MapFlag[2] .True		%boss time (the switch might delete itself after this)
	Return
	End
}



#new:Script $Script_SetupMusic
{
	%Call  FadeOutMusic  ( 00000000 500` ) % usually between 500-1000
	%Call  ClearAmbientSounds ( 250` )
	Call     SetMusicTrack 	( 00000000 .Song:TempleTheme 00000000 00000008 ) %TO DO: get better music
	Return
	End
}

#new:Script $Script_EnterMap
{
	Call  GetEntryID    ( *Var[0] )
	Switch  *Var[0]
		Case  	==  ~Entry:Entry0
			Set   *Var[0] $Script_CreateExitTriggers
			Exec  EnterWalk
		Default
			Exec  $Script_CreateExitTriggers
	EndSwitch
	Return
	End
}

#new:Script $Script_Exit0
{
	SetGroup 0000001B
	Call     UseExitHeading ( 60` ~Entry:Entry0 )
	Exec     ExitWalk
	Call  GotoMap   ( "tem_04" ~Entry:tem_04:Entry1 )
	Call  StopSound     ( 00000394 )
	Wait  100`
	Return
	End
}

#new:Script $Script_CreateExitTriggers
{
	Bind  $Script_Exit0 .Trigger:FloorAbove ~Collider:hubLZ 00000001 00000000
	Bind     $Script_AntiSoftlock .Trigger:FloorTouch ~Collider:antisoftlock 00000001 00000000
	Return
	End
}


#import Pit_AI.mpat



#new:NpcGroupList $NpcGroupList
{
00000001 $NpcGroup_DarkBubble1 3A070005
00000001 $NpcGroup_DarkBubble2 3A070005
00000001 $NpcGroup_Boss 	   3D010000
00000000 00000000 00000000
}


#new:NpcGroup $NpcGroup_DarkBubble1
{
00000000 $NpcSettings_Bubble ~Vec3f:NPC_DarkBubble1
00000D00 00000000 00000000 00000000 0000005A 
~İtems:64:DarkShroom:A 
~HP:20:70:2:50 ~HP:30:60:2:50 ~HP:50:50:2:40 ~HP:80:40:2:40 ~HP:100:30:2:30 ~HP:None ~HP:None ~HP:None 
~FP:20:50:2:40 ~FP:30:40:2:40 ~FP:50:40:2:40 ~FP:80:40:2:40 ~FP:100:30:2:40 ~FP:None ~FP:None ~FP:None 
~CoinBonus:1:4
~Movement:NPC_DarkBubble1
00460301 00460302 00460303 00460303 00460301 00460301 00460307 00460307 
00460304 00460301 00460301 00460301 00460301 00460301 00460301 00460301 
00000002 00000000 00000000 00000000 % no tattle string
}

#new:NpcGroup $NpcGroup_DarkBubble2
{
00000001 $NpcSettings_Bubble ~Vec3f:NPC_DarkBubble2
00000D00 00000000 00000000 00000000 0000005A 
~İtems:64:DarkShroom:A 
~HP:20:70:2:50 ~HP:30:60:2:50 ~HP:50:50:2:40 ~HP:80:40:2:40 ~HP:100:30:2:30 ~HP:None ~HP:None ~HP:None 
~FP:20:50:2:40 ~FP:30:40:2:40 ~FP:50:40:2:40 ~FP:80:40:2:40 ~FP:100:30:2:40 ~FP:None ~FP:None ~FP:None 
~CoinBonus:1:4
~Movement:NPC_DarkBubble2
00460301 00460302 00460303 00460303 00460301 00460301 00460307 00460307 
00460304 00460301 00460301 00460301 00460301 00460301 00460301 00460301 
00000002 00000000 00000000 00000000 % no tattle string
}


#new:NpcSettings $NpcSettings_Guy
{
	00000000 00170016 00000000 00000000 00000000 80077F70 00000000 8007809C
	00000000 00000000 000E0001
}

#new:NpcGroup $NpcGroup_Boss
{
00000003 $NpcSettings_Guy ~Vec3f:NPC_Boss % -770 0 0
00640D01 $Script_Init_Boss 00000000 00000000 0000010E 
~İtems:0:DriedShroom:A
~NoHP
~NoFP
~NoCoinBonus
~Movement:NPC_Boss
003B0501 003B0502 003B0504 003B0504 003B0501 003B0501 003B050C 003B050C
003B0515 003B0512 003B0511 003B0510 003B0505 003B0501 003B0501 003B0501 % .Sprite:ShyGuy
00000001 00000000 00000000 00000000 % no tattle string
}

#new:Script $Script_Idle_Boss
{
	Loop	
		Wait 1`
		If *MapFlag[2] == .True
			BreakLoop
		EndIf
	EndLoop
	Call	StartBossBattle		( .Song:SMRPGBossTheme )
	Set  *MapFlag[2] .False
	Return
	End
}

#new:Script $Script_Init_Boss
{
	Call     BindNpcIdle		( .Npc:Self $Script_Idle_Boss )
	Call	 BindNpcDefeat		( .Npc:Self $Script_Defeat )
	Return
	End
}

#new:Script $Script_Defeat
{
		Set  *MapFlag[2] .False		
    0:  Call  GetBattleOutcome  ( *Var0 )
   10:  Switch  *Var0
   1C:  	Case  ==  .Outcome:PlayerWon % 0
   28:  		Set   *GF_TEM_Boss2  .True
   5C:  	Case  ==  .Outcome:PlayerLost % 1
   7C:  	Case  ==  .Outcome:PlayerFled % 2
   9C:  EndSwitch		
   A4:  Return
   AC:  End
}

%time for some rotating platforms
%RotateModel exists, but I have to rotate the collider too

%rotate Group works better
%ParentColliderToModel is glitching

#new:Script $Script_RotatePlatforms
{
	Set *Var0   0`
	%
	%Loop
	Label 0
	Add   *Var0 1`
	Mod   *Var0 360`
	Call  RotateGroup  ( ~Model:helixGroup *Var0 00000000 FFFFFFFF 00000000 )	%Var0 = angle, (x,y,z) = axis of rotation?
	Call  RotateGroup   ( ~Model:splitGroup *Var0 00000000 00000001 00000000 )	%Var0 = angle, (x,y,z) = axis of rotation?
	Set   *Var3  ~Collider:helixCollider
	Call  UpdateColliderTransform ( *Var3 )
	Set   *Var3  ~Collider:splitCollider
	Call  UpdateColliderTransform ( *Var3 )
	Wait 1`
	Goto 0
	Return
	End
}

%the real one is broken >:(
%use hard coded values for this one
#new:Function $Function_ParentColliderToModel
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, S1
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  COPY      S0, V0
   %34:  JAL       ~Func:get_model_list_index_from_tree_index
   %38:  COPY      A0, V0
   3C:  SLL       S0, S0, 10
   40:  SRA       S0, S0, 10
   44:  COPY      A0, S0
   48:  SLL       V0, V0, 10
   4C:  JAL       ~Func:parent_collider_to_model
   %50:  SRA       A1, V0, 10
		NOP
   54:  JAL       ~Func:update_collider_transform
   58:  COPY      A0, S0
   5C:  LW        RA, 18 (SP)
   60:  LW        S1, 14 (SP)
   64:  LW        S0, 10 (SP)
   68:  LI        V0, 2
   6C:  JR        RA
   70:  ADDIU     SP, SP, 20
}
