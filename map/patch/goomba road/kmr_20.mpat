#new:Script $Script_FileNameChecks
{
	Call     $GetFileName()
	Call 	$API_StrCmp ( $CopiedFileName $FileCode_Cheater *Var3 )
	If *Var3 == 0`
		Call     ShowMessageAtScreenPos     	( $Cheater 000000A0 00000028 )
		Set *GB_FileCodeMode 1`
		Call $Function_SetCheatFlag ( )
		Return
	EndIf
	Call 	$API_StrCmp ( $CopiedFileName $FileCode_EasyMode *Var3 )
	If *Var3 == 0`
		Call     ShowMessageAtScreenPos     	( $EasyMode 000000A0 00000028 )
		Set *GB_FileCodeMode 2`
		Call	$Function_EquipAllBadges ( )
		Call  AddKeyItem  ( .Item:UltraStone )
		Call  AddKeyItem  ( .Item:KnowledgeStone )
		Call  AddKeyItem  ( .Item:ShieldStone )
		Call  AddKeyItem  ( .Item:WarpStone )
		Call  AddKeyItem  ( .Item:VoidStone ) 
		Call $Function_FlipSuperguardFlag ( )
		If  (*StoneUnlock !& 00000001)
			Add *StoneUnlock 1 %set flag		
		EndIf		
		If  (*StoneUnlock !& 00000008)
			Add *StoneUnlock 8 %set flag		
		EndIf			
		Return
	EndIf
	Call 	$API_StrCmp ( $CopiedFileName $FileCode_BadgeAnarchy *Var3 )
	If *Var3 == 0`
		Call     ShowMessageAtScreenPos     	( $Anarchy 000000A0 00000028 )
		Set *GB_FileCodeMode 3`
		Return
	EndIf
	Call 	$API_StrCmp ( $CopiedFileName $FileCode_NewGamePlus *Var3 )
	If *Var3 == 0`
		Call     ShowMessageAtScreenPos     	( $NewGamePlus 000000A0 00000028 )
		Set *GB_FileCodeMode 4`
		Call	$Function_EquipAllBadges ( )
		Return
	EndIf
	Call 	$API_StrCmp ( $CopiedFileName $FileCode_NewGamePlusTwo *Var3 )
	If *Var3 == 0`
		Call     ShowMessageAtScreenPos     	( $NewGamePlusTwo 000000A0 00000028 )
		Set *GB_FileCodeMode 5`
		Call	$Function_EquipAllBadges ( )
		Call  AddKeyItem  ( .Item:UltraStone )
		Call  AddKeyItem  ( .Item:KnowledgeStone )
		Call  AddKeyItem  ( .Item:ShieldStone )
		Call  AddKeyItem  ( .Item:WarpStone )
		Call  AddKeyItem  ( .Item:VoidStone ) 
		Call $Function_FlipSuperguardFlag ( )
		If  (*StoneUnlock !& 00000001)
			Add *StoneUnlock 1 %set flag		
		EndIf		
		If  (*StoneUnlock !& 00000008)
			Add *StoneUnlock 8 %set flag		
		EndIf		
		Return
	EndIf
	Call 	$API_StrCmp ( $CopiedFileName $FileCode_ShyGuys *Var3 )
	If *Var3 == 0`
		Call     ShowMessageAtScreenPos     	( $ShyGuys 000000A0 00000028 )
		Set *GB_FileCodeMode 6`	
		Return
	EndIf
	Call 	$API_StrCmp ( $CopiedFileName $FileCode_ToadsOnly *Var3 )
	If *Var3 == 0`
		Call     ShowMessageAtScreenPos     	( $Toads 000000A0 00000028 )
		Set *GB_FileCodeMode 7`	
		Return
	EndIf	
	Call 	$API_StrCmp ( $CopiedFileName $FileCode_AntiGuy *Var3 )
	If *Var3 == 0`
		Call     ShowMessageAtScreenPos     	( $AntiGuy 000000A0 00000028 )
		Set *GB_FileCodeMode 8`						
		Call	$Function_EquipAllBadges ( )
		Call  AddKeyItem  ( .Item:UltraStone )
		Call  AddKeyItem  ( .Item:KnowledgeStone )
		Call  AddKeyItem  ( .Item:ShieldStone )
		Call  AddKeyItem  ( .Item:WarpStone )
		Call  AddKeyItem  ( .Item:VoidStone ) 
		Call $Function_FlipSuperguardFlag ( )
		If  (*StoneUnlock !& 00000001)
			Add *StoneUnlock 1 %set flag		
		EndIf		
		If  (*StoneUnlock !& 00000008)
			Add *StoneUnlock 8 %set flag		
		EndIf		
		Return
	EndIf		
	Call 	$API_StrCmp ( $CopiedFileName $FileCode_CantWin *Var3 )
	If *Var3 == 0`
		Call     ShowMessageAtScreenPos     	( $NewGamePlusThree 000000A0 00000028 )
		Set *GB_FileCodeMode 9`						
		Call 	$Function_SetLevel27 ( )
		Call	$Function_EquipAllBadges ( )
		Call  AddKeyItem  ( .Item:UltraStone )
		Call  AddKeyItem  ( .Item:KnowledgeStone )
		Call  AddKeyItem  ( .Item:ShieldStone )
		Call  AddKeyItem  ( .Item:WarpStone )
		Call  AddKeyItem  ( .Item:VoidStone ) 
		Call $Function_FlipSuperguardFlag ( )
		If  (*StoneUnlock !& 00000001)
			Add *StoneUnlock 1 %set flag		
		EndIf		
		If  (*StoneUnlock !& 00000008)
			Add *StoneUnlock 8 %set flag		
		EndIf		
		Return
	EndIf			
	Call 	$API_StrCmp ( $CopiedFileName $FileCode_Easier *Var3 )
	If *Var3 == 0`
		Call     ShowMessageAtScreenPos     	( $Easier 000000A0 00000028 )
		Set *GB_FileCodeMode 10`
		Call	$Function_EquipAllBadges ( )
		Call  AddKeyItem  ( .Item:UltraStone )
		Call  AddKeyItem  ( .Item:KnowledgeStone )
		Call  AddKeyItem  ( .Item:ShieldStone )
		Call  AddKeyItem  ( .Item:WarpStone )
		Call  AddKeyItem  ( .Item:VoidStone ) 
		Call $Function_FlipSuperguardFlag ( )
		If  (*StoneUnlock !& 00000001)
			Add *StoneUnlock 1 %set flag		
		EndIf		
		If  (*StoneUnlock !& 00000008)
			Add *StoneUnlock 8 %set flag		
		EndIf		
		Return
	EndIf
	Call 	$API_StrCmp ( $CopiedFileName $FileCode_Sandbox *Var3 )
	If *Var3 == 0`
		Call     ShowMessageAtScreenPos     	( $Sandbox 000000A0 00000028 )
		Set *GB_FileCodeMode 11`
		Call	$Function_EquipAllBadges ( )
		Call 	$Function_SetLevel27 ( )
		Call $Function_SetCheatFlag ( )
		Call  AddKeyItem  ( .Item:UltraStone )
		Call  AddKeyItem  ( .Item:KnowledgeStone )
		Call  AddKeyItem  ( .Item:ShieldStone )
		Call  AddKeyItem  ( .Item:WarpStone )
		Call  AddKeyItem  ( .Item:VoidStone ) 
		Call $Function_FlipSuperguardFlag ( )
		If  (*StoneUnlock !& 00000001)
			Add *StoneUnlock 1 %set flag		
		EndIf		
		If  (*StoneUnlock !& 00000008)
			Add *StoneUnlock 8 %set flag		
		EndIf		
		Return
	EndIf	
	Call 	$API_StrCmp ( $CopiedFileName $FileCode_Berserk *Var3 )
	If *Var3 == 0`
		Call     ShowMessageAtScreenPos     	( $Berserker 000000A0 00000028 )
		Set *GB_FileCodeMode 12`
		Return
	EndIf		
	Call 	$API_StrCmp ( $CopiedFileName $FileCode_FastMode *Var3 )
	If *Var3 == 0`
		Call     ShowMessageAtScreenPos     	( $FastMode 000000A0 00000028 )
		Set *GB_FileCodeMode 13`
		Return
	EndIf		
	Call 	$API_StrCmp ( $CopiedFileName $FileCode_Biscuit *Var3 )
	If *Var3 == 0`
		Call     ShowMessageAtScreenPos     	( $Biscuit 000000A0 00000028 )
		Set *GB_FileCodeMode 14`
		Return
	EndIf		
	Call 	$API_StrCmp ( $CopiedFileName $FileCode_Berserk2 *Var3 )
	If *Var3 == 0`
		Call     ShowMessageAtScreenPos     	( $Berserker2 000000A0 00000028 )
		Set *GB_FileCodeMode 15`
		Return
	EndIf		
	Return
	End
}



#new:Function $Function_SetLevel27
{
	PUSH	A0, RA
	LI		A0, 50`
	SAB		A0, 8010F292
	SAB		A0, 8010F293
	SAB		A0, 8010F294
	SAB		A0, 8010F295
	SAB		A0, 8010F296
	SAB		A0, 8010F297
	LI		A0, 30`
	SAB		A0, 8010F298
	LI		A0, 27`
	SAB		A0, 8010F299
	POP		A0, RA
	JR		RA
	ORI 	V0, R0, 2
}

#new:Function $Function_SetCheatFlag
{
	PUSH	A0, RA
	ORI		A0, R0, 1
	SAB		A0, 8010F2A8
	POP		A0, RA
	JR		RA
	ORI 	V0, R0, 2
}

#new:Function $Function_FlipSuperguardFlag
{
	PUSH 	RA
	ORI 	A0, R0, 1
	SAB		A0, 8010F2A9 %superguard flag loc
	POP 	RA
	JR		RA
	ORI 	V0, R0, 2
}


#new:String $Cheater
{
	[Style Inspect]	
	"Cheater" file code detected.[BR]
	[Wait][NEXT]
	The power of the Rainbow Stone[BR]
	has been activated.[BR]
	[Wait][END]
}

#new:String $EasyMode
{
	[Style Inspect]	
	"EasyMode" file code detected.[BR]
	[Wait][NEXT]
	You have been given all 128[BR]
	badges and all 5 unlockable[BR]
	stones.[BR]
	[Wait][NEXT]
	Note: Problems will occur if[BR]
	you collect more badges or[BR]
	get the stones again.[BR]
	[Wait][END]
}

#new:String $Anarchy
{
	[Style Inspect]	
	"Anarchy" file code detected.[BR]
	[Wait][NEXT]
	You can equip badges without[BR]
	needing the BP required for them.[BR]
	[Wait][END]
}

#new:String $NewGamePlus
{
	[Style Inspect]	
	"NewGame[STAR]" file code detected.[BR]
	[Wait][NEXT]
	You have been given all 128[BR]
	badges, but battles will[BR]
	always be at 2x multiplier or[BR]
	higher.[BR]
	[Wait][NEXT]
	Note that lategame encounters[BR]
	may become impossible.[BR]
	[Wait][NEXT]
	Problems will occur if[BR]
	you collect more badges.[BR]
	[Wait][NEXT]
	Collecting the Greed Stone is[BR]
	a bad idea as you might get[BR]
	softlocked.[BR]
	[Wait][END]
}

#new:String $NewGamePlusTwo
{
	[Style Inspect]	
	"GetGood" file code detected.[BR]
	[Wait][NEXT]
	You have been given all 128[BR]
	badges and all 5 unlockable[BR]
	stones.[BR]
	[Wait][NEXT]
	However, battles will always be[BR]
	at 3x difficulty or higher.[BR]
	Note that lategame encounters[BR]
	may become impossible.[BR]
	[Wait][NEXT]
	Problems will occur if[BR]
	you collect more badges or[BR]
	reobtain the stones.[BR]
	[Wait][NEXT]
	Collecting the Greed Stone is[BR]
	a bad idea as you might get[BR]
	softlocked.[BR]
	[Wait][END]
}

#new:String $ShyGuys
{
	[Style Inspect]	
	"ShyGuy" file code detected.[BR]
	[Wait][NEXT]
	All sprites except the 5 guys[BR]
	will be converted to Shy Guys.[BR]
	(after the Peach Letter)[BR]
	[Wait][END]
}

#new:String $Toads
{
	[Style Inspect]	
	"AllToads" file code detected.[BR]
	[Wait][NEXT]
	All sprites will be converted[BR]
	to Toads.[BR]
	(after the Peach Letter)[BR]	
	[Wait][END]
}

#new:String $AntiGuy
{
	[Style Inspect]	
	"AntiGuy" file code detected.[BR]
	[Wait][NEXT]
	You have been given all 128[BR]
	badges and all 5 unlockable[BR]
	stones.[BR]
	[Wait][NEXT]
	However, battles will always be[BR]
	at 3x difficulty or higher.[BR]
	Note that lategame encounters[BR]
	may become impossible.[BR]
	[Wait][NEXT]
	Problems will occur if[BR]
	you collect more badges or[BR]
	reobtain the stones.[BR]
	[Wait][NEXT]
	Collecting the Greed Stone is[BR]
	a bad idea as you might get[BR]
	softlocked.[BR]
	[Wait][END]
}

#new:String $NewGamePlusThree
{
	[Style Inspect]	
	"CantWin" file code detected.[BR]
	[Wait][NEXT]
	You have been given all 128[BR]
	badges and all 5 unlockable[BR]
	stones. Your stats have been[BR]
	raised to Level 27.[BR]
	[Wait][NEXT]
	However, battles will always be[BR]
	at 4.5x difficulty or higher.[BR]
	You'll get softlocked, but[BR]
	I don't know exactly where.[BR]
	[Wait][NEXT]
	Problems will occur if[BR]
	you collect more badges or[BR]
	reobtain the stones.[BR]
	[Wait][NEXT]
	You will not be able to obtain[BR]
	the Greed Stone or Badge Stone.[BR]
	You need all the power you can[BR]
	get to succeed![BR]
	[Wait][END]
}

#new:String $Easier
{
	[Style Inspect]	
	"Easier" file code detected.[BR]
	[Wait][NEXT]
	You have been given all 128[BR]
	badges and all 5 unlockable[BR]
	stones.[BR]
	[Wait][NEXT]
	Note: Problems will occur if[BR]
	you collect more badges or[BR]
	get the stones again.[BR]
	[Wait][NEXT]
	You can equip badges without[BR]
	needing the BP required for them.[BR]
	[Wait][END]
}

#new:String $Sandbox
{
	[Style Inspect]	
	"Sandbox" file code detected.[BR]
	[Wait][NEXT]
	The power of the Rainbow Stone[BR]
	has been activated.[BR]
	[Wait][NEXT]
	You have been given all 128[BR]
	badges and all 5 unlockable[BR]
	stones. Your level has also[BR]
	been raised to 27.[BR]
	[Wait][NEXT]
	Note: Problems will occur if[BR]
	you collect more badges or[BR]
	get the stones again.[BR]
	[Wait][NEXT]
	You can equip badges without[BR]
	needing the BP required for them.[BR]
	[Wait][END]
}


#new:String $Berserker
{
	[Style Inspect]	
	"Berserk" file code detected.[BR]
	[Wait][NEXT]
	The power of the Berserker[BR]
	badge is permanently active.[BR]
	[Wait][NEXT]
	Mario's moves will pierce all[BR]
	forms of defense, even[BR]
	"unpiercable" defense.[BR]
	[Wait][NEXT]
	Final Bowser has one slight[BR]
	change that should make the[BR]
	fight winnable.[BR]
	[Wait][END]
}

#new:String $FastMode
{
	[Style Inspect]	
	"FastMode" file code detected.[BR]
	[Wait][NEXT]
	Mario will gain the Hustle[BR]
	effect every single turn.[BR]
	[Wait][END]
}

#new:String $Biscuit
{
	[Style Inspect]	
	"Biscuit" file code detected.[BR]
	[Wait][NEXT]
	The effect of Yoshi Biscuits[BR]
	are permanently active, but[BR]
	they do not apply to Duality[BR]
	Shakes, Strange Leaves...[BR]
	[Wait][NEXT]
	...and Strange Cakes.[BR]
	[Wait][END]
}

#new:String $Berserker2
{
	[Style Inspect]	
	"Berserk2" file code detected.[BR]
	[Wait][NEXT]
	The power of the Berserker[BR]
	badge is permanently active.[BR]
	[Wait][NEXT]
	Mario's moves will pierce all[BR]
	forms of defense, even[BR]
	"unpiercable" defense.[BR]
	[Wait][NEXT]
	Final Bowser has one slight[BR]
	change that should make the[BR]
	fight winnable.[BR]
	[Wait][NEXT]
	You can also equip badges[BR]
	without needing the BP required[BR]
	for them.[BR]
	[Wait][END]
}




@ $Script_8024FD70
{
    0:  Call  DisablePlayerInput    ( .True )
		ExecWait $Script_FileNameChecks
   10:  Thread
   18:  	Wait  5`
   24:  	Call  SetMusicTrack ( 00000000 .Song:MailCall 00000000 00000008 )
   40:  EndThread
   48:  Call  InterpPlayerYaw   ( 0000005A 00000000 )
   5C:  Call  SetPlayerPos  ( FFFFFFCE 0000001E FFFFFFB0 )
   74:  Call  SetNpcPos     ( 00000001 000000DC 0000001E FFFFFFB0 )
   90:  Call  SetNpcPos     ( 00000000 000002D0 000000DC FFFFFF6A )
   AC:  Call  SetNpcYaw     ( 00000000 0000010E )
   C0:  Call  EnableGroup   ( ~Model:g94 .False )
   D4:  Call  EnableGroup   ( ~Model:g100 .True )
   E8:  Call  UseSettingsFrom   ( .Cam:Default 00000226 00000000 00000014 )
  104:  Call  SetPanTarget  ( .Cam:Default 00000226 00000000 00000014 )
  120:  Call  SetCamDistance    ( .Cam:Default 00000226 )
  134:  Call  SetCamPitch   ( .Cam:Default *Fixed[15.0] *Fixed[-14.0] )
  14C:  Call  SetCamSpeed   ( .Cam:Default *Fixed[90.0] )
  160:  Call  PanToTarget   ( .Cam:Default 00000000 00000001 )
  178:  Wait  1`
  184:  Call  SetCamDistance    ( .Cam:Default 000001C2 )
  198:  Call  SetCamSpeed   ( .Cam:Default *Fixed[0.7] )
  1AC:  Call  PanToTarget   ( .Cam:Default 00000000 00000001 )
  1C4:  Thread
  1CC:  	Wait  10`
  1D8:  	Call  MakeLerp  ( 00000000 00000046 0000003C .Easing:Linear )
  1F4:  	Loop
  200:  		Call  UpdateLerp ( )
  20C:  		Call  TranslateGroup    ( ~Model:g108 *Var0 00000000 00000000 )
  228:  		SetF  *Var2  00000000
  238:  		SubF  *Var2  *Var0
  248:  		Call  TranslateGroup    ( ~Model:g106 *Var2 00000000 00000000 )
  264:  		If  *Var1  ==  00000000
  274:  			BreakLoop
  27C:  		EndIf
  284:  		Wait  1`
  290:  	EndLoop
  298:  EndThread
  2A0:  Thread
  2A8:  	Wait  30`
  2B4:  	Call  MakeLerp  ( 00000000 00000032 00000028 .Easing:Linear )
  2D0:  	Loop
  2DC:  		Call  UpdateLerp ( )
  2E8:  		Call  TranslateGroup    ( ~Model:g109 *Var0 00000000 00000000 )
  304:  		SetF  *Var2  00000000
  314:  		SubF  *Var2  *Var0
  324:  		Call  TranslateGroup    ( ~Model:g107 *Var2 00000000 00000000 )
  340:  		If  *Var1  ==  00000000
  350:  			BreakLoop
  358:  		EndIf
  360:  		Wait  1`
  36C:  	EndLoop
  374:  EndThread
  37C:  Thread
  384:  	Wait  50`
  390:  	Call  MakeLerp  ( 00000000 00000032 00000028 .Easing:Linear )
  3AC:  	Loop
  3B8:  		Call  UpdateLerp ( )
  3C4:  		Call  TranslateGroup    ( ~Model:g105 *Var0 00000000 00000000 )
  3E0:  		Call  TranslateGroup    ( ~Model:g102 *Var0 00000000 00000000 )
  3FC:  		SetF  *Var2  00000000
  40C:  		SubF  *Var2  *Var0
  41C:  		Call  TranslateGroup    ( ~Model:g103 *Var2 00000000 00000000 )
  438:  		Call  TranslateGroup    ( ~Model:g104 *Var2 00000000 00000000 )
  454:  		Call  TranslateGroup    ( ~Model:g101 *Var2 00000000 00000000 )
  470:  		If  *Var1  ==  00000000
  480:  			BreakLoop
  488:  		EndIf
  490:  		Wait  1`
  49C:  	EndLoop
  4A4:  EndThread
  4AC:  Wait  120`
  4B8:  Call  NpcFlyTo  ( 00000000 000001AE 00000014 FFFFFF5B 0000003C FFFFFFF6 .Easing:Linear )
  4E0:  Call  InterpNpcYaw      ( 00000000 0000002D 0000000A )
  4F8:  Wait  20`
  504:  Call  PlaySoundAtNpc    ( 00000000 000000E0 00000000 )
  51C:  Thread
  524:  	Call  TranslateModel    ( ~Model:o222 00000002 00000000 00000000 )
  540:  	Call  TranslateModel    ( ~Model:o223 00000002 00000000 00000000 )
  55C:  	Call  TranslateModel    ( ~Model:o224 00000002 00000000 00000000 )
  578:  	Wait  1`
  584:  	Call  TranslateModel    ( ~Model:o222 FFFFFFFD 00000000 00000000 )
  5A0:  	Call  TranslateModel    ( ~Model:o223 FFFFFFFD 00000000 00000000 )
  5BC:  	Call  TranslateModel    ( ~Model:o224 FFFFFFFD 00000000 00000000 )
  5D8:  	Wait  1`
  5E4:  	Call  TranslateModel    ( ~Model:o222 00000002 00000000 00000000 )
  600:  	Call  TranslateModel    ( ~Model:o223 00000002 00000000 00000000 )
  61C:  	Call  TranslateModel    ( ~Model:o224 00000002 00000000 00000000 )
  638:  	Wait  1`
  644:  	Call  TranslateModel    ( ~Model:o222 FFFFFFFD 00000000 00000000 )
  660:  	Call  TranslateModel    ( ~Model:o223 FFFFFFFD 00000000 00000000 )
  67C:  	Call  TranslateModel    ( ~Model:o224 FFFFFFFD 00000000 00000000 )
  698:  	Wait  1`
  6A4:  	Call  TranslateModel    ( ~Model:o222 00000000 00000000 00000000 )
  6C0:  	Call  TranslateModel    ( ~Model:o223 00000000 00000000 00000000 )
  6DC:  	Call  TranslateModel    ( ~Model:o224 00000000 00000000 00000000 )
  6F8:  EndThread
  700:  Wait  35`
  70C:  Call  InterpNpcYaw  ( 00000000 000000DC 00000005 )
  724:  Wait  10`
  730:  Call  SpeakToPlayer ( 00000000 00040006 00040001 00000005 0000001E ) % Mail call!
  750:  Wait  10`
  75C:  Call  NpcFlyTo      ( 00000000 00000168 00000104 0000003C 0000003C FFFFFFF6 .Easing:Linear )
  784:  Wait  30`
  790:  Exec  $Script_8024FCE4
  79C:  Wait  10`
  7A8:  Call  SetNpcAnimation   ( 00000001 0082000A )
  7BC:  Exec  $Script_8024F5A4 *VarA
  7CC:  Call  SetNpcSpeed   ( 00000001 *Fixed[4.0] )
  7E0:  Call  NpcMoveTo     ( 00000001 000001C2 FFFFFFB0 00000000 )
  7FC:  Call  NpcMoveTo     ( 00000001 000001AE FFFFFF5B 00000000 )
  818:  Call  SetNpcAnimation   ( 00000001 00820004 )
  82C:  Kill  *VarA
  838:  Wait  20`
  844:  Call  PlaySoundAtNpc    ( 00000001 000000E0 00000000 )
  85C:  Thread
  864:  	Call  TranslateModel    ( ~Model:o222 00000001 00000000 00000000 )
  880:  	Call  TranslateModel    ( ~Model:o223 00000001 00000000 00000000 )
  89C:  	Call  TranslateModel    ( ~Model:o224 00000001 00000000 00000000 )
  8B8:  	Wait  1`
  8C4:  	Call  TranslateModel    ( ~Model:o222 FFFFFFFE 00000000 00000000 )
  8E0:  	Call  TranslateModel    ( ~Model:o223 FFFFFFFE 00000000 00000000 )
  8FC:  	Call  TranslateModel    ( ~Model:o224 FFFFFFFE 00000000 00000000 )
  918:  	Wait  1`
  924:  	Call  TranslateModel    ( ~Model:o222 00000001 00000000 00000000 )
  940:  	Call  TranslateModel    ( ~Model:o223 00000001 00000000 00000000 )
  95C:  	Call  TranslateModel    ( ~Model:o224 00000001 00000000 00000000 )
  978:  	Wait  1`
  984:  	Call  TranslateModel    ( ~Model:o222 FFFFFFFE 00000000 00000000 )
  9A0:  	Call  TranslateModel    ( ~Model:o223 FFFFFFFE 00000000 00000000 )
  9BC:  	Call  TranslateModel    ( ~Model:o224 FFFFFFFE 00000000 00000000 )
  9D8:  	Wait  1`
  9E4:  	Call  TranslateModel    ( ~Model:o222 00000000 00000000 00000000 )
  A00:  	Call  TranslateModel    ( ~Model:o223 00000000 00000000 00000000 )
  A1C:  	Call  TranslateModel    ( ~Model:o224 00000000 00000000 00000000 )
  A38:  EndThread
  A40:  Wait  2`
  A4C:  Call  SetNpcAnimation   ( 00000001 00820005 )
  A60:  Wait  40`
  A6C:  Call  InterpNpcYaw  ( 00000001 0000010E 00000005 )
  A84:  Call  SetNpcAnimation   ( 00000001 0082000B )
  A98:  Exec  $Script_8024F5A4 *VarA
  AA8:  Call  NpcMoveTo     ( 00000001 000001C2 FFFFFFB0 00000000 )
  AC4:  Call  NpcMoveTo     ( 00000001 00000122 FFFFFFBA 00000000 )
  AE0:  Kill  *VarA
  AEC:  Call  EnableGroup   ( ~Model:g20 .True )
  B00:  Call  EnableGroup   ( ~Model:g21 .True )
  B14:  Call  EnableGroup   ( ~Model:g49 .True )
  B28:  Call  EnableModel   ( ~Model:g56 .True )
  B3C:  Call  $Function_80241C9C ( )
  B48:  Call  RotateGroup   ( ~Model:g60 0000005A 00000001 00000000 00000000 )
  B68:  Call  RotateGroup   ( ~Model:g34 0000005A FFFFFFFF 00000000 00000000 )
  B88:  Call  EnableGroup   ( ~Model:g60 .False )
  B9C:  Call  EnableGroup   ( ~Model:g34 .False )
  BB0:  Call  UseSettingsFrom   ( .Cam:Default 000000FA 0000001E FFFFFFB0 )
  BCC:  Call  SetPanTarget  ( .Cam:Default 000000FA 0000001E FFFFFFB0 )
  BE8:  Call  SetCamSpeed   ( .Cam:Default *Fixed[90.0] )
  BFC:  Call  PanToTarget   ( .Cam:Default 00000000 00000001 )
  C14:  Call  $Function_80241D1C ( )
  C20:  Exec  $Script_8024FB88
  C2C:  Wait  10`
  C38:  Call  SetNpcAnimation   ( 00000001 00820009 )
  C4C:  Exec  $Script_8024F5A4 *VarA
  C5C:  Call  SetNpcSpeed   ( 00000001 *Fixed[2.0] )
  C70:  Call  NpcMoveTo     ( 00000001 000000F0 FFFFFFB0 00000000 )
  C8C:  Call  SetNpcAnimation   ( 00000001 00820005 )
  CA0:  Kill  *VarA
  CAC:  Call  SpeakToPlayer ( 00000001 00820015 00820005 00000000 0000001F ) % Hey, Mario! We got a letter from Princess Peach!
  CCC:  Wait  10`
  CD8:  Exec  $Script_8024FAAC
  CE4:  Thread
  CEC:  	Call  SetNpcAnimation   ( 00000001 00820009 )
  D00:  	Exec  $Script_8024F5A4 *VarA
  D10:  	Call  NpcMoveTo ( 00000001 000000E6 FFFFFF7E 00000000 )
  D2C:  	Call  NpcMoveTo ( 00000001 0000006E FFFFFF92 00000000 )
  D48:  	Call  SetNpcAnimation   ( 00000001 00820005 )
  D5C:  	Kill  *VarA
  D68:  	Call  SetNpcVar ( 00000001 00000000 00000000 )
  D80:  EndThread
  D88:  Wait  20`
  D94:  Call  802D1270  ( 00000046 FFFFFFB0 *Fixed[2.0] )
  DAC:  Call  802D1270  ( 00000046 FFFFFF92 *Fixed[2.0] )
  DC4:  Wait  10`
  DD0:  Call  SpeakToPlayer     ( 00000001 00820015 00820005 00000000 00000020 ) % I'll read it to you, OK?
  DF0:  Call  SetNpcAnimation   ( 00000001 00820018 )
  E04:  Wait  20`
  E10:  Call  SetNpcAnimation   ( 00000001 00820006 )
  E24:  Call  SpeakToPlayer     ( 00000001 00820016 00820006 00000000 00000021 ) % All Right, let's see...
  E44:  Call  SetNpcAnimation   ( 00000001 00820019 )
  E58:  Wait  10`
  E64:  Call  SetMusicTrack     ( 00000000 .Song:PrisonerPeachTheme 00000000 00000008 )
  E80:  Wait  5`
  E8C:  Call  ClearAmbientSounds    ( 000000FA )
  E9C:  Call  GotoMapSpecial    ( $ASCII_80253008 00000003 00000007 ) % osr_00
  EB4:  Wait  15`
  EC0:  Call  ClearAmbientSounds    ( 000000FA )
  ED0:  Wait  100`
  EDC:  Return
  EE4:  End
}


@ $Script_80250C5C
{
  %warp to the start of prologue
  %[324]  Call     GotoMap     	( "kmr_00" 00000000 )
  [338]	 Call	  $Function_ActionCommands ( )
}
  
@ $Script_8024A9B4
{
  [1A8]  Set   *Var0  .Item:KootLuigiAutographB
}
  
%#new:Script $Test_Script
%Call     GotoMap     	( "kmr_00" 00000005 )
%Call	 $Function_ActionCommands ( )
%Return
%End

#new:Function $Function_ActionCommands
{
LIO		A1, 8010F290
ADDIU	A2, R0, 1`
SB		A2, A (A1)
JR		RA
NOP
}

% Update score board in Mario's house
/%
@ $Function_802421A0
{
	[25C] ADDIU 	A0, R0, 91` % badges total, was 80`				(To do: Recalculate this)
	[318] ADDIU     A0, R0, 180` % star piece total, was 160`
    [438] ADDIU     A0, R0, 51` % recipe total, was 50`
}
%/

@ $Function_802421A0
{
    0:  ADDIU     SP, SP, FFB8
    4:  SW        S6, 40 (SP)
    8:  COPY      S6, A0
    C:  SW        S0, 28 (SP)
   10:  COPY      S0, A1
   14:  SW        RA, 44 (SP)
   18:  SW        S5, 3C (SP)
   1C:  SW        S4, 38 (SP)
   20:  SW        S3, 34 (SP)
   24:  SW        S2, 30 (SP)
   28:  BLEZ      S0, .o6A8
   2C:  SW        S1, 2C (SP)
   30:  LA        A0, 8009A66C
   38:  LUI       V0, DE00
   3C:  MTC1      S0, F0
   40:  NOP
   44:  CVT.D.W   F0, F0
   48:  LW        V1, 0 (A0)
   4C:  LAD       F2, $ConstDouble_80253030
   54:  COPY      A1, V1
   58:  ADDIU     V1, V1, 8
   5C:  SW        V1, 0 (A0)
   60:  SW        V0, 0 (A1)
   64:  LA        V0, $???_80252D50
   6C:  SW        V0, 4 (A1)
   70:  ADDIU     V0, V1, 8
   74:  SW        V0, 0 (A0)
   78:  LUI       V0, E700
   7C:  MUL.D     F0, F0, F2
   80:  NOP
   84:  SW        V0, 0 (V1)
   88:  ADDIU     V0, V1, 10
   8C:  SW        R0, 4 (V1)
   90:  SW        V0, 0 (A0)
   94:  LUI       V0, FA00
   98:  LIF       F3, 28.0
   A0:  MTC1      R0, F2
   A4:  ADDIU     T5, V1, C
   A8:  C.LE.D    F2, F0
   AC:  NOP
   B0:  BC1T      .oC8
   B4:  SW        V0, 8 (V1)
   B8:  TRUNC.W.D F4, F0
   BC:  MFC1      T4, F4
   C0:  BEQ       R0, R0, .oE4
   C4:  LUI       T1, 1078
        .oC8
   C8:  SUB.D     F0, F0, F2
   CC:  LUI       V0, 8000
   D0:  TRUNC.W.D F4, F0
   D4:  MFC1      T4, F4
   D8:  NOP
   DC:  OR        T4, T4, V0
   E0:  LI        T1, 10781800
		.oE4
   E8:  LI        T3, F647C300
   F0:  LI        T2, 000840AC
   F8:  LI        A0, 1E
   FC:  LI        A1, 28
  100:  LI        A2, 104
  104:  LA        T0, 8009A66C
  10C:  ANDI      V0, T4, FF
  110:  OR        V0, V0, T1
  114:  MTC1      S0, F2
  118:  NOP
  11C:  CVT.D.W   F2, F2
  120:  LW        V1, 0 (T0)
  124:  LAD       F0, $ConstDouble_80253038
  12C:  LI        S1, 1
  130:  SW        V0, 0 (T5)
  134:  COPY      V0, V1
  138:  ADDIU     V1, V1, 8
  13C:  SW        V1, 0 (T0)
  140:  SW        T3, 0 (V0)
  144:  SW        T2, 4 (V0)
  148:  ADDIU     V0, V1, 8
  14C:  SW        V0, 0 (T0)
  150:  LUI       V0, E700
  154:  MUL.D     F2, F2, F0
  158:  NOP
  15C:  SW        V0, 0 (V1)
  160:  LI        V0, 6
  164:  SW        R0, 4 (V1)
  168:  SW        V0, 10 (SP)
  16C:  SW        R0, 14 (SP)
  170:  SW        S1, 18 (SP)
  174:  SW        S0, 20 (SP)
  178:  TRUNC.W.D F4, F2
  17C:  SWC1      F4, 1C (SP)
  180:  JAL       ~Func:msg_draw_frame
  184:  LI        A3, 9B
  188:  LI        A0, 000B00FC
  190:  JAL       ~Func:get_string_width
  194:  CLEAR     A1
  198:  LI        A0, 000B00FC
  1A0:  LI        S3, CE
  1A4:  SUBU      A1, S3, V0
  1A8:  LI        A2, 32
  1AC:  COPY      A3, S0
  1B0:  SW        R0, 10 (SP)
  1B4:  JAL       ~Func:draw_string
  1B8:  SW        S1, 14 (SP)
  1BC:  LI        A1, D8
  1C0:  LI        A2, 33
  1C4:  LA        S2, 8010F290
  1CC:  COPY      A3, S1
  1D0:  LW        A0, 2B4 (S2)
  1D4:  LI        S4, 2
  1D8:  SW        R0, 10 (SP)
  1DC:  SW        S0, 14 (SP)
  1E0:  JAL       ~Func:draw_number
  1E4:  SW        S4, 18 (SP)
  1E8:  LI        A0, 000B00FD
  1F0:  JAL       ~Func:get_string_width
  1F4:  CLEAR     A1
  1F8:  LI        A0, 000B00FD
  200:  SUBU      A1, S3, V0
  204:  LI        A2, 41
  208:  COPY      A3, S0
  20C:  SW        R0, 10 (SP)
  210:  JAL       ~Func:draw_string
  214:  SW        S1, 14 (SP)
  218:  LI        A1, E7
  21C:  LI        A2, 42
  220:  COPY      A3, S1
  224:  LHU       A0, 24 (S6)
  228:  LI        S5, 3
  22C:  SW        R0, 10 (SP)
  230:  SW        S0, 14 (SP)
  234:  JAL       ~Func:draw_number
  238:  SW        S5, 18 (SP)
  23C:  LI        A0, 001F0034
  244:  LI        A1, E8
  248:  LI        A2, 3F
  24C:  COPY      A3, S0
  250:  SW        R0, 10 (SP)
  254:  JAL       ~Func:draw_string
  258:  SW        R0, 14 (SP)
  25C:  LI        A0, 128`						%<-- (badge total) 
  260:  LI        A1, F4
  264:  LI        A2, 42
  268:  COPY      A3, S1
  26C:  SW        R0, 10 (SP)
  270:  SW        S0, 14 (SP)
  274:  JAL       ~Func:draw_number
  278:  SW        S4, 18 (SP)
  27C:  LHU       V0, 32C (S2)
  280:  BNE       V0, R0, .o2AC
  284:  LUI       A0, B
  288:  ORI       A0, A0, FA
  28C:  LI        A1, 6D
  290:  LI        A2, 50
  294:  COPY      A3, S0
  298:  SW        R0, 10 (SP)
  29C:  JAL       ~Func:draw_string
  2A0:  SW        S1, 14 (SP)
  2A4:  BEQ       R0, R0, .o33C
  2A8:  LUI       A0, B
		.o2AC
  2AC:  ORI       A0, A0, FB
  2B0:  JAL       ~Func:get_string_width
  2B4:  CLEAR     A1
  2B8:  LI        A0, 000B00FB
  2C0:  SUBU      A1, S3, V0
  2C4:  LI        A2, 50
  2C8:  COPY      A3, S0
  2CC:  SW        R0, 10 (SP)
  2D0:  JAL       ~Func:draw_string
  2D4:  SW        S1, 14 (SP)
  2D8:  LI        A1, E7
  2DC:  LI        A2, 51
  2E0:  LHU       A0, 32C (S2)
  2E4:  LI        A3, 1
  2E8:  SW        R0, 10 (SP)
  2EC:  SW        S0, 14 (SP)
  2F0:  JAL       ~Func:draw_number
  2F4:  SW        S5, 18 (SP)
  2F8:  LI        A0, 001F0034
  300:  LI        A1, E8
  304:  LI        A2, 4E
  308:  COPY      A3, S0
  30C:  SW        R0, 10 (SP)
  310:  JAL       ~Func:draw_string
  314:  SW        R0, 14 (SP)
  318:  LI        A0, 182`					%<-- (star piece total)			
  31C:  LI        A1, F4
  320:  LI        A2, 50
  324:  LI        A3, 1
  328:  SW        R0, 10 (SP)
  32C:  SW        S0, 14 (SP)
  330:  JAL       ~Func:draw_number
  334:  SW        S4, 18 (SP)
  338:  LI        A0, 000B00FE
		.o33C
  340:  JAL       ~Func:get_string_width
  344:  CLEAR     A1
  348:  LH        A0, 26 (S6)
  34C:  BNE       A0, R0, .o380
  350:  COPY      V1, V0
  354:  LI        A0, 000B00FA
  35C:  LI        A1, 6E
  360:  LI        A2, 5F
  364:  COPY      A3, S0
  368:  LI        V0, 1
  36C:  SW        R0, 10 (SP)
  370:  JAL       ~Func:draw_string
  374:  SW        V0, 14 (SP)
  378:  BEQ       R0, R0, .o450
  37C:  NOP
		.o380
  380:  LI        V0, FFFF
  384:  BNE       A0, V0, .o3C4
  388:  LUI       A0, B
  38C:  ORI       A0, A0, FE
  390:  LI        A1, CE
  394:  SUBU      A1, A1, V1
  398:  LI        A2, 5F
  39C:  COPY      A3, S0
  3A0:  LI        V0, 1
  3A4:  SW        R0, 10 (SP)
  3A8:  JAL       ~Func:draw_string
  3AC:  SW        V0, 14 (SP)
  3B0:  CLEAR     A0
  3B4:  LI        A1, E7
  3B8:  LI        A2, 60
  3BC:  BEQ       R0, R0, .o3F8
  3C0:  LI        A3, 1
		.o3C4
  3C4:  ORI       A0, A0, FE
  3C8:  LI        A1, CE
  3CC:  SUBU      A1, A1, V1
  3D0:  LI        A2, 5F
  3D4:  COPY      A3, S0
  3D8:  LI        V0, 1
  3DC:  SW        R0, 10 (SP)
  3E0:  JAL       ~Func:draw_string
  3E4:  SW        V0, 14 (SP)
  3E8:  LI        A1, E7
  3EC:  LI        A2, 60
  3F0:  LI        A3, 1
  3F4:  LH        A0, 26 (S6)
		.o3F8
  3F8:  LI        V0, 3
  3FC:  SW        R0, 10 (SP)
  400:  SW        S0, 14 (SP)
  404:  JAL       ~Func:draw_number
  408:  SW        V0, 18 (SP)
  40C:  LI        A0, 001F0034
  414:  LI        A1, E8
  418:  LI        A2, 5D
  41C:  COPY      A3, S0
  420:  SW        R0, 10 (SP)
  424:  JAL       ~Func:draw_string
  428:  SW        R0, 14 (SP)
  42C:  LI        A1, F4
  430:  LI        A2, 5F
  434:  LI        A3, 1
  %438:  LH        A0, 28 (S6)				%?? ADDIU     A0, R0, 51` % recipe total, was 50`
		ADDIU     A0, R0, 75` 				% recipe total, was 50`
  43C:  LI        V0, 2
  440:  SW        R0, 10 (SP)
  444:  SW        S0, 14 (SP)
  448:  JAL       ~Func:draw_number
  44C:  SW        V0, 18 (SP)
		.o450
  450:  LA        S1, 8010F290
  458:  LHU       V0, 2C0 (S1)
  45C:  BNE       V0, R0, .o48C
  460:  LUI       A0, B
  464:  ORI       A0, A0, FA
  468:  LI        A1, 6D
  46C:  LI        A2, 6E
  470:  COPY      A3, S0
  474:  LI        V0, 1
  478:  SW        R0, 10 (SP)
  47C:  JAL       ~Func:draw_string
  480:  SW        V0, 14 (SP)
  484:  BEQ       R0, R0, .o52C
  488:  LUI       A0, B
		.o48C
  48C:  ORI       A0, A0, FF
  490:  JAL       ~Func:get_string_width
  494:  CLEAR     A1
  498:  LI        A0, 000B00FF					%quizmo quizzes
  4A0:  LI        A1, CE
  4A4:  SUBU      A1, A1, V0
  4A8:  LI        A2, 6E
  4AC:  COPY      A3, S0
  4B0:  LI        V0, 1
  4B4:  SW        R0, 10 (SP)
  4B8:  JAL       ~Func:draw_string
  4BC:  SW        V0, 14 (SP)
  4C0:  LI        A1, E7
  4C4:  LI        A2, 6F
  4C8:  LI        A3, 1
  4CC:  SW        R0, 10 (SP)
  4D0:  SW        S0, 14 (SP)
  4D4:  LHU       A0, 2C2 (S1)					%first number
  4D8:  LI        V0, 3
  4DC:  JAL       ~Func:draw_number
  4E0:  SW        V0, 18 (SP)
  4E4:  LI        A0, 001F0034					%slash (a string for some reason)
  4EC:  LI        A1, E8
  4F0:  LI        A2, 6C
  4F4:  COPY      A3, S0
  4F8:  SW        R0, 10 (SP)
  4FC:  JAL       ~Func:draw_string
  500:  SW        R0, 14 (SP)
  504:  LI        A1, F4
  508:  LI        A2, 6F
  50C:  LI        A3, 1
  510:  SW        R0, 10 (SP)
  514:  SW        S0, 14 (SP)
  %518:  LHU       A0, 2C0 (S1)					%second number
		LI		  A0, 64`
  51C:  LI        V0, 2
  520:  JAL       ~Func:draw_number
  524:  SW        V0, 18 (SP)
  528:  LI        A0, 000B00F4
		.o52C
  530:  JAL       ~Func:get_string_width
  534:  CLEAR     A1
  538:  LI        A0, 000B00F4
  540:  LI        S4, CE
  544:  SUBU      A1, S4, V0
  548:  LI        A2, 7D
  54C:  COPY      A3, S0
  550:  LI        S2, 1
  554:  SW        R0, 10 (SP)
  558:  JAL       ~Func:draw_string
  55C:  SW        S2, 14 (SP)
  560:  LI        A1, D8
  564:  LI        A2, 7E
  568:  COPY      A3, S2
  56C:  LA        S1, 8010F290
  574:  SW        R0, 10 (SP)
  578:  SW        S0, 14 (SP)
  57C:  LHU       A0, 2A2 (S1)
  580:  LI        S3, 2
  584:  JAL       ~Func:draw_number
  588:  SW        S3, 18 (SP)
  58C:  LI        A0, 000B00F7
  594:  JAL       ~Func:get_string_width
  598:  CLEAR     A1
  59C:  LI        A0, 000B00F7
  5A4:  SUBU      A1, S4, V0
  5A8:  LI        A2, 8C
  5AC:  COPY      A3, S0
  5B0:  SW        R0, 10 (SP)
  5B4:  JAL       ~Func:draw_string
  5B8:  SW        S2, 14 (SP)
  5BC:  LI        A1, D8
  5C0:  LI        A2, 8D
  5C4:  LHU       A0, 29C (S1)
  5C8:  COPY      A3, S2
  5CC:  SW        R0, 10 (SP)
  5D0:  SW        S0, 14 (SP)
  5D4:  JAL       ~Func:draw_number
  5D8:  SW        S3, 18 (SP)
  5DC:  LI        A0, 000B00F8
  5E4:  JAL       ~Func:get_string_width
  5E8:  CLEAR     A1
  5EC:  LI        A0, 000B00F8
  5F4:  SUBU      A1, S4, V0
  5F8:  LI        A2, 9B
  5FC:  COPY      A3, S0
  600:  SW        R0, 10 (SP)
  604:  JAL       ~Func:draw_string
  608:  SW        S2, 14 (SP)
  60C:  LI        A1, D8
  610:  LI        A2, 9C
  614:  LHU       A0, 29E (S1)
  618:  COPY      A3, S2
  61C:  SW        R0, 10 (SP)
  620:  SW        S0, 14 (SP)
  624:  JAL       ~Func:draw_number
  628:  SW        S3, 18 (SP)
  %62C:  LHU       V0, 2A0 (S1)
		ORI		  V0, R0, 1				%LAHU	  V0, 800DBDA0						%used gamebytes 30 and 31 for this (Force this to be drawn always, this should sidestep the glitches with the deathcount)
  630:  BNE       V0, R0, .o65C				%Draw power bounce
  634:  LUI       A0, B
  638:  ORI       A0, A0, FA
  63C:  LI        A1, 6D
  640:  LI        A2, AA
  644:  COPY      A3, S0
  648:  SW        R0, 10 (SP)
  64C:  JAL       ~Func:draw_string			%Draw ???
  650:  SW        S2, 14 (SP)
  654:  BEQ       R0, R0, .o6A8
  658:  NOP
		.o65C
  65C:  ORI       A0, A0, F9
  660:  JAL       ~Func:get_string_width
  664:  CLEAR     A1
  668:  LI        A0, 000B00F9
  670:  SUBU      A1, S4, V0
  674:  LI        A2, AA
  678:  COPY      A3, S0
  67C:  SW        R0, 10 (SP)
  680:  JAL       ~Func:draw_string
  684:  SW        S2, 14 (SP)
  688:  LI        A1, D8
  68C:  LI        A2, AB
  %690:  LHU       A0, 2A0 (S1)						%get power bounce count (Replace with death count)
		LAHU	  A0, 800DBDA0						%used gamebytes 30 and 31 for this
  694:  LI        A3, 1
  698:  SW        R0, 10 (SP)
  69C:  SW        S0, 14 (SP)
  6A0:  JAL       ~Func:draw_number
  6A4:  SW        S3, 18 (SP)
		.o6A8
  6A8:  LW        RA, 44 (SP)
  6AC:  LW        S6, 40 (SP)
  6B0:  LW        S5, 3C (SP)
  6B4:  LW        S4, 38 (SP)
  6B8:  LW        S3, 34 (SP)
  6BC:  LW        S2, 30 (SP)
  6C0:  LW        S1, 2C (SP)
  6C4:  LW        S0, 28 (SP)
  6C8:  JR        RA
  6CC:  ADDIU     SP, SP, 48
}


%normally you wouldn't be able to read the final diary entries because you can't enter the room in an epilogue state
@ $DiaryStoryRequirements
{
	FFFFFFD8 FFFFFFD8 00000007 00000007
	00000028 00000028 0000003C 0000003C
	00000059 00000059 0000005E 00000060		%Changed to 5E (logical place)
}


% discovered Recipe flags - mirrored in mac_02
%new flag(s) = *GF_MAC02_DiscoveredRecipe_34
@ $DataTable_80252DC0
{
	*GF_MAC02_DiscoveredRecipe_01 *GF_MAC02_DiscoveredRecipe_02 *GF_MAC02_DiscoveredRecipe_03 *GF_MAC02_DiscoveredRecipe_04
	*GF_MAC02_DiscoveredRecipe_05 *GF_MAC02_DiscoveredRecipe_06 *GF_MAC02_DiscoveredRecipe_07 *GF_MAC02_DiscoveredRecipe_08
	*GF_MAC02_DiscoveredRecipe_09 *GF_MAC02_DiscoveredRecipe_0A *GF_MAC02_DiscoveredRecipe_0B *GF_MAC02_DiscoveredRecipe_0C
	*GF_MAC02_DiscoveredRecipe_0D *GF_MAC02_DiscoveredRecipe_0E *GF_MAC02_DiscoveredRecipe_0F *GF_MAC02_DiscoveredRecipe_10
	*GF_MAC02_DiscoveredRecipe_11 *GF_MAC02_DiscoveredRecipe_12 *GF_MAC02_DiscoveredRecipe_13 *GF_MAC02_DiscoveredRecipe_14									%flag 12 does some extra stuff sometimes (= Mistake flag?)
	*GF_MAC02_DiscoveredRecipe_15 *GF_MAC02_DiscoveredRecipe_16 *GF_MAC02_DiscoveredRecipe_17 *GF_MAC02_DiscoveredRecipe_18
	*GF_MAC02_DiscoveredRecipe_19 *GF_MAC02_DiscoveredRecipe_1A *GF_MAC02_DiscoveredRecipe_1B *GF_MAC02_DiscoveredRecipe_1C
	*GF_MAC02_DiscoveredRecipe_1D *GF_MAC02_DiscoveredRecipe_1E *GF_MAC02_DiscoveredRecipe_1F *GF_MAC02_DiscoveredRecipe_20
	*GF_MAC02_DiscoveredRecipe_21 *GF_MAC02_DiscoveredRecipe_22 *GF_MAC02_DiscoveredRecipe_23 *GF_MAC02_DiscoveredRecipe_24
	*GF_MAC02_DiscoveredRecipe_25 *GF_MAC02_DiscoveredRecipe_26 *GF_MAC02_DiscoveredRecipe_27 *GF_MAC02_DiscoveredRecipe_28
	*GF_MAC02_DiscoveredRecipe_29 *GF_MAC02_DiscoveredRecipe_2A *GF_MAC02_DiscoveredRecipe_2B *GF_MAC02_DiscoveredRecipe_2C
	*GF_MAC02_DiscoveredRecipe_2D *GF_MAC02_DiscoveredRecipe_2E *GF_MAC02_DiscoveredRecipe_2F *GF_MAC02_DiscoveredRecipe_30 
	*GF_MAC02_DiscoveredRecipe_31 *GF_MAC02_DiscoveredRecipe_32 *GF_MAC02_DiscoveredRecipe_33 *GF_MAC02_DiscoveredRecipe_34 
	*GF_MAC02_DiscoveredRecipe_35 *GF_MAC02_DiscoveredRecipe_36 *GF_MAC02_DiscoveredRecipe_37 *GF_MAC02_DiscoveredRecipe_38 
	*GF_MAC02_DiscoveredRecipe_39 *GF_MAC02_DiscoveredRecipe_3A *GF_MAC02_DiscoveredRecipe_3B *GF_MAC02_DiscoveredRecipe_3C
	*GF_MAC02_DiscoveredRecipe_3D *GF_MAC02_DiscoveredRecipe_3E *GF_MAC02_DiscoveredRecipe_3F *GF_MAC02_DiscoveredRecipe_40
	*GF_MAC02_DiscoveredRecipe_41 *GF_MAC02_DiscoveredRecipe_42 *GF_MAC02_DiscoveredRecipe_43 *GF_MAC02_DiscoveredRecipe_44
	*GF_MAC02_DiscoveredRecipe_45 *GF_MAC02_DiscoveredRecipe_46 *GF_MAC02_DiscoveredRecipe_47 *GF_MAC02_DiscoveredRecipe_48
	*GF_MAC02_DiscoveredRecipe_49 *GF_MAC02_DiscoveredRecipe_4A *GF_MAC02_DiscoveredRecipe_4B *GF_MAC02_DiscoveredRecipe_4C
	00000000
}