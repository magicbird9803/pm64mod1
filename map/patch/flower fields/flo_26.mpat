#new:Header $Header
{
[MainScript] $Script_Main
[Background] 80200000
[EntryList] $EntryList
[EntryCount] 3
[MapTattle]   $Function_GetTattle 
}

#new:EntryList $EntryList
{
~Vec4f:Entry0 %0.0 0.0 275.0 0.0 %~Vec4f:Entry0
~Vec4f:Entry1 %206.0 197.0 -601.0 215.0%~Vec4f:Entry1
~Vec4f:Entry2 %206.0 255.0 -601.0 215.0%~Vec4f:Entry2
}

%to make me not go insane trying to replace all the model IDs, I'll define them up here
%The curly bracket replacement things don't work on my custom maps for some reason
#define .c_toplz 			1D
#define .c_toplzwater 		1E
#define .c_o85				1A
#define .c_watergroup		12
#define .c_waterfalltrigger	11

%models
#define .m_o47				26
#define .m_o48				25
#define .m_o49				24
#define .m_o88				27
#define .m_water1			14
#define .m_drydocks			1B
#define .m_topwatersurface 	11


%The water trigger is story progress value 31; less than that = no water, more than or equal to that = water exists
#new:Function $Function_GetTattle %modify this code to account for separate tattles
{
	%ADDIU     SP, SP, FFE8
	%LIO       V0, $MapTattleA
	%JR        RA
	%ADDIU     SP, SP, 18
	PUSH 	  A0, A1
	LIO		  A0, 800DBD70 %start of gamebytes
	LB		  A0, 0 (A0)   %story progress
	SLTI	  A0, A0, 31
	BEQ		  A0, R0, .greater
	NOP
	LIO       V0, $MapTattleA
	BEQ		  R0, R0, .lower
	NOP
	.greater
	LIO       V0, $MapTattleB
	.lower
	JPOP	  A0, A1
}

#string $MapTattleA %no waterfall
{
[Style Tattle][EnableCDownNext]The flowers here look pretty[BR]
nice, but it looks like their[BR]
water source dried up.[BR]
[Wait][NEXT]There aren't any flowers like[BR]
these in Goomba Village...[Wait][END]
}

#string $MapTattleB %there is a waterfall
{
[Style Tattle][EnableCDownNext]
Wow! I never knew there was[BR]
a waterfall so close to[BR]
home![BR]
[Wait][NEXT]The top of the waterfall[BR]
is in Flower Fields.[Wait][END]
}

#new:Function $Function_80240040
{
	0:  ADDIU		SP, SP, FFD0
    4:  SDC1		F20, 18 (SP)
    8:  MTC1		A1, F20
    C:  SDC1		F22, 20 (SP)
   10:  MTC1		A2, F22
   14:  SW			S0, 10 (SP)
   18:  SDC1		F24, 28 (SP)
   1C:  MTC1		A3, F24
   20:  SW			RA, 14 (SP)
   24:  JAL			~Func:guMtxIdentF
   28:  COPY		S0, A0
   2C:  MUL.S		F22, F20, F22
   30:  NOP
   34:  MUL.S		F20, F20, F24
   38:  NOP
   3C:  LIF			F0, 1.0
   44:  NOP
   48:  SWC1		F0, 14 (S0)
   4C:  SWC1		F22, 10 (S0)
   50:  SWC1		F20, 18 (S0)
   54:  LW			RA, 14 (SP)
   58:  LW			S0, 10 (SP)
   5C:  LDC1		F24, 28 (SP)
   60:  LDC1		F22, 20 (SP)
   64:  LDC1		F20, 18 (SP)
   68:  JR			RA
   6C:  ADDIU		SP, SP, 30
}

#new:Function $Function_802400B0
{
	0:  ADDIU		SP, SP, FF78
    4:  SW			S1, 54 (SP)
    8:  COPY		S1, A0
    C:  SW			RA, 5C (SP)
   10:  SW			S2, 58 (SP)
   14:  SW			S0, 50 (SP)
   18:  SDC1		F28, 80 (SP)
   1C:  SDC1		F26, 78 (SP)
   20:  SDC1		F24, 70 (SP)
   24:  SDC1		F22, 68 (SP)
   28:  SDC1		F20, 60 (SP)
   2C:  LW			S0, C (S1)
   30:  LW			A1, 0 (S0)
   34:  JAL			~Func:get_variable
   38:  ADDIU		S0, S0, 4
   3C:  JAL			~Func:get_model_list_index_from_tree_index
   40:  COPY		A0, V0
   44:  LW			A1, 0 (S0)
   48:  ADDIU		S0, S0, 4
   4C:  COPY		A0, S1
   50:  JAL			~Func:get_float_variable
   54:  COPY		S2, V0
   58:  LW			A1, 0 (S0)
   5C:  ADDIU		S0, S0, 4
   60:  COPY		A0, S1
   64:  JAL			~Func:get_float_variable
   68:  MOV.S		F28, F0
   6C:  LW			A1, 0 (S0)
   70:  ADDIU		S0, S0, 4
   74:  COPY		A0, S1
   78:  JAL			~Func:get_float_variable
   7C:  MOV.S		F26, F0
   80:  COPY		A0, S1
   84:  LW			A1, 0 (S0)
   88:  JAL			~Func:get_float_variable
   8C:  MOV.S		F22, F0
   90:  COPY		A0, S2
   94:  JAL			~Func:get_model_from_list_index
   98:  MOV.S		F24, F0
   9C:  COPY		S1, V0
   A0:  LHU			V0, 0 (S1)
   A4:  ANDI		V0, V0, 400
   A8:  BNE			V0, R0, .o124
   AC:  ADDIU		S0, S1, 58
   B0:  MTC1		R0, F20
   B4:  MFC1		A2, F22
   B8:  MFC1		A1, F20
   BC:  MFC1		A3, F20
   C0:  JAL			~Func:guTranslateF
   C4:  COPY		A0, S0
   C8:  MFC1		A1, F28
   CC:  MFC1		A2, F26
   D0:  MFC1		A3, F24
   D4:  JAL			$Function_80240040
   D8:  ADDIU		A0, SP, 10
   DC:  ADDIU		A0, SP, 10
   E0:  COPY		A1, S0
   E4:  JAL			~Func:guMtxCatF
   E8:  COPY		A2, S0
   EC:  ADDIU		A0, SP, 10
   F0:  NEG.S		F22, F22
   F4:  MFC1		A1, F20
   F8:  MFC1		A2, F22
   FC:  JAL			~Func:guTranslateF
  100:  COPY		A3, A1
  104:  ADDIU		A0, SP, 10
  108:  COPY		A1, S0
  10C:  JAL			~Func:guMtxCatF
  110:  COPY		A2, A1
  114:  LHU			V0, 0 (S1)
  118:  ORI			V0, V0, 1400
  11C:  BEQ			R0, R0, .o19C
  120:  SH			V0, 0 (S1)
        .o124
  124:  MTC1		R0, F20
  128:  MFC1		A2, F22
  12C:  MFC1		A1, F20
  130:  MFC1		A3, F20
  134:  JAL			~Func:guTranslateF
  138:  ADDIU		A0, SP, 10
  13C:  ADDIU		A0, SP, 10
  140:  ADDIU		S0, S1, 58
  144:  COPY		A1, S0
  148:  JAL			~Func:guMtxCatF
  14C:  COPY		A2, S0
  150:  MFC1		A1, F28
  154:  MFC1		A2, F26
  158:  MFC1		A3, F24
  15C:  JAL			$Function_80240040
  160:  ADDIU		A0, SP, 10
  164:  ADDIU		A0, SP, 10
  168:  COPY		A1, S0
  16C:  JAL			~Func:guMtxCatF
  170:  COPY		A2, S0
  174:  ADDIU		A0, SP, 10
  178:  NEG.S		F22, F22
  17C:  MFC1		A1, F20
  180:  MFC1		A2, F22
  184:  JAL			~Func:guTranslateF
  188:  COPY		A3, A1
  18C:  ADDIU		A0, SP, 10
  190:  COPY		A1, S0
  194:  JAL			~Func:guMtxCatF
  198:  COPY		A2, A1
        .o19C
  19C:  LW			RA, 5C (SP)
  1A0:  LW			S2, 58 (SP)
  1A4:  LW			S1, 54 (SP)
  1A8:  LW			S0, 50 (SP)
  1AC:  LDC1		F28, 80 (SP)
  1B0:  LDC1		F26, 78 (SP)
  1B4:  LDC1		F24, 70 (SP)
  1B8:  LDC1		F22, 68 (SP)
  1BC:  LDC1		F20, 60 (SP)
  1C0:  ADDIU		V0, R0, 2
  1C4:  JR			RA
  1C8:  ADDIU		SP, SP, 88
}

#new:Script $Script_ShakeTree
{
	0:  SetTimescale *Fixed[2.0] 
    C:  UseIntBuffer *Var[0] 
   18:  Get4Int  *Var[1] *Var[2] *Var[3] *Var[4] 
   30:  Get1Int  *Var[5] 
   3C:  Call     GetPlayerPos 	( *Var[6] *Var[F] *Var[8] )
   54:  Call     PlaySound   	( 00000165 )
   64:  Call     PlaySound   	( 00000166 )
   74:  Thread
   7C:  	Set  *Flag[00]  00000000 
   8C:  	If  *Var[1]  !=  00000000 
   9C:  		Wait     00000001 
   A8:  		Loop     00000005 
   B4:  			UseIntBuffer *Var[1] 
   C0:  			Get1Int  *Var[2] 
   CC:  			Loop     *Var[2] 
   D8:  				Get1Int  *Var[3] 
   E4:  				Call     $Function_802400B0 ( *Var[3] *Fixed[0.10058594] *Fixed[0.20019531] *Var[F] 00000000 )
  104:  				If  *Flag[00]  ==  00000000 
  114:  					Set  *Flag[00]  00000001 
  124:  					Call     PlaySoundAtModel 	( *Var[3] 00000166 00000000 )
  13C:  				EndIf
  144:  			EndLoop
  14C:  			Wait     00000001 
  158:  			UseIntBuffer *Var[1] 
  164:  			Get1Int  *Var[2] 
  170:  			Loop     *Var[2] 
  17C:  				Get1Int  *Var[3] 
  188:  				Call     $Function_802400B0 ( *Var[3] *Fixed[0.10058594] *Fixed[-0.19921875] *Var[F] 00000000 )
  1A8:  			EndLoop
  1B0:  			Wait     00000001 
  1BC:  		EndLoop
  1C4:  		UseIntBuffer *Var[1] 
  1D0:  		Get1Int  *Var[2] 
  1DC:  		Loop     *Var[2] 
  1E8:  			Get1Int  *Var[3] 
  1F4:  			Call     TranslateModel ( *Var[3] 00000000 00000000 00000000 )
  210:  		EndLoop
  218:  		Wait     00000001 
  224:  	EndIf
  22C:  EndThread
  234:  Thread
  23C:  	Set  *Flag[00]  00000000 
  24C:  	If  *Var[2]  !=  00000000 
  25C:  		Loop     00000005 
  268:  			UseIntBuffer *Var[2] 
  274:  			Get1Int  *Var[3] 
  280:  			Loop     *Var[3] 
  28C:  				Get1Int  *Var[4] 
  298:  				Call     $Function_802400B0 ( *Var[4] *Fixed[0.10058594] *Fixed[0.20019531] *Var[F] 00000000 )
  2B8:  				If  *Flag[00]  ==  00000000 
  2C8:  					Set  *Flag[00]  00000001 
  2D8:  					Call     PlaySoundAtModel 	( *Var[4] 00000165 00000000 )
  2F0:  				EndIf
  2F8:  			EndLoop
  300:  			Wait     00000001 
  30C:  			UseIntBuffer *Var[2] 
  318:  			Get1Int  *Var[3] 
  324:  			Loop     *Var[3] 
  330:  				Get1Int  *Var[4] 
  33C:  				Call     $Function_802400B0 ( *Var[4] *Fixed[0.10058594] *Fixed[-0.19921875] *Var[F] 00000000 )
  35C:  			EndLoop
  364:  			Wait     00000001 
  370:  		EndLoop
  378:  		UseIntBuffer *Var[2] 
  384:  		Get1Int  *Var[3] 
  390:  		Loop     *Var[3] 
  39C:  			Get1Int  *Var[4] 
  3A8:  			Call     TranslateModel ( *Var[4] 00000000 00000000 00000000 )
  3C4:  		EndLoop
  3CC:  		Wait     00000001 
  3D8:  	EndIf
  3E0:  EndThread
  3E8:  Thread
  3F0:  	If  *Var[3]  !=  00000000 
  400:  		UseIntBuffer *Var[3] 
  40C:  		Get1Int  *Var[4] 
  418:  		Loop     *Var[4] 
  424:  			Get1Int  *Var[5] 
  430:  			Get3Int  *Var[6] *Var[7] *Var[8] 
  444:  			Get3Int  *Var[9] *Var[A] *Var[B] 
  458:  			If  *Var[B]  ==  00000000 
  468:  				Call     DropItemEntity ( *Var[5] *Var[6] *Var[7] *Var[8] *Var[9] *Var[A] )
  48C:  			Else
  494:  				Call     GetValueByRef 	( *Var[B] *Var[C] )
  4A8:  				If  *Var[C]  ==  00000000 
  4B8:  					Call     SetValueByRef 	( *Var[B] 00000001 )
  4CC:  					Call     DropItemEntity ( *Var[5] *Var[6] *Var[7] *Var[8] *Var[9] *Var[A] )
  4F0:  				EndIf
  4F8:  			EndIf
  500:  		EndLoop
  508:  	EndIf
  510:  EndThread
  518:  Thread
  520:  	If  *Var[4]  !=  00000000 
  530:  		UseIntBuffer *Var[4] 
  53C:  		Get1Int  *Var[5] 
  548:  		Loop     *Var[5] 
  554:  			Get3Int  *Var[6] *Var[7] *Var[8] 
  568:  			Call     PlayEffect  	( ~FX:DropLeaves:Random *Var[6] *Var[7] *Var[8] 00000064 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  5AC:  		EndLoop
  5B4:  	EndIf
  5BC:  EndThread
  5C4:  If  *Var[5]  !=  00000000 
  5D4:  	ExecWait *Var[5] 
  5E0:  EndIf
  5E8:  Wait     0000000F 
  5F4:  Return
  5FC:  End
}

#new:TreeModelList $TreeModelList_Leaves
{
00000003 .m_o47 .m_o48 .m_o49 %%~Model:o47 ~Model:o48 ~Model:o49 
}

#new:TreeModelList $TreeModelList_Trunk
{
00000001 .m_o88 %~Model:o88 
}

#new:TreeDropList $TreeDropList
{
00000001
.Item:DizzyStomp 325` 371` -285` 0000000D 00000000 *GameFlag[588]
}

/%
00000002
.Item:YellowBerry 325` 371` -285` 0000000C 00000000 *AreaFlag[021] %~Vec3d:Tree_Drop0
.Item:YellowBerry 420` 371` -310` 0000000C 00000000 *AreaFlag[022] %~Vec3d:Tree_Drop1
%/

#new:ShakeTreeEvent $ShakeTreeEvent
{
$TreeModelList_Leaves
$TreeModelList_Trunk
$TreeDropList
00000000 
00000000 
}

#new:TriggerCoord $TriggerCoord
{
382` 271` -328` %{BombPos:Bomb_Pos 
}

#new:Script $Script_SetupTree
{
	0:  Set  *AreaFlag[021]  00000000 
   10:  Set  *AreaFlag[022]  00000000 
   20:  Set  *Var[0]  $ShakeTreeEvent 
   30:  Bind     $Script_ShakeTree .Trigger:WallHammer .c_o85 00000001 00000000 %Collider:o85
   4C:  Bind     $Script_ShakeTree .Trigger:PointBomb $TriggerCoord 00000001 00000000 
   68:  Return
   70:  End
}

#new:Script $Script_MakeEntities
{
	0:  Call     MakeEntity  	( .Entity:YellowBlock -284` 110` 250` 0.0 .Item:UltraShroom ) %Vec4d:block
   28:  Call     AssignBlockFlag 	( *GameFlag[587] )
		Call     MakeEntity  	( .Entity:ScriptSpring 431` 20` 37` 0.0 80000000 ) %Vec4d:spring
		Call     AssignScript 	( $Script_Spring )   
   A8:  Return
   B0:  End
}
   
#new:Script $Script_BindColliders
{
	0:  Bind     $Script_Entry0 .Trigger:FloorAbove ~Collider:deiliw 00000001 00000000 
		If  *GB_StoryProgress  <  00000031 
			Bind     $Script_Entry1 .Trigger:FloorAbove .c_toplz 00000001 00000000 %Collider:toplz
		Else
			Bind     $Script_Entry2 .Trigger:FloorAbove .c_toplzwater 00000001 00000000 %Collider:toplzwater
			Bind     $Script_Waterfall .Trigger:FloorAbove .c_waterfalltrigger 00000001 00000000 %Collider:waterfalltrigger
		EndIf
   38:  Return
   40:  End
}
   
#new:Script $Script_Entry0
{
	0:  SetGroup 0000001B 
    C:  Call     UseExitHeading ( 0000003C 00000000 )
   20:  Exec     ExitWalk 
   2C:  Call     GotoMap     	( "kmr_12" 00000002 )
   40:  Wait     00000064 
   4C:  Return
   54:  End
}

#new:Script $Script_Entry1
{
	0:  SetGroup 0000001B 
    C:  Call     UseExitHeading ( 0000003C 00000001 )
   20:  Exec     ExitWalk 
   2C:  Call     GotoMap     	( "flo_24" 00000003 )
   40:  Wait     00000064 
   4C:  Return
   54:  End
}
   
#new:Script $Script_Entry2
{
	0:  SetGroup 0000001B 
    C:  Call     UseExitHeading ( 0000003C 00000002 )
   20:  Exec     ExitWalk 
   2C:  Call     GotoMap     	( "flo_24" 00000004 )
   40:  Wait     00000064 
   4C:  Return
   54:  End
}
   
#new:Script $Script_Waterfall %since sushie ignores gravity, I have to do some hacky stuff to make it work
{
Call 	 DisablePlayerInput ( .True )  %you might still be able to clip around the hitbox and escape though
Call     GetPlayerPos 	( *Var[1] *Var[2] *Var[3] )
Add 	 *Var[3] 25`
%Call	 NpcJump0 (.Npc:Partner *Var[1] -20` *Var[3] 10` ) %NpcMoveTo does not have a y argument, so I have to improvise
%	^ does not work if attempting to go onto trigger without diving
%		the stuff below "works", but not if you're in a certain state
Loop
	Call     GetPlayerPos 	( *Var[A] *Var[B] *Var[C] )
	If *Var[B] < -15`
		BreakLoop
	EndIf
	Wait 1
	Sub 	 *Var[2] 30`
	Call	 SetNpcPos (.Npc:Partner *Var[1] *Var[2] *Var[3] ) 
EndLoop
Call	 SetNpcPos (.Npc:Partner *Var[1] -20` *Var[3] ) 
Call	 DisablePlayerInput ( .False )
Return
End
}
   
%spring script copied from iwa_04
#new:Script $Script_Spring
{ 
   0:  Call     DisablePlayerInput 	( .True )
   10:  Call     DisablePlayerPhysics 	( .True )
   20:  Call     802D10D8 ( 00000006 )
   30:  Wait     00000001 
   3C:  Exec     $Script_80241420 *Var[A] 
   4C:  If  *MapVar[9]  ==  00000000 
   5C:  	Call     SetPlayerJumpscale 	( *Fixed[1.4003906] )
   6C:  	Call     PlayerJump  	( 430` 295` -80` 00000028 )
   88:  Else
   90:  	Call     SetPlayerJumpscale 	( *Fixed[0.7001953] )
   A0:  	Call     PlayerJump  	( 430` 295` -80` 00000040 )
   BC:  EndIf
   C4:  Kill     *Var[A] 
   D0:  Call     802D10D8 ( 00000000 )
   E0:  Call     DisablePlayerPhysics 	( .False )
   F0:  Call     DisablePlayerInput 	( .False )
  100:  Return
  108:  End
}
  
#new:Script $Script_80241420
{
	0:  Loop     
    C:  	Call     GetPlayerPos 	( *Var[0] *Var[1] *Var[2] )
   24:  	Call     802CAF2C ( 00000000 *Var[0] *Var[1] *Var[2] )
   40:  	Wait     00000001 
   4C:  EndLoop
   54:  Return
   5C:  End
}

#import TexturePanner.mpat TexturePanner

#new:Script $Script_SetupTexturePanning
{
If *GB_StoryProgress < 31
	%no water, so disable all the water stuff
	Call     EnableGroup 	( .m_water1 .False ) %Model:water1
	Call     ModifyColliderFlags 	( 00000000 .c_watergroup 7FFFFE00 ) %Collider:watergroup
	Return
Else
	Call     EnableGroup 	( .m_drydocks .False ) %Model:drydocks
EndIf
Call     PlaySound   	( 80000022 )
Thread
    Set  *Var[0] 01   % panner id
    Set  *Var[1] 0`   % x scroll
    Set  *Var[2] 1500` % y scroll
    Set  *Var[3] 0`   % x scroll (aux)
    Set  *Var[4] 0`   % y scroll (aux)
    Set  *Var[5] .True
    Set  *Var[6] .True
    Set  *Var[7] .True
    Set  *Var[8] .True
    Set  *Var[9] .False
    Set  *Var[A] .False
    Set  *Var[B] .False
    Set  *Var[C] .False
    Exec $TexturePanner:Script
EndThread
Call SetTexPanner     ( .m_topwatersurface 01 ) %Model:topwatersurface
Call EnableTexPanning ( .m_topwatersurface .True ) %Model:topwatersurface
Return
End
}

%choose track based on z pos
%so entering from either side will play the same music
%...but the music changes if you go up or down the waterfall
%     	If  *GB_StoryProgress  <  00000035 
%   		Call     SetMusicTrack 	( 00000000 .Song:FlowerFieldsCloudy 00000000 00000008 )
%   	Else
%   	 	Call     SetMusicTrack 	( 00000000 .Song:FlowerFieldsSunny 00000000 00000008 )
%  	  	EndIf
%		Call     SetMusicTrack 	( 00000000 .Song:PleasantPath 00000000 00000008 )

#new:Script $Script_SetupMusic
{
	0:  Call     GetEntryID  	( *Var[0] )
   10:  Switch  *Var[0] 
   1C:  	Case  ==  00000000 
				Call     SetMusicTrack 	( 00000000 .Song:PleasantPath 00000000 00000008 )
   3C:  	CaseOR  ==  00000001 
   48:  	CaseOR  ==  00000002 
				If  *GB_StoryProgress  <  00000035 
					Call     SetMusicTrack 	( 00000000 .Song:FlowerFieldsCloudy 00000000 00000008 )
				Else
					Call     SetMusicTrack 	( 00000000 .Song:FlowerFieldsSunny 00000000 00000008 )
				EndIf
   70:  	EndCaseGroup
   78:  EndSwitch
		Label 1
		Wait     00000001 
		Call     GetPlayerPos 	( *Var[1] *Var[2] *Var[3] )
		If  *Var[3]  >  00000000 %play pleasant path song 
			Call     FadeOutMusic 	( 00000000 00000341 )
			Wait     00000019 
			Call     SetMusicTrack 	( 00000000 .Song:PleasantPath 00000000 00000008 )
			Wait     0000001E 
			Goto     00000002
		EndIf
		Goto 1
		Label 2
		Wait     00000001 
		Call     GetPlayerPos 	( *Var[1] *Var[2] *Var[3] )
		If  *Var[3]  <  00000000 %play pleasant path song 
			Call     FadeOutMusic 	( 00000000 00000341 )
			Wait     00000019 
			If  *GB_StoryProgress  <  00000035 
				Call     SetMusicTrack 	( 00000000 .Song:FlowerFieldsCloudy 00000000 00000008 )
			Else
				Call     SetMusicTrack 	( 00000000 .Song:FlowerFieldsSunny 00000000 00000008 )
			EndIf
			Wait     0000001E 
			Goto     00000001
		EndIf
		Goto 2
  208:  Return
  210:  End
}

#new:Script_Main $Script_Main
{
Set  *GB_WorldLocation  .Location:GoombaRoad %map might mess up if you're in flower fields in a pre-chapter 6 state
Call     SetSpriteShading 	( FFFFFFFF )
Call     SetCamLeadPlayer 	( .Cam:Default .False )
Call     SetCamPerspective 	( .Cam:Default 00000003 00000019 00000010 00001000 )
Call     SetCamBGColor 	( .Cam:Default 00000000 00000000 00000000 )
Call     SetCamEnabled 	( .Cam:Default .True )
ExecWait $Script_MakeEntities
Exec	$Script_SetupTree
Exec	$Script_SetupTexturePanning
Exec	$Script_SetupMusic
Set  *Var[0]  $Script_BindColliders
Exec     EnterWalk 
Return
End
}